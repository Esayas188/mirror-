function _mergeNamespaces(n2, m2) {
  for (var i = 0; i < m2.length; i++) {
    const e = m2[i];
    if (typeof e !== "string" && !Array.isArray(e)) {
      for (const k2 in e) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d = Object.getOwnPropertyDescriptor(e, k2);
          if (d) {
            Object.defineProperty(n2, k2, d.get ? d : {
              enumerable: true,
              get: () => e[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n2) {
  if (n2.__esModule) return n2;
  var f2 = n2.default;
  if (typeof f2 == "function") {
    var a = function a2() {
      if (this instanceof a2) {
        return Reflect.construct(f2, arguments, this.constructor);
      }
      return f2.apply(this, arguments);
    };
    a.prototype = f2.prototype;
  } else a = {};
  Object.defineProperty(a, "__esModule", { value: true });
  Object.keys(n2).forEach(function(k2) {
    var d = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a, k2, d.get ? d : {
      enumerable: true,
      get: function() {
        return n2[k2];
      }
    });
  });
  return a;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$2 = Symbol.for("react.element"), n$2 = Symbol.for("react.portal"), p$2 = Symbol.for("react.fragment"), q$1 = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u = Symbol.for("react.context"), v$2 = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), x$2 = Symbol.for("react.memo"), y$1 = Symbol.for("react.lazy"), z$1 = Symbol.iterator;
function A$1(a) {
  if (null === a || "object" !== typeof a) return null;
  a = z$1 && a[z$1] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B$1 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$2 = Object.assign, D$1 = {};
function E$1(a, b2, e) {
  this.props = a;
  this.context = b2;
  this.refs = D$1;
  this.updater = e || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function(a, b2) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b2, "setState");
};
E$1.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {
}
F.prototype = E$1.prototype;
function G$1(a, b2, e) {
  this.props = a;
  this.context = b2;
  this.refs = D$1;
  this.updater = e || B$1;
}
var H$1 = G$1.prototype = new F();
H$1.constructor = G$1;
C$2(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$2 = Array.isArray, J = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$1 = { key: true, ref: true, __self: true, __source: true };
function M$2(a, b2, e) {
  var d, c2 = {}, k2 = null, h2 = null;
  if (null != b2) for (d in void 0 !== b2.ref && (h2 = b2.ref), void 0 !== b2.key && (k2 = "" + b2.key), b2) J.call(b2, d) && !L$1.hasOwnProperty(d) && (c2[d] = b2[d]);
  var g = arguments.length - 2;
  if (1 === g) c2.children = e;
  else if (1 < g) {
    for (var f2 = Array(g), m2 = 0; m2 < g; m2++) f2[m2] = arguments[m2 + 2];
    c2.children = f2;
  }
  if (a && a.defaultProps) for (d in g = a.defaultProps, g) void 0 === c2[d] && (c2[d] = g[d]);
  return { $$typeof: l$2, type: a, key: k2, ref: h2, props: c2, _owner: K$1.current };
}
function N$1(a, b2) {
  return { $$typeof: l$2, type: a.type, key: b2, ref: a.ref, props: a.props, _owner: a._owner };
}
function O$1(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l$2;
}
function escape(a) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b2[a2];
  });
}
var P$2 = /\/+/g;
function Q$1(a, b2) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b2.toString(36);
}
function R$1(a, b2, e, d, c2) {
  var k2 = typeof a;
  if ("undefined" === k2 || "boolean" === k2) a = null;
  var h2 = false;
  if (null === a) h2 = true;
  else switch (k2) {
    case "string":
    case "number":
      h2 = true;
      break;
    case "object":
      switch (a.$$typeof) {
        case l$2:
        case n$2:
          h2 = true;
      }
  }
  if (h2) return h2 = a, c2 = c2(h2), a = "" === d ? "." + Q$1(h2, 0) : d, I$2(c2) ? (e = "", null != a && (e = a.replace(P$2, "$&/") + "/"), R$1(c2, b2, e, "", function(a2) {
    return a2;
  })) : null != c2 && (O$1(c2) && (c2 = N$1(c2, e + (!c2.key || h2 && h2.key === c2.key ? "" : ("" + c2.key).replace(P$2, "$&/") + "/") + a)), b2.push(c2)), 1;
  h2 = 0;
  d = "" === d ? "." : d + ":";
  if (I$2(a)) for (var g = 0; g < a.length; g++) {
    k2 = a[g];
    var f2 = d + Q$1(k2, g);
    h2 += R$1(k2, b2, e, f2, c2);
  }
  else if (f2 = A$1(a), "function" === typeof f2) for (a = f2.call(a), g = 0; !(k2 = a.next()).done; ) k2 = k2.value, f2 = d + Q$1(k2, g++), h2 += R$1(k2, b2, e, f2, c2);
  else if ("object" === k2) throw b2 = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b2 ? "object with keys {" + Object.keys(a).join(", ") + "}" : b2) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$1(a, b2, e) {
  if (null == a) return a;
  var d = [], c2 = 0;
  R$1(a, d, "", "", function(a2) {
    return b2.call(e, a2, c2++);
  });
  return d;
}
function T$1(a) {
  if (-1 === a._status) {
    var b2 = a._result;
    b2 = b2();
    b2.then(function(b3) {
      if (0 === a._status || -1 === a._status) a._status = 1, a._result = b3;
    }, function(b3) {
      if (0 === a._status || -1 === a._status) a._status = 2, a._result = b3;
    });
    -1 === a._status && (a._status = 0, a._result = b2);
  }
  if (1 === a._status) return a._result.default;
  throw a._result;
}
var U$1 = { current: null }, V$2 = { transition: null }, W$1 = { ReactCurrentDispatcher: U$1, ReactCurrentBatchConfig: V$2, ReactCurrentOwner: K$1 };
function X$1() {
  throw Error("act(...) is not supported in production builds of React.");
}
react_production_min.Children = { map: S$1, forEach: function(a, b2, e) {
  S$1(a, function() {
    b2.apply(this, arguments);
  }, e);
}, count: function(a) {
  var b2 = 0;
  S$1(a, function() {
    b2++;
  });
  return b2;
}, toArray: function(a) {
  return S$1(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!O$1(a)) throw Error("React.Children.only expected to receive a single React element child.");
  return a;
} };
react_production_min.Component = E$1;
react_production_min.Fragment = p$2;
react_production_min.Profiler = r;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$1;
react_production_min.Suspense = w;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.act = X$1;
react_production_min.cloneElement = function(a, b2, e) {
  if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C$2({}, a.props), c2 = a.key, k2 = a.ref, h2 = a._owner;
  if (null != b2) {
    void 0 !== b2.ref && (k2 = b2.ref, h2 = K$1.current);
    void 0 !== b2.key && (c2 = "" + b2.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
    for (f2 in b2) J.call(b2, f2) && !L$1.hasOwnProperty(f2) && (d[f2] = void 0 === b2[f2] && void 0 !== g ? g[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2) d.children = e;
  else if (1 < f2) {
    g = Array(f2);
    for (var m2 = 0; m2 < f2; m2++) g[m2] = arguments[m2 + 2];
    d.children = g;
  }
  return { $$typeof: l$2, type: a.type, key: c2, ref: k2, props: d, _owner: h2 };
};
react_production_min.createContext = function(a) {
  a = { $$typeof: u, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a.Provider = { $$typeof: t, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = M$2;
react_production_min.createFactory = function(a) {
  var b2 = M$2.bind(null, a);
  b2.type = a;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a) {
  return { $$typeof: v$2, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function(a) {
  return { $$typeof: y$1, _payload: { _status: -1, _result: a }, _init: T$1 };
};
react_production_min.memo = function(a, b2) {
  return { $$typeof: x$2, type: a, compare: void 0 === b2 ? null : b2 };
};
react_production_min.startTransition = function(a) {
  var b2 = V$2.transition;
  V$2.transition = {};
  try {
    a();
  } finally {
    V$2.transition = b2;
  }
};
react_production_min.unstable_act = X$1;
react_production_min.useCallback = function(a, b2) {
  return U$1.current.useCallback(a, b2);
};
react_production_min.useContext = function(a) {
  return U$1.current.useContext(a);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a) {
  return U$1.current.useDeferredValue(a);
};
react_production_min.useEffect = function(a, b2) {
  return U$1.current.useEffect(a, b2);
};
react_production_min.useId = function() {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function(a, b2, e) {
  return U$1.current.useImperativeHandle(a, b2, e);
};
react_production_min.useInsertionEffect = function(a, b2) {
  return U$1.current.useInsertionEffect(a, b2);
};
react_production_min.useLayoutEffect = function(a, b2) {
  return U$1.current.useLayoutEffect(a, b2);
};
react_production_min.useMemo = function(a, b2) {
  return U$1.current.useMemo(a, b2);
};
react_production_min.useReducer = function(a, b2, e) {
  return U$1.current.useReducer(a, b2, e);
};
react_production_min.useRef = function(a) {
  return U$1.current.useRef(a);
};
react_production_min.useState = function(a) {
  return U$1.current.useState(a);
};
react_production_min.useSyncExternalStore = function(a, b2, e) {
  return U$1.current.useSyncExternalStore(a, b2, e);
};
react_production_min.useTransition = function() {
  return U$1.current.useTransition();
};
react_production_min.version = "18.3.1";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
const React$6 = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
const React$7 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React$6
}, [reactExports]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$1 = reactExports, k = Symbol.for("react.element"), l$1 = Symbol.for("react.fragment"), m$1 = Object.prototype.hasOwnProperty, n$1 = f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$1 = { key: true, ref: true, __self: true, __source: true };
function q(c2, a, g) {
  var b2, d = {}, e = null, h2 = null;
  void 0 !== g && (e = "" + g);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (h2 = a.ref);
  for (b2 in a) m$1.call(a, b2) && !p$1.hasOwnProperty(b2) && (d[b2] = a[b2]);
  if (c2 && c2.defaultProps) for (b2 in a = c2.defaultProps, a) void 0 === d[b2] && (d[b2] = a[b2]);
  return { $$typeof: k, type: c2, key: e, ref: h2, props: d, _owner: n$1.current };
}
reactJsxRuntime_production_min.Fragment = l$1;
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
var client = {};
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a, b2) {
    var c2 = a.length;
    a.push(b2);
    a: for (; 0 < c2; ) {
      var d = c2 - 1 >>> 1, e = a[d];
      if (0 < g(e, b2)) a[d] = b2, a[c2] = e, c2 = d;
      else break a;
    }
  }
  function h2(a) {
    return 0 === a.length ? null : a[0];
  }
  function k2(a) {
    if (0 === a.length) return null;
    var b2 = a[0], c2 = a.pop();
    if (c2 !== b2) {
      a[0] = c2;
      a: for (var d = 0, e = a.length, w2 = e >>> 1; d < w2; ) {
        var m2 = 2 * (d + 1) - 1, C2 = a[m2], n2 = m2 + 1, x2 = a[n2];
        if (0 > g(C2, c2)) n2 < e && 0 > g(x2, C2) ? (a[d] = x2, a[n2] = c2, d = n2) : (a[d] = C2, a[m2] = c2, d = m2);
        else if (n2 < e && 0 > g(x2, c2)) a[d] = x2, a[n2] = c2, d = n2;
        else break a;
      }
    }
    return b2;
  }
  function g(a, b2) {
    var c2 = a.sortIndex - b2.sortIndex;
    return 0 !== c2 ? c2 : a.id - b2.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b2 = h2(t2); null !== b2; ) {
      if (null === b2.callback) k2(t2);
      else if (b2.startTime <= a) k2(t2), b2.sortIndex = b2.expirationTime, f2(r2, b2);
      else break;
      b2 = h2(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2) if (null !== h2(r2)) A2 = true, I2(J2);
    else {
      var b2 = h2(t2);
      null !== b2 && K2(H2, b2.startTime - a);
    }
  }
  function J2(a, b2) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c2 = y2;
    try {
      G2(b2);
      for (v2 = h2(r2); null !== v2 && (!(v2.expirationTime > b2) || a && !M2()); ) {
        var d = v2.callback;
        if ("function" === typeof d) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e = d(v2.expirationTime <= b2);
          b2 = exports.unstable_now();
          "function" === typeof e ? v2.callback = e : v2 === h2(r2) && k2(r2);
          G2(b2);
        } else k2(r2);
        v2 = h2(r2);
      }
      if (null !== v2) var w2 = true;
      else {
        var m2 = h2(t2);
        null !== m2 && K2(H2, m2.startTime - b2);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c2, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a = exports.unstable_now();
      Q2 = a;
      var b2 = true;
      try {
        b2 = O2(true, a);
      } finally {
        b2 ? S2() : (N2 = false, O2 = null);
      }
    } else N2 = false;
  }
  var S2;
  if ("function" === typeof F2) S2 = function() {
    F2(R2);
  };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else S2 = function() {
    D2(R2, 0);
  };
  function I2(a) {
    O2 = a;
    N2 || (N2 = true, S2());
  }
  function K2(a, b2) {
    L2 = D2(function() {
      a(exports.unstable_now());
    }, b2);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a ? Math.floor(1e3 / a) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports.unstable_next = function(a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = y2;
    }
    var c2 = y2;
    y2 = b2;
    try {
      return a();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a, b2) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c2 = y2;
    y2 = a;
    try {
      return b2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a, b2, c2) {
    var d = exports.unstable_now();
    "object" === typeof c2 && null !== c2 ? (c2 = c2.delay, c2 = "number" === typeof c2 && 0 < c2 ? d + c2 : d) : c2 = d;
    switch (a) {
      case 1:
        var e = -1;
        break;
      case 2:
        e = 250;
        break;
      case 5:
        e = 1073741823;
        break;
      case 4:
        e = 1e4;
        break;
      default:
        e = 5e3;
    }
    e = c2 + e;
    a = { id: u2++, callback: b2, priorityLevel: a, startTime: c2, expirationTime: e, sortIndex: -1 };
    c2 > d ? (a.sortIndex = c2, f2(t2, a), null === h2(r2) && a === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c2 - d))) : (a.sortIndex = e, f2(r2, a), A2 || z2 || (A2 = true, I2(J2)));
    return a;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a) {
    var b2 = y2;
    return function() {
      var c2 = y2;
      y2 = b2;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p(a) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c2 = 1; c2 < arguments.length; c2++) b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a, b2) {
  ha(a, b2);
  ha(a + "Capture", b2);
}
function ha(a, b2) {
  ea[a] = b2;
  for (a = 0; a < b2.length; a++) da.add(b2[a]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a) {
  if (ja.call(ma, a)) return true;
  if (ja.call(la, a)) return false;
  if (ka.test(a)) return ma[a] = true;
  la[a] = true;
  return false;
}
function pa(a, b2, c2, d) {
  if (null !== c2 && 0 === c2.type) return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d) return false;
      if (null !== c2) return !c2.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return false;
  }
}
function qa(a, b2, c2, d) {
  if (null === b2 || "undefined" === typeof b2 || pa(a, b2, c2, d)) return true;
  if (d) return false;
  if (null !== c2) switch (c2.type) {
    case 3:
      return !b2;
    case 4:
      return false === b2;
    case 5:
      return isNaN(b2);
    case 6:
      return isNaN(b2) || 1 > b2;
  }
  return false;
}
function v$1(a, b2, c2, d, e, f2, g) {
  this.acceptsBooleans = 2 === b2 || 3 === b2 || 4 === b2;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c2;
  this.propertyName = a;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  z[a] = new v$1(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b2 = a[0];
  z[b2] = new v$1(b2, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  z[a] = new v$1(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  z[a] = new v$1(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  z[a] = new v$1(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  z[a] = new v$1(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  z[a] = new v$1(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  z[a] = new v$1(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  z[a] = new v$1(a, 5, false, a.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b2 = a.replace(
    ra,
    sa
  );
  z[b2] = new v$1(b2, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b2 = a.replace(ra, sa);
  z[b2] = new v$1(b2, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b2 = a.replace(ra, sa);
  z[b2] = new v$1(b2, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  z[a] = new v$1(a, 1, false, a.toLowerCase(), null, false, false);
});
z.xlinkHref = new v$1("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  z[a] = new v$1(a, 1, false, a.toLowerCase(), null, true, true);
});
function ta(a, b2, c2, d) {
  var e = z.hasOwnProperty(b2) ? z[b2] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b2.length) || "o" !== b2[0] && "O" !== b2[0] || "n" !== b2[1] && "N" !== b2[1]) qa(b2, c2, e, d) && (c2 = null), d || null === e ? oa(b2) && (null === c2 ? a.removeAttribute(b2) : a.setAttribute(b2, "" + c2)) : e.mustUseProperty ? a[e.propertyName] = null === c2 ? 3 === e.type ? false : "" : c2 : (b2 = e.attributeName, d = e.attributeNamespace, null === c2 ? a.removeAttribute(b2) : (e = e.type, c2 = 3 === e || 4 === e && true === c2 ? "" : "" + c2, d ? a.setAttributeNS(d, b2, c2) : a.setAttribute(b2, c2)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a) return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A = Object.assign, La;
function Ma(a) {
  if (void 0 === La) try {
    throw Error();
  } catch (c2) {
    var b2 = c2.stack.trim().match(/\n( *(at )?)/);
    La = b2 && b2[1] || "";
  }
  return "\n" + La + a;
}
var Na = false;
function Oa(a, b2) {
  if (!a || Na) return "";
  Na = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2) if (b2 = function() {
      throw Error();
    }, Object.defineProperty(b2.prototype, "props", { set: function() {
      throw Error();
    } }), "object" === typeof Reflect && Reflect.construct) {
      try {
        Reflect.construct(b2, []);
      } catch (l2) {
        var d = l2;
      }
      Reflect.construct(a, [], b2);
    } else {
      try {
        b2.call();
      } catch (l2) {
        d = l2;
      }
      a.call(b2.prototype);
    }
    else {
      try {
        throw Error();
      } catch (l2) {
        d = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d && "string" === typeof l2.stack) {
      for (var e = l2.stack.split("\n"), f2 = d.stack.split("\n"), g = e.length - 1, h2 = f2.length - 1; 1 <= g && 0 <= h2 && e[g] !== f2[h2]; ) h2--;
      for (; 1 <= g && 0 <= h2; g--, h2--) if (e[g] !== f2[h2]) {
        if (1 !== g || 1 !== h2) {
          do
            if (g--, h2--, 0 > h2 || e[g] !== f2[h2]) {
              var k2 = "\n" + e[g].replace(" at new ", " at ");
              a.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a.displayName));
              return k2;
            }
          while (1 <= g && 0 <= h2);
        }
        break;
      }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c2;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, false), a;
    case 11:
      return a = Oa(a.type.render, false), a;
    case 1:
      return a = Oa(a.type, true), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a) switch (a.$$typeof) {
    case Ca:
      return (a.displayName || "Context") + ".Consumer";
    case Ba:
      return (a._context.displayName || "Context") + ".Provider";
    case Da:
      var b2 = a.render;
      a = a.displayName;
      a || (a = b2.displayName || b2.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
      return a;
    case Ga:
      return b2 = a.displayName || null, null !== b2 ? b2 : Qa(a.type) || "Memo";
    case Ha:
      b2 = a._payload;
      a = a._init;
      try {
        return Qa(a(b2));
      } catch (c2) {
      }
  }
  return null;
}
function Ra(a) {
  var b2 = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b2.displayName || "Context") + ".Consumer";
    case 10:
      return (b2._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b2.render, a = a.displayName || a.name || "", b2.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b2;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b2);
    case 8:
      return b2 === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b2) return b2.displayName || b2.name || null;
      if ("string" === typeof b2) return b2;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b2 = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b2 || "radio" === b2);
}
function Ua(a) {
  var b2 = Ta(a) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a.constructor.prototype, b2), d = "" + a[b2];
  if (!a.hasOwnProperty(b2) && "undefined" !== typeof c2 && "function" === typeof c2.get && "function" === typeof c2.set) {
    var e = c2.get, f2 = c2.set;
    Object.defineProperty(a, b2, { configurable: true, get: function() {
      return e.call(this);
    }, set: function(a2) {
      d = "" + a2;
      f2.call(this, a2);
    } });
    Object.defineProperty(a, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d;
    }, setValue: function(a2) {
      d = "" + a2;
    }, stopTracking: function() {
      a._valueTracker = null;
      delete a[b2];
    } };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a) return false;
  var b2 = a._valueTracker;
  if (!b2) return true;
  var c2 = b2.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c2 ? (b2.setValue(a), true) : false;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;
  try {
    return a.activeElement || a.body;
  } catch (b2) {
    return a.body;
  }
}
function Ya(a, b2) {
  var c2 = b2.checked;
  return A({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c2 ? c2 : a._wrapperState.initialChecked });
}
function Za(a, b2) {
  var c2 = null == b2.defaultValue ? "" : b2.defaultValue, d = null != b2.checked ? b2.checked : b2.defaultChecked;
  c2 = Sa(null != b2.value ? b2.value : c2);
  a._wrapperState = { initialChecked: d, initialValue: c2, controlled: "checkbox" === b2.type || "radio" === b2.type ? null != b2.checked : null != b2.value };
}
function ab(a, b2) {
  b2 = b2.checked;
  null != b2 && ta(a, "checked", b2, false);
}
function bb(a, b2) {
  ab(a, b2);
  var c2 = Sa(b2.value), d = b2.type;
  if (null != c2) if ("number" === d) {
    if (0 === c2 && "" === a.value || a.value != c2) a.value = "" + c2;
  } else a.value !== "" + c2 && (a.value = "" + c2);
  else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? cb(a, b2.type, c2) : b2.hasOwnProperty("defaultValue") && cb(a, b2.type, Sa(b2.defaultValue));
  null == b2.checked && null != b2.defaultChecked && (a.defaultChecked = !!b2.defaultChecked);
}
function db(a, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d = b2.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b2.value && null !== b2.value)) return;
    b2 = "" + a._wrapperState.initialValue;
    c2 || b2 === a.value || (a.value = b2);
    a.defaultValue = b2;
  }
  c2 = a.name;
  "" !== c2 && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c2 && (a.name = c2);
}
function cb(a, b2, c2) {
  if ("number" !== b2 || Xa(a.ownerDocument) !== a) null == c2 ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c2 && (a.defaultValue = "" + c2);
}
var eb = Array.isArray;
function fb(a, b2, c2, d) {
  a = a.options;
  if (b2) {
    b2 = {};
    for (var e = 0; e < c2.length; e++) b2["$" + c2[e]] = true;
    for (c2 = 0; c2 < a.length; c2++) e = b2.hasOwnProperty("$" + a[c2].value), a[c2].selected !== e && (a[c2].selected = e), e && d && (a[c2].defaultSelected = true);
  } else {
    c2 = "" + Sa(c2);
    b2 = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c2) {
        a[e].selected = true;
        d && (a[e].defaultSelected = true);
        return;
      }
      null !== b2 || a[e].disabled || (b2 = a[e]);
    }
    null !== b2 && (b2.selected = true);
  }
}
function gb(a, b2) {
  if (null != b2.dangerouslySetInnerHTML) throw Error(p(91));
  return A({}, b2, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function hb(a, b2) {
  var c2 = b2.value;
  if (null == c2) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (null != c2) {
      if (null != b2) throw Error(p(92));
      if (eb(c2)) {
        if (1 < c2.length) throw Error(p(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    null == b2 && (b2 = "");
    c2 = b2;
  }
  a._wrapperState = { initialValue: Sa(c2) };
}
function ib(a, b2) {
  var c2 = Sa(b2.value), d = Sa(b2.defaultValue);
  null != c2 && (c2 = "" + c2, c2 !== a.value && (a.value = c2), null == b2.defaultValue && a.defaultValue !== c2 && (a.defaultValue = c2));
  null != d && (a.defaultValue = "" + d);
}
function jb(a) {
  var b2 = a.textContent;
  b2 === a._wrapperState.initialValue && "" !== b2 && null !== b2 && (a.value = b2);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b2) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b2) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b2 ? "http://www.w3.org/1999/xhtml" : a;
}
var mb, nb = function(a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b2, c2, d, e) {
    MSApp.execUnsafeLocalFunction(function() {
      return a(b2, c2, d, e);
    });
  } : a;
}(function(a, b2) {
  if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b2;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = mb.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
    for (; b2.firstChild; ) a.appendChild(b2.firstChild);
  }
});
function ob(a, b2) {
  if (b2) {
    var c2 = a.firstChild;
    if (c2 && c2 === a.lastChild && 3 === c2.nodeType) {
      c2.nodeValue = b2;
      return;
    }
  }
  a.textContent = b2;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function(a) {
  qb.forEach(function(b2) {
    b2 = b2 + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b2] = pb[a];
  });
});
function rb(a, b2, c2) {
  return null == b2 || "boolean" === typeof b2 || "" === b2 ? "" : c2 || "number" !== typeof b2 || 0 === b2 || pb.hasOwnProperty(a) && pb[a] ? ("" + b2).trim() : b2 + "px";
}
function sb(a, b2) {
  a = a.style;
  for (var c2 in b2) if (b2.hasOwnProperty(c2)) {
    var d = 0 === c2.indexOf("--"), e = rb(c2, b2[c2], d);
    "float" === c2 && (c2 = "cssFloat");
    d ? a.setProperty(c2, e) : a[c2] = e;
  }
}
var tb = A({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a, b2) {
  if (b2) {
    if (tb[a] && (null != b2.children || null != b2.dangerouslySetInnerHTML)) throw Error(p(137, a));
    if (null != b2.dangerouslySetInnerHTML) {
      if (null != b2.children) throw Error(p(60));
      if ("object" !== typeof b2.dangerouslySetInnerHTML || !("__html" in b2.dangerouslySetInnerHTML)) throw Error(p(61));
    }
    if (null != b2.style && "object" !== typeof b2.style) throw Error(p(62));
  }
}
function vb(a, b2) {
  if (-1 === a.indexOf("-")) return "string" === typeof b2.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null, zb = null, Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb) throw Error(p(280));
    var b2 = a.stateNode;
    b2 && (b2 = Db(b2), yb(a.stateNode, a.type, b2));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb, b2 = Ab;
    Ab = zb = null;
    Bb(a);
    if (b2) for (a = 0; a < b2.length; a++) Bb(b2[a]);
  }
}
function Gb(a, b2) {
  return a(b2);
}
function Hb() {
}
var Ib = false;
function Jb(a, b2, c2) {
  if (Ib) return a(b2, c2);
  Ib = true;
  try {
    return Gb(a, b2, c2);
  } finally {
    if (Ib = false, null !== zb || null !== Ab) Hb(), Fb();
  }
}
function Kb(a, b2) {
  var c2 = a.stateNode;
  if (null === c2) return null;
  var d = Db(c2);
  if (null === d) return null;
  c2 = d[b2];
  a: switch (b2) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;
    default:
      a = false;
  }
  if (a) return null;
  if (c2 && "function" !== typeof c2) throw Error(p(231, b2, typeof c2));
  return c2;
}
var Lb = false;
if (ia) try {
  var Mb = {};
  Object.defineProperty(Mb, "passive", { get: function() {
    Lb = true;
  } });
  window.addEventListener("test", Mb, Mb);
  window.removeEventListener("test", Mb, Mb);
} catch (a) {
  Lb = false;
}
function Nb(a, b2, c2, d, e, f2, g, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a) {
  Ob = true;
  Pb = a;
} };
function Tb(a, b2, c2, d, e, f2, g, h2, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b2, c2, d, e, f2, g, h2, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else throw Error(p(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a) {
  var b2 = a, c2 = a;
  if (a.alternate) for (; b2.return; ) b2 = b2.return;
  else {
    a = b2;
    do
      b2 = a, 0 !== (b2.flags & 4098) && (c2 = b2.return), a = b2.return;
    while (a);
  }
  return 3 === b2.tag ? c2 : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b2 = a.memoizedState;
    null === b2 && (a = a.alternate, null !== a && (b2 = a.memoizedState));
    if (null !== b2) return b2.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a) throw Error(p(188));
}
function Yb(a) {
  var b2 = a.alternate;
  if (!b2) {
    b2 = Vb(a);
    if (null === b2) throw Error(p(188));
    return b2 !== a ? null : a;
  }
  for (var c2 = a, d = b2; ; ) {
    var e = c2.return;
    if (null === e) break;
    var f2 = e.alternate;
    if (null === f2) {
      d = e.return;
      if (null !== d) {
        c2 = d;
        continue;
      }
      break;
    }
    if (e.child === f2.child) {
      for (f2 = e.child; f2; ) {
        if (f2 === c2) return Xb(e), a;
        if (f2 === d) return Xb(e), b2;
        f2 = f2.sibling;
      }
      throw Error(p(188));
    }
    if (c2.return !== d.return) c2 = e, d = f2;
    else {
      for (var g = false, h2 = e.child; h2; ) {
        if (h2 === c2) {
          g = true;
          c2 = e;
          d = f2;
          break;
        }
        if (h2 === d) {
          g = true;
          d = e;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g = true;
            c2 = f2;
            d = e;
            break;
          }
          if (h2 === d) {
            g = true;
            d = f2;
            c2 = e;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g) throw Error(p(189));
      }
    }
    if (c2.alternate !== d) throw Error(p(190));
  }
  if (3 !== c2.tag) throw Error(p(188));
  return c2.stateNode.current === c2 ? a : b2;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag) return a;
  for (a = a.child; null !== a; ) {
    var b2 = $b(a);
    if (null !== b2) return b2;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot) try {
    lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
  } catch (b2) {
  }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b2) {
  var c2 = a.pendingLanes;
  if (0 === c2) return 0;
  var d = 0, e = a.suspendedLanes, f2 = a.pingedLanes, g = c2 & 268435455;
  if (0 !== g) {
    var h2 = g & ~e;
    0 !== h2 ? d = tc(h2) : (f2 &= g, 0 !== f2 && (d = tc(f2)));
  } else g = c2 & ~e, 0 !== g ? d = tc(g) : 0 !== f2 && (d = tc(f2));
  if (0 === d) return 0;
  if (0 !== b2 && b2 !== d && 0 === (b2 & e) && (e = d & -d, f2 = b2 & -b2, e >= f2 || 16 === e && 0 !== (f2 & 4194240))) return b2;
  0 !== (d & 4) && (d |= c2 & 16);
  b2 = a.entangledLanes;
  if (0 !== b2) for (a = a.entanglements, b2 &= d; 0 < b2; ) c2 = 31 - oc(b2), e = 1 << c2, d |= a[c2], b2 &= ~e;
  return d;
}
function vc(a, b2) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b2 + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b2 + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b2) {
  for (var c2 = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f2 = a.pendingLanes; 0 < f2; ) {
    var g = 31 - oc(f2), h2 = 1 << g, k2 = e[g];
    if (-1 === k2) {
      if (0 === (h2 & c2) || 0 !== (h2 & d)) e[g] = vc(h2, b2);
    } else k2 <= b2 && (a.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++) b2.push(a);
  return b2;
}
function Ac(a, b2, c2) {
  a.pendingLanes |= b2;
  536870912 !== b2 && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b2 = 31 - oc(b2);
  a[b2] = c2;
}
function Bc(a, b2) {
  var c2 = a.pendingLanes & ~b2;
  a.pendingLanes = b2;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b2;
  a.mutableReadLanes &= b2;
  a.entangledLanes &= b2;
  b2 = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c2; ) {
    var e = 31 - oc(c2), f2 = 1 << e;
    b2[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c2 &= ~f2;
  }
}
function Cc(a, b2) {
  var c2 = a.entangledLanes |= b2;
  for (a = a.entanglements; c2; ) {
    var d = 31 - oc(c2), e = 1 << d;
    e & b2 | a[d] & b2 && (a[d] |= b2);
    c2 &= ~e;
  }
}
var C$1 = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b2) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b2.pointerId);
  }
}
function Tc(a, b2, c2, d, e, f2) {
  if (null === a || a.nativeEvent !== f2) return a = { blockedOn: b2, domEventName: c2, eventSystemFlags: d, nativeEvent: f2, targetContainers: [e] }, null !== b2 && (b2 = Cb(b2), null !== b2 && Fc(b2)), a;
  a.eventSystemFlags |= d;
  b2 = a.targetContainers;
  null !== e && -1 === b2.indexOf(e) && b2.push(e);
  return a;
}
function Uc(a, b2, c2, d, e) {
  switch (b2) {
    case "focusin":
      return Lc = Tc(Lc, a, b2, c2, d, e), true;
    case "dragenter":
      return Mc = Tc(Mc, a, b2, c2, d, e), true;
    case "mouseover":
      return Nc = Tc(Nc, a, b2, c2, d, e), true;
    case "pointerover":
      var f2 = e.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a, b2, c2, d, e));
      return true;
    case "gotpointercapture":
      return f2 = e.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a, b2, c2, d, e)), true;
  }
  return false;
}
function Vc(a) {
  var b2 = Wc(a.target);
  if (null !== b2) {
    var c2 = Vb(b2);
    if (null !== c2) {
      if (b2 = c2.tag, 13 === b2) {
        if (b2 = Wb(c2), null !== b2) {
          a.blockedOn = b2;
          Ic(a.priority, function() {
            Gc(c2);
          });
          return;
        }
      } else if (3 === b2 && c2.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = 3 === c2.tag ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn) return false;
  for (var b2 = a.targetContainers; 0 < b2.length; ) {
    var c2 = Yc(a.domEventName, a.eventSystemFlags, b2[0], a.nativeEvent);
    if (null === c2) {
      c2 = a.nativeEvent;
      var d = new c2.constructor(c2.type, c2);
      wb = d;
      c2.target.dispatchEvent(d);
      wb = null;
    } else return b2 = Cb(c2), null !== b2 && Fc(b2), a.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function Zc(a, b2, c2) {
  Xc(a) && c2.delete(b2);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b2) {
  a.blockedOn === b2 && (a.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b2(b3) {
    return ad(b3, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c2 = 1; c2 < Kc.length; c2++) {
      var d = Kc[c2];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b2);
  Pc.forEach(b2);
  for (c2 = 0; c2 < Qc.length; c2++) d = Qc[c2], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc.length && (c2 = Qc[0], null === c2.blockedOn); ) Vc(c2), null === c2.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a, b2, c2, d) {
  var e = C$1, f2 = cd.transition;
  cd.transition = null;
  try {
    C$1 = 1, fd(a, b2, c2, d);
  } finally {
    C$1 = e, cd.transition = f2;
  }
}
function gd(a, b2, c2, d) {
  var e = C$1, f2 = cd.transition;
  cd.transition = null;
  try {
    C$1 = 4, fd(a, b2, c2, d);
  } finally {
    C$1 = e, cd.transition = f2;
  }
}
function fd(a, b2, c2, d) {
  if (dd) {
    var e = Yc(a, b2, c2, d);
    if (null === e) hd(a, b2, d, id, c2), Sc(a, d);
    else if (Uc(e, a, b2, c2, d)) d.stopPropagation();
    else if (Sc(a, d), b2 & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e; ) {
        var f2 = Cb(e);
        null !== f2 && Ec(f2);
        f2 = Yc(a, b2, c2, d);
        null === f2 && hd(a, b2, d, id, c2);
        if (f2 === e) break;
        e = f2;
      }
      null !== e && d.stopPropagation();
    } else hd(a, b2, d, null, c2);
  }
}
var id = null;
function Yc(a, b2, c2, d) {
  id = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a) if (b2 = Vb(a), null === b2) a = null;
  else if (c2 = b2.tag, 13 === c2) {
    a = Wb(b2);
    if (null !== a) return a;
    a = null;
  } else if (3 === c2) {
    if (b2.stateNode.current.memoizedState.isDehydrated) return 3 === b2.tag ? b2.stateNode.containerInfo : null;
    a = null;
  } else b2 !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md) return md;
  var a, b2 = ld, c2 = b2.length, d, e = "value" in kd ? kd.value : kd.textContent, f2 = e.length;
  for (a = 0; a < c2 && b2[a] === e[a]; a++) ;
  var g = c2 - a;
  for (d = 1; d <= g && b2[c2 - d] === e[f2 - d]; d++) ;
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b2 = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b2 && (a = 13)) : a = b2;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b2(b3, d, e, f2, g) {
    this._reactName = b3;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g;
    this.currentTarget = null;
    for (var c2 in a) a.hasOwnProperty(c2) && (b3 = a[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a2 = this.nativeEvent;
    a2 && (a2.preventDefault ? a2.preventDefault() : "unknown" !== typeof a2.returnValue && (a2.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a2 = this.nativeEvent;
    a2 && (a2.stopPropagation ? a2.stopPropagation() : "unknown" !== typeof a2.cancelBubble && (a2.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b2;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
  return a.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a) {
  return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
}, movementX: function(a) {
  if ("movementX" in a) return a.movementX;
  a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
  return wd;
}, movementY: function(a) {
  return "movementY" in a ? a.movementY : xd;
} }), Bd = rd(Ad), Cd = A({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A({}, sd, { clipboardData: function(a) {
  return "clipboardData" in a ? a.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a) : (a = Od[a]) ? !!b2[a] : false;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, { key: function(a) {
  if (a.key) {
    var b2 = Md[a.key] || a.key;
    if ("Unidentified" !== b2) return b2;
  }
  return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a) {
  return "keypress" === a.type ? od(a) : 0;
}, keyCode: function(a) {
  return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
}, which: function(a) {
  return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
} }), Rd = rd(Qd), Sd = A({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A({}, Ad, {
  deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a, b2) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b2.keyCode);
    case "keydown":
      return 229 !== b2.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = false;
function je(a, b2) {
  switch (a) {
    case "compositionend":
      return he(b2);
    case "keypress":
      if (32 !== b2.which) return null;
      fe = true;
      return ee;
    case "textInput":
      return a = b2.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b2) {
  if (ie) return "compositionend" === a || !ae && ge(a, b2) ? (a = nd(), md = ld = kd = null, ie = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length) return b2.char;
        if (b2.which) return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b2.locale ? null : b2.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a) {
  var b2 = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b2 ? !!le[a.type] : "textarea" === b2 ? true : false;
}
function ne(a, b2, c2, d) {
  Eb(d);
  b2 = oe(b2, "onChange");
  0 < b2.length && (c2 = new td("onChange", "change", null, c2, d), a.push({ event: c2, listeners: b2 }));
}
var pe = null, qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b2 = ue(a);
  if (Wa(b2)) return a;
}
function ve(a, b2) {
  if ("change" === a) return b2;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b2 = [];
    ne(b2, qe, a, xb(a));
    Jb(re, b2);
  }
}
function Ce(a, b2, c2) {
  "focusin" === a ? (Ae(), pe = b2, qe = c2, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
}
function Ee(a, b2) {
  if ("click" === a) return te(b2);
}
function Fe(a, b2) {
  if ("input" === a || "change" === a) return te(b2);
}
function Ge(a, b2) {
  return a === b2 && (0 !== a || 1 / a === 1 / b2) || a !== a && b2 !== b2;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b2) {
  if (He(a, b2)) return true;
  if ("object" !== typeof a || null === a || "object" !== typeof b2 || null === b2) return false;
  var c2 = Object.keys(a), d = Object.keys(b2);
  if (c2.length !== d.length) return false;
  for (d = 0; d < c2.length; d++) {
    var e = c2[d];
    if (!ja.call(b2, e) || !He(a[e], b2[e])) return false;
  }
  return true;
}
function Je(a) {
  for (; a && a.firstChild; ) a = a.firstChild;
  return a;
}
function Ke(a, b2) {
  var c2 = Je(a);
  a = 0;
  for (var d; c2; ) {
    if (3 === c2.nodeType) {
      d = a + c2.textContent.length;
      if (a <= b2 && d >= b2) return { node: c2, offset: b2 - a };
      a = d;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Je(c2);
  }
}
function Le(a, b2) {
  return a && b2 ? a === b2 ? true : a && 3 === a.nodeType ? false : b2 && 3 === b2.nodeType ? Le(a, b2.parentNode) : "contains" in a ? a.contains(b2) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b2) & 16) : false : false;
}
function Me() {
  for (var a = window, b2 = Xa(); b2 instanceof a.HTMLIFrameElement; ) {
    try {
      var c2 = "string" === typeof b2.contentWindow.location.href;
    } catch (d) {
      c2 = false;
    }
    if (c2) a = b2.contentWindow;
    else break;
    b2 = Xa(a.document);
  }
  return b2;
}
function Ne(a) {
  var b2 = a && a.nodeName && a.nodeName.toLowerCase();
  return b2 && ("input" === b2 && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b2 || "true" === a.contentEditable);
}
function Oe(a) {
  var b2 = Me(), c2 = a.focusedElem, d = a.selectionRange;
  if (b2 !== c2 && c2 && c2.ownerDocument && Le(c2.ownerDocument.documentElement, c2)) {
    if (null !== d && Ne(c2)) {
      if (b2 = d.start, a = d.end, void 0 === a && (a = b2), "selectionStart" in c2) c2.selectionStart = b2, c2.selectionEnd = Math.min(a, c2.value.length);
      else if (a = (b2 = c2.ownerDocument || document) && b2.defaultView || window, a.getSelection) {
        a = a.getSelection();
        var e = c2.textContent.length, f2 = Math.min(d.start, e);
        d = void 0 === d.end ? f2 : Math.min(d.end, e);
        !a.extend && f2 > d && (e = d, d = f2, f2 = e);
        e = Ke(c2, f2);
        var g = Ke(
          c2,
          d
        );
        e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b2 = b2.createRange(), b2.setStart(e.node, e.offset), a.removeAllRanges(), f2 > d ? (a.addRange(b2), a.extend(g.node, g.offset)) : (b2.setEnd(g.node, g.offset), a.addRange(b2)));
      }
    }
    b2 = [];
    for (a = c2; a = a.parentNode; ) 1 === a.nodeType && b2.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    "function" === typeof c2.focus && c2.focus();
    for (c2 = 0; c2 < b2.length; c2++) a = b2[c2], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a, b2, c2) {
  var d = c2.window === c2 ? c2.document : 9 === c2.nodeType ? c2 : c2.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b2 = new td("onSelect", "select", null, b2, c2), a.push({ event: b2, listeners: d }), b2.target = Qe)));
}
function Ve(a, b2) {
  var c2 = {};
  c2[a.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a] = "webkit" + b2;
  c2["Moz" + a] = "moz" + b2;
  return c2;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a]) return Xe[a];
  if (!We[a]) return a;
  var b2 = We[a], c2;
  for (c2 in b2) if (b2.hasOwnProperty(c2) && c2 in Ye) return Xe[a] = b2[c2];
  return a;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b2) {
  df.set(a, b2);
  fa(b2, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b2, c2) {
  var d = a.type || "unknown-event";
  a.currentTarget = c2;
  Ub(d, b2, void 0, a);
  a.currentTarget = null;
}
function se(a, b2) {
  b2 = 0 !== (b2 & 4);
  for (var c2 = 0; c2 < a.length; c2++) {
    var d = a[c2], e = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b2) for (var g = d.length - 1; 0 <= g; g--) {
        var h2 = d[g], k2 = h2.instance, l2 = h2.currentTarget;
        h2 = h2.listener;
        if (k2 !== f2 && e.isPropagationStopped()) break a;
        nf(e, h2, l2);
        f2 = k2;
      }
      else for (g = 0; g < d.length; g++) {
        h2 = d[g];
        k2 = h2.instance;
        l2 = h2.currentTarget;
        h2 = h2.listener;
        if (k2 !== f2 && e.isPropagationStopped()) break a;
        nf(e, h2, l2);
        f2 = k2;
      }
    }
  }
  if (Qb) throw a = Rb, Qb = false, Rb = null, a;
}
function D(a, b2) {
  var c2 = b2[of];
  void 0 === c2 && (c2 = b2[of] = /* @__PURE__ */ new Set());
  var d = a + "__bubble";
  c2.has(d) || (pf(b2, a, 2, false), c2.add(d));
}
function qf(a, b2, c2) {
  var d = 0;
  b2 && (d |= 4);
  pf(c2, a, d, b2);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = true;
    da.forEach(function(b3) {
      "selectionchange" !== b3 && (mf.has(b3) || qf(b3, false, a), qf(b3, true, a));
    });
    var b2 = 9 === a.nodeType ? a : a.ownerDocument;
    null === b2 || b2[rf] || (b2[rf] = true, qf("selectionchange", false, b2));
  }
}
function pf(a, b2, c2, d) {
  switch (jd(b2)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c2 = e.bind(null, b2, c2, a);
  e = void 0;
  !Lb || "touchstart" !== b2 && "touchmove" !== b2 && "wheel" !== b2 || (e = true);
  d ? void 0 !== e ? a.addEventListener(b2, c2, { capture: true, passive: e }) : a.addEventListener(b2, c2, true) : void 0 !== e ? a.addEventListener(b2, c2, { passive: e }) : a.addEventListener(b2, c2, false);
}
function hd(a, b2, c2, d, e) {
  var f2 = d;
  if (0 === (b2 & 1) && 0 === (b2 & 2) && null !== d) a: for (; ; ) {
    if (null === d) return;
    var g = d.tag;
    if (3 === g || 4 === g) {
      var h2 = d.stateNode.containerInfo;
      if (h2 === e || 8 === h2.nodeType && h2.parentNode === e) break;
      if (4 === g) for (g = d.return; null !== g; ) {
        var k2 = g.tag;
        if (3 === k2 || 4 === k2) {
          if (k2 = g.stateNode.containerInfo, k2 === e || 8 === k2.nodeType && k2.parentNode === e) return;
        }
        g = g.return;
      }
      for (; null !== h2; ) {
        g = Wc(h2);
        if (null === g) return;
        k2 = g.tag;
        if (5 === k2 || 6 === k2) {
          d = f2 = g;
          continue a;
        }
        h2 = h2.parentNode;
      }
    }
    d = d.return;
  }
  Jb(function() {
    var d2 = f2, e2 = xb(c2), g2 = [];
    a: {
      var h3 = df.get(a);
      if (void 0 !== h3) {
        var k3 = td, n2 = a;
        switch (a) {
          case "keypress":
            if (0 === od(c2)) break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c2.button) break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b2 & 4), J2 = !t2 && "scroll" === a, x2 = t2 ? null !== h3 ? h3 + "Capture" : null : h3;
        t2 = [];
        for (var w2 = d2, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2) break;
          w2 = w2.return;
        }
        0 < t2.length && (h3 = new k3(h3, n2, null, c2, e2), g2.push({ event: h3, listeners: t2 }));
      }
    }
    if (0 === (b2 & 7)) {
      a: {
        h3 = "mouseover" === a || "pointerover" === a;
        k3 = "mouseout" === a || "pointerout" === a;
        if (h3 && c2 !== wb && (n2 = c2.relatedTarget || c2.fromElement) && (Wc(n2) || n2[uf])) break a;
        if (k3 || h3) {
          h3 = e2.window === e2 ? e2 : (h3 = e2.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c2.relatedTarget || c2.toElement, k3 = d2, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag)) n2 = null;
          } else k3 = null, n2 = d2;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a || "pointerover" === a) t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h3 : ue(k3);
            u2 = null == n2 ? h3 : ue(n2);
            h3 = new t2(F2, w2 + "leave", k3, c2, e2);
            h3.target = J2;
            h3.relatedTarget = u2;
            F2 = null;
            Wc(e2) === d2 && (t2 = new t2(x2, w2 + "enter", n2, c2, e2), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2) b: {
              t2 = k3;
              x2 = n2;
              w2 = 0;
              for (u2 = t2; u2; u2 = vf(u2)) w2++;
              u2 = 0;
              for (F2 = x2; F2; F2 = vf(F2)) u2++;
              for (; 0 < w2 - u2; ) t2 = vf(t2), w2--;
              for (; 0 < u2 - w2; ) x2 = vf(x2), u2--;
              for (; w2--; ) {
                if (t2 === x2 || null !== x2 && t2 === x2.alternate) break b;
                t2 = vf(t2);
                x2 = vf(x2);
              }
              t2 = null;
            }
            else t2 = null;
            null !== k3 && wf(g2, h3, k3, t2, false);
            null !== n2 && null !== J2 && wf(g2, J2, n2, t2, true);
          }
        }
      }
      a: {
        h3 = d2 ? ue(d2) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h3.type) var na = ve;
        else if (me(h3)) if (we) na = Fe;
        else {
          na = De;
          var xa = Ce;
        }
        else (k3 = h3.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee);
        if (na && (na = na(a, d2))) {
          ne(g2, na, c2, e2);
          break a;
        }
        xa && xa(a, h3, d2);
        "focusout" === a && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
      }
      xa = d2 ? ue(d2) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d2, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g2, c2, e2);
          break;
        case "selectionchange":
          if (Pe) break;
        case "keydown":
        case "keyup":
          Ue(g2, c2, e2);
      }
      var $a;
      if (ae) b: {
        switch (a) {
          case "compositionstart":
            var ba = "onCompositionStart";
            break b;
          case "compositionend":
            ba = "onCompositionEnd";
            break b;
          case "compositionupdate":
            ba = "onCompositionUpdate";
            break b;
        }
        ba = void 0;
      }
      else ie ? ge(a, c2) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c2.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c2.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e2, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), xa = oe(d2, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c2, e2), g2.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c2), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a, c2) : ke(a, c2)) d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e2 = new Ld("onBeforeInput", "beforeinput", null, c2, e2), g2.push({ event: e2, listeners: d2 }), e2.data = $a);
    }
    se(g2, b2);
  });
}
function tf(a, b2, c2) {
  return { instance: a, listener: b2, currentTarget: c2 };
}
function oe(a, b2) {
  for (var c2 = b2 + "Capture", d = []; null !== a; ) {
    var e = a, f2 = e.stateNode;
    5 === e.tag && null !== f2 && (e = f2, f2 = Kb(a, c2), null != f2 && d.unshift(tf(a, f2, e)), f2 = Kb(a, b2), null != f2 && d.push(tf(a, f2, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a) return null;
  do
    a = a.return;
  while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b2, c2, d, e) {
  for (var f2 = b2._reactName, g = []; null !== c2 && c2 !== d; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (null !== k2 && k2 === d) break;
    5 === h2.tag && null !== l2 && (h2 = l2, e ? (k2 = Kb(c2, f2), null != k2 && g.unshift(tf(c2, k2, h2))) : e || (k2 = Kb(c2, f2), null != k2 && g.push(tf(c2, k2, h2))));
    c2 = c2.return;
  }
  0 !== g.length && a.push({ event: b2, listeners: g });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b2, c2) {
  b2 = zf(b2);
  if (zf(a) !== b2 && c2) throw Error(p(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a, b2) {
  return "textarea" === a || "noscript" === a || "string" === typeof b2.children || "number" === typeof b2.children || "object" === typeof b2.dangerouslySetInnerHTML && null !== b2.dangerouslySetInnerHTML && null != b2.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a) {
  return Hf.resolve(null).then(a).catch(If);
} : Ff;
function If(a) {
  setTimeout(function() {
    throw a;
  });
}
function Kf(a, b2) {
  var c2 = b2, d = 0;
  do {
    var e = c2.nextSibling;
    a.removeChild(c2);
    if (e && 8 === e.nodeType) if (c2 = e.data, "/$" === c2) {
      if (0 === d) {
        a.removeChild(e);
        bd(b2);
        return;
      }
      d--;
    } else "$" !== c2 && "$?" !== c2 && "$!" !== c2 || d++;
    c2 = e;
  } while (c2);
  bd(b2);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b2 = a.nodeType;
    if (1 === b2 || 3 === b2) break;
    if (8 === b2) {
      b2 = a.data;
      if ("$" === b2 || "$!" === b2 || "$?" === b2) break;
      if ("/$" === b2) return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b2 = 0; a; ) {
    if (8 === a.nodeType) {
      var c2 = a.data;
      if ("$" === c2 || "$!" === c2 || "$?" === c2) {
        if (0 === b2) return a;
        b2--;
      } else "/$" === c2 && b2++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b2 = a[Of];
  if (b2) return b2;
  for (var c2 = a.parentNode; c2; ) {
    if (b2 = c2[uf] || c2[Of]) {
      c2 = b2.alternate;
      if (null !== b2.child || null !== c2 && null !== c2.child) for (a = Mf(a); null !== a; ) {
        if (c2 = a[Of]) return c2;
        a = Mf(a);
      }
      return b2;
    }
    a = c2;
    c2 = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(p(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a) {
  return { current: a };
}
function E(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a, b2) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b2;
}
var Vf = {}, H = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a, b2) {
  var c2 = a.type.contextTypes;
  if (!c2) return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b2) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {}, f2;
  for (f2 in c2) e[f2] = b2[f2];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b2, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b2, c2) {
  if (H.current !== Vf) throw Error(p(168));
  G(H, b2);
  G(Wf, c2);
}
function bg(a, b2, c2) {
  var d = a.stateNode;
  b2 = b2.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c2;
  d = d.getChildContext();
  for (var e in d) if (!(e in b2)) throw Error(p(108, Ra(a) || "Unknown", e));
  return A({}, c2, d);
}
function cg$1(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return true;
}
function dg$1(a, b2, c2) {
  var d = a.stateNode;
  if (!d) throw Error(p(169));
  c2 ? (a = bg(a, b2, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);
  G(Wf, c2);
}
var eg$1 = null, fg = false, gg = false;
function hg(a) {
  null === eg$1 ? eg$1 = [a] : eg$1.push(a);
}
function ig$1(a) {
  fg = true;
  hg(a);
}
function jg$1() {
  if (!gg && null !== eg$1) {
    gg = true;
    var a = 0, b2 = C$1;
    try {
      var c2 = eg$1;
      for (C$1 = 1; a < c2.length; a++) {
        var d = c2[a];
        do
          d = d(true);
        while (null !== d);
      }
      eg$1 = null;
      fg = false;
    } catch (e) {
      throw null !== eg$1 && (eg$1 = eg$1.slice(a + 1)), ac(fc, jg$1), e;
    } finally {
      C$1 = b2, gg = false;
    }
  }
  return null;
}
var kg$1 = [], lg$1 = 0, mg = null, ng$1 = 0, og$1 = [], pg = 0, qg$1 = null, rg$1 = 1, sg = "";
function tg$1(a, b2) {
  kg$1[lg$1++] = ng$1;
  kg$1[lg$1++] = mg;
  mg = a;
  ng$1 = b2;
}
function ug(a, b2, c2) {
  og$1[pg++] = rg$1;
  og$1[pg++] = sg;
  og$1[pg++] = qg$1;
  qg$1 = a;
  var d = rg$1;
  a = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c2 += 1;
  var f2 = 32 - oc(b2) + e;
  if (30 < f2) {
    var g = e - e % 5;
    f2 = (d & (1 << g) - 1).toString(32);
    d >>= g;
    e -= g;
    rg$1 = 1 << 32 - oc(b2) + e | c2 << e | d;
    sg = f2 + a;
  } else rg$1 = 1 << f2 | c2 << e | d, sg = a;
}
function vg$1(a) {
  null !== a.return && (tg$1(a, 1), ug(a, 1, 0));
}
function wg$1(a) {
  for (; a === mg; ) mg = kg$1[--lg$1], kg$1[lg$1] = null, ng$1 = kg$1[--lg$1], kg$1[lg$1] = null;
  for (; a === qg$1; ) qg$1 = og$1[--pg], og$1[pg] = null, sg = og$1[--pg], og$1[pg] = null, rg$1 = og$1[--pg], og$1[pg] = null;
}
var xg = null, yg = null, I$1 = false, zg$1 = null;
function Ag(a, b2) {
  var c2 = Bg(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.stateNode = b2;
  c2.return = a;
  b2 = a.deletions;
  null === b2 ? (a.deletions = [c2], a.flags |= 16) : b2.push(c2);
}
function Cg(a, b2) {
  switch (a.tag) {
    case 5:
      var c2 = a.type;
      b2 = 1 !== b2.nodeType || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return null !== b2 ? (a.stateNode = b2, xg = a, yg = Lf(b2.firstChild), true) : false;
    case 6:
      return b2 = "" === a.pendingProps || 3 !== b2.nodeType ? null : b2, null !== b2 ? (a.stateNode = b2, xg = a, yg = null, true) : false;
    case 13:
      return b2 = 8 !== b2.nodeType ? null : b2, null !== b2 ? (c2 = null !== qg$1 ? { id: rg$1, overflow: sg } : null, a.memoizedState = { dehydrated: b2, treeContext: c2, retryLane: 1073741824 }, c2 = Bg(18, null, null, 0), c2.stateNode = b2, c2.return = a, a.child = c2, xg = a, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg$1(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg$1(a) {
  if (I$1) {
    var b2 = yg;
    if (b2) {
      var c2 = b2;
      if (!Cg(a, b2)) {
        if (Dg$1(a)) throw Error(p(418));
        b2 = Lf(c2.nextSibling);
        var d = xg;
        b2 && Cg(a, b2) ? Ag(d, c2) : (a.flags = a.flags & -4097 | 2, I$1 = false, xg = a);
      }
    } else {
      if (Dg$1(a)) throw Error(p(418));
      a.flags = a.flags & -4097 | 2;
      I$1 = false;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; ) a = a.return;
  xg = a;
}
function Gg$1(a) {
  if (a !== xg) return false;
  if (!I$1) return Fg(a), I$1 = true, false;
  var b2;
  (b2 = 3 !== a.tag) && !(b2 = 5 !== a.tag) && (b2 = a.type, b2 = "head" !== b2 && "body" !== b2 && !Ef(a.type, a.memoizedProps));
  if (b2 && (b2 = yg)) {
    if (Dg$1(a)) throw Hg$1(), Error(p(418));
    for (; b2; ) Ag(a, b2), b2 = Lf(b2.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(p(317));
    a: {
      a = a.nextSibling;
      for (b2 = 0; a; ) {
        if (8 === a.nodeType) {
          var c2 = a.data;
          if ("/$" === c2) {
            if (0 === b2) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b2--;
          } else "$" !== c2 && "$!" !== c2 && "$?" !== c2 || b2++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return true;
}
function Hg$1() {
  for (var a = yg; a; ) a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I$1 = false;
}
function Jg$1(a) {
  null === zg$1 ? zg$1 = [a] : zg$1.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg$1(a, b2, c2) {
  a = c2.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (1 !== c2.tag) throw Error(p(309));
        var d = c2.stateNode;
      }
      if (!d) throw Error(p(147, a));
      var e = d, f2 = "" + a;
      if (null !== b2 && null !== b2.ref && "function" === typeof b2.ref && b2.ref._stringRef === f2) return b2.ref;
      b2 = function(a2) {
        var b3 = e.refs;
        null === a2 ? delete b3[f2] : b3[f2] = a2;
      };
      b2._stringRef = f2;
      return b2;
    }
    if ("string" !== typeof a) throw Error(p(284));
    if (!c2._owner) throw Error(p(290, a));
  }
  return a;
}
function Mg$1(a, b2) {
  a = Object.prototype.toString.call(b2);
  throw Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b2).join(", ") + "}" : a));
}
function Ng(a) {
  var b2 = a._init;
  return b2(a._payload);
}
function Og$1(a) {
  function b2(b3, c3) {
    if (a) {
      var d2 = b3.deletions;
      null === d2 ? (b3.deletions = [c3], b3.flags |= 16) : d2.push(c3);
    }
  }
  function c2(c3, d2) {
    if (!a) return null;
    for (; null !== d2; ) b2(c3, d2), d2 = d2.sibling;
    return null;
  }
  function d(a2, b3) {
    for (a2 = /* @__PURE__ */ new Map(); null !== b3; ) null !== b3.key ? a2.set(b3.key, b3) : a2.set(b3.index, b3), b3 = b3.sibling;
    return a2;
  }
  function e(a2, b3) {
    a2 = Pg$1(a2, b3);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b3, c3, d2) {
    b3.index = d2;
    if (!a) return b3.flags |= 1048576, c3;
    d2 = b3.alternate;
    if (null !== d2) return d2 = d2.index, d2 < c3 ? (b3.flags |= 2, c3) : d2;
    b3.flags |= 2;
    return c3;
  }
  function g(b3) {
    a && null === b3.alternate && (b3.flags |= 2);
    return b3;
  }
  function h2(a2, b3, c3, d2) {
    if (null === b3 || 6 !== b3.tag) return b3 = Qg$1(c3, a2.mode, d2), b3.return = a2, b3;
    b3 = e(b3, c3);
    b3.return = a2;
    return b3;
  }
  function k2(a2, b3, c3, d2) {
    var f3 = c3.type;
    if (f3 === ya) return m2(a2, b3, c3.props.children, d2, c3.key);
    if (null !== b3 && (b3.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && Ng(f3) === b3.type)) return d2 = e(b3, c3.props), d2.ref = Lg$1(a2, b3, c3), d2.return = a2, d2;
    d2 = Rg(c3.type, c3.key, c3.props, null, a2.mode, d2);
    d2.ref = Lg$1(a2, b3, c3);
    d2.return = a2;
    return d2;
  }
  function l2(a2, b3, c3, d2) {
    if (null === b3 || 4 !== b3.tag || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation) return b3 = Sg$1(c3, a2.mode, d2), b3.return = a2, b3;
    b3 = e(b3, c3.children || []);
    b3.return = a2;
    return b3;
  }
  function m2(a2, b3, c3, d2, f3) {
    if (null === b3 || 7 !== b3.tag) return b3 = Tg(c3, a2.mode, d2, f3), b3.return = a2, b3;
    b3 = e(b3, c3);
    b3.return = a2;
    return b3;
  }
  function q2(a2, b3, c3) {
    if ("string" === typeof b3 && "" !== b3 || "number" === typeof b3) return b3 = Qg$1("" + b3, a2.mode, c3), b3.return = a2, b3;
    if ("object" === typeof b3 && null !== b3) {
      switch (b3.$$typeof) {
        case va:
          return c3 = Rg(b3.type, b3.key, b3.props, null, a2.mode, c3), c3.ref = Lg$1(a2, null, b3), c3.return = a2, c3;
        case wa:
          return b3 = Sg$1(b3, a2.mode, c3), b3.return = a2, b3;
        case Ha:
          var d2 = b3._init;
          return q2(a2, d2(b3._payload), c3);
      }
      if (eb(b3) || Ka(b3)) return b3 = Tg(b3, a2.mode, c3, null), b3.return = a2, b3;
      Mg$1(a2, b3);
    }
    return null;
  }
  function r2(a2, b3, c3, d2) {
    var e2 = null !== b3 ? b3.key : null;
    if ("string" === typeof c3 && "" !== c3 || "number" === typeof c3) return null !== e2 ? null : h2(a2, b3, "" + c3, d2);
    if ("object" === typeof c3 && null !== c3) {
      switch (c3.$$typeof) {
        case va:
          return c3.key === e2 ? k2(a2, b3, c3, d2) : null;
        case wa:
          return c3.key === e2 ? l2(a2, b3, c3, d2) : null;
        case Ha:
          return e2 = c3._init, r2(
            a2,
            b3,
            e2(c3._payload),
            d2
          );
      }
      if (eb(c3) || Ka(c3)) return null !== e2 ? null : m2(a2, b3, c3, d2, null);
      Mg$1(a2, c3);
    }
    return null;
  }
  function y2(a2, b3, c3, d2, e2) {
    if ("string" === typeof d2 && "" !== d2 || "number" === typeof d2) return a2 = a2.get(c3) || null, h2(b3, a2, "" + d2, e2);
    if ("object" === typeof d2 && null !== d2) {
      switch (d2.$$typeof) {
        case va:
          return a2 = a2.get(null === d2.key ? c3 : d2.key) || null, k2(b3, a2, d2, e2);
        case wa:
          return a2 = a2.get(null === d2.key ? c3 : d2.key) || null, l2(b3, a2, d2, e2);
        case Ha:
          var f3 = d2._init;
          return y2(a2, b3, c3, f3(d2._payload), e2);
      }
      if (eb(d2) || Ka(d2)) return a2 = a2.get(c3) || null, m2(b3, a2, d2, e2, null);
      Mg$1(b3, d2);
    }
    return null;
  }
  function n2(e2, g2, h3, k3) {
    for (var l3 = null, m3 = null, u2 = g2, w2 = g2 = 0, x2 = null; null !== u2 && w2 < h3.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e2, u2, h3[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a && u2 && null === n3.alternate && b2(e2, u2);
      g2 = f2(n3, g2, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h3.length) return c2(e2, u2), I$1 && tg$1(e2, w2), l3;
    if (null === u2) {
      for (; w2 < h3.length; w2++) u2 = q2(e2, h3[w2], k3), null !== u2 && (g2 = f2(u2, g2, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I$1 && tg$1(e2, w2);
      return l3;
    }
    for (u2 = d(e2, u2); w2 < h3.length; w2++) x2 = y2(u2, e2, w2, h3[w2], k3), null !== x2 && (a && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g2 = f2(x2, g2, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a && u2.forEach(function(a2) {
      return b2(e2, a2);
    });
    I$1 && tg$1(e2, w2);
    return l3;
  }
  function t2(e2, g2, h3, k3) {
    var l3 = Ka(h3);
    if ("function" !== typeof l3) throw Error(p(150));
    h3 = l3.call(h3);
    if (null == h3) throw Error(p(151));
    for (var u2 = l3 = null, m3 = g2, w2 = g2 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e2, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a && m3 && null === t3.alternate && b2(e2, m3);
      g2 = f2(t3, g2, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done) return c2(
      e2,
      m3
    ), I$1 && tg$1(e2, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h3.next()) n3 = q2(e2, n3.value, k3), null !== n3 && (g2 = f2(n3, g2, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I$1 && tg$1(e2, w2);
      return l3;
    }
    for (m3 = d(e2, m3); !n3.done; w2++, n3 = h3.next()) n3 = y2(m3, e2, w2, n3.value, k3), null !== n3 && (a && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g2 = f2(n3, g2, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a && m3.forEach(function(a2) {
      return b2(e2, a2);
    });
    I$1 && tg$1(e2, w2);
    return l3;
  }
  function J2(a2, d2, f3, h3) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d2; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c2(a2, l3.sibling);
                    d2 = e(l3, f3.props.children);
                    d2.return = a2;
                    a2 = d2;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && Ng(k3) === l3.type) {
                  c2(a2, l3.sibling);
                  d2 = e(l3, f3.props);
                  d2.ref = Lg$1(a2, l3, f3);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                }
                c2(a2, l3);
                break;
              } else b2(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d2 = Tg(f3.props.children, a2.mode, h3, f3.key), d2.return = a2, a2 = d2) : (h3 = Rg(f3.type, f3.key, f3.props, null, a2.mode, h3), h3.ref = Lg$1(a2, d2, f3), h3.return = a2, a2 = h3);
          }
          return g(a2);
        case wa:
          a: {
            for (l3 = f3.key; null !== d2; ) {
              if (d2.key === l3) if (4 === d2.tag && d2.stateNode.containerInfo === f3.containerInfo && d2.stateNode.implementation === f3.implementation) {
                c2(a2, d2.sibling);
                d2 = e(d2, f3.children || []);
                d2.return = a2;
                a2 = d2;
                break a;
              } else {
                c2(a2, d2);
                break;
              }
              else b2(a2, d2);
              d2 = d2.sibling;
            }
            d2 = Sg$1(f3, a2.mode, h3);
            d2.return = a2;
            a2 = d2;
          }
          return g(a2);
        case Ha:
          return l3 = f3._init, J2(a2, d2, l3(f3._payload), h3);
      }
      if (eb(f3)) return n2(a2, d2, f3, h3);
      if (Ka(f3)) return t2(a2, d2, f3, h3);
      Mg$1(a2, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d2 && 6 === d2.tag ? (c2(a2, d2.sibling), d2 = e(d2, f3), d2.return = a2, a2 = d2) : (c2(a2, d2), d2 = Qg$1(f3, a2.mode, h3), d2.return = a2, a2 = d2), g(a2)) : c2(a2, d2);
  }
  return J2;
}
var Ug$1 = Og$1(true), Vg = Og$1(false), Wg = Uf(null), Xg = null, Yg$1 = null, Zg = null;
function $g$1() {
  Zg = Yg$1 = Xg = null;
}
function ah(a) {
  var b2 = Wg.current;
  E(Wg);
  a._currentValue = b2;
}
function bh(a, b2, c2) {
  for (; null !== a; ) {
    var d = a.alternate;
    (a.childLanes & b2) !== b2 ? (a.childLanes |= b2, null !== d && (d.childLanes |= b2)) : null !== d && (d.childLanes & b2) !== b2 && (d.childLanes |= b2);
    if (a === c2) break;
    a = a.return;
  }
}
function ch(a, b2) {
  Xg = a;
  Zg = Yg$1 = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b2) && (dh = true), a.firstContext = null);
}
function eh(a) {
  var b2 = a._currentValue;
  if (Zg !== a) if (a = { context: a, memoizedValue: b2, next: null }, null === Yg$1) {
    if (null === Xg) throw Error(p(308));
    Yg$1 = a;
    Xg.dependencies = { lanes: 0, firstContext: a };
  } else Yg$1 = Yg$1.next = a;
  return b2;
}
var fh = null;
function gh(a) {
  null === fh ? fh = [a] : fh.push(a);
}
function hh(a, b2, c2, d) {
  var e = b2.interleaved;
  null === e ? (c2.next = c2, gh(b2)) : (c2.next = e.next, e.next = c2);
  b2.interleaved = c2;
  return ih(a, d);
}
function ih(a, b2) {
  a.lanes |= b2;
  var c2 = a.alternate;
  null !== c2 && (c2.lanes |= b2);
  c2 = a;
  for (a = a.return; null !== a; ) a.childLanes |= b2, c2 = a.alternate, null !== c2 && (c2.childLanes |= b2), c2 = a, a = a.return;
  return 3 === c2.tag ? c2.stateNode : null;
}
var jh = false;
function kh(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function lh(a, b2) {
  a = a.updateQueue;
  b2.updateQueue === a && (b2.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function mh(a, b2) {
  return { eventTime: a, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function nh(a, b2, c2) {
  var d = a.updateQueue;
  if (null === d) return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? b2.next = b2 : (b2.next = e.next, e.next = b2);
    d.pending = b2;
    return ih(a, c2);
  }
  e = d.interleaved;
  null === e ? (b2.next = b2, gh(d)) : (b2.next = e.next, e.next = b2);
  d.interleaved = b2;
  return ih(a, c2);
}
function oh(a, b2, c2) {
  b2 = b2.updateQueue;
  if (null !== b2 && (b2 = b2.shared, 0 !== (c2 & 4194240))) {
    var d = b2.lanes;
    d &= a.pendingLanes;
    c2 |= d;
    b2.lanes = c2;
    Cc(a, c2);
  }
}
function ph(a, b2) {
  var c2 = a.updateQueue, d = a.alternate;
  if (null !== d && (d = d.updateQueue, c2 === d)) {
    var e = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (null !== c2) {
      do {
        var g = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        null === f2 ? e = f2 = g : f2 = f2.next = g;
        c2 = c2.next;
      } while (null !== c2);
      null === f2 ? e = f2 = b2 : f2 = f2.next = b2;
    } else e = f2 = b2;
    c2 = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f2, shared: d.shared, effects: d.effects };
    a.updateQueue = c2;
    return;
  }
  a = c2.lastBaseUpdate;
  null === a ? c2.firstBaseUpdate = b2 : a.next = b2;
  c2.lastBaseUpdate = b2;
}
function qh(a, b2, c2, d) {
  var e = a.updateQueue;
  jh = false;
  var f2 = e.firstBaseUpdate, g = e.lastBaseUpdate, h2 = e.shared.pending;
  if (null !== h2) {
    e.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    null === g ? f2 = l2 : g.next = l2;
    g = k2;
    var m2 = a.alternate;
    null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g && (null === h2 ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e.baseState;
    g = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var r2 = h2.lane, y2 = h2.eventTime;
      if ((d & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a, t2 = h2;
          r2 = b2;
          y2 = c2;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2) break a;
              q2 = A({}, q2, r2);
              break a;
            case 2:
              jh = true;
          }
        }
        null !== h2.callback && 0 !== h2.lane && (a.flags |= 64, r2 = e.effects, null === r2 ? e.effects = [h2] : r2.push(h2));
      } else y2 = { eventTime: y2, lane: r2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g |= r2;
      h2 = h2.next;
      if (null === h2) if (h2 = e.shared.pending, null === h2) break;
      else r2 = h2, h2 = r2.next, r2.next = null, e.lastBaseUpdate = r2, e.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e.baseState = k2;
    e.firstBaseUpdate = l2;
    e.lastBaseUpdate = m2;
    b2 = e.shared.interleaved;
    if (null !== b2) {
      e = b2;
      do
        g |= e.lane, e = e.next;
      while (e !== b2);
    } else null === f2 && (e.shared.lanes = 0);
    rh |= g;
    a.lanes = g;
    a.memoizedState = q2;
  }
}
function sh(a, b2, c2) {
  a = b2.effects;
  b2.effects = null;
  if (null !== a) for (b2 = 0; b2 < a.length; b2++) {
    var d = a[b2], e = d.callback;
    if (null !== e) {
      d.callback = null;
      d = c2;
      if ("function" !== typeof e) throw Error(p(191, e));
      e.call(d);
    }
  }
}
var th = {}, uh = Uf(th), vh = Uf(th), wh = Uf(th);
function xh(a) {
  if (a === th) throw Error(p(174));
  return a;
}
function yh(a, b2) {
  G(wh, b2);
  G(vh, a);
  G(uh, th);
  a = b2.nodeType;
  switch (a) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b2.parentNode : b2, b2 = a.namespaceURI || null, a = a.tagName, b2 = lb(b2, a);
  }
  E(uh);
  G(uh, b2);
}
function zh() {
  E(uh);
  E(vh);
  E(wh);
}
function Ah(a) {
  xh(wh.current);
  var b2 = xh(uh.current);
  var c2 = lb(b2, a.type);
  b2 !== c2 && (G(vh, a), G(uh, c2));
}
function Bh(a) {
  vh.current === a && (E(uh), E(vh));
}
var L = Uf(0);
function Ch(a) {
  for (var b2 = a; null !== b2; ) {
    if (13 === b2.tag) {
      var c2 = b2.memoizedState;
      if (null !== c2 && (c2 = c2.dehydrated, null === c2 || "$?" === c2.data || "$!" === c2.data)) return b2;
    } else if (19 === b2.tag && void 0 !== b2.memoizedProps.revealOrder) {
      if (0 !== (b2.flags & 128)) return b2;
    } else if (null !== b2.child) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a) break;
    for (; null === b2.sibling; ) {
      if (null === b2.return || b2.return === a) return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var Dh = [];
function Eh() {
  for (var a = 0; a < Dh.length; a++) Dh[a]._workInProgressVersionPrimary = null;
  Dh.length = 0;
}
var Fh = ua.ReactCurrentDispatcher, Gh = ua.ReactCurrentBatchConfig, Hh = 0, M$1 = null, N = null, O = null, Ih = false, Jh = false, Kh = 0, Lh = 0;
function P$1() {
  throw Error(p(321));
}
function Mh(a, b2) {
  if (null === b2) return false;
  for (var c2 = 0; c2 < b2.length && c2 < a.length; c2++) if (!He(a[c2], b2[c2])) return false;
  return true;
}
function Nh(a, b2, c2, d, e, f2) {
  Hh = f2;
  M$1 = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  Fh.current = null === a || null === a.memoizedState ? Oh : Ph;
  a = c2(d, e);
  if (Jh) {
    f2 = 0;
    do {
      Jh = false;
      Kh = 0;
      if (25 <= f2) throw Error(p(301));
      f2 += 1;
      O = N = null;
      b2.updateQueue = null;
      Fh.current = Qh;
      a = c2(d, e);
    } while (Jh);
  }
  Fh.current = Rh;
  b2 = null !== N && null !== N.next;
  Hh = 0;
  O = N = M$1 = null;
  Ih = false;
  if (b2) throw Error(p(300));
  return a;
}
function Sh() {
  var a = 0 !== Kh;
  Kh = 0;
  return a;
}
function Th() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === O ? M$1.memoizedState = O = a : O = O.next = a;
  return O;
}
function Uh() {
  if (null === N) {
    var a = M$1.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = N.next;
  var b2 = null === O ? M$1.memoizedState : O.next;
  if (null !== b2) O = b2, N = a;
  else {
    if (null === a) throw Error(p(310));
    N = a;
    a = { memoizedState: N.memoizedState, baseState: N.baseState, baseQueue: N.baseQueue, queue: N.queue, next: null };
    null === O ? M$1.memoizedState = O = a : O = O.next = a;
  }
  return O;
}
function Vh(a, b2) {
  return "function" === typeof b2 ? b2(a) : b2;
}
function Wh(a) {
  var b2 = Uh(), c2 = b2.queue;
  if (null === c2) throw Error(p(311));
  c2.lastRenderedReducer = a;
  var d = N, e = d.baseQueue, f2 = c2.pending;
  if (null !== f2) {
    if (null !== e) {
      var g = e.next;
      e.next = f2.next;
      f2.next = g;
    }
    d.baseQueue = e = f2;
    c2.pending = null;
  }
  if (null !== e) {
    f2 = e.next;
    d = d.baseState;
    var h2 = g = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Hh & m2) === m2) null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d = l2.hasEagerState ? l2.eagerState : a(d, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h2 = k2 = q2, g = d) : k2 = k2.next = q2;
        M$1.lanes |= m2;
        rh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g = d : k2.next = h2;
    He(d, b2.memoizedState) || (dh = true);
    b2.memoizedState = d;
    b2.baseState = g;
    b2.baseQueue = k2;
    c2.lastRenderedState = d;
  }
  a = c2.interleaved;
  if (null !== a) {
    e = a;
    do
      f2 = e.lane, M$1.lanes |= f2, rh |= f2, e = e.next;
    while (e !== a);
  } else null === e && (c2.lanes = 0);
  return [b2.memoizedState, c2.dispatch];
}
function Xh(a) {
  var b2 = Uh(), c2 = b2.queue;
  if (null === c2) throw Error(p(311));
  c2.lastRenderedReducer = a;
  var d = c2.dispatch, e = c2.pending, f2 = b2.memoizedState;
  if (null !== e) {
    c2.pending = null;
    var g = e = e.next;
    do
      f2 = a(f2, g.action), g = g.next;
    while (g !== e);
    He(f2, b2.memoizedState) || (dh = true);
    b2.memoizedState = f2;
    null === b2.baseQueue && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d];
}
function Yh() {
}
function Zh(a, b2) {
  var c2 = M$1, d = Uh(), e = b2(), f2 = !He(d.memoizedState, e);
  f2 && (d.memoizedState = e, dh = true);
  d = d.queue;
  $h(ai$1.bind(null, c2, d, a), [a]);
  if (d.getSnapshot !== b2 || f2 || null !== O && O.memoizedState.tag & 1) {
    c2.flags |= 2048;
    bi$1(9, ci$1.bind(null, c2, d, e, b2), void 0, null);
    if (null === Q) throw Error(p(349));
    0 !== (Hh & 30) || di$1(c2, b2, e);
  }
  return e;
}
function di$1(a, b2, c2) {
  a.flags |= 16384;
  a = { getSnapshot: b2, value: c2 };
  b2 = M$1.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, M$1.updateQueue = b2, b2.stores = [a]) : (c2 = b2.stores, null === c2 ? b2.stores = [a] : c2.push(a));
}
function ci$1(a, b2, c2, d) {
  b2.value = c2;
  b2.getSnapshot = d;
  ei$1(b2) && fi$1(a);
}
function ai$1(a, b2, c2) {
  return c2(function() {
    ei$1(b2) && fi$1(a);
  });
}
function ei$1(a) {
  var b2 = a.getSnapshot;
  a = a.value;
  try {
    var c2 = b2();
    return !He(a, c2);
  } catch (d) {
    return true;
  }
}
function fi$1(a) {
  var b2 = ih(a, 1);
  null !== b2 && gi$1(b2, a, 1, -1);
}
function hi$1(a) {
  var b2 = Th();
  "function" === typeof a && (a = a());
  b2.memoizedState = b2.baseState = a;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Vh, lastRenderedState: a };
  b2.queue = a;
  a = a.dispatch = ii$1.bind(null, M$1, a);
  return [b2.memoizedState, a];
}
function bi$1(a, b2, c2, d) {
  a = { tag: a, create: b2, destroy: c2, deps: d, next: null };
  b2 = M$1.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, M$1.updateQueue = b2, b2.lastEffect = a.next = a) : (c2 = b2.lastEffect, null === c2 ? b2.lastEffect = a.next = a : (d = c2.next, c2.next = a, a.next = d, b2.lastEffect = a));
  return a;
}
function ji$1() {
  return Uh().memoizedState;
}
function ki$1(a, b2, c2, d) {
  var e = Th();
  M$1.flags |= a;
  e.memoizedState = bi$1(1 | b2, c2, void 0, void 0 === d ? null : d);
}
function li$1(a, b2, c2, d) {
  var e = Uh();
  d = void 0 === d ? null : d;
  var f2 = void 0;
  if (null !== N) {
    var g = N.memoizedState;
    f2 = g.destroy;
    if (null !== d && Mh(d, g.deps)) {
      e.memoizedState = bi$1(b2, c2, f2, d);
      return;
    }
  }
  M$1.flags |= a;
  e.memoizedState = bi$1(1 | b2, c2, f2, d);
}
function mi$1(a, b2) {
  return ki$1(8390656, 8, a, b2);
}
function $h(a, b2) {
  return li$1(2048, 8, a, b2);
}
function ni$1(a, b2) {
  return li$1(4, 2, a, b2);
}
function oi$1(a, b2) {
  return li$1(4, 4, a, b2);
}
function pi$1(a, b2) {
  if ("function" === typeof b2) return a = a(), b2(a), function() {
    b2(null);
  };
  if (null !== b2 && void 0 !== b2) return a = a(), b2.current = a, function() {
    b2.current = null;
  };
}
function qi$1(a, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a]) : null;
  return li$1(4, 4, pi$1.bind(null, b2, a), c2);
}
function ri$1() {
}
function si$1(a, b2) {
  var c2 = Uh();
  b2 = void 0 === b2 ? null : b2;
  var d = c2.memoizedState;
  if (null !== d && null !== b2 && Mh(b2, d[1])) return d[0];
  c2.memoizedState = [a, b2];
  return a;
}
function ti$1(a, b2) {
  var c2 = Uh();
  b2 = void 0 === b2 ? null : b2;
  var d = c2.memoizedState;
  if (null !== d && null !== b2 && Mh(b2, d[1])) return d[0];
  a = a();
  c2.memoizedState = [a, b2];
  return a;
}
function ui$1(a, b2, c2) {
  if (0 === (Hh & 21)) return a.baseState && (a.baseState = false, dh = true), a.memoizedState = c2;
  He(c2, b2) || (c2 = yc(), M$1.lanes |= c2, rh |= c2, a.baseState = true);
  return b2;
}
function vi$1(a, b2) {
  var c2 = C$1;
  C$1 = 0 !== c2 && 4 > c2 ? c2 : 4;
  a(true);
  var d = Gh.transition;
  Gh.transition = {};
  try {
    a(false), b2();
  } finally {
    C$1 = c2, Gh.transition = d;
  }
}
function wi$1() {
  return Uh().memoizedState;
}
function xi$1(a, b2, c2) {
  var d = yi$1(a);
  c2 = { lane: d, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (zi$1(a)) Ai$1(b2, c2);
  else if (c2 = hh(a, b2, c2, d), null !== c2) {
    var e = R();
    gi$1(c2, a, d, e);
    Bi$1(c2, b2, d);
  }
}
function ii$1(a, b2, c2) {
  var d = yi$1(a), e = { lane: d, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (zi$1(a)) Ai$1(b2, e);
  else {
    var f2 = a.alternate;
    if (0 === a.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b2.lastRenderedReducer, null !== f2)) try {
      var g = b2.lastRenderedState, h2 = f2(g, c2);
      e.hasEagerState = true;
      e.eagerState = h2;
      if (He(h2, g)) {
        var k2 = b2.interleaved;
        null === k2 ? (e.next = e, gh(b2)) : (e.next = k2.next, k2.next = e);
        b2.interleaved = e;
        return;
      }
    } catch (l2) {
    } finally {
    }
    c2 = hh(a, b2, e, d);
    null !== c2 && (e = R(), gi$1(c2, a, d, e), Bi$1(c2, b2, d));
  }
}
function zi$1(a) {
  var b2 = a.alternate;
  return a === M$1 || null !== b2 && b2 === M$1;
}
function Ai$1(a, b2) {
  Jh = Ih = true;
  var c2 = a.pending;
  null === c2 ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
  a.pending = b2;
}
function Bi$1(a, b2, c2) {
  if (0 !== (c2 & 4194240)) {
    var d = b2.lanes;
    d &= a.pendingLanes;
    c2 |= d;
    b2.lanes = c2;
    Cc(a, c2);
  }
}
var Rh = { readContext: eh, useCallback: P$1, useContext: P$1, useEffect: P$1, useImperativeHandle: P$1, useInsertionEffect: P$1, useLayoutEffect: P$1, useMemo: P$1, useReducer: P$1, useRef: P$1, useState: P$1, useDebugValue: P$1, useDeferredValue: P$1, useTransition: P$1, useMutableSource: P$1, useSyncExternalStore: P$1, useId: P$1, unstable_isNewReconciler: false }, Oh = { readContext: eh, useCallback: function(a, b2) {
  Th().memoizedState = [a, void 0 === b2 ? null : b2];
  return a;
}, useContext: eh, useEffect: mi$1, useImperativeHandle: function(a, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a]) : null;
  return ki$1(
    4194308,
    4,
    pi$1.bind(null, b2, a),
    c2
  );
}, useLayoutEffect: function(a, b2) {
  return ki$1(4194308, 4, a, b2);
}, useInsertionEffect: function(a, b2) {
  return ki$1(4, 2, a, b2);
}, useMemo: function(a, b2) {
  var c2 = Th();
  b2 = void 0 === b2 ? null : b2;
  a = a();
  c2.memoizedState = [a, b2];
  return a;
}, useReducer: function(a, b2, c2) {
  var d = Th();
  b2 = void 0 !== c2 ? c2(b2) : b2;
  d.memoizedState = d.baseState = b2;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b2 };
  d.queue = a;
  a = a.dispatch = xi$1.bind(null, M$1, a);
  return [d.memoizedState, a];
}, useRef: function(a) {
  var b2 = Th();
  a = { current: a };
  return b2.memoizedState = a;
}, useState: hi$1, useDebugValue: ri$1, useDeferredValue: function(a) {
  return Th().memoizedState = a;
}, useTransition: function() {
  var a = hi$1(false), b2 = a[0];
  a = vi$1.bind(null, a[1]);
  Th().memoizedState = a;
  return [b2, a];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a, b2, c2) {
  var d = M$1, e = Th();
  if (I$1) {
    if (void 0 === c2) throw Error(p(407));
    c2 = c2();
  } else {
    c2 = b2();
    if (null === Q) throw Error(p(349));
    0 !== (Hh & 30) || di$1(d, b2, c2);
  }
  e.memoizedState = c2;
  var f2 = { value: c2, getSnapshot: b2 };
  e.queue = f2;
  mi$1(ai$1.bind(
    null,
    d,
    f2,
    a
  ), [a]);
  d.flags |= 2048;
  bi$1(9, ci$1.bind(null, d, f2, c2, b2), void 0, null);
  return c2;
}, useId: function() {
  var a = Th(), b2 = Q.identifierPrefix;
  if (I$1) {
    var c2 = sg;
    var d = rg$1;
    c2 = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c2;
    b2 = ":" + b2 + "R" + c2;
    c2 = Kh++;
    0 < c2 && (b2 += "H" + c2.toString(32));
    b2 += ":";
  } else c2 = Lh++, b2 = ":" + b2 + "r" + c2.toString(32) + ":";
  return a.memoizedState = b2;
}, unstable_isNewReconciler: false }, Ph = {
  readContext: eh,
  useCallback: si$1,
  useContext: eh,
  useEffect: $h,
  useImperativeHandle: qi$1,
  useInsertionEffect: ni$1,
  useLayoutEffect: oi$1,
  useMemo: ti$1,
  useReducer: Wh,
  useRef: ji$1,
  useState: function() {
    return Wh(Vh);
  },
  useDebugValue: ri$1,
  useDeferredValue: function(a) {
    var b2 = Uh();
    return ui$1(b2, N.memoizedState, a);
  },
  useTransition: function() {
    var a = Wh(Vh)[0], b2 = Uh().memoizedState;
    return [a, b2];
  },
  useMutableSource: Yh,
  useSyncExternalStore: Zh,
  useId: wi$1,
  unstable_isNewReconciler: false
}, Qh = { readContext: eh, useCallback: si$1, useContext: eh, useEffect: $h, useImperativeHandle: qi$1, useInsertionEffect: ni$1, useLayoutEffect: oi$1, useMemo: ti$1, useReducer: Xh, useRef: ji$1, useState: function() {
  return Xh(Vh);
}, useDebugValue: ri$1, useDeferredValue: function(a) {
  var b2 = Uh();
  return null === N ? b2.memoizedState = a : ui$1(b2, N.memoizedState, a);
}, useTransition: function() {
  var a = Xh(Vh)[0], b2 = Uh().memoizedState;
  return [a, b2];
}, useMutableSource: Yh, useSyncExternalStore: Zh, useId: wi$1, unstable_isNewReconciler: false };
function Ci$1(a, b2) {
  if (a && a.defaultProps) {
    b2 = A({}, b2);
    a = a.defaultProps;
    for (var c2 in a) void 0 === b2[c2] && (b2[c2] = a[c2]);
    return b2;
  }
  return b2;
}
function Di$1(a, b2, c2, d) {
  b2 = a.memoizedState;
  c2 = c2(d, b2);
  c2 = null === c2 || void 0 === c2 ? b2 : A({}, b2, c2);
  a.memoizedState = c2;
  0 === a.lanes && (a.updateQueue.baseState = c2);
}
var Ei$1 = { isMounted: function(a) {
  return (a = a._reactInternals) ? Vb(a) === a : false;
}, enqueueSetState: function(a, b2, c2) {
  a = a._reactInternals;
  var d = R(), e = yi$1(a), f2 = mh(d, e);
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = nh(a, f2, e);
  null !== b2 && (gi$1(b2, a, e, d), oh(b2, a, e));
}, enqueueReplaceState: function(a, b2, c2) {
  a = a._reactInternals;
  var d = R(), e = yi$1(a), f2 = mh(d, e);
  f2.tag = 1;
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = nh(a, f2, e);
  null !== b2 && (gi$1(b2, a, e, d), oh(b2, a, e));
}, enqueueForceUpdate: function(a, b2) {
  a = a._reactInternals;
  var c2 = R(), d = yi$1(a), e = mh(c2, d);
  e.tag = 2;
  void 0 !== b2 && null !== b2 && (e.callback = b2);
  b2 = nh(a, e, d);
  null !== b2 && (gi$1(b2, a, d, c2), oh(b2, a, d));
} };
function Fi$1(a, b2, c2, d, e, f2, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f2, g) : b2.prototype && b2.prototype.isPureReactComponent ? !Ie(c2, d) || !Ie(e, f2) : true;
}
function Gi$1(a, b2, c2) {
  var d = false, e = Vf;
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = eh(f2) : (e = Zf(b2) ? Xf : H.current, d = b2.contextTypes, f2 = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);
  b2 = new b2(c2, f2);
  a.memoizedState = null !== b2.state && void 0 !== b2.state ? b2.state : null;
  b2.updater = Ei$1;
  a.stateNode = b2;
  b2._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function Hi$1(a, b2, c2, d) {
  a = b2.state;
  "function" === typeof b2.componentWillReceiveProps && b2.componentWillReceiveProps(c2, d);
  "function" === typeof b2.UNSAFE_componentWillReceiveProps && b2.UNSAFE_componentWillReceiveProps(c2, d);
  b2.state !== a && Ei$1.enqueueReplaceState(b2, b2.state, null);
}
function Ii$1(a, b2, c2, d) {
  var e = a.stateNode;
  e.props = c2;
  e.state = a.memoizedState;
  e.refs = {};
  kh(a);
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? e.context = eh(f2) : (f2 = Zf(b2) ? Xf : H.current, e.context = Yf(a, f2));
  e.state = a.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  "function" === typeof f2 && (Di$1(a, b2, f2, c2), e.state = a.memoizedState);
  "function" === typeof b2.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b2 = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b2 !== e.state && Ei$1.enqueueReplaceState(e, e.state, null), qh(a, c2, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function Ji$1(a, b2) {
  try {
    var c2 = "", d = b2;
    do
      c2 += Pa(d), d = d.return;
    while (d);
    var e = c2;
  } catch (f2) {
    e = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b2, stack: e, digest: null };
}
function Ki$1(a, b2, c2) {
  return { value: a, source: null, stack: null != c2 ? c2 : null, digest: null != b2 ? b2 : null };
}
function Li$1(a, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var Mi$1 = "function" === typeof WeakMap ? WeakMap : Map;
function Ni$1(a, b2, c2) {
  c2 = mh(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d = b2.value;
  c2.callback = function() {
    Oi$1 || (Oi$1 = true, Pi$1 = d);
    Li$1(a, b2);
  };
  return c2;
}
function Qi$1(a, b2, c2) {
  c2 = mh(-1, c2);
  c2.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b2.value;
    c2.payload = function() {
      return d(e);
    };
    c2.callback = function() {
      Li$1(a, b2);
    };
  }
  var f2 = a.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c2.callback = function() {
    Li$1(a, b2);
    "function" !== typeof d && (null === Ri$1 ? Ri$1 = /* @__PURE__ */ new Set([this]) : Ri$1.add(this));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: null !== c3 ? c3 : "" });
  });
  return c2;
}
function Si$1(a, b2, c2) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Mi$1();
    var e = /* @__PURE__ */ new Set();
    d.set(b2, e);
  } else e = d.get(b2), void 0 === e && (e = /* @__PURE__ */ new Set(), d.set(b2, e));
  e.has(c2) || (e.add(c2), a = Ti$1.bind(null, a, b2, c2), b2.then(a, a));
}
function Ui$1(a) {
  do {
    var b2;
    if (b2 = 13 === a.tag) b2 = a.memoizedState, b2 = null !== b2 ? null !== b2.dehydrated ? true : false : true;
    if (b2) return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Vi$1(a, b2, c2, d, e) {
  if (0 === (a.mode & 1)) return a === b2 ? a.flags |= 65536 : (a.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, 1 === c2.tag && (null === c2.alternate ? c2.tag = 17 : (b2 = mh(-1, 1), b2.tag = 2, nh(c2, b2, 1))), c2.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Wi$1 = ua.ReactCurrentOwner, dh = false;
function Xi$1(a, b2, c2, d) {
  b2.child = null === a ? Vg(b2, null, c2, d) : Ug$1(b2, a.child, c2, d);
}
function Yi$1(a, b2, c2, d, e) {
  c2 = c2.render;
  var f2 = b2.ref;
  ch(b2, e);
  d = Nh(a, b2, c2, d, f2, e);
  c2 = Sh();
  if (null !== a && !dh) return b2.updateQueue = a.updateQueue, b2.flags &= -2053, a.lanes &= ~e, Zi$1(a, b2, e);
  I$1 && c2 && vg$1(b2);
  b2.flags |= 1;
  Xi$1(a, b2, d, e);
  return b2.child;
}
function $i$1(a, b2, c2, d, e) {
  if (null === a) {
    var f2 = c2.type;
    if ("function" === typeof f2 && !aj(f2) && void 0 === f2.defaultProps && null === c2.compare && void 0 === c2.defaultProps) return b2.tag = 15, b2.type = f2, bj(a, b2, f2, d, e);
    a = Rg(c2.type, null, d, b2, b2.mode, e);
    a.ref = b2.ref;
    a.return = b2;
    return b2.child = a;
  }
  f2 = a.child;
  if (0 === (a.lanes & e)) {
    var g = f2.memoizedProps;
    c2 = c2.compare;
    c2 = null !== c2 ? c2 : Ie;
    if (c2(g, d) && a.ref === b2.ref) return Zi$1(a, b2, e);
  }
  b2.flags |= 1;
  a = Pg$1(f2, d);
  a.ref = b2.ref;
  a.return = b2;
  return b2.child = a;
}
function bj(a, b2, c2, d, e) {
  if (null !== a) {
    var f2 = a.memoizedProps;
    if (Ie(f2, d) && a.ref === b2.ref) if (dh = false, b2.pendingProps = d = f2, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && (dh = true);
    else return b2.lanes = a.lanes, Zi$1(a, b2, e);
  }
  return cj(a, b2, c2, d, e);
}
function dj(a, b2, c2) {
  var d = b2.pendingProps, e = d.children, f2 = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode) if (0 === (b2.mode & 1)) b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(ej, fj), fj |= c2;
  else {
    if (0 === (c2 & 1073741824)) return a = null !== f2 ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, b2.updateQueue = null, G(ej, fj), fj |= a, null;
    b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
    d = null !== f2 ? f2.baseLanes : c2;
    G(ej, fj);
    fj |= d;
  }
  else null !== f2 ? (d = f2.baseLanes | c2, b2.memoizedState = null) : d = c2, G(ej, fj), fj |= d;
  Xi$1(a, b2, e, c2);
  return b2.child;
}
function gj(a, b2) {
  var c2 = b2.ref;
  if (null === a && null !== c2 || null !== a && a.ref !== c2) b2.flags |= 512, b2.flags |= 2097152;
}
function cj(a, b2, c2, d, e) {
  var f2 = Zf(c2) ? Xf : H.current;
  f2 = Yf(b2, f2);
  ch(b2, e);
  c2 = Nh(a, b2, c2, d, f2, e);
  d = Sh();
  if (null !== a && !dh) return b2.updateQueue = a.updateQueue, b2.flags &= -2053, a.lanes &= ~e, Zi$1(a, b2, e);
  I$1 && d && vg$1(b2);
  b2.flags |= 1;
  Xi$1(a, b2, c2, e);
  return b2.child;
}
function hj(a, b2, c2, d, e) {
  if (Zf(c2)) {
    var f2 = true;
    cg$1(b2);
  } else f2 = false;
  ch(b2, e);
  if (null === b2.stateNode) ij(a, b2), Gi$1(b2, c2, d), Ii$1(b2, c2, d, e), d = true;
  else if (null === a) {
    var g = b2.stateNode, h2 = b2.memoizedProps;
    g.props = h2;
    var k2 = g.context, l2 = c2.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = eh(l2) : (l2 = Zf(c2) ? Xf : H.current, l2 = Yf(b2, l2));
    var m2 = c2.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h2 !== d || k2 !== l2) && Hi$1(b2, g, d, l2);
    jh = false;
    var r2 = b2.memoizedState;
    g.state = r2;
    qh(b2, d, g, e);
    k2 = b2.memoizedState;
    h2 !== d || r2 !== k2 || Wf.current || jh ? ("function" === typeof m2 && (Di$1(b2, c2, m2, d), k2 = b2.memoizedState), (h2 = jh || Fi$1(b2, c2, h2, d, r2, k2, l2)) ? (q2 || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b2.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b2.flags |= 4194308), b2.memoizedProps = d, b2.memoizedState = k2), g.props = d, g.state = k2, g.context = l2, d = h2) : ("function" === typeof g.componentDidMount && (b2.flags |= 4194308), d = false);
  } else {
    g = b2.stateNode;
    lh(a, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : Ci$1(b2.type, h2);
    g.props = l2;
    q2 = b2.pendingProps;
    r2 = g.context;
    k2 = c2.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = eh(k2) : (k2 = Zf(c2) ? Xf : H.current, k2 = Yf(b2, k2));
    var y2 = c2.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h2 !== q2 || r2 !== k2) && Hi$1(b2, g, d, k2);
    jh = false;
    r2 = b2.memoizedState;
    g.state = r2;
    qh(b2, d, g, e);
    var n2 = b2.memoizedState;
    h2 !== q2 || r2 !== n2 || Wf.current || jh ? ("function" === typeof y2 && (Di$1(b2, c2, y2, d), n2 = b2.memoizedState), (l2 = jh || Fi$1(b2, c2, l2, d, r2, n2, k2) || false) ? (m2 || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n2, k2), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n2, k2)), "function" === typeof g.componentDidUpdate && (b2.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b2.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 1024), b2.memoizedProps = d, b2.memoizedState = n2), g.props = d, g.state = n2, g.context = k2, d = l2) : ("function" !== typeof g.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b2.flags |= 1024), d = false);
  }
  return jj(a, b2, c2, d, f2, e);
}
function jj(a, b2, c2, d, e, f2) {
  gj(a, b2);
  var g = 0 !== (b2.flags & 128);
  if (!d && !g) return e && dg$1(b2, c2, false), Zi$1(a, b2, f2);
  d = b2.stateNode;
  Wi$1.current = b2;
  var h2 = g && "function" !== typeof c2.getDerivedStateFromError ? null : d.render();
  b2.flags |= 1;
  null !== a && g ? (b2.child = Ug$1(b2, a.child, null, f2), b2.child = Ug$1(b2, null, h2, f2)) : Xi$1(a, b2, h2, f2);
  b2.memoizedState = d.state;
  e && dg$1(b2, c2, true);
  return b2.child;
}
function kj(a) {
  var b2 = a.stateNode;
  b2.pendingContext ? ag(a, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && ag(a, b2.context, false);
  yh(a, b2.containerInfo);
}
function lj(a, b2, c2, d, e) {
  Ig();
  Jg$1(e);
  b2.flags |= 256;
  Xi$1(a, b2, c2, d);
  return b2.child;
}
var mj = { dehydrated: null, treeContext: null, retryLane: 0 };
function nj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function oj(a, b2, c2) {
  var d = b2.pendingProps, e = L.current, f2 = false, g = 0 !== (b2.flags & 128), h2;
  (h2 = g) || (h2 = null !== a && null === a.memoizedState ? false : 0 !== (e & 2));
  if (h2) f2 = true, b2.flags &= -129;
  else if (null === a || null !== a.memoizedState) e |= 1;
  G(L, e & 1);
  if (null === a) {
    Eg$1(b2);
    a = b2.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b2.mode & 1) ? b2.lanes = 1 : "$!" === a.data ? b2.lanes = 8 : b2.lanes = 1073741824, null;
    g = d.children;
    a = d.fallback;
    return f2 ? (d = b2.mode, f2 = b2.child, g = { mode: "hidden", children: g }, 0 === (d & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g) : f2 = pj(g, d, 0, null), a = Tg(a, d, c2, null), f2.return = b2, a.return = b2, f2.sibling = a, b2.child = f2, b2.child.memoizedState = nj(c2), b2.memoizedState = mj, a) : qj(b2, g);
  }
  e = a.memoizedState;
  if (null !== e && (h2 = e.dehydrated, null !== h2)) return rj(a, b2, g, d, h2, e, c2);
  if (f2) {
    f2 = d.fallback;
    g = b2.mode;
    e = a.child;
    h2 = e.sibling;
    var k2 = { mode: "hidden", children: d.children };
    0 === (g & 1) && b2.child !== e ? (d = b2.child, d.childLanes = 0, d.pendingProps = k2, b2.deletions = null) : (d = Pg$1(e, k2), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h2 ? f2 = Pg$1(h2, f2) : (f2 = Tg(f2, g, c2, null), f2.flags |= 2);
    f2.return = b2;
    d.return = b2;
    d.sibling = f2;
    b2.child = d;
    d = f2;
    f2 = b2.child;
    g = a.child.memoizedState;
    g = null === g ? nj(c2) : { baseLanes: g.baseLanes | c2, cachePool: null, transitions: g.transitions };
    f2.memoizedState = g;
    f2.childLanes = a.childLanes & ~c2;
    b2.memoizedState = mj;
    return d;
  }
  f2 = a.child;
  a = f2.sibling;
  d = Pg$1(f2, { mode: "visible", children: d.children });
  0 === (b2.mode & 1) && (d.lanes = c2);
  d.return = b2;
  d.sibling = null;
  null !== a && (c2 = b2.deletions, null === c2 ? (b2.deletions = [a], b2.flags |= 16) : c2.push(a));
  b2.child = d;
  b2.memoizedState = null;
  return d;
}
function qj(a, b2) {
  b2 = pj({ mode: "visible", children: b2 }, a.mode, 0, null);
  b2.return = a;
  return a.child = b2;
}
function sj(a, b2, c2, d) {
  null !== d && Jg$1(d);
  Ug$1(b2, a.child, null, c2);
  a = qj(b2, b2.pendingProps.children);
  a.flags |= 2;
  b2.memoizedState = null;
  return a;
}
function rj(a, b2, c2, d, e, f2, g) {
  if (c2) {
    if (b2.flags & 256) return b2.flags &= -257, d = Ki$1(Error(p(422))), sj(a, b2, g, d);
    if (null !== b2.memoizedState) return b2.child = a.child, b2.flags |= 128, null;
    f2 = d.fallback;
    e = b2.mode;
    d = pj({ mode: "visible", children: d.children }, e, 0, null);
    f2 = Tg(f2, e, g, null);
    f2.flags |= 2;
    d.return = b2;
    f2.return = b2;
    d.sibling = f2;
    b2.child = d;
    0 !== (b2.mode & 1) && Ug$1(b2, a.child, null, g);
    b2.child.memoizedState = nj(g);
    b2.memoizedState = mj;
    return f2;
  }
  if (0 === (b2.mode & 1)) return sj(a, b2, g, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d) var h2 = d.dgst;
    d = h2;
    f2 = Error(p(419));
    d = Ki$1(f2, d, void 0);
    return sj(a, b2, g, d);
  }
  h2 = 0 !== (g & a.childLanes);
  if (dh || h2) {
    d = Q;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
      0 !== e && e !== f2.retryLane && (f2.retryLane = e, ih(a, e), gi$1(d, a, e, -1));
    }
    tj();
    d = Ki$1(Error(p(421)));
    return sj(a, b2, g, d);
  }
  if ("$?" === e.data) return b2.flags |= 128, b2.child = a.child, b2 = uj.bind(null, a), e._reactRetry = b2, null;
  a = f2.treeContext;
  yg = Lf(e.nextSibling);
  xg = b2;
  I$1 = true;
  zg$1 = null;
  null !== a && (og$1[pg++] = rg$1, og$1[pg++] = sg, og$1[pg++] = qg$1, rg$1 = a.id, sg = a.overflow, qg$1 = b2);
  b2 = qj(b2, d.children);
  b2.flags |= 4096;
  return b2;
}
function vj(a, b2, c2) {
  a.lanes |= b2;
  var d = a.alternate;
  null !== d && (d.lanes |= b2);
  bh(a.return, b2, c2);
}
function wj(a, b2, c2, d, e) {
  var f2 = a.memoizedState;
  null === f2 ? a.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d, tail: c2, tailMode: e } : (f2.isBackwards = b2, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d, f2.tail = c2, f2.tailMode = e);
}
function xj(a, b2, c2) {
  var d = b2.pendingProps, e = d.revealOrder, f2 = d.tail;
  Xi$1(a, b2, d.children, c2);
  d = L.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b2.flags |= 128;
  else {
    if (null !== a && 0 !== (a.flags & 128)) a: for (a = b2.child; null !== a; ) {
      if (13 === a.tag) null !== a.memoizedState && vj(a, c2, b2);
      else if (19 === a.tag) vj(a, c2, b2);
      else if (null !== a.child) {
        a.child.return = a;
        a = a.child;
        continue;
      }
      if (a === b2) break a;
      for (; null === a.sibling; ) {
        if (null === a.return || a.return === b2) break a;
        a = a.return;
      }
      a.sibling.return = a.return;
      a = a.sibling;
    }
    d &= 1;
  }
  G(L, d);
  if (0 === (b2.mode & 1)) b2.memoizedState = null;
  else switch (e) {
    case "forwards":
      c2 = b2.child;
      for (e = null; null !== c2; ) a = c2.alternate, null !== a && null === Ch(a) && (e = c2), c2 = c2.sibling;
      c2 = e;
      null === c2 ? (e = b2.child, b2.child = null) : (e = c2.sibling, c2.sibling = null);
      wj(b2, false, e, c2, f2);
      break;
    case "backwards":
      c2 = null;
      e = b2.child;
      for (b2.child = null; null !== e; ) {
        a = e.alternate;
        if (null !== a && null === Ch(a)) {
          b2.child = e;
          break;
        }
        a = e.sibling;
        e.sibling = c2;
        c2 = e;
        e = a;
      }
      wj(b2, true, c2, null, f2);
      break;
    case "together":
      wj(b2, false, null, null, void 0);
      break;
    default:
      b2.memoizedState = null;
  }
  return b2.child;
}
function ij(a, b2) {
  0 === (b2.mode & 1) && null !== a && (a.alternate = null, b2.alternate = null, b2.flags |= 2);
}
function Zi$1(a, b2, c2) {
  null !== a && (b2.dependencies = a.dependencies);
  rh |= b2.lanes;
  if (0 === (c2 & b2.childLanes)) return null;
  if (null !== a && b2.child !== a.child) throw Error(p(153));
  if (null !== b2.child) {
    a = b2.child;
    c2 = Pg$1(a, a.pendingProps);
    b2.child = c2;
    for (c2.return = b2; null !== a.sibling; ) a = a.sibling, c2 = c2.sibling = Pg$1(a, a.pendingProps), c2.return = b2;
    c2.sibling = null;
  }
  return b2.child;
}
function yj(a, b2, c2) {
  switch (b2.tag) {
    case 3:
      kj(b2);
      Ig();
      break;
    case 5:
      Ah(b2);
      break;
    case 1:
      Zf(b2.type) && cg$1(b2);
      break;
    case 4:
      yh(b2, b2.stateNode.containerInfo);
      break;
    case 10:
      var d = b2.type._context, e = b2.memoizedProps.value;
      G(Wg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b2.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated) return G(L, L.current & 1), b2.flags |= 128, null;
        if (0 !== (c2 & b2.child.childLanes)) return oj(a, b2, c2);
        G(L, L.current & 1);
        a = Zi$1(a, b2, c2);
        return null !== a ? a.sibling : null;
      }
      G(L, L.current & 1);
      break;
    case 19:
      d = 0 !== (c2 & b2.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d) return xj(a, b2, c2);
        b2.flags |= 128;
      }
      e = b2.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G(L, L.current);
      if (d) break;
      else return null;
    case 22:
    case 23:
      return b2.lanes = 0, dj(a, b2, c2);
  }
  return Zi$1(a, b2, c2);
}
var zj, Aj, Bj, Cj;
zj = function(a, b2) {
  for (var c2 = b2.child; null !== c2; ) {
    if (5 === c2.tag || 6 === c2.tag) a.appendChild(c2.stateNode);
    else if (4 !== c2.tag && null !== c2.child) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2) break;
    for (; null === c2.sibling; ) {
      if (null === c2.return || c2.return === b2) return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Aj = function() {
};
Bj = function(a, b2, c2, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b2.stateNode;
    xh(uh.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f2 = [];
        break;
      case "select":
        e = A({}, e, { value: void 0 });
        d = A({}, d, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f2 = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub(c2, d);
    var g;
    c2 = null;
    for (l2 in e) if (!d.hasOwnProperty(l2) && e.hasOwnProperty(l2) && null != e[l2]) if ("style" === l2) {
      var h2 = e[l2];
      for (g in h2) h2.hasOwnProperty(g) && (c2 || (c2 = {}), c2[g] = "");
    } else "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k2 = d[l2];
      h2 = null != e ? e[l2] : void 0;
      if (d.hasOwnProperty(l2) && k2 !== h2 && (null != k2 || null != h2)) if ("style" === l2) if (h2) {
        for (g in h2) !h2.hasOwnProperty(g) || k2 && k2.hasOwnProperty(g) || (c2 || (c2 = {}), c2[g] = "");
        for (g in k2) k2.hasOwnProperty(g) && h2[g] !== k2[g] && (c2 || (c2 = {}), c2[g] = k2[g]);
      } else c2 || (f2 || (f2 = []), f2.push(
        l2,
        c2
      )), c2 = k2;
      else "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k2 && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D("scroll", a), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2) b2.flags |= 4;
  }
};
Cj = function(a, b2, c2, d) {
  c2 !== d && (b2.flags |= 4);
};
function Dj(a, b2) {
  if (!I$1) switch (a.tailMode) {
    case "hidden":
      b2 = a.tail;
      for (var c2 = null; null !== b2; ) null !== b2.alternate && (c2 = b2), b2 = b2.sibling;
      null === c2 ? a.tail = null : c2.sibling = null;
      break;
    case "collapsed":
      c2 = a.tail;
      for (var d = null; null !== c2; ) null !== c2.alternate && (d = c2), c2 = c2.sibling;
      null === d ? b2 || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
  }
}
function S(a) {
  var b2 = null !== a.alternate && a.alternate.child === a.child, c2 = 0, d = 0;
  if (b2) for (var e = a.child; null !== e; ) c2 |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;
  else for (e = a.child; null !== e; ) c2 |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
  a.subtreeFlags |= d;
  a.childLanes = c2;
  return b2;
}
function Ej(a, b2, c2) {
  var d = b2.pendingProps;
  wg$1(b2);
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b2), null;
    case 1:
      return Zf(b2.type) && $f(), S(b2), null;
    case 3:
      d = b2.stateNode;
      zh();
      E(Wf);
      E(H);
      Eh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child) Gg$1(b2) ? b2.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b2.flags & 256) || (b2.flags |= 1024, null !== zg$1 && (Fj(zg$1), zg$1 = null));
      Aj(a, b2);
      S(b2);
      return null;
    case 5:
      Bh(b2);
      var e = xh(wh.current);
      c2 = b2.type;
      if (null !== a && null != b2.stateNode) Bj(a, b2, c2, d, e), a.ref !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      else {
        if (!d) {
          if (null === b2.stateNode) throw Error(p(166));
          S(b2);
          return null;
        }
        a = xh(uh.current);
        if (Gg$1(b2)) {
          d = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d[Of] = b2;
          d[Pf] = f2;
          a = 0 !== (b2.mode & 1);
          switch (c2) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++) D(lf[e], d);
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D(
                "error",
                d
              );
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f2);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = { wasMultiple: !!f2.multiple };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f2), D("invalid", d);
          }
          ub(c2, f2);
          e = null;
          for (var g in f2) if (f2.hasOwnProperty(g)) {
            var h2 = f2[g];
            "children" === g ? "string" === typeof h2 ? d.textContent !== h2 && (true !== f2.suppressHydrationWarning && Af(d.textContent, h2, a), e = ["children", h2]) : "number" === typeof h2 && d.textContent !== "" + h2 && (true !== f2.suppressHydrationWarning && Af(
              d.textContent,
              h2,
              a
            ), e = ["children", "" + h2]) : ea.hasOwnProperty(g) && null != h2 && "onScroll" === g && D("scroll", d);
          }
          switch (c2) {
            case "input":
              Va(d);
              db(d, f2, true);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d.onclick = Bf);
          }
          d = e;
          b2.updateQueue = d;
          null !== d && (b2.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c2));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c2 ? (a = g.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c2, { is: d.is }) : (a = g.createElement(c2), "select" === c2 && (g = a, d.multiple ? g.multiple = true : d.size && (g.size = d.size))) : a = g.createElementNS(a, c2);
          a[Of] = b2;
          a[Pf] = d;
          zj(a, b2, false, false);
          b2.stateNode = a;
          a: {
            g = vb(c2, d);
            switch (c2) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++) D(lf[e], a);
                e = d;
                break;
              case "source":
                D("error", a);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D(
                  "error",
                  a
                );
                D("load", a);
                e = d;
                break;
              case "details":
                D("toggle", a);
                e = d;
                break;
              case "input":
                Za(a, d);
                e = Ya(a, d);
                D("invalid", a);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a._wrapperState = { wasMultiple: !!d.multiple };
                e = A({}, d, { value: void 0 });
                D("invalid", a);
                break;
              case "textarea":
                hb(a, d);
                e = gb(a, d);
                D("invalid", a);
                break;
              default:
                e = d;
            }
            ub(c2, e);
            h2 = e;
            for (f2 in h2) if (h2.hasOwnProperty(f2)) {
              var k2 = h2[f2];
              "style" === f2 ? sb(a, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c2 || "" !== k2) && ob(a, k2) : "number" === typeof k2 && ob(a, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D("scroll", a) : null != k2 && ta(a, f2, k2, g));
            }
            switch (c2) {
              case "input":
                Va(a);
                db(a, d, false);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f2 = d.value;
                null != f2 ? fb(a, !!d.multiple, f2, false) : null != d.defaultValue && fb(
                  a,
                  !!d.multiple,
                  d.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c2) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = true;
                break a;
              default:
                d = false;
            }
          }
          d && (b2.flags |= 4);
        }
        null !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      }
      S(b2);
      return null;
    case 6:
      if (a && null != b2.stateNode) Cj(a, b2, a.memoizedProps, d);
      else {
        if ("string" !== typeof d && null === b2.stateNode) throw Error(p(166));
        c2 = xh(wh.current);
        xh(uh.current);
        if (Gg$1(b2)) {
          d = b2.stateNode;
          c2 = b2.memoizedProps;
          d[Of] = b2;
          if (f2 = d.nodeValue !== c2) {
            if (a = xg, null !== a) switch (a.tag) {
              case 3:
                Af(d.nodeValue, c2, 0 !== (a.mode & 1));
                break;
              case 5:
                true !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c2, 0 !== (a.mode & 1));
            }
          }
          f2 && (b2.flags |= 4);
        } else d = (9 === c2.nodeType ? c2 : c2.ownerDocument).createTextNode(d), d[Of] = b2, b2.stateNode = d;
      }
      S(b2);
      return null;
    case 13:
      E(L);
      d = b2.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I$1 && null !== yg && 0 !== (b2.mode & 1) && 0 === (b2.flags & 128)) Hg$1(), Ig(), b2.flags |= 98560, f2 = false;
        else if (f2 = Gg$1(b2), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f2) throw Error(p(318));
            f2 = b2.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2) throw Error(p(317));
            f2[Of] = b2;
          } else Ig(), 0 === (b2.flags & 128) && (b2.memoizedState = null), b2.flags |= 4;
          S(b2);
          f2 = false;
        } else null !== zg$1 && (Fj(zg$1), zg$1 = null), f2 = true;
        if (!f2) return b2.flags & 65536 ? b2 : null;
      }
      if (0 !== (b2.flags & 128)) return b2.lanes = c2, b2;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b2.child.flags |= 8192, 0 !== (b2.mode & 1) && (null === a || 0 !== (L.current & 1) ? 0 === T && (T = 3) : tj()));
      null !== b2.updateQueue && (b2.flags |= 4);
      S(b2);
      return null;
    case 4:
      return zh(), Aj(a, b2), null === a && sf(b2.stateNode.containerInfo), S(b2), null;
    case 10:
      return ah(b2.type._context), S(b2), null;
    case 17:
      return Zf(b2.type) && $f(), S(b2), null;
    case 19:
      E(L);
      f2 = b2.memoizedState;
      if (null === f2) return S(b2), null;
      d = 0 !== (b2.flags & 128);
      g = f2.rendering;
      if (null === g) if (d) Dj(f2, false);
      else {
        if (0 !== T || null !== a && 0 !== (a.flags & 128)) for (a = b2.child; null !== a; ) {
          g = Ch(a);
          if (null !== g) {
            b2.flags |= 128;
            Dj(f2, false);
            d = g.updateQueue;
            null !== d && (b2.updateQueue = d, b2.flags |= 4);
            b2.subtreeFlags = 0;
            d = c2;
            for (c2 = b2.child; null !== c2; ) f2 = c2, a = d, f2.flags &= 14680066, g = f2.alternate, null === g ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g.childLanes, f2.lanes = g.lanes, f2.child = g.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g.memoizedProps, f2.memoizedState = g.memoizedState, f2.updateQueue = g.updateQueue, f2.type = g.type, a = g.dependencies, f2.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext }), c2 = c2.sibling;
            G(L, L.current & 1 | 2);
            return b2.child;
          }
          a = a.sibling;
        }
        null !== f2.tail && B() > Gj && (b2.flags |= 128, d = true, Dj(f2, false), b2.lanes = 4194304);
      }
      else {
        if (!d) if (a = Ch(g), null !== a) {
          if (b2.flags |= 128, d = true, c2 = a.updateQueue, null !== c2 && (b2.updateQueue = c2, b2.flags |= 4), Dj(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g.alternate && !I$1) return S(b2), null;
        } else 2 * B() - f2.renderingStartTime > Gj && 1073741824 !== c2 && (b2.flags |= 128, d = true, Dj(f2, false), b2.lanes = 4194304);
        f2.isBackwards ? (g.sibling = b2.child, b2.child = g) : (c2 = f2.last, null !== c2 ? c2.sibling = g : b2.child = g, f2.last = g);
      }
      if (null !== f2.tail) return b2 = f2.tail, f2.rendering = b2, f2.tail = b2.sibling, f2.renderingStartTime = B(), b2.sibling = null, c2 = L.current, G(L, d ? c2 & 1 | 2 : c2 & 1), b2;
      S(b2);
      return null;
    case 22:
    case 23:
      return Hj(), d = null !== b2.memoizedState, null !== a && null !== a.memoizedState !== d && (b2.flags |= 8192), d && 0 !== (b2.mode & 1) ? 0 !== (fj & 1073741824) && (S(b2), b2.subtreeFlags & 6 && (b2.flags |= 8192)) : S(b2), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p(156, b2.tag));
}
function Ij(a, b2) {
  wg$1(b2);
  switch (b2.tag) {
    case 1:
      return Zf(b2.type) && $f(), a = b2.flags, a & 65536 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 3:
      return zh(), E(Wf), E(H), Eh(), a = b2.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b2.flags = a & -65537 | 128, b2) : null;
    case 5:
      return Bh(b2), null;
    case 13:
      E(L);
      a = b2.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b2.alternate) throw Error(p(340));
        Ig();
      }
      a = b2.flags;
      return a & 65536 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 19:
      return E(L), null;
    case 4:
      return zh(), null;
    case 10:
      return ah(b2.type._context), null;
    case 22:
    case 23:
      return Hj(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Jj = false, U = false, Kj = "function" === typeof WeakSet ? WeakSet : Set, V$1 = null;
function Lj(a, b2) {
  var c2 = a.ref;
  if (null !== c2) if ("function" === typeof c2) try {
    c2(null);
  } catch (d) {
    W(a, b2, d);
  }
  else c2.current = null;
}
function Mj(a, b2, c2) {
  try {
    c2();
  } catch (d) {
    W(a, b2, d);
  }
}
var Nj = false;
function Oj(a, b2) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a) var c2 = { start: a.selectionStart, end: a.selectionEnd };
    else a: {
      c2 = (c2 = a.ownerDocument) && c2.defaultView || window;
      var d = c2.getSelection && c2.getSelection();
      if (d && 0 !== d.rangeCount) {
        c2 = d.anchorNode;
        var e = d.anchorOffset, f2 = d.focusNode;
        d = d.focusOffset;
        try {
          c2.nodeType, f2.nodeType;
        } catch (F2) {
          c2 = null;
          break a;
        }
        var g = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a, r2 = null;
        b: for (; ; ) {
          for (var y2; ; ) {
            q2 !== c2 || 0 !== e && 3 !== q2.nodeType || (h2 = g + e);
            q2 !== f2 || 0 !== d && 3 !== q2.nodeType || (k2 = g + d);
            3 === q2.nodeType && (g += q2.nodeValue.length);
            if (null === (y2 = q2.firstChild)) break;
            r2 = q2;
            q2 = y2;
          }
          for (; ; ) {
            if (q2 === a) break b;
            r2 === c2 && ++l2 === e && (h2 = g);
            r2 === f2 && ++m2 === d && (k2 = g);
            if (null !== (y2 = q2.nextSibling)) break;
            q2 = r2;
            r2 = q2.parentNode;
          }
          q2 = y2;
        }
        c2 = -1 === h2 || -1 === k2 ? null : { start: h2, end: k2 };
      } else c2 = null;
    }
    c2 = c2 || { start: 0, end: 0 };
  } else c2 = null;
  Df = { focusedElem: a, selectionRange: c2 };
  dd = false;
  for (V$1 = b2; null !== V$1; ) if (b2 = V$1, a = b2.child, 0 !== (b2.subtreeFlags & 1028) && null !== a) a.return = b2, V$1 = a;
  else for (; null !== V$1; ) {
    b2 = V$1;
    try {
      var n2 = b2.alternate;
      if (0 !== (b2.flags & 1024)) switch (b2.tag) {
        case 0:
        case 11:
        case 15:
          break;
        case 1:
          if (null !== n2) {
            var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b2.stateNode, w2 = x2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? t2 : Ci$1(b2.type, t2), J2);
            x2.__reactInternalSnapshotBeforeUpdate = w2;
          }
          break;
        case 3:
          var u2 = b2.stateNode.containerInfo;
          1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
          break;
        case 5:
        case 6:
        case 4:
        case 17:
          break;
        default:
          throw Error(p(163));
      }
    } catch (F2) {
      W(b2, b2.return, F2);
    }
    a = b2.sibling;
    if (null !== a) {
      a.return = b2.return;
      V$1 = a;
      break;
    }
    V$1 = b2.return;
  }
  n2 = Nj;
  Nj = false;
  return n2;
}
function Pj(a, b2, c2) {
  var d = b2.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a) === a) {
        var f2 = e.destroy;
        e.destroy = void 0;
        void 0 !== f2 && Mj(b2, c2, f2);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Qj(a, b2) {
  b2 = b2.updateQueue;
  b2 = null !== b2 ? b2.lastEffect : null;
  if (null !== b2) {
    var c2 = b2 = b2.next;
    do {
      if ((c2.tag & a) === a) {
        var d = c2.create;
        c2.destroy = d();
      }
      c2 = c2.next;
    } while (c2 !== b2);
  }
}
function Rj(a) {
  var b2 = a.ref;
  if (null !== b2) {
    var c2 = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c2;
        break;
      default:
        a = c2;
    }
    "function" === typeof b2 ? b2(a) : b2.current = a;
  }
}
function Sj(a) {
  var b2 = a.alternate;
  null !== b2 && (a.alternate = null, Sj(b2));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b2 = a.stateNode, null !== b2 && (delete b2[Of], delete b2[Pf], delete b2[of], delete b2[Qf], delete b2[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Tj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Uj(a) {
  a: for (; ; ) {
    for (; null === a.sibling; ) {
      if (null === a.return || Tj(a.return)) return null;
      a = a.return;
    }
    a.sibling.return = a.return;
    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
      if (a.flags & 2) continue a;
      if (null === a.child || 4 === a.tag) continue a;
      else a.child.return = a, a = a.child;
    }
    if (!(a.flags & 2)) return a.stateNode;
  }
}
function Vj(a, b2, c2) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b2 ? 8 === c2.nodeType ? c2.parentNode.insertBefore(a, b2) : c2.insertBefore(a, b2) : (8 === c2.nodeType ? (b2 = c2.parentNode, b2.insertBefore(a, c2)) : (b2 = c2, b2.appendChild(a)), c2 = c2._reactRootContainer, null !== c2 && void 0 !== c2 || null !== b2.onclick || (b2.onclick = Bf));
  else if (4 !== d && (a = a.child, null !== a)) for (Vj(a, b2, c2), a = a.sibling; null !== a; ) Vj(a, b2, c2), a = a.sibling;
}
function Wj(a, b2, c2) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b2 ? c2.insertBefore(a, b2) : c2.appendChild(a);
  else if (4 !== d && (a = a.child, null !== a)) for (Wj(a, b2, c2), a = a.sibling; null !== a; ) Wj(a, b2, c2), a = a.sibling;
}
var X = null, Xj = false;
function Yj(a, b2, c2) {
  for (c2 = c2.child; null !== c2; ) Zj(a, b2, c2), c2 = c2.sibling;
}
function Zj(a, b2, c2) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount) try {
    lc.onCommitFiberUnmount(kc, c2);
  } catch (h2) {
  }
  switch (c2.tag) {
    case 5:
      U || Lj(c2, b2);
    case 6:
      var d = X, e = Xj;
      X = null;
      Yj(a, b2, c2);
      X = d;
      Xj = e;
      null !== X && (Xj ? (a = X, c2 = c2.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c2) : a.removeChild(c2)) : X.removeChild(c2.stateNode));
      break;
    case 18:
      null !== X && (Xj ? (a = X, c2 = c2.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c2) : 1 === a.nodeType && Kf(a, c2), bd(a)) : Kf(X, c2.stateNode));
      break;
    case 4:
      d = X;
      e = Xj;
      X = c2.stateNode.containerInfo;
      Xj = true;
      Yj(a, b2, c2);
      X = d;
      Xj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c2.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f2 = e, g = f2.destroy;
          f2 = f2.tag;
          void 0 !== g && (0 !== (f2 & 2) ? Mj(c2, b2, g) : 0 !== (f2 & 4) && Mj(c2, b2, g));
          e = e.next;
        } while (e !== d);
      }
      Yj(a, b2, c2);
      break;
    case 1:
      if (!U && (Lj(c2, b2), d = c2.stateNode, "function" === typeof d.componentWillUnmount)) try {
        d.props = c2.memoizedProps, d.state = c2.memoizedState, d.componentWillUnmount();
      } catch (h2) {
        W(c2, b2, h2);
      }
      Yj(a, b2, c2);
      break;
    case 21:
      Yj(a, b2, c2);
      break;
    case 22:
      c2.mode & 1 ? (U = (d = U) || null !== c2.memoizedState, Yj(a, b2, c2), U = d) : Yj(a, b2, c2);
      break;
    default:
      Yj(a, b2, c2);
  }
}
function ak(a) {
  var b2 = a.updateQueue;
  if (null !== b2) {
    a.updateQueue = null;
    var c2 = a.stateNode;
    null === c2 && (c2 = a.stateNode = new Kj());
    b2.forEach(function(b3) {
      var d = bk.bind(null, a, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d, d));
    });
  }
}
function ck(a, b2) {
  var c2 = b2.deletions;
  if (null !== c2) for (var d = 0; d < c2.length; d++) {
    var e = c2[d];
    try {
      var f2 = a, g = b2, h2 = g;
      a: for (; null !== h2; ) {
        switch (h2.tag) {
          case 5:
            X = h2.stateNode;
            Xj = false;
            break a;
          case 3:
            X = h2.stateNode.containerInfo;
            Xj = true;
            break a;
          case 4:
            X = h2.stateNode.containerInfo;
            Xj = true;
            break a;
        }
        h2 = h2.return;
      }
      if (null === X) throw Error(p(160));
      Zj(f2, g, e);
      X = null;
      Xj = false;
      var k2 = e.alternate;
      null !== k2 && (k2.return = null);
      e.return = null;
    } catch (l2) {
      W(e, b2, l2);
    }
  }
  if (b2.subtreeFlags & 12854) for (b2 = b2.child; null !== b2; ) dk(b2, a), b2 = b2.sibling;
}
function dk(a, b2) {
  var c2 = a.alternate, d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      ck(b2, a);
      ek(a);
      if (d & 4) {
        try {
          Pj(3, a, a.return), Qj(3, a);
        } catch (t2) {
          W(a, a.return, t2);
        }
        try {
          Pj(5, a, a.return);
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 1:
      ck(b2, a);
      ek(a);
      d & 512 && null !== c2 && Lj(c2, c2.return);
      break;
    case 5:
      ck(b2, a);
      ek(a);
      d & 512 && null !== c2 && Lj(c2, c2.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob(e, "");
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      if (d & 4 && (e = a.stateNode, null != e)) {
        var f2 = a.memoizedProps, g = null !== c2 ? c2.memoizedProps : f2, h2 = a.type, k2 = a.updateQueue;
        a.updateQueue = null;
        if (null !== k2) try {
          "input" === h2 && "radio" === f2.type && null != f2.name && ab(e, f2);
          vb(h2, g);
          var l2 = vb(h2, f2);
          for (g = 0; g < k2.length; g += 2) {
            var m2 = k2[g], q2 = k2[g + 1];
            "style" === m2 ? sb(e, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e, q2) : "children" === m2 ? ob(e, q2) : ta(e, m2, q2, l2);
          }
          switch (h2) {
            case "input":
              bb(e, f2);
              break;
            case "textarea":
              ib(e, f2);
              break;
            case "select":
              var r2 = e._wrapperState.wasMultiple;
              e._wrapperState.wasMultiple = !!f2.multiple;
              var y2 = f2.value;
              null != y2 ? fb(e, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                e,
                !!f2.multiple,
                f2.defaultValue,
                true
              ) : fb(e, !!f2.multiple, f2.multiple ? [] : "", false));
          }
          e[Pf] = f2;
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 6:
      ck(b2, a);
      ek(a);
      if (d & 4) {
        if (null === a.stateNode) throw Error(p(162));
        e = a.stateNode;
        f2 = a.memoizedProps;
        try {
          e.nodeValue = f2;
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 3:
      ck(b2, a);
      ek(a);
      if (d & 4 && null !== c2 && c2.memoizedState.isDehydrated) try {
        bd(b2.containerInfo);
      } catch (t2) {
        W(a, a.return, t2);
      }
      break;
    case 4:
      ck(b2, a);
      ek(a);
      break;
    case 13:
      ck(b2, a);
      ek(a);
      e = a.child;
      e.flags & 8192 && (f2 = null !== e.memoizedState, e.stateNode.isHidden = f2, !f2 || null !== e.alternate && null !== e.alternate.memoizedState || (fk = B()));
      d & 4 && ak(a);
      break;
    case 22:
      m2 = null !== c2 && null !== c2.memoizedState;
      a.mode & 1 ? (U = (l2 = U) || m2, ck(b2, a), U = l2) : ck(b2, a);
      ek(a);
      if (d & 8192) {
        l2 = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l2) && !m2 && 0 !== (a.mode & 1)) for (V$1 = a, m2 = a.child; null !== m2; ) {
          for (q2 = V$1 = m2; null !== V$1; ) {
            r2 = V$1;
            y2 = r2.child;
            switch (r2.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Pj(4, r2, r2.return);
                break;
              case 1:
                Lj(r2, r2.return);
                var n2 = r2.stateNode;
                if ("function" === typeof n2.componentWillUnmount) {
                  d = r2;
                  c2 = r2.return;
                  try {
                    b2 = d, n2.props = b2.memoizedProps, n2.state = b2.memoizedState, n2.componentWillUnmount();
                  } catch (t2) {
                    W(d, c2, t2);
                  }
                }
                break;
              case 5:
                Lj(r2, r2.return);
                break;
              case 22:
                if (null !== r2.memoizedState) {
                  gk(q2);
                  continue;
                }
            }
            null !== y2 ? (y2.return = r2, V$1 = y2) : gk(q2);
          }
          m2 = m2.sibling;
        }
        a: for (m2 = null, q2 = a; ; ) {
          if (5 === q2.tag) {
            if (null === m2) {
              m2 = q2;
              try {
                e = q2.stateNode, l2 ? (f2 = e.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = rb("display", g));
              } catch (t2) {
                W(a, a.return, t2);
              }
            }
          } else if (6 === q2.tag) {
            if (null === m2) try {
              q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
            } catch (t2) {
              W(a, a.return, t2);
            }
          } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a) && null !== q2.child) {
            q2.child.return = q2;
            q2 = q2.child;
            continue;
          }
          if (q2 === a) break a;
          for (; null === q2.sibling; ) {
            if (null === q2.return || q2.return === a) break a;
            m2 === q2 && (m2 = null);
            q2 = q2.return;
          }
          m2 === q2 && (m2 = null);
          q2.sibling.return = q2.return;
          q2 = q2.sibling;
        }
      }
      break;
    case 19:
      ck(b2, a);
      ek(a);
      d & 4 && ak(a);
      break;
    case 21:
      break;
    default:
      ck(
        b2,
        a
      ), ek(a);
  }
}
function ek(a) {
  var b2 = a.flags;
  if (b2 & 2) {
    try {
      a: {
        for (var c2 = a.return; null !== c2; ) {
          if (Tj(c2)) {
            var d = c2;
            break a;
          }
          c2 = c2.return;
        }
        throw Error(p(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ""), d.flags &= -33);
          var f2 = Uj(a);
          Wj(a, f2, e);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo, h2 = Uj(a);
          Vj(a, h2, g);
          break;
        default:
          throw Error(p(161));
      }
    } catch (k2) {
      W(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b2 & 4096 && (a.flags &= -4097);
}
function hk(a, b2, c2) {
  V$1 = a;
  ik(a);
}
function ik(a, b2, c2) {
  for (var d = 0 !== (a.mode & 1); null !== V$1; ) {
    var e = V$1, f2 = e.child;
    if (22 === e.tag && d) {
      var g = null !== e.memoizedState || Jj;
      if (!g) {
        var h2 = e.alternate, k2 = null !== h2 && null !== h2.memoizedState || U;
        h2 = Jj;
        var l2 = U;
        Jj = g;
        if ((U = k2) && !l2) for (V$1 = e; null !== V$1; ) g = V$1, k2 = g.child, 22 === g.tag && null !== g.memoizedState ? jk(e) : null !== k2 ? (k2.return = g, V$1 = k2) : jk(e);
        for (; null !== f2; ) V$1 = f2, ik(f2), f2 = f2.sibling;
        V$1 = e;
        Jj = h2;
        U = l2;
      }
      kk(a);
    } else 0 !== (e.subtreeFlags & 8772) && null !== f2 ? (f2.return = e, V$1 = f2) : kk(a);
  }
}
function kk(a) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    if (0 !== (b2.flags & 8772)) {
      var c2 = b2.alternate;
      try {
        if (0 !== (b2.flags & 8772)) switch (b2.tag) {
          case 0:
          case 11:
          case 15:
            U || Qj(5, b2);
            break;
          case 1:
            var d = b2.stateNode;
            if (b2.flags & 4 && !U) if (null === c2) d.componentDidMount();
            else {
              var e = b2.elementType === b2.type ? c2.memoizedProps : Ci$1(b2.type, c2.memoizedProps);
              d.componentDidUpdate(e, c2.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
            }
            var f2 = b2.updateQueue;
            null !== f2 && sh(b2, f2, d);
            break;
          case 3:
            var g = b2.updateQueue;
            if (null !== g) {
              c2 = null;
              if (null !== b2.child) switch (b2.child.tag) {
                case 5:
                  c2 = b2.child.stateNode;
                  break;
                case 1:
                  c2 = b2.child.stateNode;
              }
              sh(b2, g, c2);
            }
            break;
          case 5:
            var h2 = b2.stateNode;
            if (null === c2 && b2.flags & 4) {
              c2 = h2;
              var k2 = b2.memoizedProps;
              switch (b2.type) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  k2.autoFocus && c2.focus();
                  break;
                case "img":
                  k2.src && (c2.src = k2.src);
              }
            }
            break;
          case 6:
            break;
          case 4:
            break;
          case 12:
            break;
          case 13:
            if (null === b2.memoizedState) {
              var l2 = b2.alternate;
              if (null !== l2) {
                var m2 = l2.memoizedState;
                if (null !== m2) {
                  var q2 = m2.dehydrated;
                  null !== q2 && bd(q2);
                }
              }
            }
            break;
          case 19:
          case 17:
          case 21:
          case 22:
          case 23:
          case 25:
            break;
          default:
            throw Error(p(163));
        }
        U || b2.flags & 512 && Rj(b2);
      } catch (r2) {
        W(b2, b2.return, r2);
      }
    }
    if (b2 === a) {
      V$1 = null;
      break;
    }
    c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V$1 = c2;
      break;
    }
    V$1 = b2.return;
  }
}
function gk(a) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    if (b2 === a) {
      V$1 = null;
      break;
    }
    var c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V$1 = c2;
      break;
    }
    V$1 = b2.return;
  }
}
function jk(a) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    try {
      switch (b2.tag) {
        case 0:
        case 11:
        case 15:
          var c2 = b2.return;
          try {
            Qj(4, b2);
          } catch (k2) {
            W(b2, c2, k2);
          }
          break;
        case 1:
          var d = b2.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b2.return;
            try {
              d.componentDidMount();
            } catch (k2) {
              W(b2, e, k2);
            }
          }
          var f2 = b2.return;
          try {
            Rj(b2);
          } catch (k2) {
            W(b2, f2, k2);
          }
          break;
        case 5:
          var g = b2.return;
          try {
            Rj(b2);
          } catch (k2) {
            W(b2, g, k2);
          }
      }
    } catch (k2) {
      W(b2, b2.return, k2);
    }
    if (b2 === a) {
      V$1 = null;
      break;
    }
    var h2 = b2.sibling;
    if (null !== h2) {
      h2.return = b2.return;
      V$1 = h2;
      break;
    }
    V$1 = b2.return;
  }
}
var lk = Math.ceil, mk = ua.ReactCurrentDispatcher, nk = ua.ReactCurrentOwner, ok = ua.ReactCurrentBatchConfig, K = 0, Q = null, Y = null, Z = 0, fj = 0, ej = Uf(0), T = 0, pk = null, rh = 0, qk = 0, rk = 0, sk = null, tk = null, fk = 0, Gj = Infinity, uk = null, Oi$1 = false, Pi$1 = null, Ri$1 = null, vk = false, wk = null, xk = 0, yk = 0, zk = null, Ak = -1, Bk = 0;
function R() {
  return 0 !== (K & 6) ? B() : -1 !== Ak ? Ak : Ak = B();
}
function yi$1(a) {
  if (0 === (a.mode & 1)) return 1;
  if (0 !== (K & 2) && 0 !== Z) return Z & -Z;
  if (null !== Kg.transition) return 0 === Bk && (Bk = yc()), Bk;
  a = C$1;
  if (0 !== a) return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function gi$1(a, b2, c2, d) {
  if (50 < yk) throw yk = 0, zk = null, Error(p(185));
  Ac(a, c2, d);
  if (0 === (K & 2) || a !== Q) a === Q && (0 === (K & 2) && (qk |= c2), 4 === T && Ck(a, Z)), Dk(a, d), 1 === c2 && 0 === K && 0 === (b2.mode & 1) && (Gj = B() + 500, fg && jg$1());
}
function Dk(a, b2) {
  var c2 = a.callbackNode;
  wc(a, b2);
  var d = uc(a, a === Q ? Z : 0);
  if (0 === d) null !== c2 && bc(c2), a.callbackNode = null, a.callbackPriority = 0;
  else if (b2 = d & -d, a.callbackPriority !== b2) {
    null != c2 && bc(c2);
    if (1 === b2) 0 === a.tag ? ig$1(Ek.bind(null, a)) : hg(Ek.bind(null, a)), Jf(function() {
      0 === (K & 6) && jg$1();
    }), c2 = null;
    else {
      switch (Dc(d)) {
        case 1:
          c2 = fc;
          break;
        case 4:
          c2 = gc;
          break;
        case 16:
          c2 = hc;
          break;
        case 536870912:
          c2 = jc;
          break;
        default:
          c2 = hc;
      }
      c2 = Fk(c2, Gk.bind(null, a));
    }
    a.callbackPriority = b2;
    a.callbackNode = c2;
  }
}
function Gk(a, b2) {
  Ak = -1;
  Bk = 0;
  if (0 !== (K & 6)) throw Error(p(327));
  var c2 = a.callbackNode;
  if (Hk() && a.callbackNode !== c2) return null;
  var d = uc(a, a === Q ? Z : 0);
  if (0 === d) return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b2) b2 = Ik(a, d);
  else {
    b2 = d;
    var e = K;
    K |= 2;
    var f2 = Jk();
    if (Q !== a || Z !== b2) uk = null, Gj = B() + 500, Kk(a, b2);
    do
      try {
        Lk();
        break;
      } catch (h2) {
        Mk(a, h2);
      }
    while (1);
    $g$1();
    mk.current = f2;
    K = e;
    null !== Y ? b2 = 0 : (Q = null, Z = 0, b2 = T);
  }
  if (0 !== b2) {
    2 === b2 && (e = xc(a), 0 !== e && (d = e, b2 = Nk(a, e)));
    if (1 === b2) throw c2 = pk, Kk(a, 0), Ck(a, d), Dk(a, B()), c2;
    if (6 === b2) Ck(a, d);
    else {
      e = a.current.alternate;
      if (0 === (d & 30) && !Ok(e) && (b2 = Ik(a, d), 2 === b2 && (f2 = xc(a), 0 !== f2 && (d = f2, b2 = Nk(a, f2))), 1 === b2)) throw c2 = pk, Kk(a, 0), Ck(a, d), Dk(a, B()), c2;
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b2) {
        case 0:
        case 1:
          throw Error(p(345));
        case 2:
          Pk(a, tk, uk);
          break;
        case 3:
          Ck(a, d);
          if ((d & 130023424) === d && (b2 = fk + 500 - B(), 10 < b2)) {
            if (0 !== uc(a, 0)) break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              R();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Pk.bind(null, a, tk, uk), b2);
            break;
          }
          Pk(a, tk, uk);
          break;
        case 4:
          Ck(a, d);
          if ((d & 4194240) === d) break;
          b2 = a.eventTimes;
          for (e = -1; 0 < d; ) {
            var g = 31 - oc(d);
            f2 = 1 << g;
            g = b2[g];
            g > e && (e = g);
            d &= ~f2;
          }
          d = e;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * lk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Pk.bind(null, a, tk, uk), d);
            break;
          }
          Pk(a, tk, uk);
          break;
        case 5:
          Pk(a, tk, uk);
          break;
        default:
          throw Error(p(329));
      }
    }
  }
  Dk(a, B());
  return a.callbackNode === c2 ? Gk.bind(null, a) : null;
}
function Nk(a, b2) {
  var c2 = sk;
  a.current.memoizedState.isDehydrated && (Kk(a, b2).flags |= 256);
  a = Ik(a, b2);
  2 !== a && (b2 = tk, tk = c2, null !== b2 && Fj(b2));
  return a;
}
function Fj(a) {
  null === tk ? tk = a : tk.push.apply(tk, a);
}
function Ok(a) {
  for (var b2 = a; ; ) {
    if (b2.flags & 16384) {
      var c2 = b2.updateQueue;
      if (null !== c2 && (c2 = c2.stores, null !== c2)) for (var d = 0; d < c2.length; d++) {
        var e = c2[d], f2 = e.getSnapshot;
        e = e.value;
        try {
          if (!He(f2(), e)) return false;
        } catch (g) {
          return false;
        }
      }
    }
    c2 = b2.child;
    if (b2.subtreeFlags & 16384 && null !== c2) c2.return = b2, b2 = c2;
    else {
      if (b2 === a) break;
      for (; null === b2.sibling; ) {
        if (null === b2.return || b2.return === a) return true;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
  }
  return true;
}
function Ck(a, b2) {
  b2 &= ~rk;
  b2 &= ~qk;
  a.suspendedLanes |= b2;
  a.pingedLanes &= ~b2;
  for (a = a.expirationTimes; 0 < b2; ) {
    var c2 = 31 - oc(b2), d = 1 << c2;
    a[c2] = -1;
    b2 &= ~d;
  }
}
function Ek(a) {
  if (0 !== (K & 6)) throw Error(p(327));
  Hk();
  var b2 = uc(a, 0);
  if (0 === (b2 & 1)) return Dk(a, B()), null;
  var c2 = Ik(a, b2);
  if (0 !== a.tag && 2 === c2) {
    var d = xc(a);
    0 !== d && (b2 = d, c2 = Nk(a, d));
  }
  if (1 === c2) throw c2 = pk, Kk(a, 0), Ck(a, b2), Dk(a, B()), c2;
  if (6 === c2) throw Error(p(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b2;
  Pk(a, tk, uk);
  Dk(a, B());
  return null;
}
function Qk(a, b2) {
  var c2 = K;
  K |= 1;
  try {
    return a(b2);
  } finally {
    K = c2, 0 === K && (Gj = B() + 500, fg && jg$1());
  }
}
function Rk(a) {
  null !== wk && 0 === wk.tag && 0 === (K & 6) && Hk();
  var b2 = K;
  K |= 1;
  var c2 = ok.transition, d = C$1;
  try {
    if (ok.transition = null, C$1 = 1, a) return a();
  } finally {
    C$1 = d, ok.transition = c2, K = b2, 0 === (K & 6) && jg$1();
  }
}
function Hj() {
  fj = ej.current;
  E(ej);
}
function Kk(a, b2) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c2 = a.timeoutHandle;
  -1 !== c2 && (a.timeoutHandle = -1, Gf(c2));
  if (null !== Y) for (c2 = Y.return; null !== c2; ) {
    var d = c2;
    wg$1(d);
    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && $f();
        break;
      case 3:
        zh();
        E(Wf);
        E(H);
        Eh();
        break;
      case 5:
        Bh(d);
        break;
      case 4:
        zh();
        break;
      case 13:
        E(L);
        break;
      case 19:
        E(L);
        break;
      case 10:
        ah(d.type._context);
        break;
      case 22:
      case 23:
        Hj();
    }
    c2 = c2.return;
  }
  Q = a;
  Y = a = Pg$1(a.current, null);
  Z = fj = b2;
  T = 0;
  pk = null;
  rk = qk = rh = 0;
  tk = sk = null;
  if (null !== fh) {
    for (b2 = 0; b2 < fh.length; b2++) if (c2 = fh[b2], d = c2.interleaved, null !== d) {
      c2.interleaved = null;
      var e = d.next, f2 = c2.pending;
      if (null !== f2) {
        var g = f2.next;
        f2.next = e;
        d.next = g;
      }
      c2.pending = d;
    }
    fh = null;
  }
  return a;
}
function Mk(a, b2) {
  do {
    var c2 = Y;
    try {
      $g$1();
      Fh.current = Rh;
      if (Ih) {
        for (var d = M$1.memoizedState; null !== d; ) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Ih = false;
      }
      Hh = 0;
      O = N = M$1 = null;
      Jh = false;
      Kh = 0;
      nk.current = null;
      if (null === c2 || null === c2.return) {
        T = 1;
        pk = b2;
        Y = null;
        break;
      }
      a: {
        var f2 = a, g = c2.return, h2 = c2, k2 = b2;
        b2 = Z;
        h2.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h2, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Ui$1(g);
          if (null !== y2) {
            y2.flags &= -257;
            Vi$1(y2, g, h2, f2, b2);
            y2.mode & 1 && Si$1(f2, l2, b2);
            b2 = y2;
            k2 = l2;
            var n2 = b2.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b2.updateQueue = t2;
            } else n2.add(k2);
            break a;
          } else {
            if (0 === (b2 & 1)) {
              Si$1(f2, l2, b2);
              tj();
              break a;
            }
            k2 = Error(p(426));
          }
        } else if (I$1 && h2.mode & 1) {
          var J2 = Ui$1(g);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Vi$1(J2, g, h2, f2, b2);
            Jg$1(Ji$1(k2, h2));
            break a;
          }
        }
        f2 = k2 = Ji$1(k2, h2);
        4 !== T && (T = 2);
        null === sk ? sk = [f2] : sk.push(f2);
        f2 = g;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b2 &= -b2;
              f2.lanes |= b2;
              var x2 = Ni$1(f2, k2, b2);
              ph(f2, x2);
              break a;
            case 1:
              h2 = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Ri$1 || !Ri$1.has(u2)))) {
                f2.flags |= 65536;
                b2 &= -b2;
                f2.lanes |= b2;
                var F2 = Qi$1(f2, h2, b2);
                ph(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Sk(c2);
    } catch (na) {
      b2 = na;
      Y === c2 && null !== c2 && (Y = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Jk() {
  var a = mk.current;
  mk.current = Rh;
  return null === a ? Rh : a;
}
function tj() {
  if (0 === T || 3 === T || 2 === T) T = 4;
  null === Q || 0 === (rh & 268435455) && 0 === (qk & 268435455) || Ck(Q, Z);
}
function Ik(a, b2) {
  var c2 = K;
  K |= 2;
  var d = Jk();
  if (Q !== a || Z !== b2) uk = null, Kk(a, b2);
  do
    try {
      Tk();
      break;
    } catch (e) {
      Mk(a, e);
    }
  while (1);
  $g$1();
  K = c2;
  mk.current = d;
  if (null !== Y) throw Error(p(261));
  Q = null;
  Z = 0;
  return T;
}
function Tk() {
  for (; null !== Y; ) Uk(Y);
}
function Lk() {
  for (; null !== Y && !cc(); ) Uk(Y);
}
function Uk(a) {
  var b2 = Vk(a.alternate, a, fj);
  a.memoizedProps = a.pendingProps;
  null === b2 ? Sk(a) : Y = b2;
  nk.current = null;
}
function Sk(a) {
  var b2 = a;
  do {
    var c2 = b2.alternate;
    a = b2.return;
    if (0 === (b2.flags & 32768)) {
      if (c2 = Ej(c2, b2, fj), null !== c2) {
        Y = c2;
        return;
      }
    } else {
      c2 = Ij(c2, b2);
      if (null !== c2) {
        c2.flags &= 32767;
        Y = c2;
        return;
      }
      if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
      else {
        T = 6;
        Y = null;
        return;
      }
    }
    b2 = b2.sibling;
    if (null !== b2) {
      Y = b2;
      return;
    }
    Y = b2 = a;
  } while (null !== b2);
  0 === T && (T = 5);
}
function Pk(a, b2, c2) {
  var d = C$1, e = ok.transition;
  try {
    ok.transition = null, C$1 = 1, Wk(a, b2, c2, d);
  } finally {
    ok.transition = e, C$1 = d;
  }
  return null;
}
function Wk(a, b2, c2, d) {
  do
    Hk();
  while (null !== wk);
  if (0 !== (K & 6)) throw Error(p(327));
  c2 = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c2) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c2 === a.current) throw Error(p(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c2.lanes | c2.childLanes;
  Bc(a, f2);
  a === Q && (Y = Q = null, Z = 0);
  0 === (c2.subtreeFlags & 2064) && 0 === (c2.flags & 2064) || vk || (vk = true, Fk(hc, function() {
    Hk();
    return null;
  }));
  f2 = 0 !== (c2.flags & 15990);
  if (0 !== (c2.subtreeFlags & 15990) || f2) {
    f2 = ok.transition;
    ok.transition = null;
    var g = C$1;
    C$1 = 1;
    var h2 = K;
    K |= 4;
    nk.current = null;
    Oj(a, c2);
    dk(c2, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c2;
    hk(c2);
    dc();
    K = h2;
    C$1 = g;
    ok.transition = f2;
  } else a.current = c2;
  vk && (vk = false, wk = a, xk = e);
  f2 = a.pendingLanes;
  0 === f2 && (Ri$1 = null);
  mc(c2.stateNode);
  Dk(a, B());
  if (null !== b2) for (d = a.onRecoverableError, c2 = 0; c2 < b2.length; c2++) e = b2[c2], d(e.value, { componentStack: e.stack, digest: e.digest });
  if (Oi$1) throw Oi$1 = false, a = Pi$1, Pi$1 = null, a;
  0 !== (xk & 1) && 0 !== a.tag && Hk();
  f2 = a.pendingLanes;
  0 !== (f2 & 1) ? a === zk ? yk++ : (yk = 0, zk = a) : yk = 0;
  jg$1();
  return null;
}
function Hk() {
  if (null !== wk) {
    var a = Dc(xk), b2 = ok.transition, c2 = C$1;
    try {
      ok.transition = null;
      C$1 = 16 > a ? 16 : a;
      if (null === wk) var d = false;
      else {
        a = wk;
        wk = null;
        xk = 0;
        if (0 !== (K & 6)) throw Error(p(331));
        var e = K;
        K |= 4;
        for (V$1 = a.current; null !== V$1; ) {
          var f2 = V$1, g = f2.child;
          if (0 !== (V$1.flags & 16)) {
            var h2 = f2.deletions;
            if (null !== h2) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V$1 = l2; null !== V$1; ) {
                  var m2 = V$1;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2) q2.return = m2, V$1 = q2;
                  else for (; null !== V$1; ) {
                    m2 = V$1;
                    var r2 = m2.sibling, y2 = m2.return;
                    Sj(m2);
                    if (m2 === l2) {
                      V$1 = null;
                      break;
                    }
                    if (null !== r2) {
                      r2.return = y2;
                      V$1 = r2;
                      break;
                    }
                    V$1 = y2;
                  }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V$1 = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g) g.return = f2, V$1 = g;
          else b: for (; null !== V$1; ) {
            f2 = V$1;
            if (0 !== (f2.flags & 2048)) switch (f2.tag) {
              case 0:
              case 11:
              case 15:
                Pj(9, f2, f2.return);
            }
            var x2 = f2.sibling;
            if (null !== x2) {
              x2.return = f2.return;
              V$1 = x2;
              break b;
            }
            V$1 = f2.return;
          }
        }
        var w2 = a.current;
        for (V$1 = w2; null !== V$1; ) {
          g = V$1;
          var u2 = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u2) u2.return = g, V$1 = u2;
          else b: for (g = w2; null !== V$1; ) {
            h2 = V$1;
            if (0 !== (h2.flags & 2048)) try {
              switch (h2.tag) {
                case 0:
                case 11:
                case 15:
                  Qj(9, h2);
              }
            } catch (na) {
              W(h2, h2.return, na);
            }
            if (h2 === g) {
              V$1 = null;
              break b;
            }
            var F2 = h2.sibling;
            if (null !== F2) {
              F2.return = h2.return;
              V$1 = F2;
              break b;
            }
            V$1 = h2.return;
          }
        }
        K = e;
        jg$1();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {
          lc.onPostCommitFiberRoot(kc, a);
        } catch (na) {
        }
        d = true;
      }
      return d;
    } finally {
      C$1 = c2, ok.transition = b2;
    }
  }
  return false;
}
function Xk(a, b2, c2) {
  b2 = Ji$1(c2, b2);
  b2 = Ni$1(a, b2, 1);
  a = nh(a, b2, 1);
  b2 = R();
  null !== a && (Ac(a, 1, b2), Dk(a, b2));
}
function W(a, b2, c2) {
  if (3 === a.tag) Xk(a, a, c2);
  else for (; null !== b2; ) {
    if (3 === b2.tag) {
      Xk(b2, a, c2);
      break;
    } else if (1 === b2.tag) {
      var d = b2.stateNode;
      if ("function" === typeof b2.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ri$1 || !Ri$1.has(d))) {
        a = Ji$1(c2, a);
        a = Qi$1(b2, a, 1);
        b2 = nh(b2, a, 1);
        a = R();
        null !== b2 && (Ac(b2, 1, a), Dk(b2, a));
        break;
      }
    }
    b2 = b2.return;
  }
}
function Ti$1(a, b2, c2) {
  var d = a.pingCache;
  null !== d && d.delete(b2);
  b2 = R();
  a.pingedLanes |= a.suspendedLanes & c2;
  Q === a && (Z & c2) === c2 && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - fk ? Kk(a, 0) : rk |= c2);
  Dk(a, b2);
}
function Yk(a, b2) {
  0 === b2 && (0 === (a.mode & 1) ? b2 = 1 : (b2 = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c2 = R();
  a = ih(a, b2);
  null !== a && (Ac(a, b2, c2), Dk(a, c2));
}
function uj(a) {
  var b2 = a.memoizedState, c2 = 0;
  null !== b2 && (c2 = b2.retryLane);
  Yk(a, c2);
}
function bk(a, b2) {
  var c2 = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c2 = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p(314));
  }
  null !== d && d.delete(b2);
  Yk(a, c2);
}
var Vk;
Vk = function(a, b2, c2) {
  if (null !== a) if (a.memoizedProps !== b2.pendingProps || Wf.current) dh = true;
  else {
    if (0 === (a.lanes & c2) && 0 === (b2.flags & 128)) return dh = false, yj(a, b2, c2);
    dh = 0 !== (a.flags & 131072) ? true : false;
  }
  else dh = false, I$1 && 0 !== (b2.flags & 1048576) && ug(b2, ng$1, b2.index);
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      var d = b2.type;
      ij(a, b2);
      a = b2.pendingProps;
      var e = Yf(b2, H.current);
      ch(b2, c2);
      e = Nh(null, b2, d, a, e, c2);
      var f2 = Sh();
      b2.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b2.tag = 1, b2.memoizedState = null, b2.updateQueue = null, Zf(d) ? (f2 = true, cg$1(b2)) : f2 = false, b2.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, kh(b2), e.updater = Ei$1, b2.stateNode = e, e._reactInternals = b2, Ii$1(b2, d, a, c2), b2 = jj(null, b2, d, true, f2, c2)) : (b2.tag = 0, I$1 && f2 && vg$1(b2), Xi$1(null, b2, e, c2), b2 = b2.child);
      return b2;
    case 16:
      d = b2.elementType;
      a: {
        ij(a, b2);
        a = b2.pendingProps;
        e = d._init;
        d = e(d._payload);
        b2.type = d;
        e = b2.tag = Zk(d);
        a = Ci$1(d, a);
        switch (e) {
          case 0:
            b2 = cj(null, b2, d, a, c2);
            break a;
          case 1:
            b2 = hj(null, b2, d, a, c2);
            break a;
          case 11:
            b2 = Yi$1(null, b2, d, a, c2);
            break a;
          case 14:
            b2 = $i$1(null, b2, d, Ci$1(d.type, a), c2);
            break a;
        }
        throw Error(p(
          306,
          d,
          ""
        ));
      }
      return b2;
    case 0:
      return d = b2.type, e = b2.pendingProps, e = b2.elementType === d ? e : Ci$1(d, e), cj(a, b2, d, e, c2);
    case 1:
      return d = b2.type, e = b2.pendingProps, e = b2.elementType === d ? e : Ci$1(d, e), hj(a, b2, d, e, c2);
    case 3:
      a: {
        kj(b2);
        if (null === a) throw Error(p(387));
        d = b2.pendingProps;
        f2 = b2.memoizedState;
        e = f2.element;
        lh(a, b2);
        qh(b2, d, null, c2);
        var g = b2.memoizedState;
        d = g.element;
        if (f2.isDehydrated) if (f2 = { element: d, isDehydrated: false, cache: g.cache, pendingSuspenseBoundaries: g.pendingSuspenseBoundaries, transitions: g.transitions }, b2.updateQueue.baseState = f2, b2.memoizedState = f2, b2.flags & 256) {
          e = Ji$1(Error(p(423)), b2);
          b2 = lj(a, b2, d, c2, e);
          break a;
        } else if (d !== e) {
          e = Ji$1(Error(p(424)), b2);
          b2 = lj(a, b2, d, c2, e);
          break a;
        } else for (yg = Lf(b2.stateNode.containerInfo.firstChild), xg = b2, I$1 = true, zg$1 = null, c2 = Vg(b2, null, d, c2), b2.child = c2; c2; ) c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
        else {
          Ig();
          if (d === e) {
            b2 = Zi$1(a, b2, c2);
            break a;
          }
          Xi$1(a, b2, d, c2);
        }
        b2 = b2.child;
      }
      return b2;
    case 5:
      return Ah(b2), null === a && Eg$1(b2), d = b2.type, e = b2.pendingProps, f2 = null !== a ? a.memoizedProps : null, g = e.children, Ef(d, e) ? g = null : null !== f2 && Ef(d, f2) && (b2.flags |= 32), gj(a, b2), Xi$1(a, b2, g, c2), b2.child;
    case 6:
      return null === a && Eg$1(b2), null;
    case 13:
      return oj(a, b2, c2);
    case 4:
      return yh(b2, b2.stateNode.containerInfo), d = b2.pendingProps, null === a ? b2.child = Ug$1(b2, null, d, c2) : Xi$1(a, b2, d, c2), b2.child;
    case 11:
      return d = b2.type, e = b2.pendingProps, e = b2.elementType === d ? e : Ci$1(d, e), Yi$1(a, b2, d, e, c2);
    case 7:
      return Xi$1(a, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return Xi$1(a, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return Xi$1(a, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d = b2.type._context;
        e = b2.pendingProps;
        f2 = b2.memoizedProps;
        g = e.value;
        G(Wg, d._currentValue);
        d._currentValue = g;
        if (null !== f2) if (He(f2.value, g)) {
          if (f2.children === e.children && !Wf.current) {
            b2 = Zi$1(a, b2, c2);
            break a;
          }
        } else for (f2 = b2.child, null !== f2 && (f2.return = b2); null !== f2; ) {
          var h2 = f2.dependencies;
          if (null !== h2) {
            g = f2.child;
            for (var k2 = h2.firstContext; null !== k2; ) {
              if (k2.context === d) {
                if (1 === f2.tag) {
                  k2 = mh(-1, c2 & -c2);
                  k2.tag = 2;
                  var l2 = f2.updateQueue;
                  if (null !== l2) {
                    l2 = l2.shared;
                    var m2 = l2.pending;
                    null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                    l2.pending = k2;
                  }
                }
                f2.lanes |= c2;
                k2 = f2.alternate;
                null !== k2 && (k2.lanes |= c2);
                bh(
                  f2.return,
                  c2,
                  b2
                );
                h2.lanes |= c2;
                break;
              }
              k2 = k2.next;
            }
          } else if (10 === f2.tag) g = f2.type === b2.type ? null : f2.child;
          else if (18 === f2.tag) {
            g = f2.return;
            if (null === g) throw Error(p(341));
            g.lanes |= c2;
            h2 = g.alternate;
            null !== h2 && (h2.lanes |= c2);
            bh(g, c2, b2);
            g = f2.sibling;
          } else g = f2.child;
          if (null !== g) g.return = f2;
          else for (g = f2; null !== g; ) {
            if (g === b2) {
              g = null;
              break;
            }
            f2 = g.sibling;
            if (null !== f2) {
              f2.return = g.return;
              g = f2;
              break;
            }
            g = g.return;
          }
          f2 = g;
        }
        Xi$1(a, b2, e.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e = b2.type, d = b2.pendingProps.children, ch(b2, c2), e = eh(e), d = d(e), b2.flags |= 1, Xi$1(a, b2, d, c2), b2.child;
    case 14:
      return d = b2.type, e = Ci$1(d, b2.pendingProps), e = Ci$1(d.type, e), $i$1(a, b2, d, e, c2);
    case 15:
      return bj(a, b2, b2.type, b2.pendingProps, c2);
    case 17:
      return d = b2.type, e = b2.pendingProps, e = b2.elementType === d ? e : Ci$1(d, e), ij(a, b2), b2.tag = 1, Zf(d) ? (a = true, cg$1(b2)) : a = false, ch(b2, c2), Gi$1(b2, d, e), Ii$1(b2, d, e, c2), jj(null, b2, d, true, a, c2);
    case 19:
      return xj(a, b2, c2);
    case 22:
      return dj(a, b2, c2);
  }
  throw Error(p(156, b2.tag));
};
function Fk(a, b2) {
  return ac(a, b2);
}
function $k(a, b2, c2, d) {
  this.tag = a;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b2, c2, d) {
  return new $k(a, b2, c2, d);
}
function aj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function Zk(a) {
  if ("function" === typeof a) return aj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da) return 11;
    if (a === Ga) return 14;
  }
  return 2;
}
function Pg$1(a, b2) {
  var c2 = a.alternate;
  null === c2 ? (c2 = Bg(a.tag, b2, a.key, a.mode), c2.elementType = a.elementType, c2.type = a.type, c2.stateNode = a.stateNode, c2.alternate = a, a.alternate = c2) : (c2.pendingProps = b2, c2.type = a.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
  c2.flags = a.flags & 14680064;
  c2.childLanes = a.childLanes;
  c2.lanes = a.lanes;
  c2.child = a.child;
  c2.memoizedProps = a.memoizedProps;
  c2.memoizedState = a.memoizedState;
  c2.updateQueue = a.updateQueue;
  b2 = a.dependencies;
  c2.dependencies = null === b2 ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a.sibling;
  c2.index = a.index;
  c2.ref = a.ref;
  return c2;
}
function Rg(a, b2, c2, d, e, f2) {
  var g = 2;
  d = a;
  if ("function" === typeof a) aj(a) && (g = 1);
  else if ("string" === typeof a) g = 5;
  else a: switch (a) {
    case ya:
      return Tg(c2.children, e, f2, b2);
    case za:
      g = 8;
      e |= 8;
      break;
    case Aa:
      return a = Bg(12, c2, b2, e | 2), a.elementType = Aa, a.lanes = f2, a;
    case Ea:
      return a = Bg(13, c2, b2, e), a.elementType = Ea, a.lanes = f2, a;
    case Fa:
      return a = Bg(19, c2, b2, e), a.elementType = Fa, a.lanes = f2, a;
    case Ia:
      return pj(c2, e, f2, b2);
    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case Ba:
          g = 10;
          break a;
        case Ca:
          g = 9;
          break a;
        case Da:
          g = 11;
          break a;
        case Ga:
          g = 14;
          break a;
        case Ha:
          g = 16;
          d = null;
          break a;
      }
      throw Error(p(130, null == a ? a : typeof a, ""));
  }
  b2 = Bg(g, c2, b2, e);
  b2.elementType = a;
  b2.type = d;
  b2.lanes = f2;
  return b2;
}
function Tg(a, b2, c2, d) {
  a = Bg(7, a, d, b2);
  a.lanes = c2;
  return a;
}
function pj(a, b2, c2, d) {
  a = Bg(22, a, d, b2);
  a.elementType = Ia;
  a.lanes = c2;
  a.stateNode = { isHidden: false };
  return a;
}
function Qg$1(a, b2, c2) {
  a = Bg(6, a, null, b2);
  a.lanes = c2;
  return a;
}
function Sg$1(a, b2, c2) {
  b2 = Bg(4, null !== a.children ? a.children : [], a.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b2;
}
function al(a, b2, c2, d, e) {
  this.tag = b2;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function bl(a, b2, c2, d, e, f2, g, h2, k2) {
  a = new al(a, b2, c2, h2, k2);
  1 === b2 ? (b2 = 1, true === f2 && (b2 |= 8)) : b2 = 0;
  f2 = Bg(3, null, null, b2);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = { element: d, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  kh(f2);
  return a;
}
function cl(a, b2, c2) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d ? null : "" + d, children: a, containerInfo: b2, implementation: c2 };
}
function dl(a) {
  if (!a) return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag) throw Error(p(170));
    var b2 = a;
    do {
      switch (b2.tag) {
        case 3:
          b2 = b2.stateNode.context;
          break a;
        case 1:
          if (Zf(b2.type)) {
            b2 = b2.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b2 = b2.return;
    } while (null !== b2);
    throw Error(p(171));
  }
  if (1 === a.tag) {
    var c2 = a.type;
    if (Zf(c2)) return bg(a, c2, b2);
  }
  return b2;
}
function el(a, b2, c2, d, e, f2, g, h2, k2) {
  a = bl(c2, d, true, a, e, f2, g, h2, k2);
  a.context = dl(null);
  c2 = a.current;
  d = R();
  e = yi$1(c2);
  f2 = mh(d, e);
  f2.callback = void 0 !== b2 && null !== b2 ? b2 : null;
  nh(c2, f2, e);
  a.current.lanes = e;
  Ac(a, e, d);
  Dk(a, d);
  return a;
}
function fl(a, b2, c2, d) {
  var e = b2.current, f2 = R(), g = yi$1(e);
  c2 = dl(c2);
  null === b2.context ? b2.context = c2 : b2.pendingContext = c2;
  b2 = mh(f2, g);
  b2.payload = { element: a };
  d = void 0 === d ? null : d;
  null !== d && (b2.callback = d);
  a = nh(e, b2, g);
  null !== a && (gi$1(a, e, g, f2), oh(a, e, g));
  return g;
}
function gl(a) {
  a = a.current;
  if (!a.child) return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function hl(a, b2) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c2 = a.retryLane;
    a.retryLane = 0 !== c2 && c2 < b2 ? c2 : b2;
  }
}
function il(a, b2) {
  hl(a, b2);
  (a = a.alternate) && hl(a, b2);
}
function jl() {
  return null;
}
var kl = "function" === typeof reportError ? reportError : function(a) {
  console.error(a);
};
function ll(a) {
  this._internalRoot = a;
}
ml.prototype.render = ll.prototype.render = function(a) {
  var b2 = this._internalRoot;
  if (null === b2) throw Error(p(409));
  fl(a, b2, null, null);
};
ml.prototype.unmount = ll.prototype.unmount = function() {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b2 = a.containerInfo;
    Rk(function() {
      fl(null, a, null, null);
    });
    b2[uf] = null;
  }
};
function ml(a) {
  this._internalRoot = a;
}
ml.prototype.unstable_scheduleHydration = function(a) {
  if (a) {
    var b2 = Hc();
    a = { blockedOn: null, target: a, priority: b2 };
    for (var c2 = 0; c2 < Qc.length && 0 !== b2 && b2 < Qc[c2].priority; c2++) ;
    Qc.splice(c2, 0, a);
    0 === c2 && Vc(a);
  }
};
function nl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function pl() {
}
function ql(a, b2, c2, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f2 = d;
      d = function() {
        var a2 = gl(g);
        f2.call(a2);
      };
    }
    var g = el(b2, d, a, 0, null, false, false, "", pl);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Rk();
    return g;
  }
  for (; e = a.lastChild; ) a.removeChild(e);
  if ("function" === typeof d) {
    var h2 = d;
    d = function() {
      var a2 = gl(k2);
      h2.call(a2);
    };
  }
  var k2 = bl(a, 0, false, null, null, false, false, "", pl);
  a._reactRootContainer = k2;
  a[uf] = k2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Rk(function() {
    fl(b2, k2, c2, d);
  });
  return k2;
}
function rl(a, b2, c2, d, e) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g = f2;
    if ("function" === typeof e) {
      var h2 = e;
      e = function() {
        var a2 = gl(g);
        h2.call(a2);
      };
    }
    fl(b2, g, a, e);
  } else g = ql(c2, b2, a, e, d);
  return gl(g);
}
Ec = function(a) {
  switch (a.tag) {
    case 3:
      var b2 = a.stateNode;
      if (b2.current.memoizedState.isDehydrated) {
        var c2 = tc(b2.pendingLanes);
        0 !== c2 && (Cc(b2, c2 | 1), Dk(b2, B()), 0 === (K & 6) && (Gj = B() + 500, jg$1()));
      }
      break;
    case 13:
      Rk(function() {
        var b3 = ih(a, 1);
        if (null !== b3) {
          var c3 = R();
          gi$1(b3, a, 1, c3);
        }
      }), il(a, 1);
  }
};
Fc = function(a) {
  if (13 === a.tag) {
    var b2 = ih(a, 134217728);
    if (null !== b2) {
      var c2 = R();
      gi$1(b2, a, 134217728, c2);
    }
    il(a, 134217728);
  }
};
Gc = function(a) {
  if (13 === a.tag) {
    var b2 = yi$1(a), c2 = ih(a, b2);
    if (null !== c2) {
      var d = R();
      gi$1(c2, a, b2, d);
    }
    il(a, b2);
  }
};
Hc = function() {
  return C$1;
};
Ic = function(a, b2) {
  var c2 = C$1;
  try {
    return C$1 = a, b2();
  } finally {
    C$1 = c2;
  }
};
yb = function(a, b2, c2) {
  switch (b2) {
    case "input":
      bb(a, c2);
      b2 = c2.name;
      if ("radio" === c2.type && null != b2) {
        for (c2 = a; c2.parentNode; ) c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d = c2[b2];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(p(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c2);
      break;
    case "select":
      b2 = c2.value, null != b2 && fb(a, !!c2.multiple, b2, false);
  }
};
Gb = Qk;
Hb = Rk;
var sl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Qk] }, tl = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" };
var ul = { bundleType: tl.bundleType, version: tl.version, rendererPackageName: tl.rendererPackageName, rendererConfig: tl.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
  a = Zb(a);
  return null === a ? null : a.stateNode;
}, findFiberByHostInstance: tl.findFiberByHostInstance || jl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!vl.isDisabled && vl.supportsFiber) try {
    kc = vl.inject(ul), lc = vl;
  } catch (a) {
  }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
reactDom_production_min.createPortal = function(a, b2) {
  var c2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!nl(b2)) throw Error(p(200));
  return cl(a, b2, null, c2);
};
reactDom_production_min.createRoot = function(a, b2) {
  if (!nl(a)) throw Error(p(299));
  var c2 = false, d = "", e = kl;
  null !== b2 && void 0 !== b2 && (true === b2.unstable_strictMode && (c2 = true), void 0 !== b2.identifierPrefix && (d = b2.identifierPrefix), void 0 !== b2.onRecoverableError && (e = b2.onRecoverableError));
  b2 = bl(a, 1, false, null, null, c2, false, d, e);
  a[uf] = b2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ll(b2);
};
reactDom_production_min.findDOMNode = function(a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b2 = a._reactInternals;
  if (void 0 === b2) {
    if ("function" === typeof a.render) throw Error(p(188));
    a = Object.keys(a).join(",");
    throw Error(p(268, a));
  }
  a = Zb(b2);
  a = null === a ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function(a) {
  return Rk(a);
};
reactDom_production_min.hydrate = function(a, b2, c2) {
  if (!ol(b2)) throw Error(p(200));
  return rl(null, a, b2, true, c2);
};
reactDom_production_min.hydrateRoot = function(a, b2, c2) {
  if (!nl(a)) throw Error(p(405));
  var d = null != c2 && c2.hydratedSources || null, e = false, f2 = "", g = kl;
  null !== c2 && void 0 !== c2 && (true === c2.unstable_strictMode && (e = true), void 0 !== c2.identifierPrefix && (f2 = c2.identifierPrefix), void 0 !== c2.onRecoverableError && (g = c2.onRecoverableError));
  b2 = el(b2, null, a, 1, null != c2 ? c2 : null, e, false, f2, g);
  a[uf] = b2.current;
  sf(a);
  if (d) for (a = 0; a < d.length; a++) c2 = d[a], e = c2._getVersion, e = e(c2._source), null == b2.mutableSourceEagerHydrationData ? b2.mutableSourceEagerHydrationData = [c2, e] : b2.mutableSourceEagerHydrationData.push(
    c2,
    e
  );
  return new ml(b2);
};
reactDom_production_min.render = function(a, b2, c2) {
  if (!ol(b2)) throw Error(p(200));
  return rl(null, a, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a) {
  if (!ol(a)) throw Error(p(40));
  return a._reactRootContainer ? (Rk(function() {
    rl(null, null, a, false, function() {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Qk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a, b2, c2, d) {
  if (!ol(c2)) throw Error(p(200));
  if (null == a || void 0 === a._reactInternals) throw Error(p(38));
  return rl(a, b2, c2, false, d);
};
reactDom_production_min.version = "18.3.1-next-f1338f8080-20240426";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
var m = reactDomExports;
{
  client.createRoot = m.createRoot;
  client.hydrateRoot = m.hydrateRoot;
}
/**
 * @remix-run/router v1.20.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$2() {
  _extends$2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
var Action;
(function(Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to2) {
    return typeof to2 === "string" ? to2 : createPath(to2);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined") console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index
  };
}
function createLocation(current, to2, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location = _extends$2({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to2 === "string" ? parsePath(to2) : to2, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to2 && to2.key || key || createKey()
  });
  return location;
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action = Action.Pop;
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends$2({}, globalHistory.state, {
      idx: index
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({
        action,
        location: history.location,
        delta
      });
    }
  }
  function push(to2, state) {
    action = Action.Push;
    let location = createLocation(history.location, to2, state);
    index = getIndex() + 1;
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 1
      });
    }
  }
  function replace(to2, state) {
    action = Action.Replace;
    let location = createLocation(history.location, to2, state);
    index = getIndex();
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 0
      });
    }
  }
  function createURL(to2) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to2 === "string" ? to2 : createPath(to2);
    href = href.replace(/ $/, "%20");
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to2) {
      return createHref(window2, to2);
    },
    createURL,
    encodeLocation(to2) {
      let url = createURL(to2);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
var ResultType;
(function(ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(branches[i], decoded, allowPartial);
  }
  return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0) return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a, b2) => a.score !== b2.score ? b2.score - a.score : compareIndexes(a.routesMeta.map((meta) => meta.childrenIndex), b2.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:[\w-]+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s) => s === "*";
function computeScore(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b2) {
  let siblings = a.length === b2.length && a.slice(0, -1).every((n2, i) => n2 === b2[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b2[b2.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname, allowPartial) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    let route = meta.route;
    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {
      match = matchPath({
        path: meta.relativePath,
        caseSensitive: meta.caseSensitive,
        end: false
      }, remainingPathname);
    }
    if (!match) {
      return null;
    }
    Object.assign(matchedParams, match.params);
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce((memo, _ref, index) => {
    let {
      paramName,
      isOptional
    } = _ref;
    if (paramName === "*") {
      let splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    const value = captureGroups[index];
    if (isOptional && !value) {
      memo[paramName] = void 0;
    } else {
      memo[paramName] = (value || "").replace(/%2F/g, "/");
    }
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (_2, paramName, isOptional) => {
    params.push({
      paramName,
      isOptional: isOptional != null
    });
    return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    params.push({
      paramName: "*"
    });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v2) => decodeURIComponent(v2).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to2, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to2 === "string" ? parsePath(to2) : to2;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);
}
function getResolveToMatches(matches, v7_relativeSplatPath) {
  let pathMatches = getPathContributingMatches(matches);
  if (v7_relativeSplatPath) {
    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);
  }
  return pathMatches.map((match) => match.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to2;
  if (typeof toArg === "string") {
    to2 = parsePath(toArg);
  } else {
    to2 = _extends$2({}, toArg);
    invariant(!to2.pathname || !to2.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to2));
    invariant(!to2.pathname || !to2.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to2));
    invariant(!to2.search || !to2.search.includes("#"), getInvalidPathError("#", "search", "hash", to2));
  }
  let isEmptyPath = toArg === "" || to2.pathname === "";
  let toPathname = isEmptyPath ? "/" : to2.pathname;
  let from2;
  if (toPathname == null) {
    from2 = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to2.pathname = toSegments.join("/");
    }
    from2 = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to2, from2);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
const normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
/**
 * React Router v6.27.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
const DataRouterContext = /* @__PURE__ */ reactExports.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports.createContext(null);
function useHref(to2, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    basename,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    hash,
    pathname,
    search
  } = useResolvedPath(to2, {
    relative
  });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let {
    basename,
    future,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to2, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current) return;
    if (typeof to2 === "number") {
      navigator2.go(to2);
      return;
    }
    let path = resolveTo(to2, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
function useResolvedPath(to2, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2;
  let {
    future
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));
  return reactExports.useMemo(() => resolveTo(to2, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to2, routePathnamesJson, locationPathname, relative]);
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState, future);
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
      value: {
        location: _extends$1({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ reactExports.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports.Component {
  constructor(props2) {
    super(props2);
    this.state = {
      location: props2.location,
      revalidation: props2.revalidation,
      error: props2.error
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props2, state) {
    if (state.location !== props2.location || state.revalidation !== "idle" && props2.revalidation === "idle") {
      return {
        error: props2.error,
        location: props2.location,
        revalidation: props2.revalidation
      };
    }
    return {
      error: props2.error !== void 0 ? props2.error : state.error,
      location: state.location,
      revalidation: props2.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState, future) {
  var _dataRouterState;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (future === void 0) {
    future = null;
  }
  if (matches == null) {
    var _future;
    if (!dataRouterState) {
      return null;
    }
    if (dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]) !== void 0);
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState && future && future.v7_partialHydration) {
    for (let i = 0; i < renderedMatches.length; i++) {
      let match = renderedMatches[i];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i;
      }
      if (match.route.id) {
        let {
          loaderData,
          errors: errors2
        } = dataRouterState;
        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === void 0 && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight((outlet, match, index) => {
    let error;
    let shouldRenderHydrateFallback = false;
    let errorElement = null;
    let hydrateFallbackElement = null;
    if (dataRouterState) {
      error = errors && match.route.id ? errors[match.route.id] : void 0;
      errorElement = match.route.errorElement || defaultErrorElement;
      if (renderFallback) {
        if (fallbackIndex < 0 && index === 0) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = null;
        } else if (fallbackIndex === index) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = match.route.hydrateFallbackElement || null;
        }
      }
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
    let getChildren = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (shouldRenderHydrateFallback) {
        children = hydrateFallbackElement;
      } else if (match.route.Component) {
        children = /* @__PURE__ */ reactExports.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children = match.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: true
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook$1 = /* @__PURE__ */ function(DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
  return DataRouterHook2;
}(DataRouterHook$1 || {});
var DataRouterStateHook$1 = /* @__PURE__ */ function(DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
  return DataRouterStateHook2;
}(DataRouterStateHook$1 || {});
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useRouteError() {
  var _state$errors;
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error !== void 0) {
    return error;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id2 = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to2, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current) return;
    if (typeof to2 === "number") {
      router.navigate(to2);
    } else {
      router.navigate(to2, _extends$1({
        fromRouteId: id2
      }, options));
    }
  }, [router, id2]);
  return navigate;
}
function Route(_props) {
  invariant(false);
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = false,
    future
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp,
    future: _extends$1({
      v7_relativeSplatPath: false
    }, future)
  }), [basename, future, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children,
    location
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children), location);
}
new Promise(() => {
});
function createRoutesFromChildren(children, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  let routes = [];
  reactExports.Children.forEach(children, (element, index) => {
    if (!/* @__PURE__ */ reactExports.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index];
    if (element.type === reactExports.Fragment) {
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    !(element.type === Route) ? invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ? invariant(false) : void 0;
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
/**
 * React Router DOM v6.27.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
const _excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "viewTransition"];
const REACT_ROUTER_VERSION = "6";
try {
  window.__reactRouterVersion = REACT_ROUTER_VERSION;
} catch (e) {
}
const START_TRANSITION = "startTransition";
const startTransitionImpl = React$7[START_TRANSITION];
function BrowserRouter(_ref4) {
  let {
    basename,
    children,
    future,
    window: window2
  } = _ref4;
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window2,
      v5Compat: true
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history.action,
    location: history.location
  });
  let {
    v7_startTransition
  } = future || {};
  let setState = reactExports.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  reactExports.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ reactExports.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future
  });
}
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const Link = /* @__PURE__ */ reactExports.forwardRef(function LinkWithRef(_ref7, ref) {
  let {
    onClick,
    relative,
    reloadDocument,
    replace: replace2,
    state,
    target,
    to: to2,
    preventScrollReset,
    viewTransition
  } = _ref7, rest = _objectWithoutPropertiesLoose(_ref7, _excluded);
  let {
    basename
  } = reactExports.useContext(NavigationContext);
  let absoluteHref;
  let isExternal = false;
  if (typeof to2 === "string" && ABSOLUTE_URL_REGEX.test(to2)) {
    absoluteHref = to2;
    if (isBrowser) {
      try {
        let currentUrl = new URL(window.location.href);
        let targetUrl = to2.startsWith("//") ? new URL(currentUrl.protocol + to2) : new URL(to2);
        let path = stripBasename(targetUrl.pathname, basename);
        if (targetUrl.origin === currentUrl.origin && path != null) {
          to2 = path + targetUrl.search + targetUrl.hash;
        } else {
          isExternal = true;
        }
      } catch (e) {
      }
    }
  }
  let href = useHref(to2, {
    relative
  });
  let internalOnClick = useLinkClickHandler(to2, {
    replace: replace2,
    state,
    target,
    preventScrollReset,
    relative,
    viewTransition
  });
  function handleClick(event) {
    if (onClick) onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ reactExports.createElement("a", _extends({}, rest, {
      href: absoluteHref || href,
      onClick: isExternal || reloadDocument ? onClick : handleClick,
      ref,
      target
    }))
  );
});
var DataRouterHook;
(function(DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmit"] = "useSubmit";
  DataRouterHook2["UseSubmitFetcher"] = "useSubmitFetcher";
  DataRouterHook2["UseFetcher"] = "useFetcher";
  DataRouterHook2["useViewTransitionState"] = "useViewTransitionState";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseFetcher"] = "useFetcher";
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function useLinkClickHandler(to2, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative,
    viewTransition
  } = _temp === void 0 ? {} : _temp;
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to2, {
    relative
  });
  return reactExports.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
      navigate(to2, {
        replace: replace2,
        state,
        preventScrollReset,
        relative,
        viewTransition
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to2, preventScrollReset, relative, viewTransition]);
}
const eyebrow1 = "" + new URL("eyebrow1-BxOwqokh.jpg", import.meta.url).href;
const lips1 = "" + new URL("lips1-DMcuRJ-z.jpg", import.meta.url).href;
const cheeks = "" + new URL("cheeks-8fLNYczA.jpg", import.meta.url).href;
const eyeshadow = "" + new URL("eyeshadow-CEPpvQbA.jpg", import.meta.url).href;
const model = "" + new URL("model-Cp09--Yg.png", import.meta.url).href;
var lib$1 = {};
var Carousel$3 = {};
var utils$3 = {};
var clones = {};
(function(exports) {
  function getOriginalCounterPart(index, _a, childrenArr) {
    var slidesToShow = _a.slidesToShow, currentSlide = _a.currentSlide;
    return childrenArr.length > 2 * slidesToShow ? index + 2 * slidesToShow : currentSlide >= childrenArr.length ? childrenArr.length + index : index;
  }
  function getOriginalIndexLookupTableByClones(slidesToShow, childrenArr) {
    if (childrenArr.length > 2 * slidesToShow) {
      for (var table = {}, firstBeginningOfClones = childrenArr.length - 2 * slidesToShow, firstEndOfClones = childrenArr.length - firstBeginningOfClones, firstCount = firstBeginningOfClones, i = 0; i < firstEndOfClones; i++) table[i] = firstCount, firstCount++;
      var secondBeginningOfClones = childrenArr.length + firstEndOfClones, secondEndOfClones = secondBeginningOfClones + childrenArr.slice(0, 2 * slidesToShow).length, secondCount = 0;
      for (i = secondBeginningOfClones; i <= secondEndOfClones; i++) table[i] = secondCount, secondCount++;
      var originalEnd = secondBeginningOfClones, originalCounter = 0;
      for (i = firstEndOfClones; i < originalEnd; i++) table[i] = originalCounter, originalCounter++;
      return table;
    }
    table = {};
    var totalSlides = 3 * childrenArr.length, count = 0;
    for (i = 0; i < totalSlides; i++) table[i] = count, ++count === childrenArr.length && (count = 0);
    return table;
  }
  function getClones(slidesToShow, childrenArr) {
    return childrenArr.length < slidesToShow ? childrenArr : childrenArr.length > 2 * slidesToShow ? childrenArr.slice(childrenArr.length - 2 * slidesToShow, childrenArr.length).concat(childrenArr, childrenArr.slice(0, 2 * slidesToShow)) : childrenArr.concat(childrenArr, childrenArr);
  }
  function getInitialSlideInInfiniteMode(slidesToShow, childrenArr) {
    return childrenArr.length > 2 * slidesToShow ? 2 * slidesToShow : childrenArr.length;
  }
  function checkClonesPosition(_a, childrenArr, props2) {
    var isReachingTheEnd, currentSlide = _a.currentSlide, slidesToShow = _a.slidesToShow, itemWidth = _a.itemWidth, totalItems = _a.totalItems, nextSlide = 0, nextPosition = 0, isReachingTheStart = 0 === currentSlide, originalFirstSlide = childrenArr.length - (childrenArr.length - 2 * slidesToShow);
    return childrenArr.length < slidesToShow ? (nextPosition = nextSlide = 0, isReachingTheStart = isReachingTheEnd = false) : childrenArr.length > 2 * slidesToShow ? ((isReachingTheEnd = currentSlide >= originalFirstSlide + childrenArr.length) && (nextPosition = -itemWidth * (nextSlide = currentSlide - childrenArr.length)), isReachingTheStart && (nextPosition = -itemWidth * (nextSlide = originalFirstSlide + (childrenArr.length - 2 * slidesToShow)))) : ((isReachingTheEnd = currentSlide >= 2 * childrenArr.length) && (nextPosition = -itemWidth * (nextSlide = currentSlide - childrenArr.length)), isReachingTheStart && (nextPosition = props2.showDots ? -itemWidth * (nextSlide = childrenArr.length) : -itemWidth * (nextSlide = totalItems / 3))), { isReachingTheEnd, isReachingTheStart, nextSlide, nextPosition };
  }
  Object.defineProperty(exports, "__esModule", { value: true }), exports.getOriginalCounterPart = getOriginalCounterPart, exports.getOriginalIndexLookupTableByClones = getOriginalIndexLookupTableByClones, exports.getClones = getClones, exports.getInitialSlideInInfiniteMode = getInitialSlideInInfiniteMode, exports.checkClonesPosition = checkClonesPosition;
})(clones);
var elementWidth = {};
Object.defineProperty(elementWidth, "__esModule", { value: true });
function getPartialVisibilityGutter(responsive2, partialVisible, serverSideDeviceType, clientSideDeviceType) {
  var gutter = 0, deviceType = clientSideDeviceType || serverSideDeviceType;
  return partialVisible && deviceType && (gutter = responsive2[deviceType].partialVisibilityGutter || responsive2[deviceType].paritialVisibilityGutter), gutter;
}
function getWidthFromDeviceType(deviceType, responsive2) {
  var itemWidth;
  responsive2[deviceType] && (itemWidth = (100 / responsive2[deviceType].items).toFixed(1));
  return itemWidth;
}
function getItemClientSideWidth(props2, slidesToShow, containerWidth) {
  return Math.round(containerWidth / (slidesToShow + (props2.centerMode ? 1 : 0)));
}
elementWidth.getPartialVisibilityGutter = getPartialVisibilityGutter, elementWidth.getWidthFromDeviceType = getWidthFromDeviceType, elementWidth.getItemClientSideWidth = getItemClientSideWidth;
var common$1 = {};
Object.defineProperty(common$1, "__esModule", { value: true });
var elementWidth_1$1 = elementWidth;
function notEnoughChildren(state) {
  var slidesToShow = state.slidesToShow;
  return state.totalItems < slidesToShow;
}
function getInitialState(state, props2) {
  var flexBisis, domLoaded = state.domLoaded, slidesToShow = state.slidesToShow, containerWidth = state.containerWidth, itemWidth = state.itemWidth, deviceType = props2.deviceType, responsive2 = props2.responsive, ssr = props2.ssr, partialVisbile = props2.partialVisbile, partialVisible = props2.partialVisible, domFullyLoaded = Boolean(domLoaded && slidesToShow && containerWidth && itemWidth);
  ssr && deviceType && !domFullyLoaded && (flexBisis = elementWidth_1$1.getWidthFromDeviceType(deviceType, responsive2));
  var shouldRenderOnSSR = Boolean(ssr && deviceType && !domFullyLoaded && flexBisis);
  return { shouldRenderOnSSR, flexBisis, domFullyLoaded, partialVisibilityGutter: elementWidth_1$1.getPartialVisibilityGutter(responsive2, partialVisbile || partialVisible, deviceType, state.deviceType), shouldRenderAtAll: shouldRenderOnSSR || domFullyLoaded };
}
function getIfSlideIsVisbile(index, state) {
  var currentSlide = state.currentSlide, slidesToShow = state.slidesToShow;
  return currentSlide <= index && index < currentSlide + slidesToShow;
}
function getTransformForCenterMode(state, props2, transformPlaceHolder) {
  var transform = transformPlaceHolder || state.transform;
  return !props2.infinite && 0 === state.currentSlide || notEnoughChildren(state) ? transform : transform + state.itemWidth / 2;
}
function isInLeftEnd(_a) {
  return !(0 < _a.currentSlide);
}
function isInRightEnd(_a) {
  var currentSlide = _a.currentSlide, totalItems = _a.totalItems;
  return !(currentSlide + _a.slidesToShow < totalItems);
}
function getTransformForPartialVsibile(state, partialVisibilityGutter, props2, transformPlaceHolder) {
  void 0 === partialVisibilityGutter && (partialVisibilityGutter = 0);
  var currentSlide = state.currentSlide, slidesToShow = state.slidesToShow, isRightEndReach = isInRightEnd(state), shouldRemoveRightGutter = !props2.infinite && isRightEndReach, baseTransform = transformPlaceHolder || state.transform;
  if (notEnoughChildren(state)) return baseTransform;
  var transform = baseTransform + currentSlide * partialVisibilityGutter;
  return shouldRemoveRightGutter ? transform + (state.containerWidth - (state.itemWidth - partialVisibilityGutter) * slidesToShow) : transform;
}
function parsePosition(props2, position) {
  return props2.rtl ? -1 * position : position;
}
function getTransform(state, props2, transformPlaceHolder) {
  var partialVisbile = props2.partialVisbile, partialVisible = props2.partialVisible, responsive2 = props2.responsive, deviceType = props2.deviceType, centerMode = props2.centerMode, transform = transformPlaceHolder || state.transform, partialVisibilityGutter = elementWidth_1$1.getPartialVisibilityGutter(responsive2, partialVisbile || partialVisible, deviceType, state.deviceType);
  return parsePosition(props2, partialVisible || partialVisbile ? getTransformForPartialVsibile(state, partialVisibilityGutter, props2, transformPlaceHolder) : centerMode ? getTransformForCenterMode(state, props2, transformPlaceHolder) : transform);
}
function getSlidesToSlide(state, props2) {
  var domLoaded = state.domLoaded, slidesToShow = state.slidesToShow, containerWidth = state.containerWidth, itemWidth = state.itemWidth, deviceType = props2.deviceType, responsive2 = props2.responsive, slidesToScroll = props2.slidesToSlide || 1, domFullyLoaded = Boolean(domLoaded && slidesToShow && containerWidth && itemWidth);
  return props2.ssr && props2.deviceType && !domFullyLoaded && Object.keys(responsive2).forEach(function(device) {
    var slidesToSlide = responsive2[device].slidesToSlide;
    deviceType === device && slidesToSlide && (slidesToScroll = slidesToSlide);
  }), domFullyLoaded && Object.keys(responsive2).forEach(function(item) {
    var _a = responsive2[item], breakpoint = _a.breakpoint, slidesToSlide = _a.slidesToSlide, max2 = breakpoint.max, min2 = breakpoint.min;
    slidesToSlide && window.innerWidth >= min2 && window.innerWidth <= max2 && (slidesToScroll = slidesToSlide);
  }), slidesToScroll;
}
common$1.notEnoughChildren = notEnoughChildren, common$1.getInitialState = getInitialState, common$1.getIfSlideIsVisbile = getIfSlideIsVisbile, common$1.getTransformForCenterMode = getTransformForCenterMode, common$1.isInLeftEnd = isInLeftEnd, common$1.isInRightEnd = isInRightEnd, common$1.getTransformForPartialVsibile = getTransformForPartialVsibile, common$1.parsePosition = parsePosition, common$1.getTransform = getTransform, common$1.getSlidesToSlide = getSlidesToSlide;
var throttle$2 = {};
Object.defineProperty(throttle$2, "__esModule", { value: true });
var throttle$1 = function(func2, limit, setIsInThrottle) {
  var inThrottle;
  return function() {
    var args = arguments;
    inThrottle || (func2.apply(this, args), inThrottle = true, "function" == typeof setIsInThrottle && setIsInThrottle(true), setTimeout(function() {
      inThrottle = false, "function" == typeof setIsInThrottle && setIsInThrottle(false);
    }, limit));
  };
};
throttle$2.default = throttle$1;
var throwError = {};
(function(exports) {
  function throwError2(state, props2) {
    var partialVisbile = props2.partialVisbile, partialVisible = props2.partialVisible, centerMode = props2.centerMode, ssr = props2.ssr, responsive2 = props2.responsive;
    if ((partialVisbile || partialVisible) && centerMode) throw new Error("center mode can not be used at the same time with partialVisible");
    if (!responsive2) throw ssr ? new Error("ssr mode need to be used in conjunction with responsive prop") : new Error("Responsive prop is needed for deciding the amount of items to show on the screen");
    if (responsive2 && "object" != typeof responsive2) throw new Error("responsive prop must be an object");
  }
  Object.defineProperty(exports, "__esModule", { value: true }), exports.default = throwError2;
})(throwError);
var next = {};
Object.defineProperty(next, "__esModule", { value: true });
var common_1$5 = common$1;
function populateNextSlides(state, props2, slidesHavePassed) {
  void 0 === slidesHavePassed && (slidesHavePassed = 0);
  var nextSlides, nextPosition, slidesToShow = state.slidesToShow, currentSlide = state.currentSlide, itemWidth = state.itemWidth, totalItems = state.totalItems, slidesToSlide = common_1$5.getSlidesToSlide(state, props2), nextMaximumSlides = currentSlide + 1 + slidesHavePassed + slidesToShow + (0 < slidesHavePassed ? 0 : slidesToSlide);
  return nextPosition = nextMaximumSlides <= totalItems ? -itemWidth * (nextSlides = currentSlide + slidesHavePassed + (0 < slidesHavePassed ? 0 : slidesToSlide)) : totalItems < nextMaximumSlides && currentSlide !== totalItems - slidesToShow ? -itemWidth * (nextSlides = totalItems - slidesToShow) : nextSlides = void 0, { nextSlides, nextPosition };
}
next.populateNextSlides = populateNextSlides;
var previous = {};
Object.defineProperty(previous, "__esModule", { value: true });
var React$5 = reactExports, common_1$4 = common$1, common_2 = common$1;
function populatePreviousSlides(state, props2, slidesHavePassed) {
  void 0 === slidesHavePassed && (slidesHavePassed = 0);
  var nextSlides, nextPosition, currentSlide = state.currentSlide, itemWidth = state.itemWidth, slidesToShow = state.slidesToShow, children = props2.children, showDots = props2.showDots, infinite = props2.infinite, slidesToSlide = common_1$4.getSlidesToSlide(state, props2), nextMaximumSlides = currentSlide - slidesHavePassed - (0 < slidesHavePassed ? 0 : slidesToSlide), additionalSlides = (React$5.Children.toArray(children).length - slidesToShow) % slidesToSlide;
  return nextPosition = 0 <= nextMaximumSlides ? (nextSlides = nextMaximumSlides, showDots && !infinite && 0 < additionalSlides && common_2.isInRightEnd(state) && (nextSlides = currentSlide - additionalSlides), -itemWidth * nextSlides) : nextSlides = nextMaximumSlides < 0 && 0 !== currentSlide ? 0 : void 0, { nextSlides, nextPosition };
}
previous.populatePreviousSlides = populatePreviousSlides;
var mouseOrTouchMove = {};
(function(exports) {
  function populateSlidesOnMouseTouchMove(state, props2, initialX, lastX, clientX, transformPlaceHolder) {
    var direction, nextPosition, itemWidth = state.itemWidth, slidesToShow = state.slidesToShow, totalItems = state.totalItems, currentSlide = state.currentSlide, infinite = props2.infinite, canContinue = false, slidesHavePassedRight = Math.round((initialX - lastX) / itemWidth), slidesHavePassedLeft = Math.round((lastX - initialX) / itemWidth), isMovingLeft = initialX < clientX;
    if (clientX < initialX && !!(slidesHavePassedRight <= slidesToShow)) {
      direction = "right";
      var translateXLimit = Math.abs(-itemWidth * (totalItems - slidesToShow)), nextTranslate = transformPlaceHolder - (lastX - clientX), isLastSlide = currentSlide === totalItems - slidesToShow;
      (Math.abs(nextTranslate) <= translateXLimit || isLastSlide && infinite) && (nextPosition = nextTranslate, canContinue = true);
    }
    isMovingLeft && slidesHavePassedLeft <= slidesToShow && (direction = "left", ((nextTranslate = transformPlaceHolder + (clientX - lastX)) <= 0 || 0 === currentSlide && infinite) && (canContinue = true, nextPosition = nextTranslate));
    return { direction, nextPosition, canContinue };
  }
  Object.defineProperty(exports, "__esModule", { value: true }), exports.populateSlidesOnMouseTouchMove = populateSlidesOnMouseTouchMove;
})(mouseOrTouchMove);
Object.defineProperty(utils$3, "__esModule", { value: true });
var clones_1$2 = clones;
utils$3.getOriginalCounterPart = clones_1$2.getOriginalCounterPart, utils$3.getClones = clones_1$2.getClones, utils$3.checkClonesPosition = clones_1$2.checkClonesPosition, utils$3.getInitialSlideInInfiniteMode = clones_1$2.getInitialSlideInInfiniteMode;
var elementWidth_1 = elementWidth;
utils$3.getWidthFromDeviceType = elementWidth_1.getWidthFromDeviceType, utils$3.getPartialVisibilityGutter = elementWidth_1.getPartialVisibilityGutter, utils$3.getItemClientSideWidth = elementWidth_1.getItemClientSideWidth;
var common_1$3 = common$1;
utils$3.getInitialState = common_1$3.getInitialState, utils$3.getIfSlideIsVisbile = common_1$3.getIfSlideIsVisbile, utils$3.getTransformForCenterMode = common_1$3.getTransformForCenterMode, utils$3.getTransformForPartialVsibile = common_1$3.getTransformForPartialVsibile, utils$3.isInLeftEnd = common_1$3.isInLeftEnd, utils$3.isInRightEnd = common_1$3.isInRightEnd, utils$3.notEnoughChildren = common_1$3.notEnoughChildren, utils$3.getSlidesToSlide = common_1$3.getSlidesToSlide;
var throttle_1 = throttle$2;
utils$3.throttle = throttle_1.default;
var throwError_1 = throwError;
utils$3.throwError = throwError_1.default;
var next_1 = next;
utils$3.populateNextSlides = next_1.populateNextSlides;
var previous_1 = previous;
utils$3.populatePreviousSlides = previous_1.populatePreviousSlides;
var mouseOrTouchMove_1 = mouseOrTouchMove;
utils$3.populateSlidesOnMouseTouchMove = mouseOrTouchMove_1.populateSlidesOnMouseTouchMove;
var types = {};
var __extends$1 = commonjsGlobal && commonjsGlobal.__extends || /* @__PURE__ */ function() {
  var extendStatics = function(d, b2) {
    return (extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {
      d2.__proto__ = b3;
    } || function(d2, b3) {
      for (var p2 in b3) b3.hasOwnProperty(p2) && (d2[p2] = b3[p2]);
    })(d, b2);
  };
  return function(d, b2) {
    function __() {
      this.constructor = d;
    }
    extendStatics(d, b2), d.prototype = null === b2 ? Object.create(b2) : (__.prototype = b2.prototype, new __());
  };
}();
Object.defineProperty(types, "__esModule", { value: true });
var React$4 = reactExports;
function isMouseMoveEvent(e) {
  return "clientY" in e;
}
types.isMouseMoveEvent = isMouseMoveEvent;
var Carousel$2 = function(_super) {
  function Carousel2() {
    return null !== _super && _super.apply(this, arguments) || this;
  }
  return __extends$1(Carousel2, _super), Carousel2;
}(React$4.Component);
types.default = Carousel$2;
var Dots$1 = {};
var dots = {};
Object.defineProperty(dots, "__esModule", { value: true });
var clones_1$1 = clones, common_1$2 = common$1;
function getLookupTableForNextSlides(numberOfDotsToShow, state, props2, childrenArr) {
  var table = {}, slidesToSlide = common_1$2.getSlidesToSlide(state, props2);
  return Array(numberOfDotsToShow).fill(0).forEach(function(_2, i) {
    var nextSlide = clones_1$1.getOriginalCounterPart(i, state, childrenArr);
    if (0 === i) table[0] = nextSlide;
    else {
      var now2 = table[i - 1] + slidesToSlide;
      table[i] = now2;
    }
  }), table;
}
dots.getLookupTableForNextSlides = getLookupTableForNextSlides;
Object.defineProperty(Dots$1, "__esModule", { value: true });
var React$3 = reactExports, clones_1 = clones, dots_1 = dots, common_1$1 = common$1, Dots = function(_a) {
  var props2 = _a.props, state = _a.state, goToSlide = _a.goToSlide, getState = _a.getState, showDots = props2.showDots, customDot = props2.customDot, dotListClass = props2.dotListClass, infinite = props2.infinite, children = props2.children;
  if (!showDots || common_1$1.notEnoughChildren(state)) return null;
  var numberOfDotsToShow, currentSlide = state.currentSlide, slidesToShow = state.slidesToShow, slidesToSlide = common_1$1.getSlidesToSlide(state, props2), childrenArr = React$3.Children.toArray(children);
  numberOfDotsToShow = infinite ? Math.ceil(childrenArr.length / slidesToSlide) : Math.ceil((childrenArr.length - slidesToShow) / slidesToSlide) + 1;
  var nextSlidesTable = dots_1.getLookupTableForNextSlides(numberOfDotsToShow, state, props2, childrenArr), lookupTable = clones_1.getOriginalIndexLookupTableByClones(slidesToShow, childrenArr), currentSlides = lookupTable[currentSlide];
  return React$3.createElement("ul", { className: "react-multi-carousel-dot-list " + dotListClass }, Array(numberOfDotsToShow).fill(0).map(function(_2, index) {
    var isActive, nextSlide;
    if (infinite) {
      nextSlide = nextSlidesTable[index];
      var cloneIndex = lookupTable[nextSlide];
      isActive = currentSlides === cloneIndex || cloneIndex <= currentSlides && currentSlides < cloneIndex + slidesToSlide;
    } else {
      var maximumNextSlide = childrenArr.length - slidesToShow, possibileNextSlides = index * slidesToSlide;
      isActive = (nextSlide = maximumNextSlide < possibileNextSlides ? maximumNextSlide : possibileNextSlides) === currentSlide || nextSlide < currentSlide && currentSlide < nextSlide + slidesToSlide && currentSlide < childrenArr.length - slidesToShow;
    }
    return customDot ? React$3.cloneElement(customDot, { index, active: isActive, key: index, onClick: function() {
      return goToSlide(nextSlide);
    }, carouselState: getState() }) : React$3.createElement("li", { "data-index": index, key: index, className: "react-multi-carousel-dot " + (isActive ? "react-multi-carousel-dot--active" : "") }, React$3.createElement("button", { "aria-label": "Go to slide " + (index + 1), onClick: function() {
      return goToSlide(nextSlide);
    } }));
  }));
};
Dots$1.default = Dots;
var Arrows = {};
Object.defineProperty(Arrows, "__esModule", { value: true });
var React$2 = reactExports, LeftArrow = function(_a) {
  var customLeftArrow = _a.customLeftArrow, getState = _a.getState, previous2 = _a.previous, disabled = _a.disabled, rtl = _a.rtl;
  if (customLeftArrow) return React$2.cloneElement(customLeftArrow, { onClick: function() {
    return previous2();
  }, carouselState: getState(), disabled, rtl });
  var rtlClassName = rtl ? "rtl" : "";
  return React$2.createElement("button", { "aria-label": "Go to previous slide", className: "react-multiple-carousel__arrow react-multiple-carousel__arrow--left " + rtlClassName, onClick: function() {
    return previous2();
  }, type: "button", disabled });
};
Arrows.LeftArrow = LeftArrow;
var RightArrow = function(_a) {
  var customRightArrow = _a.customRightArrow, getState = _a.getState, next2 = _a.next, disabled = _a.disabled, rtl = _a.rtl;
  if (customRightArrow) return React$2.cloneElement(customRightArrow, { onClick: function() {
    return next2();
  }, carouselState: getState(), disabled, rtl });
  var rtlClassName = rtl ? "rtl" : "";
  return React$2.createElement("button", { "aria-label": "Go to next slide", className: "react-multiple-carousel__arrow react-multiple-carousel__arrow--right " + rtlClassName, onClick: function() {
    return next2();
  }, type: "button", disabled });
};
Arrows.RightArrow = RightArrow;
var CarouselItems$1 = {};
Object.defineProperty(CarouselItems$1, "__esModule", { value: true });
var React$1 = reactExports, utils_1$1 = utils$3, CarouselItems = function(_a) {
  var props2 = _a.props, state = _a.state, goToSlide = _a.goToSlide, clones2 = _a.clones, notEnoughChildren2 = _a.notEnoughChildren, itemWidth = state.itemWidth, children = props2.children, infinite = props2.infinite, itemClass = props2.itemClass, itemAriaLabel = props2.itemAriaLabel, partialVisbile = props2.partialVisbile, partialVisible = props2.partialVisible, _b = utils_1$1.getInitialState(state, props2), flexBisis = _b.flexBisis, shouldRenderOnSSR = _b.shouldRenderOnSSR, domFullyLoaded = _b.domFullyLoaded, partialVisibilityGutter = _b.partialVisibilityGutter;
  return _b.shouldRenderAtAll ? (partialVisbile && console.warn('WARNING: Please correct props name: "partialVisible" as old typo will be removed in future versions!'), React$1.createElement(React$1.Fragment, null, (infinite ? clones2 : React$1.Children.toArray(children)).map(function(child, index) {
    return React$1.createElement("li", { key: index, "data-index": index, onClick: function() {
      props2.focusOnSelect && goToSlide(index);
    }, "aria-hidden": utils_1$1.getIfSlideIsVisbile(index, state) ? "false" : "true", "aria-label": itemAriaLabel || (child.props.ariaLabel ? child.props.ariaLabel : null), style: { flex: shouldRenderOnSSR ? "1 0 " + flexBisis + "%" : "auto", position: "relative", width: domFullyLoaded ? ((partialVisbile || partialVisible) && partialVisibilityGutter && !notEnoughChildren2 ? itemWidth - partialVisibilityGutter : itemWidth) + "px" : "auto" }, className: "react-multi-carousel-item " + (utils_1$1.getIfSlideIsVisbile(index, state) ? "react-multi-carousel-item--active" : "") + " " + itemClass }, child);
  }))) : null;
};
CarouselItems$1.default = CarouselItems;
var __extends = commonjsGlobal && commonjsGlobal.__extends || /* @__PURE__ */ function() {
  var extendStatics = function(d, b2) {
    return (extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b22) {
      d2.__proto__ = b22;
    } || function(d2, b22) {
      for (var p2 in b22) b22.hasOwnProperty(p2) && (d2[p2] = b22[p2]);
    })(d, b2);
  };
  return function(d, b2) {
    function __() {
      this.constructor = d;
    }
    extendStatics(d, b2), d.prototype = null === b2 ? Object.create(b2) : (__.prototype = b2.prototype, new __());
  };
}();
Object.defineProperty(Carousel$3, "__esModule", { value: true });
var React = reactExports, utils_1 = utils$3, types_1 = types, Dots_1 = Dots$1, Arrows_1 = Arrows, CarouselItems_1 = CarouselItems$1, common_1 = common$1, defaultTransitionDuration = 400, defaultTransition = "transform 400ms ease-in-out", Carousel$1 = function(_super) {
  function Carousel2(props2) {
    var _this = _super.call(this, props2) || this;
    return _this.containerRef = React.createRef(), _this.listRef = React.createRef(), _this.state = { itemWidth: 0, slidesToShow: 0, currentSlide: 0, totalItems: React.Children.count(props2.children), deviceType: "", domLoaded: false, transform: 0, containerWidth: 0 }, _this.onResize = _this.onResize.bind(_this), _this.handleDown = _this.handleDown.bind(_this), _this.handleMove = _this.handleMove.bind(_this), _this.handleOut = _this.handleOut.bind(_this), _this.onKeyUp = _this.onKeyUp.bind(_this), _this.handleEnter = _this.handleEnter.bind(_this), _this.setIsInThrottle = _this.setIsInThrottle.bind(_this), _this.next = utils_1.throttle(_this.next.bind(_this), props2.transitionDuration || defaultTransitionDuration, _this.setIsInThrottle), _this.previous = utils_1.throttle(_this.previous.bind(_this), props2.transitionDuration || defaultTransitionDuration, _this.setIsInThrottle), _this.goToSlide = utils_1.throttle(_this.goToSlide.bind(_this), props2.transitionDuration || defaultTransitionDuration, _this.setIsInThrottle), _this.onMove = false, _this.initialX = 0, _this.lastX = 0, _this.isAnimationAllowed = false, _this.direction = "", _this.initialY = 0, _this.isInThrottle = false, _this.transformPlaceHolder = 0, _this;
  }
  return __extends(Carousel2, _super), Carousel2.prototype.resetTotalItems = function() {
    var _this = this, totalItems = React.Children.count(this.props.children), currentSlide = utils_1.notEnoughChildren(this.state) ? 0 : Math.max(0, Math.min(this.state.currentSlide, totalItems));
    this.setState({ totalItems, currentSlide }, function() {
      _this.setContainerAndItemWidth(_this.state.slidesToShow, true);
    });
  }, Carousel2.prototype.setIsInThrottle = function(isInThrottle) {
    void 0 === isInThrottle && (isInThrottle = false), this.isInThrottle = isInThrottle;
  }, Carousel2.prototype.setTransformDirectly = function(position, withAnimation) {
    var additionalTransfrom = this.props.additionalTransfrom;
    this.transformPlaceHolder = position;
    var currentTransform = common_1.getTransform(this.state, this.props, this.transformPlaceHolder);
    this.listRef && this.listRef.current && (this.setAnimationDirectly(withAnimation), this.listRef.current.style.transform = "translate3d(" + (currentTransform + additionalTransfrom) + "px,0,0)");
  }, Carousel2.prototype.setAnimationDirectly = function(animationAllowed) {
    this.listRef && this.listRef.current && (this.listRef.current.style.transition = animationAllowed ? this.props.customTransition || defaultTransition : "none");
  }, Carousel2.prototype.componentDidMount = function() {
    this.setState({ domLoaded: true }), this.setItemsToShow(), window.addEventListener("resize", this.onResize), this.onResize(true), this.props.keyBoardControl && window.addEventListener("keyup", this.onKeyUp), this.props.autoPlay && (this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed));
  }, Carousel2.prototype.setClones = function(slidesToShow, itemWidth, forResizing, resetCurrentSlide) {
    var _this = this;
    void 0 === resetCurrentSlide && (resetCurrentSlide = false), this.isAnimationAllowed = false;
    var childrenArr = React.Children.toArray(this.props.children), initialSlide = utils_1.getInitialSlideInInfiniteMode(slidesToShow || this.state.slidesToShow, childrenArr), clones2 = utils_1.getClones(this.state.slidesToShow, childrenArr), currentSlide = childrenArr.length < this.state.slidesToShow ? 0 : this.state.currentSlide;
    this.setState({ totalItems: clones2.length, currentSlide: forResizing && !resetCurrentSlide ? currentSlide : initialSlide }, function() {
      _this.correctItemsPosition(itemWidth || _this.state.itemWidth);
    });
  }, Carousel2.prototype.setItemsToShow = function(shouldCorrectItemPosition, resetCurrentSlide) {
    var _this = this, responsive2 = this.props.responsive;
    Object.keys(responsive2).forEach(function(item) {
      var _a = responsive2[item], breakpoint = _a.breakpoint, items = _a.items, max2 = breakpoint.max, min2 = breakpoint.min, widths = [window.innerWidth];
      window.screen && window.screen.width && widths.push(window.screen.width);
      var screenWidth = Math.min.apply(Math, widths);
      min2 <= screenWidth && screenWidth <= max2 && (_this.setState({ slidesToShow: items, deviceType: item }), _this.setContainerAndItemWidth(items, shouldCorrectItemPosition, resetCurrentSlide));
    });
  }, Carousel2.prototype.setContainerAndItemWidth = function(slidesToShow, shouldCorrectItemPosition, resetCurrentSlide) {
    var _this = this;
    if (this.containerRef && this.containerRef.current) {
      var containerWidth = this.containerRef.current.offsetWidth, itemWidth_1 = utils_1.getItemClientSideWidth(this.props, slidesToShow, containerWidth);
      this.setState({ containerWidth, itemWidth: itemWidth_1 }, function() {
        _this.props.infinite && _this.setClones(slidesToShow, itemWidth_1, shouldCorrectItemPosition, resetCurrentSlide);
      }), shouldCorrectItemPosition && this.correctItemsPosition(itemWidth_1);
    }
  }, Carousel2.prototype.correctItemsPosition = function(itemWidth, isAnimationAllowed, setToDomDirectly) {
    isAnimationAllowed && (this.isAnimationAllowed = true), !isAnimationAllowed && this.isAnimationAllowed && (this.isAnimationAllowed = false);
    var nextTransform = this.state.totalItems < this.state.slidesToShow ? 0 : -itemWidth * this.state.currentSlide;
    setToDomDirectly && this.setTransformDirectly(nextTransform, true), this.setState({ transform: nextTransform });
  }, Carousel2.prototype.onResize = function(value) {
    var shouldCorrectItemPosition;
    shouldCorrectItemPosition = !!this.props.infinite && ("boolean" != typeof value || !value), this.setItemsToShow(shouldCorrectItemPosition);
  }, Carousel2.prototype.componentDidUpdate = function(_a, _b) {
    var _this = this, keyBoardControl = _a.keyBoardControl, autoPlay = _a.autoPlay, children = _a.children, containerWidth = _b.containerWidth, domLoaded = _b.domLoaded, currentSlide = _b.currentSlide;
    if (this.containerRef && this.containerRef.current && this.containerRef.current.offsetWidth !== containerWidth && (this.itemsToShowTimeout && clearTimeout(this.itemsToShowTimeout), this.itemsToShowTimeout = setTimeout(function() {
      _this.setItemsToShow(true);
    }, this.props.transitionDuration || defaultTransitionDuration)), keyBoardControl && !this.props.keyBoardControl && window.removeEventListener("keyup", this.onKeyUp), !keyBoardControl && this.props.keyBoardControl && window.addEventListener("keyup", this.onKeyUp), autoPlay && !this.props.autoPlay && this.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = void 0), autoPlay || !this.props.autoPlay || this.autoPlay || (this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed)), children.length !== this.props.children.length ? Carousel2.clonesTimeout = setTimeout(function() {
      _this.props.infinite ? _this.setClones(_this.state.slidesToShow, _this.state.itemWidth, true, true) : _this.resetTotalItems();
    }, this.props.transitionDuration || defaultTransitionDuration) : this.props.infinite && this.state.currentSlide !== currentSlide && this.correctClonesPosition({ domLoaded }), this.transformPlaceHolder !== this.state.transform && (this.transformPlaceHolder = this.state.transform), this.props.autoPlay && this.props.rewind && !this.props.infinite && utils_1.isInRightEnd(this.state)) {
      var rewindBuffer = this.props.transitionDuration || defaultTransitionDuration;
      Carousel2.isInThrottleTimeout = setTimeout(function() {
        _this.setIsInThrottle(false), _this.resetAutoplayInterval(), _this.goToSlide(0, void 0, !!_this.props.rewindWithAnimation);
      }, rewindBuffer + this.props.autoPlaySpeed);
    }
  }, Carousel2.prototype.correctClonesPosition = function(_a) {
    var _this = this, domLoaded = _a.domLoaded, childrenArr = React.Children.toArray(this.props.children), _b = utils_1.checkClonesPosition(this.state, childrenArr, this.props), isReachingTheEnd = _b.isReachingTheEnd, isReachingTheStart = _b.isReachingTheStart, nextSlide = _b.nextSlide, nextPosition = _b.nextPosition;
    this.state.domLoaded && domLoaded && (isReachingTheEnd || isReachingTheStart) && (this.isAnimationAllowed = false, Carousel2.transformTimeout = setTimeout(function() {
      _this.setState({ transform: nextPosition, currentSlide: nextSlide });
    }, this.props.transitionDuration || defaultTransitionDuration));
  }, Carousel2.prototype.next = function(slidesHavePassed) {
    var _this = this;
    void 0 === slidesHavePassed && (slidesHavePassed = 0);
    var _a = this.props, afterChange = _a.afterChange, beforeChange = _a.beforeChange;
    if (!utils_1.notEnoughChildren(this.state)) {
      var _b = utils_1.populateNextSlides(this.state, this.props, slidesHavePassed), nextSlides = _b.nextSlides, nextPosition = _b.nextPosition, previousSlide = this.state.currentSlide;
      void 0 !== nextSlides && void 0 !== nextPosition && ("function" == typeof beforeChange && beforeChange(nextSlides, this.getState()), this.isAnimationAllowed = true, this.props.shouldResetAutoplay && this.resetAutoplayInterval(), this.setState({ transform: nextPosition, currentSlide: nextSlides }, function() {
        "function" == typeof afterChange && (Carousel2.afterChangeTimeout = setTimeout(function() {
          afterChange(previousSlide, _this.getState());
        }, _this.props.transitionDuration || defaultTransitionDuration));
      }));
    }
  }, Carousel2.prototype.previous = function(slidesHavePassed) {
    var _this = this;
    void 0 === slidesHavePassed && (slidesHavePassed = 0);
    var _a = this.props, afterChange = _a.afterChange, beforeChange = _a.beforeChange;
    if (!utils_1.notEnoughChildren(this.state)) {
      var _b = utils_1.populatePreviousSlides(this.state, this.props, slidesHavePassed), nextSlides = _b.nextSlides, nextPosition = _b.nextPosition;
      if (void 0 !== nextSlides && void 0 !== nextPosition) {
        var previousSlide = this.state.currentSlide;
        "function" == typeof beforeChange && beforeChange(nextSlides, this.getState()), this.isAnimationAllowed = true, this.props.shouldResetAutoplay && this.resetAutoplayInterval(), this.setState({ transform: nextPosition, currentSlide: nextSlides }, function() {
          "function" == typeof afterChange && (Carousel2.afterChangeTimeout2 = setTimeout(function() {
            afterChange(previousSlide, _this.getState());
          }, _this.props.transitionDuration || defaultTransitionDuration));
        });
      }
    }
  }, Carousel2.prototype.resetAutoplayInterval = function() {
    this.props.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed));
  }, Carousel2.prototype.componentWillUnmount = function() {
    window.removeEventListener("resize", this.onResize), this.props.keyBoardControl && window.removeEventListener("keyup", this.onKeyUp), this.props.autoPlay && this.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = void 0), this.itemsToShowTimeout && clearTimeout(this.itemsToShowTimeout), Carousel2.clonesTimeout && clearTimeout(Carousel2.clonesTimeout), Carousel2.isInThrottleTimeout && clearTimeout(Carousel2.isInThrottleTimeout), Carousel2.transformTimeout && clearTimeout(Carousel2.transformTimeout), Carousel2.afterChangeTimeout && clearTimeout(Carousel2.afterChangeTimeout), Carousel2.afterChangeTimeout2 && clearTimeout(Carousel2.afterChangeTimeout2), Carousel2.afterChangeTimeout3 && clearTimeout(Carousel2.afterChangeTimeout3);
  }, Carousel2.prototype.resetMoveStatus = function() {
    this.onMove = false, this.initialX = 0, this.lastX = 0, this.direction = "", this.initialY = 0;
  }, Carousel2.prototype.getCords = function(_a) {
    var clientX = _a.clientX, clientY = _a.clientY;
    return { clientX: common_1.parsePosition(this.props, clientX), clientY: common_1.parsePosition(this.props, clientY) };
  }, Carousel2.prototype.handleDown = function(e) {
    if (!(!types_1.isMouseMoveEvent(e) && !this.props.swipeable || types_1.isMouseMoveEvent(e) && !this.props.draggable || this.isInThrottle)) {
      var _a = this.getCords(types_1.isMouseMoveEvent(e) ? e : e.touches[0]), clientX = _a.clientX, clientY = _a.clientY;
      this.onMove = true, this.initialX = clientX, this.initialY = clientY, this.lastX = clientX, this.isAnimationAllowed = false;
    }
  }, Carousel2.prototype.handleMove = function(e) {
    if (!(!types_1.isMouseMoveEvent(e) && !this.props.swipeable || types_1.isMouseMoveEvent(e) && !this.props.draggable || utils_1.notEnoughChildren(this.state))) {
      var _a = this.getCords(types_1.isMouseMoveEvent(e) ? e : e.touches[0]), clientX = _a.clientX, clientY = _a.clientY, diffX = this.initialX - clientX, diffY = this.initialY - clientY;
      if (this.onMove) {
        if (!(Math.abs(diffX) > Math.abs(diffY))) return;
        var _b = utils_1.populateSlidesOnMouseTouchMove(this.state, this.props, this.initialX, this.lastX, clientX, this.transformPlaceHolder), direction = _b.direction, nextPosition = _b.nextPosition, canContinue = _b.canContinue;
        direction && (this.direction = direction, canContinue && void 0 !== nextPosition && this.setTransformDirectly(nextPosition)), this.lastX = clientX;
      }
    }
  }, Carousel2.prototype.handleOut = function(e) {
    this.props.autoPlay && !this.autoPlay && (this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed));
    var shouldDisableOnMobile = "touchend" === e.type && !this.props.swipeable, shouldDisableOnDesktop = ("mouseleave" === e.type || "mouseup" === e.type) && !this.props.draggable;
    if (!shouldDisableOnMobile && !shouldDisableOnDesktop && this.onMove) {
      if (this.setAnimationDirectly(true), "right" === this.direction) if (this.initialX - this.lastX >= this.props.minimumTouchDrag) {
        var slidesHavePassed = Math.round((this.initialX - this.lastX) / this.state.itemWidth);
        this.next(slidesHavePassed);
      } else this.correctItemsPosition(this.state.itemWidth, true, true);
      if ("left" === this.direction) if (this.lastX - this.initialX > this.props.minimumTouchDrag) {
        slidesHavePassed = Math.round((this.lastX - this.initialX) / this.state.itemWidth);
        this.previous(slidesHavePassed);
      } else this.correctItemsPosition(this.state.itemWidth, true, true);
      this.resetMoveStatus();
    }
  }, Carousel2.prototype.isInViewport = function(el2) {
    var _a = el2.getBoundingClientRect(), _b = _a.top, top = void 0 === _b ? 0 : _b, _c = _a.left, left = void 0 === _c ? 0 : _c, _d = _a.bottom, bottom = void 0 === _d ? 0 : _d, _e = _a.right, right = void 0 === _e ? 0 : _e;
    return 0 <= top && 0 <= left && bottom <= (window.innerHeight || document.documentElement.clientHeight) && right <= (window.innerWidth || document.documentElement.clientWidth);
  }, Carousel2.prototype.isChildOfCarousel = function(el2) {
    return !!(el2 instanceof Element && this.listRef && this.listRef.current) && this.listRef.current.contains(el2);
  }, Carousel2.prototype.onKeyUp = function(e) {
    var target = e.target;
    switch (e.keyCode) {
      case 37:
        if (this.isChildOfCarousel(target)) return this.previous();
        break;
      case 39:
        if (this.isChildOfCarousel(target)) return this.next();
        break;
      case 9:
        if (this.isChildOfCarousel(target) && target instanceof HTMLInputElement && this.isInViewport(target)) return this.next();
    }
  }, Carousel2.prototype.handleEnter = function(e) {
    types_1.isMouseMoveEvent(e) && this.autoPlay && this.props.autoPlay && this.props.pauseOnHover && (clearInterval(this.autoPlay), this.autoPlay = void 0);
  }, Carousel2.prototype.goToSlide = function(slide, skipCallbacks, animationAllowed) {
    var _this = this;
    if (void 0 === animationAllowed && (animationAllowed = true), !this.isInThrottle) {
      var itemWidth = this.state.itemWidth, _a = this.props, afterChange = _a.afterChange, beforeChange = _a.beforeChange, previousSlide = this.state.currentSlide;
      "function" != typeof beforeChange || skipCallbacks && ("object" != typeof skipCallbacks || skipCallbacks.skipBeforeChange) || beforeChange(slide, this.getState()), this.isAnimationAllowed = animationAllowed, this.props.shouldResetAutoplay && this.resetAutoplayInterval(), this.setState({ currentSlide: slide, transform: -itemWidth * slide }, function() {
        _this.props.infinite && _this.correctClonesPosition({ domLoaded: true }), "function" != typeof afterChange || skipCallbacks && ("object" != typeof skipCallbacks || skipCallbacks.skipAfterChange) || (Carousel2.afterChangeTimeout3 = setTimeout(function() {
          afterChange(previousSlide, _this.getState());
        }, _this.props.transitionDuration || defaultTransitionDuration));
      });
    }
  }, Carousel2.prototype.getState = function() {
    return this.state;
  }, Carousel2.prototype.renderLeftArrow = function(disbaled) {
    var _this = this, _a = this.props, customLeftArrow = _a.customLeftArrow, rtl = _a.rtl;
    return React.createElement(Arrows_1.LeftArrow, { customLeftArrow, getState: function() {
      return _this.getState();
    }, previous: this.previous, disabled: disbaled, rtl });
  }, Carousel2.prototype.renderRightArrow = function(disbaled) {
    var _this = this, _a = this.props, customRightArrow = _a.customRightArrow, rtl = _a.rtl;
    return React.createElement(Arrows_1.RightArrow, { customRightArrow, getState: function() {
      return _this.getState();
    }, next: this.next, disabled: disbaled, rtl });
  }, Carousel2.prototype.renderButtonGroups = function() {
    var _this = this, customButtonGroup = this.props.customButtonGroup;
    return customButtonGroup ? React.cloneElement(customButtonGroup, { previous: function() {
      return _this.previous();
    }, next: function() {
      return _this.next();
    }, goToSlide: function(slideIndex, skipCallbacks) {
      return _this.goToSlide(slideIndex, skipCallbacks);
    }, carouselState: this.getState() }) : null;
  }, Carousel2.prototype.renderDotsList = function() {
    var _this = this;
    return React.createElement(Dots_1.default, { state: this.state, props: this.props, goToSlide: this.goToSlide, getState: function() {
      return _this.getState();
    } });
  }, Carousel2.prototype.renderCarouselItems = function() {
    var clones2 = [];
    if (this.props.infinite) {
      var childrenArr = React.Children.toArray(this.props.children);
      clones2 = utils_1.getClones(this.state.slidesToShow, childrenArr);
    }
    return React.createElement(CarouselItems_1.default, { clones: clones2, goToSlide: this.goToSlide, state: this.state, notEnoughChildren: utils_1.notEnoughChildren(this.state), props: this.props });
  }, Carousel2.prototype.render = function() {
    var _a = this.props, deviceType = _a.deviceType, arrows = _a.arrows, renderArrowsWhenDisabled = _a.renderArrowsWhenDisabled, removeArrowOnDeviceType = _a.removeArrowOnDeviceType, infinite = _a.infinite, containerClass = _a.containerClass, sliderClass = _a.sliderClass, customTransition = _a.customTransition, additionalTransfrom = _a.additionalTransfrom, renderDotsOutside = _a.renderDotsOutside, renderButtonGroupOutside = _a.renderButtonGroupOutside, className = _a.className, rtl = _a.rtl;
    var _b = utils_1.getInitialState(this.state, this.props), shouldRenderOnSSR = _b.shouldRenderOnSSR, shouldRenderAtAll = _b.shouldRenderAtAll, isLeftEndReach = utils_1.isInLeftEnd(this.state), isRightEndReach = utils_1.isInRightEnd(this.state), shouldShowArrows = arrows && !(removeArrowOnDeviceType && (deviceType && -1 < removeArrowOnDeviceType.indexOf(deviceType) || this.state.deviceType && -1 < removeArrowOnDeviceType.indexOf(this.state.deviceType))) && !utils_1.notEnoughChildren(this.state) && shouldRenderAtAll, disableLeftArrow = !infinite && isLeftEndReach, disableRightArrow = !infinite && isRightEndReach, currentTransform = common_1.getTransform(this.state, this.props);
    return React.createElement(React.Fragment, null, React.createElement("div", { className: "react-multi-carousel-list " + containerClass + " " + className, dir: rtl ? "rtl" : "ltr", ref: this.containerRef }, React.createElement("ul", { ref: this.listRef, className: "react-multi-carousel-track " + sliderClass, style: { transition: this.isAnimationAllowed ? customTransition || defaultTransition : "none", overflow: shouldRenderOnSSR ? "hidden" : "unset", transform: "translate3d(" + (currentTransform + additionalTransfrom) + "px,0,0)" }, onMouseMove: this.handleMove, onMouseDown: this.handleDown, onMouseUp: this.handleOut, onMouseEnter: this.handleEnter, onMouseLeave: this.handleOut, onTouchStart: this.handleDown, onTouchMove: this.handleMove, onTouchEnd: this.handleOut }, this.renderCarouselItems()), shouldShowArrows && (!disableLeftArrow || renderArrowsWhenDisabled) && this.renderLeftArrow(disableLeftArrow), shouldShowArrows && (!disableRightArrow || renderArrowsWhenDisabled) && this.renderRightArrow(disableRightArrow), shouldRenderAtAll && !renderButtonGroupOutside && this.renderButtonGroups(), shouldRenderAtAll && !renderDotsOutside && this.renderDotsList()), shouldRenderAtAll && renderDotsOutside && this.renderDotsList(), shouldRenderAtAll && renderButtonGroupOutside && this.renderButtonGroups());
  }, Carousel2.defaultProps = { slidesToSlide: 1, infinite: false, draggable: true, swipeable: true, arrows: true, renderArrowsWhenDisabled: false, containerClass: "", sliderClass: "", itemClass: "", keyBoardControl: true, autoPlaySpeed: 3e3, showDots: false, renderDotsOutside: false, renderButtonGroupOutside: false, minimumTouchDrag: 80, className: "", dotListClass: "", focusOnSelect: false, centerMode: false, additionalTransfrom: 0, pauseOnHover: true, shouldResetAutoplay: true, rewind: false, rtl: false, rewindWithAnimation: false }, Carousel2;
}(React.Component);
Carousel$3.default = Carousel$1;
Object.defineProperty(lib$1, "__esModule", { value: true });
var Carousel_1 = Carousel$3;
lib$1.default = Carousel_1.default;
var reactMultiCarousel = lib$1;
const Carousel = /* @__PURE__ */ getDefaultExportFromCjs(reactMultiCarousel);
function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}
const { toString: toString$1 } = Object.prototype;
const { getPrototypeOf } = Object;
const kindOf = /* @__PURE__ */ ((cache) => (thing) => {
  const str = toString$1.call(thing);
  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
const kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type;
};
const typeOfTest = (type) => (thing) => typeof thing === type;
const { isArray: isArray$1 } = Array;
const isUndefined$1 = typeOfTest("undefined");
function isBuffer(val) {
  return val !== null && !isUndefined$1(val) && val.constructor !== null && !isUndefined$1(val.constructor) && isFunction$1(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
const isArrayBuffer = kindOfTest("ArrayBuffer");
function isArrayBufferView(val) {
  let result;
  if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }
  return result;
}
const isString$1 = typeOfTest("string");
const isFunction$1 = typeOfTest("function");
const isNumber$1 = typeOfTest("number");
const isObject$1 = (thing) => thing !== null && typeof thing === "object";
const isBoolean = (thing) => thing === true || thing === false;
const isPlainObject = (val) => {
  if (kindOf(val) !== "object") {
    return false;
  }
  const prototype2 = getPrototypeOf(val);
  return (prototype2 === null || prototype2 === Object.prototype || Object.getPrototypeOf(prototype2) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
};
const isDate$1 = kindOfTest("Date");
const isFile = kindOfTest("File");
const isBlob = kindOfTest("Blob");
const isFileList = kindOfTest("FileList");
const isStream = (val) => isObject$1(val) && isFunction$1(val.pipe);
const isFormData = (thing) => {
  let kind;
  return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction$1(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
  kind === "object" && isFunction$1(thing.toString) && thing.toString() === "[object FormData]"));
};
const isURLSearchParams = kindOfTest("URLSearchParams");
const [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
const trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach(obj, fn, { allOwnKeys = false } = {}) {
  if (obj === null || typeof obj === "undefined") {
    return;
  }
  let i;
  let l2;
  if (typeof obj !== "object") {
    obj = [obj];
  }
  if (isArray$1(obj)) {
    for (i = 0, l2 = obj.length; i < l2; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    const keys2 = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys2.length;
    let key;
    for (i = 0; i < len; i++) {
      key = keys2[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}
function findKey(obj, key) {
  key = key.toLowerCase();
  const keys2 = Object.keys(obj);
  let i = keys2.length;
  let _key;
  while (i-- > 0) {
    _key = keys2[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
const _global = (() => {
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
})();
const isContextDefined = (context) => !isUndefined$1(context) && context !== _global;
function merge() {
  const { caseless } = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray$1(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  };
  for (let i = 0, l2 = arguments.length; i < l2; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}
const extend$1 = (a, b2, thisArg, { allOwnKeys } = {}) => {
  forEach(b2, (val, key) => {
    if (thisArg && isFunction$1(val)) {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  }, { allOwnKeys });
  return a;
};
const stripBOM = (content) => {
  if (content.charCodeAt(0) === 65279) {
    content = content.slice(1);
  }
  return content;
};
const inherits = (constructor, superConstructor, props2, descriptors2) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, "super", {
    value: superConstructor.prototype
  });
  props2 && Object.assign(constructor.prototype, props2);
};
const toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
  let props2;
  let i;
  let prop;
  const merged = {};
  destObj = destObj || {};
  if (sourceObj == null) return destObj;
  do {
    props2 = Object.getOwnPropertyNames(sourceObj);
    i = props2.length;
    while (i-- > 0) {
      prop = props2[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter2 || filter2(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
};
const endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === void 0 || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};
const toArray$1 = (thing) => {
  if (!thing) return null;
  if (isArray$1(thing)) return thing;
  let i = thing.length;
  if (!isNumber$1(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};
const isTypedArray = /* @__PURE__ */ ((TypedArray) => {
  return (thing) => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
const forEachEntry = (obj, fn) => {
  const generator = obj && obj[Symbol.iterator];
  const iterator = generator.call(obj);
  let result;
  while ((result = iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
};
const matchAll = (regExp, str) => {
  let matches;
  const arr = [];
  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }
  return arr;
};
const isHTMLForm = kindOfTest("HTMLFormElement");
const toCamelCase = (str) => {
  return str.toLowerCase().replace(
    /[-_\s]([a-z\d])(\w*)/g,
    function replacer(m2, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};
const hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
const isRegExp = kindOfTest("RegExp");
const reduceDescriptors = (obj, reducer) => {
  const descriptors2 = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};
  forEach(descriptors2, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};
const freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    if (isFunction$1(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
      return false;
    }
    const value = obj[name];
    if (!isFunction$1(value)) return;
    descriptor.enumerable = false;
    if ("writable" in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name + "'");
      };
    }
  });
};
const toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};
  const define = (arr) => {
    arr.forEach((value) => {
      obj[value] = true;
    });
  };
  isArray$1(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));
  return obj;
};
const noop$1 = () => {
};
const toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
const ALPHA = "abcdefghijklmnopqrstuvwxyz";
const DIGIT = "0123456789";
const ALPHABET = {
  DIGIT,
  ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
};
const generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
  let str = "";
  const { length } = alphabet;
  while (size--) {
    str += alphabet[Math.random() * length | 0];
  }
  return str;
};
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction$1(thing.append) && thing[Symbol.toStringTag] === "FormData" && thing[Symbol.iterator]);
}
const toJSONObject = (obj) => {
  const stack = new Array(10);
  const visit = (source, i) => {
    if (isObject$1(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (!("toJSON" in source)) {
        stack[i] = source;
        const target = isArray$1(source) ? [] : {};
        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined$1(reducedValue) && (target[key] = reducedValue);
        });
        stack[i] = void 0;
        return target;
      }
    }
    return source;
  };
  return visit(obj, 0);
};
const isAsyncFn = kindOfTest("AsyncFunction");
const isThenable = (thing) => thing && (isObject$1(thing) || isFunction$1(thing)) && isFunction$1(thing.then) && isFunction$1(thing.catch);
const _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported ? ((token2, callbacks) => {
    _global.addEventListener("message", ({ source, data }) => {
      if (source === _global && data === token2) {
        callbacks.length && callbacks.shift()();
      }
    }, false);
    return (cb2) => {
      callbacks.push(cb2);
      _global.postMessage(token2, "*");
    };
  })(`axios@${Math.random()}`, []) : (cb2) => setTimeout(cb2);
})(
  typeof setImmediate === "function",
  isFunction$1(_global.postMessage)
);
const asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
const utils$2 = {
  isArray: isArray$1,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString: isString$1,
  isNumber: isNumber$1,
  isBoolean,
  isObject: isObject$1,
  isPlainObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined: isUndefined$1,
  isDate: isDate$1,
  isFile,
  isBlob,
  isRegExp,
  isFunction: isFunction$1,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend: extend$1,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray: toArray$1,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty,
  hasOwnProp: hasOwnProperty,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop: noop$1,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  ALPHABET,
  generateString,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap
};
function AxiosError(message, code, config, request, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message;
  this.name = "AxiosError";
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
utils$2.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils$2.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const prototype$1 = AxiosError.prototype;
const descriptors = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype$1, "isAxiosError", { value: true });
AxiosError.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype$1);
  utils$2.toFlatObject(error, axiosError, function filter2(obj) {
    return obj !== Error.prototype;
  }, (prop) => {
    return prop !== "isAxiosError";
  });
  AxiosError.call(axiosError, error.message, code, config, request, response);
  axiosError.cause = error;
  axiosError.name = error.name;
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
const httpAdapter = null;
function isVisitable(thing) {
  return utils$2.isPlainObject(thing) || utils$2.isArray(thing);
}
function removeBrackets(key) {
  return utils$2.endsWith(key, "[]") ? key.slice(0, -2) : key;
}
function renderKey(path, key, dots2) {
  if (!path) return key;
  return path.concat(key).map(function each(token2, i) {
    token2 = removeBrackets(token2);
    return !dots2 && i ? "[" + token2 + "]" : token2;
  }).join(dots2 ? "." : "");
}
function isFlatArray(arr) {
  return utils$2.isArray(arr) && !arr.some(isVisitable);
}
const predicates = utils$2.toFlatObject(utils$2, {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});
function toFormData(obj, formData, options) {
  if (!utils$2.isObject(obj)) {
    throw new TypeError("target must be an object");
  }
  formData = formData || new FormData();
  options = utils$2.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    return !utils$2.isUndefined(source[option]);
  });
  const metaTokens = options.metaTokens;
  const visitor = options.visitor || defaultVisitor;
  const dots2 = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
  const useBlob = _Blob && utils$2.isSpecCompliantForm(formData);
  if (!utils$2.isFunction(visitor)) {
    throw new TypeError("visitor must be a function");
  }
  function convertValue(value) {
    if (value === null) return "";
    if (utils$2.isDate(value)) {
      return value.toISOString();
    }
    if (!useBlob && utils$2.isBlob(value)) {
      throw new AxiosError("Blob is not supported. Use a Buffer instead.");
    }
    if (utils$2.isArrayBuffer(value) || utils$2.isTypedArray(value)) {
      return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
    }
    return value;
  }
  function defaultVisitor(value, key, path) {
    let arr = value;
    if (value && !path && typeof value === "object") {
      if (utils$2.endsWith(key, "{}")) {
        key = metaTokens ? key : key.slice(0, -2);
        value = JSON.stringify(value);
      } else if (utils$2.isArray(value) && isFlatArray(value) || (utils$2.isFileList(value) || utils$2.endsWith(key, "[]")) && (arr = utils$2.toArray(value))) {
        key = removeBrackets(key);
        arr.forEach(function each(el2, index) {
          !(utils$2.isUndefined(el2) || el2 === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots2) : indexes === null ? key : key + "[]",
            convertValue(el2)
          );
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path, key, dots2), convertValue(value));
    return false;
  }
  const stack = [];
  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });
  function build(value, path) {
    if (utils$2.isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error("Circular reference detected in " + path.join("."));
    }
    stack.push(value);
    utils$2.forEach(value, function each(el2, key) {
      const result = !(utils$2.isUndefined(el2) || el2 === null) && visitor.call(
        formData,
        el2,
        utils$2.isString(key) ? key.trim() : key,
        path,
        exposedHelpers
      );
      if (result === true) {
        build(el2, path ? path.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!utils$2.isObject(obj)) {
    throw new TypeError("data must be an object");
  }
  build(obj);
  return formData;
}
function encode$1(str) {
  const charMap = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && toFormData(params, this, options);
}
const prototype = AxiosURLSearchParams.prototype;
prototype.append = function append(name, value) {
  this._pairs.push([name, value]);
};
prototype.toString = function toString(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode$1);
  } : encode$1;
  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + "=" + _encode(pair[1]);
  }, "").join("&");
};
function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function buildURL(url, params, options) {
  if (!params) {
    return url;
  }
  const _encode = options && options.encode || encode;
  const serializeFn = options && options.serialize;
  let serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils$2.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams(params, options).toString(_encode);
  }
  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
  }
  return url;
}
class InterceptorManager {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id2) {
    if (this.handlers[id2]) {
      this.handlers[id2] = null;
    }
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils$2.forEach(this.handlers, function forEachHandler(h2) {
      if (h2 !== null) {
        fn(h2);
      }
    });
  }
}
const transitionalDefaults = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};
const URLSearchParams$1 = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams;
const FormData$1 = typeof FormData !== "undefined" ? FormData : null;
const Blob$1 = typeof Blob !== "undefined" ? Blob : null;
const platform$1 = {
  isBrowser: true,
  classes: {
    URLSearchParams: URLSearchParams$1,
    FormData: FormData$1,
    Blob: Blob$1
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
};
const hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
const _navigator = typeof navigator === "object" && navigator || void 0;
const hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
const hasStandardBrowserWebWorkerEnv = (() => {
  return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
  self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
})();
const origin = hasBrowserEnv && window.location.href || "http://localhost";
const utils$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv,
  hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv,
  navigator: _navigator,
  origin
}, Symbol.toStringTag, { value: "Module" }));
const platform = {
  ...utils$1,
  ...platform$1
};
function toURLEncodedForm(data, options) {
  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path, helpers) {
      if (platform.isNode && utils$2.isBuffer(value)) {
        this.append(key, value.toString("base64"));
        return false;
      }
      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}
function parsePropPath(name) {
  return utils$2.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
    return match[0] === "[]" ? "" : match[1] || match[0];
  });
}
function arrayToObject(arr) {
  const obj = {};
  const keys2 = Object.keys(arr);
  let i;
  const len = keys2.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys2[i];
    obj[key] = arr[key];
  }
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name = path[index++];
    if (name === "__proto__") return true;
    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path.length;
    name = !name && utils$2.isArray(target) ? target.length : name;
    if (isLast) {
      if (utils$2.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }
      return !isNumericKey;
    }
    if (!target[name] || !utils$2.isObject(target[name])) {
      target[name] = [];
    }
    const result = buildPath(path, value, target[name], index);
    if (result && utils$2.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }
    return !isNumericKey;
  }
  if (utils$2.isFormData(formData) && utils$2.isFunction(formData.entries)) {
    const obj = {};
    utils$2.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });
    return obj;
  }
  return null;
}
function stringifySafely(rawValue, parser, encoder) {
  if (utils$2.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils$2.trim(rawValue);
    } catch (e) {
      if (e.name !== "SyntaxError") {
        throw e;
      }
    }
  }
  return (0, JSON.stringify)(rawValue);
}
const defaults$1 = {
  transitional: transitionalDefaults,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || "";
    const hasJSONContentType = contentType.indexOf("application/json") > -1;
    const isObjectPayload = utils$2.isObject(data);
    if (isObjectPayload && utils$2.isHTMLForm(data)) {
      data = new FormData(data);
    }
    const isFormData2 = utils$2.isFormData(data);
    if (isFormData2) {
      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;
    }
    if (utils$2.isArrayBuffer(data) || utils$2.isBuffer(data) || utils$2.isStream(data) || utils$2.isFile(data) || utils$2.isBlob(data) || utils$2.isReadableStream(data)) {
      return data;
    }
    if (utils$2.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils$2.isURLSearchParams(data)) {
      headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
      return data.toString();
    }
    let isFileList2;
    if (isObjectPayload) {
      if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }
      if ((isFileList2 = utils$2.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
        const _FormData = this.env && this.env.FormData;
        return toFormData(
          isFileList2 ? { "files[]": data } : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }
    if (isObjectPayload || hasJSONContentType) {
      headers.setContentType("application/json", false);
      return stringifySafely(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    const transitional2 = this.transitional || defaults$1.transitional;
    const forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing;
    const JSONRequested = this.responseType === "json";
    if (utils$2.isResponse(data) || utils$2.isReadableStream(data)) {
      return data;
    }
    if (data && utils$2.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      const silentJSONParsing = transitional2 && transitional2.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === "SyntaxError") {
            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform.classes.FormData,
    Blob: platform.classes.Blob
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      "Accept": "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
utils$2.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
  defaults$1.headers[method] = {};
});
const ignoreDuplicateOf = utils$2.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]);
const parseHeaders = (rawHeaders) => {
  const parsed = {};
  let key;
  let val;
  let i;
  rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
    i = line.indexOf(":");
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();
    if (!key || parsed[key] && ignoreDuplicateOf[key]) {
      return;
    }
    if (key === "set-cookie") {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
    }
  });
  return parsed;
};
const $internals = Symbol("internals");
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return utils$2.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  const tokens2 = /* @__PURE__ */ Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;
  while (match = tokensRE.exec(str)) {
    tokens2[match[1]] = match[2];
  }
  return tokens2;
}
const isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter2, isHeaderNameFilter) {
  if (utils$2.isFunction(filter2)) {
    return filter2.call(this, value, header);
  }
  if (isHeaderNameFilter) {
    value = header;
  }
  if (!utils$2.isString(value)) return;
  if (utils$2.isString(filter2)) {
    return value.indexOf(filter2) !== -1;
  }
  if (utils$2.isRegExp(filter2)) {
    return filter2.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w2, char, str) => {
    return char.toUpperCase() + str;
  });
}
function buildAccessors(obj, header) {
  const accessorName = utils$2.toCamelCase(" " + header);
  ["get", "set", "has"].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}
class AxiosHeaders {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header, valueOrRewrite, rewrite) {
    const self2 = this;
    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);
      if (!lHeader) {
        throw new Error("header name must be a non-empty string");
      }
      const key = utils$2.findKey(self2, lHeader);
      if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
        self2[key || _header] = normalizeValue(_value);
      }
    }
    const setHeaders = (headers, _rewrite) => utils$2.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
    if (utils$2.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite);
    } else if (utils$2.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders(header), valueOrRewrite);
    } else if (utils$2.isHeaders(header)) {
      for (const [key, value] of header.entries()) {
        setHeader(value, key, rewrite);
      }
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }
    return this;
  }
  get(header, parser) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils$2.findKey(this, header);
      if (key) {
        const value = this[key];
        if (!parser) {
          return value;
        }
        if (parser === true) {
          return parseTokens(value);
        }
        if (utils$2.isFunction(parser)) {
          return parser.call(this, value, key);
        }
        if (utils$2.isRegExp(parser)) {
          return parser.exec(value);
        }
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(header, matcher) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils$2.findKey(this, header);
      return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }
    return false;
  }
  delete(header, matcher) {
    const self2 = this;
    let deleted = false;
    function deleteHeader(_header) {
      _header = normalizeHeader(_header);
      if (_header) {
        const key = utils$2.findKey(self2, _header);
        if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
          delete self2[key];
          deleted = true;
        }
      }
    }
    if (utils$2.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }
    return deleted;
  }
  clear(matcher) {
    const keys2 = Object.keys(this);
    let i = keys2.length;
    let deleted = false;
    while (i--) {
      const key = keys2[i];
      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }
    return deleted;
  }
  normalize(format2) {
    const self2 = this;
    const headers = {};
    utils$2.forEach(this, (value, header) => {
      const key = utils$2.findKey(headers, header);
      if (key) {
        self2[key] = normalizeValue(value);
        delete self2[header];
        return;
      }
      const normalized = format2 ? formatHeader(header) : String(header).trim();
      if (normalized !== header) {
        delete self2[header];
      }
      self2[normalized] = normalizeValue(value);
      headers[normalized] = true;
    });
    return this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    const obj = /* @__PURE__ */ Object.create(null);
    utils$2.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils$2.isArray(value) ? value.join(", ") : value);
    });
    return obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    const computed = new this(first);
    targets.forEach((target) => computed.set(target));
    return computed;
  }
  static accessor(header) {
    const internals = this[$internals] = this[$internals] = {
      accessors: {}
    };
    const accessors = internals.accessors;
    const prototype2 = this.prototype;
    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);
      if (!accessors[lHeader]) {
        buildAccessors(prototype2, _header);
        accessors[lHeader] = true;
      }
    }
    utils$2.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
    return this;
  }
}
AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
utils$2.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
utils$2.freezeMethods(AxiosHeaders);
function transformData(fns, response) {
  const config = this || defaults$1;
  const context = response || config;
  const headers = AxiosHeaders.from(context.headers);
  let data = context.data;
  utils$2.forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
  });
  headers.normalize();
  return data;
}
function isCancel(value) {
  return !!(value && value.__CANCEL__);
}
function CanceledError(message, config, request) {
  AxiosError.call(this, message == null ? "canceled" : message, AxiosError.ERR_CANCELED, config, request);
  this.name = "CanceledError";
}
utils$2.inherits(CanceledError, AxiosError, {
  __CANCEL__: true
});
function settle(resolve, reject, response) {
  const validateStatus2 = response.config.validateStatus;
  if (!response.status || !validateStatus2 || validateStatus2(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError(
      "Request failed with status code " + response.status,
      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}
function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || "";
}
function speedometer(samplesCount, min2) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;
  min2 = min2 !== void 0 ? min2 : 1e3;
  return function push(chunkLength) {
    const now2 = Date.now();
    const startedAt = timestamps[tail];
    if (!firstSampleTS) {
      firstSampleTS = now2;
    }
    bytes[head] = chunkLength;
    timestamps[head] = now2;
    let i = tail;
    let bytesCount = 0;
    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }
    head = (head + 1) % samplesCount;
    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }
    if (now2 - firstSampleTS < min2) {
      return;
    }
    const passed = startedAt && now2 - startedAt;
    return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
  };
}
function throttle(fn, freq) {
  let timestamp = 0;
  let threshold = 1e3 / freq;
  let lastArgs;
  let timer;
  const invoke = (args, now2 = Date.now()) => {
    timestamp = now2;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn.apply(null, args);
  };
  const throttled = (...args) => {
    const now2 = Date.now();
    const passed = now2 - timestamp;
    if (passed >= threshold) {
      invoke(args, now2);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs);
        }, threshold - passed);
      }
    }
  };
  const flush = () => lastArgs && invoke(lastArgs);
  return [throttled, flush];
}
const progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = speedometer(50, 250);
  return throttle((e) => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : void 0;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;
    bytesNotified = loaded;
    const data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate ? rate : void 0,
      estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
      event: e,
      lengthComputable: total != null,
      [isDownloadStream ? "download" : "upload"]: true
    };
    listener(data);
  }, freq);
};
const progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;
  return [(loaded) => throttled[0]({
    lengthComputable,
    total,
    loaded
  }), throttled[1]];
};
const asyncDecorator = (fn) => (...args) => utils$2.asap(() => fn(...args));
const isURLSameOrigin = platform.hasStandardBrowserEnv ? (
  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function standardBrowserEnv() {
    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);
    const urlParsingNode = document.createElement("a");
    let originURL;
    function resolveURL(url) {
      let href = url;
      if (msie) {
        urlParsingNode.setAttribute("href", href);
        href = urlParsingNode.href;
      }
      urlParsingNode.setAttribute("href", href);
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
      };
    }
    originURL = resolveURL(window.location.href);
    return function isURLSameOrigin2(requestURL) {
      const parsed = utils$2.isString(requestURL) ? resolveURL(requestURL) : requestURL;
      return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
    };
  }()
) : (
  // Non standard browser envs (web workers, react-native) lack needed support.
  /* @__PURE__ */ function nonStandardBrowserEnv() {
    return function isURLSameOrigin2() {
      return true;
    };
  }()
);
const cookies = platform.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      const cookie = [name + "=" + encodeURIComponent(value)];
      utils$2.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
      utils$2.isString(path) && cookie.push("path=" + path);
      utils$2.isString(domain) && cookie.push("domain=" + domain);
      secure === true && cookie.push("secure");
      document.cookie = cookie.join("; ");
    },
    read(name) {
      const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove(name) {
      this.write(name, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function isAbsoluteURL(url) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
}
function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}
const headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;
function mergeConfig(config1, config2) {
  config2 = config2 || {};
  const config = {};
  function getMergedValue(target, source, caseless) {
    if (utils$2.isPlainObject(target) && utils$2.isPlainObject(source)) {
      return utils$2.merge.call({ caseless }, target, source);
    } else if (utils$2.isPlainObject(source)) {
      return utils$2.merge({}, source);
    } else if (utils$2.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(a, b2, caseless) {
    if (!utils$2.isUndefined(b2)) {
      return getMergedValue(a, b2, caseless);
    } else if (!utils$2.isUndefined(a)) {
      return getMergedValue(void 0, a, caseless);
    }
  }
  function valueFromConfig2(a, b2) {
    if (!utils$2.isUndefined(b2)) {
      return getMergedValue(void 0, b2);
    }
  }
  function defaultToConfig2(a, b2) {
    if (!utils$2.isUndefined(b2)) {
      return getMergedValue(void 0, b2);
    } else if (!utils$2.isUndefined(a)) {
      return getMergedValue(void 0, a);
    }
  }
  function mergeDirectKeys(a, b2, prop) {
    if (prop in config2) {
      return getMergedValue(a, b2);
    } else if (prop in config1) {
      return getMergedValue(void 0, a);
    }
  }
  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b2) => mergeDeepProperties(headersToObject(a), headersToObject(b2), true)
  };
  utils$2.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
    const merge2 = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge2(config1[prop], config2[prop], prop);
    utils$2.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
}
const resolveConfig = (config) => {
  const newConfig = mergeConfig({}, config);
  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
  newConfig.headers = headers = AxiosHeaders.from(headers);
  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);
  if (auth) {
    headers.set(
      "Authorization",
      "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
    );
  }
  let contentType;
  if (utils$2.isFormData(data)) {
    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(void 0);
    } else if ((contentType = headers.getContentType()) !== false) {
      const [type, ...tokens2] = contentType ? contentType.split(";").map((token2) => token2.trim()).filter(Boolean) : [];
      headers.setContentType([type || "multipart/form-data", ...tokens2].join("; "));
    }
  }
  if (platform.hasStandardBrowserEnv) {
    withXSRFToken && utils$2.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
    if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin(newConfig.url)) {
      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};
const isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
const xhrAdapter = isXHRAdapterSupported && function(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    const _config = resolveConfig(config);
    let requestData = _config.data;
    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();
    let { responseType, onUploadProgress, onDownloadProgress } = _config;
    let onCanceled;
    let uploadThrottled, downloadThrottled;
    let flushUpload, flushDownload;
    function done() {
      flushUpload && flushUpload();
      flushDownload && flushDownload();
      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
      _config.signal && _config.signal.removeEventListener("abort", onCanceled);
    }
    let request = new XMLHttpRequest();
    request.open(_config.method.toUpperCase(), _config.url, true);
    request.timeout = _config.timeout;
    function onloadend() {
      if (!request) {
        return;
      }
      const responseHeaders = AxiosHeaders.from(
        "getAllResponseHeaders" in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);
      request = null;
    }
    if ("onloadend" in request) {
      request.onloadend = onloadend;
    } else {
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
          return;
        }
        setTimeout(onloadend);
      };
    }
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }
      reject(new AxiosError("Request aborted", AxiosError.ECONNABORTED, config, request));
      request = null;
    };
    request.onerror = function handleError() {
      reject(new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request));
      request = null;
    };
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
      const transitional2 = _config.transitional || transitionalDefaults;
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject(new AxiosError(
        timeoutErrorMessage,
        transitional2.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
        config,
        request
      ));
      request = null;
    };
    requestData === void 0 && requestHeaders.setContentType(null);
    if ("setRequestHeader" in request) {
      utils$2.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }
    if (!utils$2.isUndefined(_config.withCredentials)) {
      request.withCredentials = !!_config.withCredentials;
    }
    if (responseType && responseType !== "json") {
      request.responseType = _config.responseType;
    }
    if (onDownloadProgress) {
      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
      request.addEventListener("progress", downloadThrottled);
    }
    if (onUploadProgress && request.upload) {
      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
      request.upload.addEventListener("progress", uploadThrottled);
      request.upload.addEventListener("loadend", flushUpload);
    }
    if (_config.cancelToken || _config.signal) {
      onCanceled = (cancel) => {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);
        request.abort();
        request = null;
      };
      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
      }
    }
    const protocol = parseProtocol(_config.url);
    if (protocol && platform.protocols.indexOf(protocol) === -1) {
      reject(new AxiosError("Unsupported protocol " + protocol + ":", AxiosError.ERR_BAD_REQUEST, config));
      return;
    }
    request.send(requestData || null);
  });
};
const composeSignals = (signals, timeout) => {
  const { length } = signals = signals ? signals.filter(Boolean) : [];
  if (timeout || length) {
    let controller = new AbortController();
    let aborted;
    const onabort = function(reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));
      }
    };
    let timer = timeout && setTimeout(() => {
      timer = null;
      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));
    }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach((signal2) => {
          signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
    const { signal } = controller;
    signal.unsubscribe = () => utils$2.asap(unsubscribe);
    return signal;
  }
};
const streamChunk = function* (chunk, chunkSize) {
  let len = chunk.byteLength;
  if (len < chunkSize) {
    yield chunk;
    return;
  }
  let pos = 0;
  let end;
  while (pos < len) {
    end = pos + chunkSize;
    yield chunk.slice(pos, end);
    pos = end;
  }
};
const readBytes = async function* (iterable, chunkSize) {
  for await (const chunk of readStream(iterable)) {
    yield* streamChunk(chunk, chunkSize);
  }
};
const readStream = async function* (stream) {
  if (stream[Symbol.asyncIterator]) {
    yield* stream;
    return;
  }
  const reader = stream.getReader();
  try {
    for (; ; ) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
};
const trackStream = (stream, chunkSize, onProgress, onFinish) => {
  const iterator = readBytes(stream, chunkSize);
  let bytes = 0;
  let done;
  let _onFinish = (e) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e);
    }
  };
  return new ReadableStream({
    async pull(controller) {
      try {
        const { done: done2, value } = await iterator.next();
        if (done2) {
          _onFinish();
          controller.close();
          return;
        }
        let len = value.byteLength;
        if (onProgress) {
          let loadedBytes = bytes += len;
          onProgress(loadedBytes);
        }
        controller.enqueue(new Uint8Array(value));
      } catch (err) {
        _onFinish(err);
        throw err;
      }
    },
    cancel(reason) {
      _onFinish(reason);
      return iterator.return();
    }
  }, {
    highWaterMark: 2
  });
};
const isFetchSupported = typeof fetch === "function" && typeof Request === "function" && typeof Response === "function";
const isReadableStreamSupported = isFetchSupported && typeof ReadableStream === "function";
const encodeText = isFetchSupported && (typeof TextEncoder === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Response(str).arrayBuffer()));
const test = (fn, ...args) => {
  try {
    return !!fn(...args);
  } catch (e) {
    return false;
  }
};
const supportsRequestStream = isReadableStreamSupported && test(() => {
  let duplexAccessed = false;
  const hasContentType = new Request(platform.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      duplexAccessed = true;
      return "half";
    }
  }).headers.has("Content-Type");
  return duplexAccessed && !hasContentType;
});
const DEFAULT_CHUNK_SIZE = 64 * 1024;
const supportsResponseStream = isReadableStreamSupported && test(() => utils$2.isReadableStream(new Response("").body));
const resolvers = {
  stream: supportsResponseStream && ((res) => res.body)
};
isFetchSupported && ((res) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
    !resolvers[type] && (resolvers[type] = utils$2.isFunction(res[type]) ? (res2) => res2[type]() : (_2, config) => {
      throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);
    });
  });
})(new Response());
const getBodyLength = async (body) => {
  if (body == null) {
    return 0;
  }
  if (utils$2.isBlob(body)) {
    return body.size;
  }
  if (utils$2.isSpecCompliantForm(body)) {
    const _request = new Request(platform.origin, {
      method: "POST",
      body
    });
    return (await _request.arrayBuffer()).byteLength;
  }
  if (utils$2.isArrayBufferView(body) || utils$2.isArrayBuffer(body)) {
    return body.byteLength;
  }
  if (utils$2.isURLSearchParams(body)) {
    body = body + "";
  }
  if (utils$2.isString(body)) {
    return (await encodeText(body)).byteLength;
  }
};
const resolveBodyLength = async (headers, body) => {
  const length = utils$2.toFiniteNumber(headers.getContentLength());
  return length == null ? getBodyLength(body) : length;
};
const fetchAdapter = isFetchSupported && (async (config) => {
  let {
    url,
    method,
    data,
    signal,
    cancelToken,
    timeout,
    onDownloadProgress,
    onUploadProgress,
    responseType,
    headers,
    withCredentials = "same-origin",
    fetchOptions
  } = resolveConfig(config);
  responseType = responseType ? (responseType + "").toLowerCase() : "text";
  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
  let request;
  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
    composedSignal.unsubscribe();
  });
  let requestContentLength;
  try {
    if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
      let _request = new Request(url, {
        method: "POST",
        body: data,
        duplex: "half"
      });
      let contentTypeHeader;
      if (utils$2.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
        headers.setContentType(contentTypeHeader);
      }
      if (_request.body) {
        const [onProgress, flush] = progressEventDecorator(
          requestContentLength,
          progressEventReducer(asyncDecorator(onUploadProgress))
        );
        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
      }
    }
    if (!utils$2.isString(withCredentials)) {
      withCredentials = withCredentials ? "include" : "omit";
    }
    const isCredentialsSupported = "credentials" in Request.prototype;
    request = new Request(url, {
      ...fetchOptions,
      signal: composedSignal,
      method: method.toUpperCase(),
      headers: headers.normalize().toJSON(),
      body: data,
      duplex: "half",
      credentials: isCredentialsSupported ? withCredentials : void 0
    });
    let response = await fetch(request);
    const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
    if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
      const options = {};
      ["status", "statusText", "headers"].forEach((prop) => {
        options[prop] = response[prop];
      });
      const responseContentLength = utils$2.toFiniteNumber(response.headers.get("content-length"));
      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
        responseContentLength,
        progressEventReducer(asyncDecorator(onDownloadProgress), true)
      ) || [];
      response = new Response(
        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
          flush && flush();
          unsubscribe && unsubscribe();
        }),
        options
      );
    }
    responseType = responseType || "text";
    let responseData = await resolvers[utils$2.findKey(resolvers, responseType) || "text"](response, config);
    !isStreamResponse && unsubscribe && unsubscribe();
    return await new Promise((resolve, reject) => {
      settle(resolve, reject, {
        data: responseData,
        headers: AxiosHeaders.from(response.headers),
        status: response.status,
        statusText: response.statusText,
        config,
        request
      });
    });
  } catch (err) {
    unsubscribe && unsubscribe();
    if (err && err.name === "TypeError" && /fetch/i.test(err.message)) {
      throw Object.assign(
        new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request),
        {
          cause: err.cause || err
        }
      );
    }
    throw AxiosError.from(err, err && err.code, config, request);
  }
});
const knownAdapters = {
  http: httpAdapter,
  xhr: xhrAdapter,
  fetch: fetchAdapter
};
utils$2.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, "name", { value });
    } catch (e) {
    }
    Object.defineProperty(fn, "adapterName", { value });
  }
});
const renderReason = (reason) => `- ${reason}`;
const isResolvedHandle = (adapter) => utils$2.isFunction(adapter) || adapter === null || adapter === false;
const adapters = {
  getAdapter: (adapters2) => {
    adapters2 = utils$2.isArray(adapters2) ? adapters2 : [adapters2];
    const { length } = adapters2;
    let nameOrAdapter;
    let adapter;
    const rejectedReasons = {};
    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters2[i];
      let id2;
      adapter = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id2 = String(nameOrAdapter)).toLowerCase()];
        if (adapter === void 0) {
          throw new AxiosError(`Unknown adapter '${id2}'`);
        }
      }
      if (adapter) {
        break;
      }
      rejectedReasons[id2 || "#" + i] = adapter;
    }
    if (!adapter) {
      const reasons = Object.entries(rejectedReasons).map(
        ([id2, state]) => `adapter ${id2} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
      );
      let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
      throw new AxiosError(
        `There is no suitable adapter to dispatch the request ` + s,
        "ERR_NOT_SUPPORT"
      );
    }
    return adapter;
  },
  adapters: knownAdapters
};
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
  if (config.signal && config.signal.aborted) {
    throw new CanceledError(null, config);
  }
}
function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = AxiosHeaders.from(config.headers);
  config.data = transformData.call(
    config,
    config.transformRequest
  );
  if (["post", "put", "patch"].indexOf(config.method) !== -1) {
    config.headers.setContentType("application/x-www-form-urlencoded", false);
  }
  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);
    response.data = transformData.call(
      config,
      config.transformResponse,
      response
    );
    response.headers = AxiosHeaders.from(response.headers);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = AxiosHeaders.from(reason.response.headers);
      }
    }
    return Promise.reject(reason);
  });
}
const VERSION = "1.7.7";
const validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
  validators$1[type] = function validator2(thing) {
    return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
  };
});
const deprecatedWarnings = {};
validators$1.transitional = function transitional(validator2, version, message) {
  function formatMessage(opt, desc) {
    return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
  }
  return (value, opt, opts) => {
    if (validator2 === false) {
      throw new AxiosError(
        formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
        AxiosError.ERR_DEPRECATED
      );
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      console.warn(
        formatMessage(
          opt,
          " has been deprecated since v" + version + " and will be removed in the near future"
        )
      );
    }
    return validator2 ? validator2(value, opt, opts) : true;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== "object") {
    throw new AxiosError("options must be an object", AxiosError.ERR_BAD_OPTION_VALUE);
  }
  const keys2 = Object.keys(options);
  let i = keys2.length;
  while (i-- > 0) {
    const opt = keys2[i];
    const validator2 = schema[opt];
    if (validator2) {
      const value = options[opt];
      const result = value === void 0 || validator2(value, opt, options);
      if (result !== true) {
        throw new AxiosError("option " + opt + " must be " + result, AxiosError.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError("Unknown option " + opt, AxiosError.ERR_BAD_OPTION);
    }
  }
}
const validator = {
  assertOptions,
  validators: validators$1
};
const validators = validator.validators;
class Axios {
  constructor(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new InterceptorManager(),
      response: new InterceptorManager()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config) {
    try {
      return await this._request(configOrUrl, config);
    } catch (err) {
      if (err instanceof Error) {
        let dummy;
        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : dummy = new Error();
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
        try {
          if (!err.stack) {
            err.stack = stack;
          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
            err.stack += "\n" + stack;
          }
        } catch (e) {
        }
      }
      throw err;
    }
  }
  _request(configOrUrl, config) {
    if (typeof configOrUrl === "string") {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }
    config = mergeConfig(this.defaults, config);
    const { transitional: transitional2, paramsSerializer, headers } = config;
    if (transitional2 !== void 0) {
      validator.assertOptions(transitional2, {
        silentJSONParsing: validators.transitional(validators.boolean),
        forcedJSONParsing: validators.transitional(validators.boolean),
        clarifyTimeoutError: validators.transitional(validators.boolean)
      }, false);
    }
    if (paramsSerializer != null) {
      if (utils$2.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        };
      } else {
        validator.assertOptions(paramsSerializer, {
          encode: validators.function,
          serialize: validators.function
        }, true);
      }
    }
    config.method = (config.method || this.defaults.method || "get").toLowerCase();
    let contextHeaders = headers && utils$2.merge(
      headers.common,
      headers[config.method]
    );
    headers && utils$2.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (method) => {
        delete headers[method];
      }
    );
    config.headers = AxiosHeaders.concat(contextHeaders, headers);
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
        return;
      }
      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    let promise;
    let i = 0;
    let len;
    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), void 0];
      chain.unshift.apply(chain, requestInterceptorChain);
      chain.push.apply(chain, responseInterceptorChain);
      len = chain.length;
      promise = Promise.resolve(config);
      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config;
    i = 0;
    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    i = 0;
    len = responseInterceptorChain.length;
    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }
    return promise;
  }
  getUri(config) {
    config = mergeConfig(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
}
utils$2.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method,
      url,
      data: (config || {}).data
    }));
  };
});
utils$2.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        headers: isForm ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url,
        data
      }));
    };
  }
  Axios.prototype[method] = generateHTTPMethod();
  Axios.prototype[method + "Form"] = generateHTTPMethod(true);
});
class CancelToken {
  constructor(executor) {
    if (typeof executor !== "function") {
      throw new TypeError("executor must be a function.");
    }
    let resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    const token2 = this;
    this.promise.then((cancel) => {
      if (!token2._listeners) return;
      let i = token2._listeners.length;
      while (i-- > 0) {
        token2._listeners[i](cancel);
      }
      token2._listeners = null;
    });
    this.promise.then = (onfulfilled) => {
      let _resolve;
      const promise = new Promise((resolve) => {
        token2.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject() {
        token2.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message, config, request) {
      if (token2.reason) {
        return;
      }
      token2.reason = new CanceledError(message, config, request);
      resolvePromise(token2.reason);
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }
  toAbortSignal() {
    const controller = new AbortController();
    const abort = (err) => {
      controller.abort(err);
    };
    this.subscribe(abort);
    controller.signal.unsubscribe = () => this.unsubscribe(abort);
    return controller.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token2 = new CancelToken(function executor(c2) {
      cancel = c2;
    });
    return {
      token: token2,
      cancel
    };
  }
}
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}
function isAxiosError(payload) {
  return utils$2.isObject(payload) && payload.isAxiosError === true;
}
const HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});
function createInstance(defaultConfig) {
  const context = new Axios(defaultConfig);
  const instance = bind(Axios.prototype.request, context);
  utils$2.extend(instance, Axios.prototype, context, { allOwnKeys: true });
  utils$2.extend(instance, context, null, { allOwnKeys: true });
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };
  return instance;
}
const axios = createInstance(defaults$1);
axios.Axios = Axios;
axios.CanceledError = CanceledError;
axios.CancelToken = CancelToken;
axios.isCancel = isCancel;
axios.VERSION = VERSION;
axios.toFormData = toFormData;
axios.AxiosError = AxiosError;
axios.Cancel = axios.CanceledError;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread;
axios.isAxiosError = isAxiosError;
axios.mergeConfig = mergeConfig;
axios.AxiosHeaders = AxiosHeaders;
axios.formToJSON = (thing) => formDataToJSON(utils$2.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters.getAdapter;
axios.HttpStatusCode = HttpStatusCode;
axios.default = axios;
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var hookCallback;
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(callback) {
  hookCallback = callback;
}
function isArray(input) {
  return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
}
function isObject(input) {
  return input != null && Object.prototype.toString.call(input) === "[object Object]";
}
function hasOwnProp(a, b2) {
  return Object.prototype.hasOwnProperty.call(a, b2);
}
function isObjectEmpty(obj) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(obj).length === 0;
  } else {
    var k2;
    for (k2 in obj) {
      if (hasOwnProp(obj, k2)) {
        return false;
      }
    }
    return true;
  }
}
function isUndefined(input) {
  return input === void 0;
}
function isNumber(input) {
  return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
}
function isDate(input) {
  return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
}
function map(arr, fn) {
  var res = [], i, arrLen = arr.length;
  for (i = 0; i < arrLen; ++i) {
    res.push(fn(arr[i], i));
  }
  return res;
}
function extend(a, b2) {
  for (var i in b2) {
    if (hasOwnProp(b2, i)) {
      a[i] = b2[i];
    }
  }
  if (hasOwnProp(b2, "toString")) {
    a.toString = b2.toString;
  }
  if (hasOwnProp(b2, "valueOf")) {
    a.valueOf = b2.valueOf;
  }
  return a;
}
function createUTC(input, format2, locale2, strict) {
  return createLocalOrUTC(input, format2, locale2, strict, true).utc();
}
function defaultParsingFlags() {
  return {
    empty: false,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: false,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: false,
    userInvalidated: false,
    iso: false,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: false,
    weekdayMismatch: false
  };
}
function getParsingFlags(m2) {
  if (m2._pf == null) {
    m2._pf = defaultParsingFlags();
  }
  return m2._pf;
}
var some;
if (Array.prototype.some) {
  some = Array.prototype.some;
} else {
  some = function(fun) {
    var t2 = Object(this), len = t2.length >>> 0, i;
    for (i = 0; i < len; i++) {
      if (i in t2 && fun.call(this, t2[i], i, t2)) {
        return true;
      }
    }
    return false;
  };
}
function isValid(m2) {
  var flags = null, parsedParts = false, isNowValid = m2._d && !isNaN(m2._d.getTime());
  if (isNowValid) {
    flags = getParsingFlags(m2);
    parsedParts = some.call(flags.parsedDateParts, function(i) {
      return i != null;
    });
    isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
    if (m2._strict) {
      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
    }
  }
  if (Object.isFrozen == null || !Object.isFrozen(m2)) {
    m2._isValid = isNowValid;
  } else {
    return isNowValid;
  }
  return m2._isValid;
}
function createInvalid(flags) {
  var m2 = createUTC(NaN);
  if (flags != null) {
    extend(getParsingFlags(m2), flags);
  } else {
    getParsingFlags(m2).userInvalidated = true;
  }
  return m2;
}
var momentProperties = hooks.momentProperties = [], updateInProgress = false;
function copyConfig(to2, from2) {
  var i, prop, val, momentPropertiesLen = momentProperties.length;
  if (!isUndefined(from2._isAMomentObject)) {
    to2._isAMomentObject = from2._isAMomentObject;
  }
  if (!isUndefined(from2._i)) {
    to2._i = from2._i;
  }
  if (!isUndefined(from2._f)) {
    to2._f = from2._f;
  }
  if (!isUndefined(from2._l)) {
    to2._l = from2._l;
  }
  if (!isUndefined(from2._strict)) {
    to2._strict = from2._strict;
  }
  if (!isUndefined(from2._tzm)) {
    to2._tzm = from2._tzm;
  }
  if (!isUndefined(from2._isUTC)) {
    to2._isUTC = from2._isUTC;
  }
  if (!isUndefined(from2._offset)) {
    to2._offset = from2._offset;
  }
  if (!isUndefined(from2._pf)) {
    to2._pf = getParsingFlags(from2);
  }
  if (!isUndefined(from2._locale)) {
    to2._locale = from2._locale;
  }
  if (momentPropertiesLen > 0) {
    for (i = 0; i < momentPropertiesLen; i++) {
      prop = momentProperties[i];
      val = from2[prop];
      if (!isUndefined(val)) {
        to2[prop] = val;
      }
    }
  }
  return to2;
}
function Moment(config) {
  copyConfig(this, config);
  this._d = new Date(config._d != null ? config._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = /* @__PURE__ */ new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
}
function isMoment(obj) {
  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
}
function warn(msg) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + msg);
  }
}
function deprecate(msg, fn) {
  var firstTime = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, msg);
    }
    if (firstTime) {
      var args = [], arg, i, key, argLen = arguments.length;
      for (i = 0; i < argLen; i++) {
        arg = "";
        if (typeof arguments[i] === "object") {
          arg += "\n[" + i + "] ";
          for (key in arguments[0]) {
            if (hasOwnProp(arguments[0], key)) {
              arg += key + ": " + arguments[0][key] + ", ";
            }
          }
          arg = arg.slice(0, -2);
        } else {
          arg = arguments[i];
        }
        args.push(arg);
      }
      warn(
        msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack
      );
      firstTime = false;
    }
    return fn.apply(this, arguments);
  }, fn);
}
var deprecations = {};
function deprecateSimple(name, msg) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(name, msg);
  }
  if (!deprecations[name]) {
    warn(msg);
    deprecations[name] = true;
  }
}
hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;
function isFunction(input) {
  return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
}
function set(config) {
  var prop, i;
  for (i in config) {
    if (hasOwnProp(config, i)) {
      prop = config[i];
      if (isFunction(prop)) {
        this[i] = prop;
      } else {
        this["_" + i] = prop;
      }
    }
  }
  this._config = config;
  this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function mergeConfigs(parentConfig, childConfig) {
  var res = extend({}, parentConfig), prop;
  for (prop in childConfig) {
    if (hasOwnProp(childConfig, prop)) {
      if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
        res[prop] = {};
        extend(res[prop], parentConfig[prop]);
        extend(res[prop], childConfig[prop]);
      } else if (childConfig[prop] != null) {
        res[prop] = childConfig[prop];
      } else {
        delete res[prop];
      }
    }
  }
  for (prop in parentConfig) {
    if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
      res[prop] = extend({}, res[prop]);
    }
  }
  return res;
}
function Locale(config) {
  if (config != null) {
    this.set(config);
  }
}
var keys;
if (Object.keys) {
  keys = Object.keys;
} else {
  keys = function(obj) {
    var i, res = [];
    for (i in obj) {
      if (hasOwnProp(obj, i)) {
        res.push(i);
      }
    }
    return res;
  };
}
var defaultCalendar = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function calendar(key, mom, now2) {
  var output = this._calendar[key] || this._calendar["sameElse"];
  return isFunction(output) ? output.call(mom, now2) : output;
}
function zeroFill(number2, targetLength, forceSign) {
  var absNumber = "" + Math.abs(number2), zerosToFill = targetLength - absNumber.length, sign2 = number2 >= 0;
  return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}
var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
function addFormatToken(token2, padded, ordinal2, callback) {
  var func2 = callback;
  if (typeof callback === "string") {
    func2 = function() {
      return this[callback]();
    };
  }
  if (token2) {
    formatTokenFunctions[token2] = func2;
  }
  if (padded) {
    formatTokenFunctions[padded[0]] = function() {
      return zeroFill(func2.apply(this, arguments), padded[1], padded[2]);
    };
  }
  if (ordinal2) {
    formatTokenFunctions[ordinal2] = function() {
      return this.localeData().ordinal(
        func2.apply(this, arguments),
        token2
      );
    };
  }
}
function removeFormattingTokens(input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|\]$/g, "");
  }
  return input.replace(/\\/g, "");
}
function makeFormatFunction(format2) {
  var array2 = format2.match(formattingTokens), i, length;
  for (i = 0, length = array2.length; i < length; i++) {
    if (formatTokenFunctions[array2[i]]) {
      array2[i] = formatTokenFunctions[array2[i]];
    } else {
      array2[i] = removeFormattingTokens(array2[i]);
    }
  }
  return function(mom) {
    var output = "", i2;
    for (i2 = 0; i2 < length; i2++) {
      output += isFunction(array2[i2]) ? array2[i2].call(mom, format2) : array2[i2];
    }
    return output;
  };
}
function formatMoment(m2, format2) {
  if (!m2.isValid()) {
    return m2.localeData().invalidDate();
  }
  format2 = expandFormat(format2, m2.localeData());
  formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
  return formatFunctions[format2](m2);
}
function expandFormat(format2, locale2) {
  var i = 5;
  function replaceLongDateFormatTokens(input) {
    return locale2.longDateFormat(input) || input;
  }
  localFormattingTokens.lastIndex = 0;
  while (i >= 0 && localFormattingTokens.test(format2)) {
    format2 = format2.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens
    );
    localFormattingTokens.lastIndex = 0;
    i -= 1;
  }
  return format2;
}
var defaultLongDateFormat = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function longDateFormat(key) {
  var format2 = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
  if (format2 || !formatUpper) {
    return format2;
  }
  this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
    if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
      return tok.slice(1);
    }
    return tok;
  }).join("");
  return this._longDateFormat[key];
}
var defaultInvalidDate = "Invalid date";
function invalidDate() {
  return this._invalidDate;
}
var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
function ordinal(number2) {
  return this._ordinal.replace("%d", number2);
}
var defaultRelativeTime = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function relativeTime(number2, withoutSuffix, string2, isFuture) {
  var output = this._relativeTime[string2];
  return isFunction(output) ? output(number2, withoutSuffix, string2, isFuture) : output.replace(/%d/i, number2);
}
function pastFuture(diff2, output) {
  var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
  return isFunction(format2) ? format2(output) : format2.replace(/%s/i, output);
}
var aliases = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
function normalizeUnits(units) {
  return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
}
function normalizeObjectUnits(inputObject) {
  var normalizedInput = {}, normalizedProp, prop;
  for (prop in inputObject) {
    if (hasOwnProp(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);
      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }
  return normalizedInput;
}
var priorities = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
function getPrioritizedUnits(unitsObj) {
  var units = [], u2;
  for (u2 in unitsObj) {
    if (hasOwnProp(unitsObj, u2)) {
      units.push({ unit: u2, priority: priorities[u2] });
    }
  }
  units.sort(function(a, b2) {
    return a.priority - b2.priority;
  });
  return units;
}
var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, match1to2NoLeadingZero = /^[1-9]\d?/, match1to2HasZero = /^([1-9]\d|\d)/, regexes;
regexes = {};
function addRegexToken(token2, regex, strictRegex) {
  regexes[token2] = isFunction(regex) ? regex : function(isStrict, localeData2) {
    return isStrict && strictRegex ? strictRegex : regex;
  };
}
function getParseRegexForToken(token2, config) {
  if (!hasOwnProp(regexes, token2)) {
    return new RegExp(unescapeFormat(token2));
  }
  return regexes[token2](config._strict, config._locale);
}
function unescapeFormat(s) {
  return regexEscape(
    s.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
      }
    )
  );
}
function regexEscape(s) {
  return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function absFloor(number2) {
  if (number2 < 0) {
    return Math.ceil(number2) || 0;
  } else {
    return Math.floor(number2);
  }
}
function toInt(argumentForCoercion) {
  var coercedNumber = +argumentForCoercion, value = 0;
  if (coercedNumber !== 0 && isFinite(coercedNumber)) {
    value = absFloor(coercedNumber);
  }
  return value;
}
var tokens = {};
function addParseToken(token2, callback) {
  var i, func2 = callback, tokenLen;
  if (typeof token2 === "string") {
    token2 = [token2];
  }
  if (isNumber(callback)) {
    func2 = function(input, array2) {
      array2[callback] = toInt(input);
    };
  }
  tokenLen = token2.length;
  for (i = 0; i < tokenLen; i++) {
    tokens[token2[i]] = func2;
  }
}
function addWeekParseToken(token2, callback) {
  addParseToken(token2, function(input, array2, config, token3) {
    config._w = config._w || {};
    callback(input, config._w, config, token3);
  });
}
function addTimeToArrayFromToken(token2, input, config) {
  if (input != null && hasOwnProp(tokens, token2)) {
    tokens[token2](input, config._a, config, token2);
  }
}
function isLeapYear(year) {
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
addFormatToken("Y", 0, 0, function() {
  var y2 = this.year();
  return y2 <= 9999 ? zeroFill(y2, 4) : "+" + y2;
});
addFormatToken(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
addFormatToken(0, ["YYYY", 4], 0, "year");
addFormatToken(0, ["YYYYY", 5], 0, "year");
addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
addRegexToken("Y", matchSigned);
addRegexToken("YY", match1to2, match2);
addRegexToken("YYYY", match1to4, match4);
addRegexToken("YYYYY", match1to6, match6);
addRegexToken("YYYYYY", match1to6, match6);
addParseToken(["YYYYY", "YYYYYY"], YEAR);
addParseToken("YYYY", function(input, array2) {
  array2[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken("YY", function(input, array2) {
  array2[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken("Y", function(input, array2) {
  array2[YEAR] = parseInt(input, 10);
});
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
hooks.parseTwoDigitYear = function(input) {
  return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
};
var getSetYear = makeGetSet("FullYear", true);
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function makeGetSet(unit, keepTime) {
  return function(value) {
    if (value != null) {
      set$1(this, unit, value);
      hooks.updateOffset(this, keepTime);
      return this;
    } else {
      return get(this, unit);
    }
  };
}
function get(mom, unit) {
  if (!mom.isValid()) {
    return NaN;
  }
  var d = mom._d, isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return isUTC ? d.getUTCMilliseconds() : d.getMilliseconds();
    case "Seconds":
      return isUTC ? d.getUTCSeconds() : d.getSeconds();
    case "Minutes":
      return isUTC ? d.getUTCMinutes() : d.getMinutes();
    case "Hours":
      return isUTC ? d.getUTCHours() : d.getHours();
    case "Date":
      return isUTC ? d.getUTCDate() : d.getDate();
    case "Day":
      return isUTC ? d.getUTCDay() : d.getDay();
    case "Month":
      return isUTC ? d.getUTCMonth() : d.getMonth();
    case "FullYear":
      return isUTC ? d.getUTCFullYear() : d.getFullYear();
    default:
      return NaN;
  }
}
function set$1(mom, unit, value) {
  var d, isUTC, year, month, date;
  if (!mom.isValid() || isNaN(value)) {
    return;
  }
  d = mom._d;
  isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return void (isUTC ? d.setUTCMilliseconds(value) : d.setMilliseconds(value));
    case "Seconds":
      return void (isUTC ? d.setUTCSeconds(value) : d.setSeconds(value));
    case "Minutes":
      return void (isUTC ? d.setUTCMinutes(value) : d.setMinutes(value));
    case "Hours":
      return void (isUTC ? d.setUTCHours(value) : d.setHours(value));
    case "Date":
      return void (isUTC ? d.setUTCDate(value) : d.setDate(value));
    case "FullYear":
      break;
    default:
      return;
  }
  year = value;
  month = mom.month();
  date = mom.date();
  date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;
  void (isUTC ? d.setUTCFullYear(year, month, date) : d.setFullYear(year, month, date));
}
function stringGet(units) {
  units = normalizeUnits(units);
  if (isFunction(this[units])) {
    return this[units]();
  }
  return this;
}
function stringSet(units, value) {
  if (typeof units === "object") {
    units = normalizeObjectUnits(units);
    var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;
    for (i = 0; i < prioritizedLen; i++) {
      this[prioritized[i].unit](units[prioritized[i].unit]);
    }
  } else {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units](value);
    }
  }
  return this;
}
function mod(n2, x2) {
  return (n2 % x2 + x2) % x2;
}
var indexOf;
if (Array.prototype.indexOf) {
  indexOf = Array.prototype.indexOf;
} else {
  indexOf = function(o) {
    var i;
    for (i = 0; i < this.length; ++i) {
      if (this[i] === o) {
        return i;
      }
    }
    return -1;
  };
}
function daysInMonth(year, month) {
  if (isNaN(year) || isNaN(month)) {
    return NaN;
  }
  var modMonth = mod(month, 12);
  year += (month - modMonth) / 12;
  return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
}
addFormatToken("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
addFormatToken("MMM", 0, 0, function(format2) {
  return this.localeData().monthsShort(this, format2);
});
addFormatToken("MMMM", 0, 0, function(format2) {
  return this.localeData().months(this, format2);
});
addRegexToken("M", match1to2, match1to2NoLeadingZero);
addRegexToken("MM", match1to2, match2);
addRegexToken("MMM", function(isStrict, locale2) {
  return locale2.monthsShortRegex(isStrict);
});
addRegexToken("MMMM", function(isStrict, locale2) {
  return locale2.monthsRegex(isStrict);
});
addParseToken(["M", "MM"], function(input, array2) {
  array2[MONTH] = toInt(input) - 1;
});
addParseToken(["MMM", "MMMM"], function(input, array2, config, token2) {
  var month = config._locale.monthsParse(input, token2, config._strict);
  if (month != null) {
    array2[MONTH] = month;
  } else {
    getParsingFlags(config).invalidMonth = input;
  }
});
var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
function localeMonths(m2, format2) {
  if (!m2) {
    return isArray(this._months) ? this._months : this._months["standalone"];
  }
  return isArray(this._months) ? this._months[m2.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m2.month()];
}
function localeMonthsShort(m2, format2) {
  if (!m2) {
    return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray(this._monthsShort) ? this._monthsShort[m2.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m2.month()];
}
function handleStrictParse(monthName, format2, strict) {
  var i, ii2, mom, llc = monthName.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (i = 0; i < 12; ++i) {
      mom = createUTC([2e3, i]);
      this._shortMonthsParse[i] = this.monthsShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format2 === "MMM") {
      ii2 = indexOf.call(this._shortMonthsParse, llc);
      return ii2 !== -1 ? ii2 : null;
    } else {
      ii2 = indexOf.call(this._longMonthsParse, llc);
      return ii2 !== -1 ? ii2 : null;
    }
  } else {
    if (format2 === "MMM") {
      ii2 = indexOf.call(this._shortMonthsParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._longMonthsParse, llc);
      return ii2 !== -1 ? ii2 : null;
    } else {
      ii2 = indexOf.call(this._longMonthsParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._shortMonthsParse, llc);
      return ii2 !== -1 ? ii2 : null;
    }
  }
}
function localeMonthsParse(monthName, format2, strict) {
  var i, mom, regex;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, monthName, format2, strict);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    if (strict && !this._longMonthsParse[i]) {
      this._longMonthsParse[i] = new RegExp(
        "^" + this.months(mom, "").replace(".", "") + "$",
        "i"
      );
      this._shortMonthsParse[i] = new RegExp(
        "^" + this.monthsShort(mom, "").replace(".", "") + "$",
        "i"
      );
    }
    if (!strict && !this._monthsParse[i]) {
      regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
      this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format2 === "MMMM" && this._longMonthsParse[i].test(monthName)) {
      return i;
    } else if (strict && format2 === "MMM" && this._shortMonthsParse[i].test(monthName)) {
      return i;
    } else if (!strict && this._monthsParse[i].test(monthName)) {
      return i;
    }
  }
}
function setMonth(mom, value) {
  if (!mom.isValid()) {
    return mom;
  }
  if (typeof value === "string") {
    if (/^\d+$/.test(value)) {
      value = toInt(value);
    } else {
      value = mom.localeData().monthsParse(value);
      if (!isNumber(value)) {
        return mom;
      }
    }
  }
  var month = value, date = mom.date();
  date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));
  void (mom._isUTC ? mom._d.setUTCMonth(month, date) : mom._d.setMonth(month, date));
  return mom;
}
function getSetMonth(value) {
  if (value != null) {
    setMonth(this, value);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get(this, "Month");
  }
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
}
function monthsRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
  }
}
function computeMonthsParse() {
  function cmpLenRev(a, b2) {
    return b2.length - a.length;
  }
  var shortPieces = [], longPieces = [], mixedPieces = [], i, mom, shortP, longP;
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    shortP = regexEscape(this.monthsShort(mom, ""));
    longP = regexEscape(this.months(mom, ""));
    shortPieces.push(shortP);
    longPieces.push(longP);
    mixedPieces.push(longP);
    mixedPieces.push(shortP);
  }
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._monthsShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
}
function createDate(y2, m2, d, h2, M2, s, ms2) {
  var date;
  if (y2 < 100 && y2 >= 0) {
    date = new Date(y2 + 400, m2, d, h2, M2, s, ms2);
    if (isFinite(date.getFullYear())) {
      date.setFullYear(y2);
    }
  } else {
    date = new Date(y2, m2, d, h2, M2, s, ms2);
  }
  return date;
}
function createUTCDate(y2) {
  var date, args;
  if (y2 < 100 && y2 >= 0) {
    args = Array.prototype.slice.call(arguments);
    args[0] = y2 + 400;
    date = new Date(Date.UTC.apply(null, args));
    if (isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y2);
    }
  } else {
    date = new Date(Date.UTC.apply(null, arguments));
  }
  return date;
}
function firstWeekOffset(year, dow, doy) {
  var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
}
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
  var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
  if (dayOfYear <= 0) {
    resYear = year - 1;
    resDayOfYear = daysInYear(resYear) + dayOfYear;
  } else if (dayOfYear > daysInYear(year)) {
    resYear = year + 1;
    resDayOfYear = dayOfYear - daysInYear(year);
  } else {
    resYear = year;
    resDayOfYear = dayOfYear;
  }
  return {
    year: resYear,
    dayOfYear: resDayOfYear
  };
}
function weekOfYear(mom, dow, doy) {
  var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
  if (week < 1) {
    resYear = mom.year() - 1;
    resWeek = week + weeksInYear(resYear, dow, doy);
  } else if (week > weeksInYear(mom.year(), dow, doy)) {
    resWeek = week - weeksInYear(mom.year(), dow, doy);
    resYear = mom.year() + 1;
  } else {
    resYear = mom.year();
    resWeek = week;
  }
  return {
    week: resWeek,
    year: resYear
  };
}
function weeksInYear(year, dow, doy) {
  var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}
addFormatToken("w", ["ww", 2], "wo", "week");
addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
addRegexToken("w", match1to2, match1to2NoLeadingZero);
addRegexToken("ww", match1to2, match2);
addRegexToken("W", match1to2, match1to2NoLeadingZero);
addRegexToken("WW", match1to2, match2);
addWeekParseToken(
  ["w", "ww", "W", "WW"],
  function(input, week, config, token2) {
    week[token2.substr(0, 1)] = toInt(input);
  }
);
function localeWeek(mom) {
  return weekOfYear(mom, this._week.dow, this._week.doy).week;
}
var defaultLocaleWeek = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6
  // The week that contains Jan 6th is the first week of the year.
};
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(input) {
  var week = this.localeData().week(this);
  return input == null ? week : this.add((input - week) * 7, "d");
}
function getSetISOWeek(input) {
  var week = weekOfYear(this, 1, 4).week;
  return input == null ? week : this.add((input - week) * 7, "d");
}
addFormatToken("d", 0, "do", "day");
addFormatToken("dd", 0, 0, function(format2) {
  return this.localeData().weekdaysMin(this, format2);
});
addFormatToken("ddd", 0, 0, function(format2) {
  return this.localeData().weekdaysShort(this, format2);
});
addFormatToken("dddd", 0, 0, function(format2) {
  return this.localeData().weekdays(this, format2);
});
addFormatToken("e", 0, 0, "weekday");
addFormatToken("E", 0, 0, "isoWeekday");
addRegexToken("d", match1to2);
addRegexToken("e", match1to2);
addRegexToken("E", match1to2);
addRegexToken("dd", function(isStrict, locale2) {
  return locale2.weekdaysMinRegex(isStrict);
});
addRegexToken("ddd", function(isStrict, locale2) {
  return locale2.weekdaysShortRegex(isStrict);
});
addRegexToken("dddd", function(isStrict, locale2) {
  return locale2.weekdaysRegex(isStrict);
});
addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config, token2) {
  var weekday = config._locale.weekdaysParse(input, token2, config._strict);
  if (weekday != null) {
    week.d = weekday;
  } else {
    getParsingFlags(config).invalidWeekday = input;
  }
});
addWeekParseToken(["d", "e", "E"], function(input, week, config, token2) {
  week[token2] = toInt(input);
});
function parseWeekday(input, locale2) {
  if (typeof input !== "string") {
    return input;
  }
  if (!isNaN(input)) {
    return parseInt(input, 10);
  }
  input = locale2.weekdaysParse(input);
  if (typeof input === "number") {
    return input;
  }
  return null;
}
function parseIsoWeekday(input, locale2) {
  if (typeof input === "string") {
    return locale2.weekdaysParse(input) % 7 || 7;
  }
  return isNaN(input) ? null : input;
}
function shiftWeekdays(ws2, n2) {
  return ws2.slice(n2, 7).concat(ws2.slice(0, n2));
}
var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
function localeWeekdays(m2, format2) {
  var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m2 && m2 !== true && this._weekdays.isFormat.test(format2) ? "format" : "standalone"];
  return m2 === true ? shiftWeekdays(weekdays, this._week.dow) : m2 ? weekdays[m2.day()] : weekdays;
}
function localeWeekdaysShort(m2) {
  return m2 === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m2 ? this._weekdaysShort[m2.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(m2) {
  return m2 === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m2 ? this._weekdaysMin[m2.day()] : this._weekdaysMin;
}
function handleStrictParse$1(weekdayName, format2, strict) {
  var i, ii2, mom, llc = weekdayName.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (i = 0; i < 7; ++i) {
      mom = createUTC([2e3, 1]).day(i);
      this._minWeekdaysParse[i] = this.weekdaysMin(
        mom,
        ""
      ).toLocaleLowerCase();
      this._shortWeekdaysParse[i] = this.weekdaysShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format2 === "dddd") {
      ii2 = indexOf.call(this._weekdaysParse, llc);
      return ii2 !== -1 ? ii2 : null;
    } else if (format2 === "ddd") {
      ii2 = indexOf.call(this._shortWeekdaysParse, llc);
      return ii2 !== -1 ? ii2 : null;
    } else {
      ii2 = indexOf.call(this._minWeekdaysParse, llc);
      return ii2 !== -1 ? ii2 : null;
    }
  } else {
    if (format2 === "dddd") {
      ii2 = indexOf.call(this._weekdaysParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._minWeekdaysParse, llc);
      return ii2 !== -1 ? ii2 : null;
    } else if (format2 === "ddd") {
      ii2 = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._weekdaysParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._minWeekdaysParse, llc);
      return ii2 !== -1 ? ii2 : null;
    } else {
      ii2 = indexOf.call(this._minWeekdaysParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._weekdaysParse, llc);
      if (ii2 !== -1) {
        return ii2;
      }
      ii2 = indexOf.call(this._shortWeekdaysParse, llc);
      return ii2 !== -1 ? ii2 : null;
    }
  }
}
function localeWeekdaysParse(weekdayName, format2, strict) {
  var i, mom, regex;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, weekdayName, format2, strict);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    if (strict && !this._fullWeekdaysParse[i]) {
      this._fullWeekdaysParse[i] = new RegExp(
        "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._shortWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._minWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
    }
    if (!this._weekdaysParse[i]) {
      regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
      this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format2 === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format2 === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
      return i;
    }
  }
}
function getSetDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var day = get(this, "Day");
  if (input != null) {
    input = parseWeekday(input, this.localeData());
    return this.add(input - day, "d");
  } else {
    return day;
  }
}
function getSetLocaleDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return input == null ? weekday : this.add(input - weekday, "d");
}
function getSetISODayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    var weekday = parseIsoWeekday(input, this.localeData());
    return this.day(this.day() % 7 ? weekday : weekday - 7);
  } else {
    return this.day() || 7;
  }
}
function weekdaysRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
}
function weekdaysShortRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
}
function weekdaysMinRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
}
function computeWeekdaysParse() {
  function cmpLenRev(a, b2) {
    return b2.length - a.length;
  }
  var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    minp = regexEscape(this.weekdaysMin(mom, ""));
    shortp = regexEscape(this.weekdaysShort(mom, ""));
    longp = regexEscape(this.weekdays(mom, ""));
    minPieces.push(minp);
    shortPieces.push(shortp);
    longPieces.push(longp);
    mixedPieces.push(minp);
    mixedPieces.push(shortp);
    mixedPieces.push(longp);
  }
  minPieces.sort(cmpLenRev);
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._weekdaysShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
  this._weekdaysMinStrictRegex = new RegExp(
    "^(" + minPieces.join("|") + ")",
    "i"
  );
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
addFormatToken("H", ["HH", 2], 0, "hour");
addFormatToken("h", ["hh", 2], 0, hFormat);
addFormatToken("k", ["kk", 2], 0, kFormat);
addFormatToken("hmm", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});
addFormatToken("hmmss", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
addFormatToken("Hmm", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2);
});
addFormatToken("Hmmss", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
function meridiem(token2, lowercase) {
  addFormatToken(token2, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase
    );
  });
}
meridiem("a", true);
meridiem("A", false);
function matchMeridiem(isStrict, locale2) {
  return locale2._meridiemParse;
}
addRegexToken("a", matchMeridiem);
addRegexToken("A", matchMeridiem);
addRegexToken("H", match1to2, match1to2HasZero);
addRegexToken("h", match1to2, match1to2NoLeadingZero);
addRegexToken("k", match1to2, match1to2NoLeadingZero);
addRegexToken("HH", match1to2, match2);
addRegexToken("hh", match1to2, match2);
addRegexToken("kk", match1to2, match2);
addRegexToken("hmm", match3to4);
addRegexToken("hmmss", match5to6);
addRegexToken("Hmm", match3to4);
addRegexToken("Hmmss", match5to6);
addParseToken(["H", "HH"], HOUR);
addParseToken(["k", "kk"], function(input, array2, config) {
  var kInput = toInt(input);
  array2[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(["a", "A"], function(input, array2, config) {
  config._isPm = config._locale.isPM(input);
  config._meridiem = input;
});
addParseToken(["h", "hh"], function(input, array2, config) {
  array2[HOUR] = toInt(input);
  getParsingFlags(config).bigHour = true;
});
addParseToken("hmm", function(input, array2, config) {
  var pos = input.length - 2;
  array2[HOUR] = toInt(input.substr(0, pos));
  array2[MINUTE] = toInt(input.substr(pos));
  getParsingFlags(config).bigHour = true;
});
addParseToken("hmmss", function(input, array2, config) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array2[HOUR] = toInt(input.substr(0, pos1));
  array2[MINUTE] = toInt(input.substr(pos1, 2));
  array2[SECOND] = toInt(input.substr(pos2));
  getParsingFlags(config).bigHour = true;
});
addParseToken("Hmm", function(input, array2, config) {
  var pos = input.length - 2;
  array2[HOUR] = toInt(input.substr(0, pos));
  array2[MINUTE] = toInt(input.substr(pos));
});
addParseToken("Hmmss", function(input, array2, config) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array2[HOUR] = toInt(input.substr(0, pos1));
  array2[MINUTE] = toInt(input.substr(pos1, 2));
  array2[SECOND] = toInt(input.substr(pos2));
});
function localeIsPM(input) {
  return (input + "").toLowerCase().charAt(0) === "p";
}
var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", true);
function localeMeridiem(hours2, minutes2, isLower) {
  if (hours2 > 11) {
    return isLower ? "pm" : "PM";
  } else {
    return isLower ? "am" : "AM";
  }
}
var baseConfig = {
  calendar: defaultCalendar,
  longDateFormat: defaultLongDateFormat,
  invalidDate: defaultInvalidDate,
  ordinal: defaultOrdinal,
  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
  relativeTime: defaultRelativeTime,
  months: defaultLocaleMonths,
  monthsShort: defaultLocaleMonthsShort,
  week: defaultLocaleWeek,
  weekdays: defaultLocaleWeekdays,
  weekdaysMin: defaultLocaleWeekdaysMin,
  weekdaysShort: defaultLocaleWeekdaysShort,
  meridiemParse: defaultLocaleMeridiemParse
};
var locales = {}, localeFamilies = {}, globalLocale;
function commonPrefix(arr1, arr2) {
  var i, minl = Math.min(arr1.length, arr2.length);
  for (i = 0; i < minl; i += 1) {
    if (arr1[i] !== arr2[i]) {
      return i;
    }
  }
  return minl;
}
function normalizeLocale(key) {
  return key ? key.toLowerCase().replace("_", "-") : key;
}
function chooseLocale(names) {
  var i = 0, j2, next2, locale2, split;
  while (i < names.length) {
    split = normalizeLocale(names[i]).split("-");
    j2 = split.length;
    next2 = normalizeLocale(names[i + 1]);
    next2 = next2 ? next2.split("-") : null;
    while (j2 > 0) {
      locale2 = loadLocale(split.slice(0, j2).join("-"));
      if (locale2) {
        return locale2;
      }
      if (next2 && next2.length >= j2 && commonPrefix(split, next2) >= j2 - 1) {
        break;
      }
      j2--;
    }
    i++;
  }
  return globalLocale;
}
function isLocaleNameSane(name) {
  return !!(name && name.match("^[^/\\\\]*$"));
}
function loadLocale(name) {
  var oldLocale = null, aliasedRequire;
  if (locales[name] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(name)) {
    try {
      oldLocale = globalLocale._abbr;
      aliasedRequire = require;
      aliasedRequire("./locale/" + name);
      getSetGlobalLocale(oldLocale);
    } catch (e) {
      locales[name] = null;
    }
  }
  return locales[name];
}
function getSetGlobalLocale(key, values) {
  var data;
  if (key) {
    if (isUndefined(values)) {
      data = getLocale(key);
    } else {
      data = defineLocale(key, values);
    }
    if (data) {
      globalLocale = data;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn(
          "Locale " + key + " not found. Did you forget to load it?"
        );
      }
    }
  }
  return globalLocale._abbr;
}
function defineLocale(name, config) {
  if (config !== null) {
    var locale2, parentConfig = baseConfig;
    config.abbr = name;
    if (locales[name] != null) {
      deprecateSimple(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      );
      parentConfig = locales[name]._config;
    } else if (config.parentLocale != null) {
      if (locales[config.parentLocale] != null) {
        parentConfig = locales[config.parentLocale]._config;
      } else {
        locale2 = loadLocale(config.parentLocale);
        if (locale2 != null) {
          parentConfig = locale2._config;
        } else {
          if (!localeFamilies[config.parentLocale]) {
            localeFamilies[config.parentLocale] = [];
          }
          localeFamilies[config.parentLocale].push({
            name,
            config
          });
          return null;
        }
      }
    }
    locales[name] = new Locale(mergeConfigs(parentConfig, config));
    if (localeFamilies[name]) {
      localeFamilies[name].forEach(function(x2) {
        defineLocale(x2.name, x2.config);
      });
    }
    getSetGlobalLocale(name);
    return locales[name];
  } else {
    delete locales[name];
    return null;
  }
}
function updateLocale(name, config) {
  if (config != null) {
    var locale2, tmpLocale, parentConfig = baseConfig;
    if (locales[name] != null && locales[name].parentLocale != null) {
      locales[name].set(mergeConfigs(locales[name]._config, config));
    } else {
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config = mergeConfigs(parentConfig, config);
      if (tmpLocale == null) {
        config.abbr = name;
      }
      locale2 = new Locale(config);
      locale2.parentLocale = locales[name];
      locales[name] = locale2;
    }
    getSetGlobalLocale(name);
  } else {
    if (locales[name] != null) {
      if (locales[name].parentLocale != null) {
        locales[name] = locales[name].parentLocale;
        if (name === getSetGlobalLocale()) {
          getSetGlobalLocale(name);
        }
      } else if (locales[name] != null) {
        delete locales[name];
      }
    }
  }
  return locales[name];
}
function getLocale(key) {
  var locale2;
  if (key && key._locale && key._locale._abbr) {
    key = key._locale._abbr;
  }
  if (!key) {
    return globalLocale;
  }
  if (!isArray(key)) {
    locale2 = loadLocale(key);
    if (locale2) {
      return locale2;
    }
    key = [key];
  }
  return chooseLocale(key);
}
function listLocales() {
  return keys(locales);
}
function checkOverflow(m2) {
  var overflow, a = m2._a;
  if (a && getParsingFlags(m2).overflow === -2) {
    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(m2)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
      overflow = DATE;
    }
    if (getParsingFlags(m2)._overflowWeeks && overflow === -1) {
      overflow = WEEK;
    }
    if (getParsingFlags(m2)._overflowWeekday && overflow === -1) {
      overflow = WEEKDAY;
    }
    getParsingFlags(m2).overflow = overflow;
  }
  return m2;
}
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, false],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, false],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, false],
  ["YYYY", /\d{4}/, false]
], isoTimes = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function configFromISO(config) {
  var i, l2, string2 = config._i, match = extendedIsoRegex.exec(string2) || basicIsoRegex.exec(string2), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
  if (match) {
    getParsingFlags(config).iso = true;
    for (i = 0, l2 = isoDatesLen; i < l2; i++) {
      if (isoDates[i][1].exec(match[1])) {
        dateFormat = isoDates[i][0];
        allowTime = isoDates[i][2] !== false;
        break;
      }
    }
    if (dateFormat == null) {
      config._isValid = false;
      return;
    }
    if (match[3]) {
      for (i = 0, l2 = isoTimesLen; i < l2; i++) {
        if (isoTimes[i][1].exec(match[3])) {
          timeFormat = (match[2] || " ") + isoTimes[i][0];
          break;
        }
      }
      if (timeFormat == null) {
        config._isValid = false;
        return;
      }
    }
    if (!allowTime && timeFormat != null) {
      config._isValid = false;
      return;
    }
    if (match[4]) {
      if (tzRegex.exec(match[4])) {
        tzFormat = "Z";
      } else {
        config._isValid = false;
        return;
      }
    }
    config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
    configFromStringAndFormat(config);
  } else {
    config._isValid = false;
  }
}
function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)
  ];
  if (secondStr) {
    result.push(parseInt(secondStr, 10));
  }
  return result;
}
function untruncateYear(yearStr) {
  var year = parseInt(yearStr, 10);
  if (year <= 49) {
    return 2e3 + year;
  } else if (year <= 999) {
    return 1900 + year;
  }
  return year;
}
function preprocessRFC2822(s) {
  return s.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(weekdayStr, parsedInput, config) {
  if (weekdayStr) {
    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]
    ).getDay();
    if (weekdayProvided !== weekdayActual) {
      getParsingFlags(config).weekdayMismatch = true;
      config._isValid = false;
      return false;
    }
  }
  return true;
}
function calculateOffset(obsOffset, militaryOffset, numOffset) {
  if (obsOffset) {
    return obsOffsets[obsOffset];
  } else if (militaryOffset) {
    return 0;
  } else {
    var hm = parseInt(numOffset, 10), m2 = hm % 100, h2 = (hm - m2) / 100;
    return h2 * 60 + m2;
  }
}
function configFromRFC2822(config) {
  var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;
  if (match) {
    parsedArray = extractFromRFC2822Strings(
      match[4],
      match[3],
      match[2],
      match[5],
      match[6],
      match[7]
    );
    if (!checkWeekday(match[1], parsedArray, config)) {
      return;
    }
    config._a = parsedArray;
    config._tzm = calculateOffset(match[8], match[9], match[10]);
    config._d = createUTCDate.apply(null, config._a);
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    getParsingFlags(config).rfc2822 = true;
  } else {
    config._isValid = false;
  }
}
function configFromString(config) {
  var matched = aspNetJsonRegex.exec(config._i);
  if (matched !== null) {
    config._d = /* @__PURE__ */ new Date(+matched[1]);
    return;
  }
  configFromISO(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  configFromRFC2822(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  if (config._strict) {
    config._isValid = false;
  } else {
    hooks.createFromInputFallback(config);
  }
}
hooks.createFromInputFallback = deprecate(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(config) {
    config._d = /* @__PURE__ */ new Date(config._i + (config._useUTC ? " UTC" : ""));
  }
);
function defaults(a, b2, c2) {
  if (a != null) {
    return a;
  }
  if (b2 != null) {
    return b2;
  }
  return c2;
}
function currentDateArray(config) {
  var nowValue = new Date(hooks.now());
  if (config._useUTC) {
    return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()
    ];
  }
  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}
function configFromArray(config) {
  var i, date, input = [], currentDate, expectedWeekday, yearToUse;
  if (config._d) {
    return;
  }
  currentDate = currentDateArray(config);
  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
    dayOfYearFromWeekInfo(config);
  }
  if (config._dayOfYear != null) {
    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
      getParsingFlags(config)._overflowDayOfYear = true;
    }
    date = createUTCDate(yearToUse, 0, config._dayOfYear);
    config._a[MONTH] = date.getUTCMonth();
    config._a[DATE] = date.getUTCDate();
  }
  for (i = 0; i < 3 && config._a[i] == null; ++i) {
    config._a[i] = input[i] = currentDate[i];
  }
  for (; i < 7; i++) {
    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
  }
  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
    config._nextDay = true;
    config._a[HOUR] = 0;
  }
  config._d = (config._useUTC ? createUTCDate : createDate).apply(
    null,
    input
  );
  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
  if (config._tzm != null) {
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
  }
  if (config._nextDay) {
    config._a[HOUR] = 24;
  }
  if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
    getParsingFlags(config).weekdayMismatch = true;
  }
}
function dayOfYearFromWeekInfo(config) {
  var w2, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
  w2 = config._w;
  if (w2.GG != null || w2.W != null || w2.E != null) {
    dow = 1;
    doy = 4;
    weekYear = defaults(
      w2.GG,
      config._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year
    );
    week = defaults(w2.W, 1);
    weekday = defaults(w2.E, 1);
    if (weekday < 1 || weekday > 7) {
      weekdayOverflow = true;
    }
  } else {
    dow = config._locale._week.dow;
    doy = config._locale._week.doy;
    curWeek = weekOfYear(createLocal(), dow, doy);
    weekYear = defaults(w2.gg, config._a[YEAR], curWeek.year);
    week = defaults(w2.w, curWeek.week);
    if (w2.d != null) {
      weekday = w2.d;
      if (weekday < 0 || weekday > 6) {
        weekdayOverflow = true;
      }
    } else if (w2.e != null) {
      weekday = w2.e + dow;
      if (w2.e < 0 || w2.e > 6) {
        weekdayOverflow = true;
      }
    } else {
      weekday = dow;
    }
  }
  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
    getParsingFlags(config)._overflowWeeks = true;
  } else if (weekdayOverflow != null) {
    getParsingFlags(config)._overflowWeekday = true;
  } else {
    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
    config._a[YEAR] = temp.year;
    config._dayOfYear = temp.dayOfYear;
  }
}
hooks.ISO_8601 = function() {
};
hooks.RFC_2822 = function() {
};
function configFromStringAndFormat(config) {
  if (config._f === hooks.ISO_8601) {
    configFromISO(config);
    return;
  }
  if (config._f === hooks.RFC_2822) {
    configFromRFC2822(config);
    return;
  }
  config._a = [];
  getParsingFlags(config).empty = true;
  var string2 = "" + config._i, i, parsedInput, tokens2, token2, skipped, stringLength = string2.length, totalParsedInputLength = 0, era, tokenLen;
  tokens2 = expandFormat(config._f, config._locale).match(formattingTokens) || [];
  tokenLen = tokens2.length;
  for (i = 0; i < tokenLen; i++) {
    token2 = tokens2[i];
    parsedInput = (string2.match(getParseRegexForToken(token2, config)) || [])[0];
    if (parsedInput) {
      skipped = string2.substr(0, string2.indexOf(parsedInput));
      if (skipped.length > 0) {
        getParsingFlags(config).unusedInput.push(skipped);
      }
      string2 = string2.slice(
        string2.indexOf(parsedInput) + parsedInput.length
      );
      totalParsedInputLength += parsedInput.length;
    }
    if (formatTokenFunctions[token2]) {
      if (parsedInput) {
        getParsingFlags(config).empty = false;
      } else {
        getParsingFlags(config).unusedTokens.push(token2);
      }
      addTimeToArrayFromToken(token2, parsedInput, config);
    } else if (config._strict && !parsedInput) {
      getParsingFlags(config).unusedTokens.push(token2);
    }
  }
  getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
  if (string2.length > 0) {
    getParsingFlags(config).unusedInput.push(string2);
  }
  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
    getParsingFlags(config).bigHour = void 0;
  }
  getParsingFlags(config).parsedDateParts = config._a.slice(0);
  getParsingFlags(config).meridiem = config._meridiem;
  config._a[HOUR] = meridiemFixWrap(
    config._locale,
    config._a[HOUR],
    config._meridiem
  );
  era = getParsingFlags(config).era;
  if (era !== null) {
    config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
  }
  configFromArray(config);
  checkOverflow(config);
}
function meridiemFixWrap(locale2, hour, meridiem2) {
  var isPm;
  if (meridiem2 == null) {
    return hour;
  }
  if (locale2.meridiemHour != null) {
    return locale2.meridiemHour(hour, meridiem2);
  } else if (locale2.isPM != null) {
    isPm = locale2.isPM(meridiem2);
    if (isPm && hour < 12) {
      hour += 12;
    }
    if (!isPm && hour === 12) {
      hour = 0;
    }
    return hour;
  } else {
    return hour;
  }
}
function configFromStringAndArray(config) {
  var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;
  if (configfLen === 0) {
    getParsingFlags(config).invalidFormat = true;
    config._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (i = 0; i < configfLen; i++) {
    currentScore = 0;
    validFormatFound = false;
    tempConfig = copyConfig({}, config);
    if (config._useUTC != null) {
      tempConfig._useUTC = config._useUTC;
    }
    tempConfig._f = config._f[i];
    configFromStringAndFormat(tempConfig);
    if (isValid(tempConfig)) {
      validFormatFound = true;
    }
    currentScore += getParsingFlags(tempConfig).charsLeftOver;
    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    getParsingFlags(tempConfig).score = currentScore;
    if (!bestFormatIsValid) {
      if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
        if (validFormatFound) {
          bestFormatIsValid = true;
        }
      }
    } else {
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
  }
  extend(config, bestMoment || tempConfig);
}
function configFromObject(config) {
  if (config._d) {
    return;
  }
  var i = normalizeObjectUnits(config._i), dayOrDate = i.day === void 0 ? i.date : i.day;
  config._a = map(
    [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
    function(obj) {
      return obj && parseInt(obj, 10);
    }
  );
  configFromArray(config);
}
function createFromConfig(config) {
  var res = new Moment(checkOverflow(prepareConfig(config)));
  if (res._nextDay) {
    res.add(1, "d");
    res._nextDay = void 0;
  }
  return res;
}
function prepareConfig(config) {
  var input = config._i, format2 = config._f;
  config._locale = config._locale || getLocale(config._l);
  if (input === null || format2 === void 0 && input === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof input === "string") {
    config._i = input = config._locale.preparse(input);
  }
  if (isMoment(input)) {
    return new Moment(checkOverflow(input));
  } else if (isDate(input)) {
    config._d = input;
  } else if (isArray(format2)) {
    configFromStringAndArray(config);
  } else if (format2) {
    configFromStringAndFormat(config);
  } else {
    configFromInput(config);
  }
  if (!isValid(config)) {
    config._d = null;
  }
  return config;
}
function configFromInput(config) {
  var input = config._i;
  if (isUndefined(input)) {
    config._d = new Date(hooks.now());
  } else if (isDate(input)) {
    config._d = new Date(input.valueOf());
  } else if (typeof input === "string") {
    configFromString(config);
  } else if (isArray(input)) {
    config._a = map(input.slice(0), function(obj) {
      return parseInt(obj, 10);
    });
    configFromArray(config);
  } else if (isObject(input)) {
    configFromObject(config);
  } else if (isNumber(input)) {
    config._d = new Date(input);
  } else {
    hooks.createFromInputFallback(config);
  }
}
function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
  var c2 = {};
  if (format2 === true || format2 === false) {
    strict = format2;
    format2 = void 0;
  }
  if (locale2 === true || locale2 === false) {
    strict = locale2;
    locale2 = void 0;
  }
  if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
    input = void 0;
  }
  c2._isAMomentObject = true;
  c2._useUTC = c2._isUTC = isUTC;
  c2._l = locale2;
  c2._i = input;
  c2._f = format2;
  c2._strict = strict;
  return createFromConfig(c2);
}
function createLocal(input, format2, locale2, strict) {
  return createLocalOrUTC(input, format2, locale2, strict, false);
}
var prototypeMin = deprecate(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  }
), prototypeMax = deprecate(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  }
);
function pickBy(fn, moments) {
  var res, i;
  if (moments.length === 1 && isArray(moments[0])) {
    moments = moments[0];
  }
  if (!moments.length) {
    return createLocal();
  }
  res = moments[0];
  for (i = 1; i < moments.length; ++i) {
    if (!moments[i].isValid() || moments[i][fn](res)) {
      res = moments[i];
    }
  }
  return res;
}
function min() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isBefore", args);
}
function max() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isAfter", args);
}
var now = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
};
var ordering = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function isDurationValid(m2) {
  var key, unitHasDecimal = false, i, orderLen = ordering.length;
  for (key in m2) {
    if (hasOwnProp(m2, key) && !(indexOf.call(ordering, key) !== -1 && (m2[key] == null || !isNaN(m2[key])))) {
      return false;
    }
  }
  for (i = 0; i < orderLen; ++i) {
    if (m2[ordering[i]]) {
      if (unitHasDecimal) {
        return false;
      }
      if (parseFloat(m2[ordering[i]]) !== toInt(m2[ordering[i]])) {
        unitHasDecimal = true;
      }
    }
  }
  return true;
}
function isValid$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(duration) {
  var normalizedInput = normalizeObjectUnits(duration), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
  this._isValid = isDurationValid(normalizedInput);
  this._milliseconds = +milliseconds2 + seconds2 * 1e3 + // 1000
  minutes2 * 6e4 + // 1000 * 60
  hours2 * 1e3 * 60 * 60;
  this._days = +days2 + weeks2 * 7;
  this._months = +months2 + quarters * 3 + years2 * 12;
  this._data = {};
  this._locale = getLocale();
  this._bubble();
}
function isDuration(obj) {
  return obj instanceof Duration;
}
function absRound(number2) {
  if (number2 < 0) {
    return Math.round(-1 * number2) * -1;
  } else {
    return Math.round(number2);
  }
}
function compareArrays(array1, array2, dontConvert) {
  var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
  for (i = 0; i < len; i++) {
    if (toInt(array1[i]) !== toInt(array2[i])) {
      diffs++;
    }
  }
  return diffs + lengthDiff;
}
function offset(token2, separator) {
  addFormatToken(token2, 0, 0, function() {
    var offset2 = this.utcOffset(), sign2 = "+";
    if (offset2 < 0) {
      offset2 = -offset2;
      sign2 = "-";
    }
    return sign2 + zeroFill(~~(offset2 / 60), 2) + separator + zeroFill(~~offset2 % 60, 2);
  });
}
offset("Z", ":");
offset("ZZ", "");
addRegexToken("Z", matchShortOffset);
addRegexToken("ZZ", matchShortOffset);
addParseToken(["Z", "ZZ"], function(input, array2, config) {
  config._useUTC = true;
  config._tzm = offsetFromString(matchShortOffset, input);
});
var chunkOffset = /([\+\-]|\d\d)/gi;
function offsetFromString(matcher, string2) {
  var matches = (string2 || "").match(matcher), chunk, parts, minutes2;
  if (matches === null) {
    return null;
  }
  chunk = matches[matches.length - 1] || [];
  parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
  minutes2 = +(parts[1] * 60) + toInt(parts[2]);
  return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
}
function cloneWithOffset(input, model2) {
  var res, diff2;
  if (model2._isUTC) {
    res = model2.clone();
    diff2 = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
    res._d.setTime(res._d.valueOf() + diff2);
    hooks.updateOffset(res, false);
    return res;
  } else {
    return createLocal(input).local();
  }
}
function getDateOffset(m2) {
  return -Math.round(m2._d.getTimezoneOffset());
}
hooks.updateOffset = function() {
};
function getSetOffset(input, keepLocalTime, keepMinutes) {
  var offset2 = this._offset || 0, localAdjust;
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    if (typeof input === "string") {
      input = offsetFromString(matchShortOffset, input);
      if (input === null) {
        return this;
      }
    } else if (Math.abs(input) < 16 && !keepMinutes) {
      input = input * 60;
    }
    if (!this._isUTC && keepLocalTime) {
      localAdjust = getDateOffset(this);
    }
    this._offset = input;
    this._isUTC = true;
    if (localAdjust != null) {
      this.add(localAdjust, "m");
    }
    if (offset2 !== input) {
      if (!keepLocalTime || this._changeInProgress) {
        addSubtract(
          this,
          createDuration(input - offset2, "m"),
          1,
          false
        );
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? offset2 : getDateOffset(this);
  }
}
function getSetZone(input, keepLocalTime) {
  if (input != null) {
    if (typeof input !== "string") {
      input = -input;
    }
    this.utcOffset(input, keepLocalTime);
    return this;
  } else {
    return -this.utcOffset();
  }
}
function setOffsetToUTC(keepLocalTime) {
  return this.utcOffset(0, keepLocalTime);
}
function setOffsetToLocal(keepLocalTime) {
  if (this._isUTC) {
    this.utcOffset(0, keepLocalTime);
    this._isUTC = false;
    if (keepLocalTime) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var tZone = offsetFromString(matchOffset, this._i);
    if (tZone != null) {
      this.utcOffset(tZone);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
}
function hasAlignedHourOffset(input) {
  if (!this.isValid()) {
    return false;
  }
  input = input ? createLocal(input).utcOffset() : 0;
  return (this.utcOffset() - input) % 60 === 0;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var c2 = {}, other;
  copyConfig(c2, this);
  c2 = prepareConfig(c2);
  if (c2._a) {
    other = c2._isUTC ? createUTC(c2._a) : createLocal(c2._a);
    this._isDSTShifted = this.isValid() && compareArrays(c2._a, other.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : false;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : false;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
}
var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration(input, key) {
  var duration = input, match = null, sign2, ret, diffRes;
  if (isDuration(input)) {
    duration = {
      ms: input._milliseconds,
      d: input._days,
      M: input._months
    };
  } else if (isNumber(input) || !isNaN(+input)) {
    duration = {};
    if (key) {
      duration[key] = +input;
    } else {
      duration.milliseconds = +input;
    }
  } else if (match = aspNetRegex.exec(input)) {
    sign2 = match[1] === "-" ? -1 : 1;
    duration = {
      y: 0,
      d: toInt(match[DATE]) * sign2,
      h: toInt(match[HOUR]) * sign2,
      m: toInt(match[MINUTE]) * sign2,
      s: toInt(match[SECOND]) * sign2,
      ms: toInt(absRound(match[MILLISECOND] * 1e3)) * sign2
      // the millisecond decimal point is included in the match
    };
  } else if (match = isoRegex.exec(input)) {
    sign2 = match[1] === "-" ? -1 : 1;
    duration = {
      y: parseIso(match[2], sign2),
      M: parseIso(match[3], sign2),
      w: parseIso(match[4], sign2),
      d: parseIso(match[5], sign2),
      h: parseIso(match[6], sign2),
      m: parseIso(match[7], sign2),
      s: parseIso(match[8], sign2)
    };
  } else if (duration == null) {
    duration = {};
  } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
    diffRes = momentsDifference(
      createLocal(duration.from),
      createLocal(duration.to)
    );
    duration = {};
    duration.ms = diffRes.milliseconds;
    duration.M = diffRes.months;
  }
  ret = new Duration(duration);
  if (isDuration(input) && hasOwnProp(input, "_locale")) {
    ret._locale = input._locale;
  }
  if (isDuration(input) && hasOwnProp(input, "_isValid")) {
    ret._isValid = input._isValid;
  }
  return ret;
}
createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;
function parseIso(inp, sign2) {
  var res = inp && parseFloat(inp.replace(",", "."));
  return (isNaN(res) ? 0 : res) * sign2;
}
function positiveMomentsDifference(base, other) {
  var res = {};
  res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
  if (base.clone().add(res.months, "M").isAfter(other)) {
    --res.months;
  }
  res.milliseconds = +other - +base.clone().add(res.months, "M");
  return res;
}
function momentsDifference(base, other) {
  var res;
  if (!(base.isValid() && other.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  other = cloneWithOffset(other, base);
  if (base.isBefore(other)) {
    res = positiveMomentsDifference(base, other);
  } else {
    res = positiveMomentsDifference(other, base);
    res.milliseconds = -res.milliseconds;
    res.months = -res.months;
  }
  return res;
}
function createAdder(direction, name) {
  return function(val, period) {
    var dur, tmp;
    if (period !== null && !isNaN(+period)) {
      deprecateSimple(
        name,
        "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
      );
      tmp = val;
      val = period;
      period = tmp;
    }
    dur = createDuration(val, period);
    addSubtract(this, dur, direction);
    return this;
  };
}
function addSubtract(mom, duration, isAdding, updateOffset) {
  var milliseconds2 = duration._milliseconds, days2 = absRound(duration._days), months2 = absRound(duration._months);
  if (!mom.isValid()) {
    return;
  }
  updateOffset = updateOffset == null ? true : updateOffset;
  if (months2) {
    setMonth(mom, get(mom, "Month") + months2 * isAdding);
  }
  if (days2) {
    set$1(mom, "Date", get(mom, "Date") + days2 * isAdding);
  }
  if (milliseconds2) {
    mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
  }
  if (updateOffset) {
    hooks.updateOffset(mom, days2 || months2);
  }
}
var add = createAdder(1, "add"), subtract = createAdder(-1, "subtract");
function isString(input) {
  return typeof input === "string" || input instanceof String;
}
function isMomentInput(input) {
  return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
}
function isMomentInputObject(input) {
  var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], i, property, propertyLen = properties.length;
  for (i = 0; i < propertyLen; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
}
function isNumberOrStringArray(input) {
  var arrayTest = isArray(input), dataTypeTest = false;
  if (arrayTest) {
    dataTypeTest = input.filter(function(item) {
      return !isNumber(item) && isString(input);
    }).length === 0;
  }
  return arrayTest && dataTypeTest;
}
function isCalendarSpec(input) {
  var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], i, property;
  for (i = 0; i < properties.length; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
}
function getCalendarFormat(myMoment, now2) {
  var diff2 = myMoment.diff(now2, "days", true);
  return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(time, formats) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      time = void 0;
      formats = void 0;
    } else if (isMomentInput(arguments[0])) {
      time = arguments[0];
      formats = void 0;
    } else if (isCalendarSpec(arguments[0])) {
      formats = arguments[0];
      time = void 0;
    }
  }
  var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction(formats[format2]) ? formats[format2].call(this, now2) : formats[format2]);
  return this.format(
    output || this.localeData().calendar(format2, this, createLocal(now2))
  );
}
function clone() {
  return new Moment(this);
}
function isAfter(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() > localInput.valueOf();
  } else {
    return localInput.valueOf() < this.clone().startOf(units).valueOf();
  }
}
function isBefore(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() < localInput.valueOf();
  } else {
    return this.clone().endOf(units).valueOf() < localInput.valueOf();
  }
}
function isBetween(from2, to2, units, inclusivity) {
  var localFrom = isMoment(from2) ? from2 : createLocal(from2), localTo = isMoment(to2) ? to2 : createLocal(to2);
  if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
    return false;
  }
  inclusivity = inclusivity || "()";
  return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
}
function isSame(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input), inputMs;
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() === localInput.valueOf();
  } else {
    inputMs = localInput.valueOf();
    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
  }
}
function isSameOrAfter(input, units) {
  return this.isSame(input, units) || this.isAfter(input, units);
}
function isSameOrBefore(input, units) {
  return this.isSame(input, units) || this.isBefore(input, units);
}
function diff(input, units, asFloat) {
  var that, zoneDelta, output;
  if (!this.isValid()) {
    return NaN;
  }
  that = cloneWithOffset(input, this);
  if (!that.isValid()) {
    return NaN;
  }
  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
  units = normalizeUnits(units);
  switch (units) {
    case "year":
      output = monthDiff(this, that) / 12;
      break;
    case "month":
      output = monthDiff(this, that);
      break;
    case "quarter":
      output = monthDiff(this, that) / 3;
      break;
    case "second":
      output = (this - that) / 1e3;
      break;
    case "minute":
      output = (this - that) / 6e4;
      break;
    case "hour":
      output = (this - that) / 36e5;
      break;
    case "day":
      output = (this - that - zoneDelta) / 864e5;
      break;
    case "week":
      output = (this - that - zoneDelta) / 6048e5;
      break;
    default:
      output = this - that;
  }
  return asFloat ? output : absFloor(output);
}
function monthDiff(a, b2) {
  if (a.date() < b2.date()) {
    return -monthDiff(b2, a);
  }
  var wholeMonthDiff = (b2.year() - a.year()) * 12 + (b2.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
  if (b2 - anchor < 0) {
    anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
    adjust = (b2 - anchor) / (anchor - anchor2);
  } else {
    anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
    adjust = (b2 - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
}
hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function toString2() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(keepOffset) {
  if (!this.isValid()) {
    return null;
  }
  var utc = keepOffset !== true, m2 = utc ? this.clone().utc() : this;
  if (m2.year() < 0 || m2.year() > 9999) {
    return formatMoment(
      m2,
      utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
    );
  }
  if (isFunction(Date.prototype.toISOString)) {
    if (utc) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m2, "Z"));
    }
  }
  return formatMoment(
    m2,
    utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function inspect() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var func2 = "moment", zone = "", prefix, year, datetime, suffix;
  if (!this.isLocal()) {
    func2 = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    zone = "Z";
  }
  prefix = "[" + func2 + '("]';
  year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  datetime = "-MM-DD[T]HH:mm:ss.SSS";
  suffix = zone + '[")]';
  return this.format(prefix + year + datetime + suffix);
}
function format(inputString) {
  if (!inputString) {
    inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var output = formatMoment(this, inputString);
  return this.localeData().postformat(output);
}
function from(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function fromNow(withoutSuffix) {
  return this.from(createLocal(), withoutSuffix);
}
function to$1(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function toNow(withoutSuffix) {
  return this.to(createLocal(), withoutSuffix);
}
function locale(key) {
  var newLocaleData;
  if (key === void 0) {
    return this._locale._abbr;
  } else {
    newLocaleData = getLocale(key);
    if (newLocaleData != null) {
      this._locale = newLocaleData;
    }
    return this;
  }
}
var lang = deprecate(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(key) {
    if (key === void 0) {
      return this.localeData();
    } else {
      return this.locale(key);
    }
  }
);
function localeData() {
  return this._locale;
}
var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
function mod$1(dividend, divisor) {
  return (dividend % divisor + divisor) % divisor;
}
function localStartOfDate(y2, m2, d) {
  if (y2 < 100 && y2 >= 0) {
    return new Date(y2 + 400, m2, d) - MS_PER_400_YEARS;
  } else {
    return new Date(y2, m2, d).valueOf();
  }
}
function utcStartOfDate(y2, m2, d) {
  if (y2 < 100 && y2 >= 0) {
    return Date.UTC(y2 + 400, m2, d) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(y2, m2, d);
  }
}
function startOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year(), 0, 1);
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      time = startOfDate(this.year(), this.month(), 1);
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date());
      break;
    case "hour":
      time = this._d.valueOf();
      time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      );
      break;
    case "minute":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_MINUTE);
      break;
    case "second":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_SECOND);
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function endOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      time = startOfDate(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      time = this._d.valueOf();
      time += MS_PER_HOUR - mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      ) - 1;
      break;
    case "minute":
      time = this._d.valueOf();
      time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
      break;
    case "second":
      time = this._d.valueOf();
      time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray() {
  var m2 = this;
  return [
    m2.year(),
    m2.month(),
    m2.date(),
    m2.hour(),
    m2.minute(),
    m2.second(),
    m2.millisecond()
  ];
}
function toObject() {
  var m2 = this;
  return {
    years: m2.year(),
    months: m2.month(),
    date: m2.date(),
    hours: m2.hours(),
    minutes: m2.minutes(),
    seconds: m2.seconds(),
    milliseconds: m2.milliseconds()
  };
}
function toJSON2() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2() {
  return isValid(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
addFormatToken("N", 0, 0, "eraAbbr");
addFormatToken("NN", 0, 0, "eraAbbr");
addFormatToken("NNN", 0, 0, "eraAbbr");
addFormatToken("NNNN", 0, 0, "eraName");
addFormatToken("NNNNN", 0, 0, "eraNarrow");
addFormatToken("y", ["y", 1], "yo", "eraYear");
addFormatToken("y", ["yy", 2], 0, "eraYear");
addFormatToken("y", ["yyy", 3], 0, "eraYear");
addFormatToken("y", ["yyyy", 4], 0, "eraYear");
addRegexToken("N", matchEraAbbr);
addRegexToken("NN", matchEraAbbr);
addRegexToken("NNN", matchEraAbbr);
addRegexToken("NNNN", matchEraName);
addRegexToken("NNNNN", matchEraNarrow);
addParseToken(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(input, array2, config, token2) {
    var era = config._locale.erasParse(input, token2, config._strict);
    if (era) {
      getParsingFlags(config).era = era;
    } else {
      getParsingFlags(config).invalidEra = input;
    }
  }
);
addRegexToken("y", matchUnsigned);
addRegexToken("yy", matchUnsigned);
addRegexToken("yyy", matchUnsigned);
addRegexToken("yyyy", matchUnsigned);
addRegexToken("yo", matchEraYearOrdinal);
addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
addParseToken(["yo"], function(input, array2, config, token2) {
  var match;
  if (config._locale._eraYearOrdinalRegex) {
    match = input.match(config._locale._eraYearOrdinalRegex);
  }
  if (config._locale.eraYearOrdinalParse) {
    array2[YEAR] = config._locale.eraYearOrdinalParse(input, match);
  } else {
    array2[YEAR] = parseInt(input, 10);
  }
});
function localeEras(m2, format2) {
  var i, l2, date, eras = this._eras || getLocale("en")._eras;
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    switch (typeof eras[i].since) {
      case "string":
        date = hooks(eras[i].since).startOf("day");
        eras[i].since = date.valueOf();
        break;
    }
    switch (typeof eras[i].until) {
      case "undefined":
        eras[i].until = Infinity;
        break;
      case "string":
        date = hooks(eras[i].until).startOf("day").valueOf();
        eras[i].until = date.valueOf();
        break;
    }
  }
  return eras;
}
function localeErasParse(eraName, format2, strict) {
  var i, l2, eras = this.eras(), name, abbr, narrow;
  eraName = eraName.toUpperCase();
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    name = eras[i].name.toUpperCase();
    abbr = eras[i].abbr.toUpperCase();
    narrow = eras[i].narrow.toUpperCase();
    if (strict) {
      switch (format2) {
        case "N":
        case "NN":
        case "NNN":
          if (abbr === eraName) {
            return eras[i];
          }
          break;
        case "NNNN":
          if (name === eraName) {
            return eras[i];
          }
          break;
        case "NNNNN":
          if (narrow === eraName) {
            return eras[i];
          }
          break;
      }
    } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
      return eras[i];
    }
  }
}
function localeErasConvertYear(era, year) {
  var dir = era.since <= era.until ? 1 : -1;
  if (year === void 0) {
    return hooks(era.since).year();
  } else {
    return hooks(era.since).year() + (year - era.offset) * dir;
  }
}
function getEraName() {
  var i, l2, val, eras = this.localeData().eras();
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].name;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].name;
    }
  }
  return "";
}
function getEraNarrow() {
  var i, l2, val, eras = this.localeData().eras();
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].narrow;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].narrow;
    }
  }
  return "";
}
function getEraAbbr() {
  var i, l2, val, eras = this.localeData().eras();
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].abbr;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].abbr;
    }
  }
  return "";
}
function getEraYear() {
  var i, l2, dir, val, eras = this.localeData().eras();
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    dir = eras[i].since <= eras[i].until ? 1 : -1;
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {
      return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
    }
  }
  return this.year();
}
function erasNameRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(isStrict) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(isStrict, locale2) {
  return locale2.erasAbbrRegex(isStrict);
}
function matchEraName(isStrict, locale2) {
  return locale2.erasNameRegex(isStrict);
}
function matchEraNarrow(isStrict, locale2) {
  return locale2.erasNarrowRegex(isStrict);
}
function matchEraYearOrdinal(isStrict, locale2) {
  return locale2._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l2, erasName, erasAbbr, erasNarrow, eras = this.eras();
  for (i = 0, l2 = eras.length; i < l2; ++i) {
    erasName = regexEscape(eras[i].name);
    erasAbbr = regexEscape(eras[i].abbr);
    erasNarrow = regexEscape(eras[i].narrow);
    namePieces.push(erasName);
    abbrPieces.push(erasAbbr);
    narrowPieces.push(erasNarrow);
    mixedPieces.push(erasName);
    mixedPieces.push(erasAbbr);
    mixedPieces.push(erasNarrow);
  }
  this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp(
    "^(" + narrowPieces.join("|") + ")",
    "i"
  );
}
addFormatToken(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
addFormatToken(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function addWeekYearFormatToken(token2, getter) {
  addFormatToken(0, [token2, token2.length], 0, getter);
}
addWeekYearFormatToken("gggg", "weekYear");
addWeekYearFormatToken("ggggg", "weekYear");
addWeekYearFormatToken("GGGG", "isoWeekYear");
addWeekYearFormatToken("GGGGG", "isoWeekYear");
addRegexToken("G", matchSigned);
addRegexToken("g", matchSigned);
addRegexToken("GG", match1to2, match2);
addRegexToken("gg", match1to2, match2);
addRegexToken("GGGG", match1to4, match4);
addRegexToken("gggg", match1to4, match4);
addRegexToken("GGGGG", match1to6, match6);
addRegexToken("ggggg", match1to6, match6);
addWeekParseToken(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(input, week, config, token2) {
    week[token2.substr(0, 2)] = toInt(input);
  }
);
addWeekParseToken(["gg", "GG"], function(input, week, config, token2) {
  week[token2] = hooks.parseTwoDigitYear(input);
});
function getSetWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function getSetISOWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}
function getWeeksInWeekYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
}
function getSetWeekYearHelper(input, week, weekday, dow, doy) {
  var weeksTarget;
  if (input == null) {
    return weekOfYear(this, dow, doy).year;
  } else {
    weeksTarget = weeksInYear(input, dow, doy);
    if (week > weeksTarget) {
      week = weeksTarget;
    }
    return setWeekAll.call(this, input, week, weekday, dow, doy);
  }
}
function setWeekAll(weekYear, week, weekday, dow, doy) {
  var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
  this.year(date.getUTCFullYear());
  this.month(date.getUTCMonth());
  this.date(date.getUTCDate());
  return this;
}
addFormatToken("Q", 0, "Qo", "quarter");
addRegexToken("Q", match1);
addParseToken("Q", function(input, array2) {
  array2[MONTH] = (toInt(input) - 1) * 3;
});
function getSetQuarter(input) {
  return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}
addFormatToken("D", ["DD", 2], "Do", "date");
addRegexToken("D", match1to2, match1to2NoLeadingZero);
addRegexToken("DD", match1to2, match2);
addRegexToken("Do", function(isStrict, locale2) {
  return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
});
addParseToken(["D", "DD"], DATE);
addParseToken("Do", function(input, array2) {
  array2[DATE] = toInt(input.match(match1to2)[0]);
});
var getSetDayOfMonth = makeGetSet("Date", true);
addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
addRegexToken("DDD", match1to3);
addRegexToken("DDDD", match3);
addParseToken(["DDD", "DDDD"], function(input, array2, config) {
  config._dayOfYear = toInt(input);
});
function getSetDayOfYear(input) {
  var dayOfYear = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
}
addFormatToken("m", ["mm", 2], 0, "minute");
addRegexToken("m", match1to2, match1to2HasZero);
addRegexToken("mm", match1to2, match2);
addParseToken(["m", "mm"], MINUTE);
var getSetMinute = makeGetSet("Minutes", false);
addFormatToken("s", ["ss", 2], 0, "second");
addRegexToken("s", match1to2, match1to2HasZero);
addRegexToken("ss", match1to2, match2);
addParseToken(["s", "ss"], SECOND);
var getSetSecond = makeGetSet("Seconds", false);
addFormatToken("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
addFormatToken(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
addFormatToken(0, ["SSS", 3], 0, "millisecond");
addFormatToken(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
addFormatToken(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
addFormatToken(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
addFormatToken(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
addRegexToken("S", match1to3, match1);
addRegexToken("SS", match1to3, match2);
addRegexToken("SSS", match1to3, match3);
var token, getSetMillisecond;
for (token = "SSSS"; token.length <= 9; token += "S") {
  addRegexToken(token, matchUnsigned);
}
function parseMs(input, array2) {
  array2[MILLISECOND] = toInt(("0." + input) * 1e3);
}
for (token = "S"; token.length <= 9; token += "S") {
  addParseToken(token, parseMs);
}
getSetMillisecond = makeGetSet("Milliseconds", false);
addFormatToken("z", 0, 0, "zoneAbbr");
addFormatToken("zz", 0, 0, "zoneName");
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var proto = Moment.prototype;
proto.add = add;
proto.calendar = calendar$1;
proto.clone = clone;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format;
proto.from = from;
proto.fromNow = fromNow;
proto.to = to$1;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid$2;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.inspect = inspect;
if (typeof Symbol !== "undefined" && Symbol.for != null) {
  proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
    return "Moment<" + this.format() + ">";
  };
}
proto.toJSON = toJSON2;
proto.toString = toString2;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;
proto.eraName = getEraName;
proto.eraNarrow = getEraNarrow;
proto.eraAbbr = getEraAbbr;
proto.eraYear = getEraYear;
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;
proto.quarter = proto.quarters = getSetQuarter;
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.weeksInWeekYear = getWeeksInWeekYear;
proto.isoWeeksInYear = getISOWeeksInYear;
proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;
proto.hour = proto.hours = getSetHour;
proto.minute = proto.minutes = getSetMinute;
proto.second = proto.seconds = getSetSecond;
proto.millisecond = proto.milliseconds = getSetMillisecond;
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;
proto.dates = deprecate(
  "dates accessor is deprecated. Use date instead.",
  getSetDayOfMonth
);
proto.months = deprecate(
  "months accessor is deprecated. Use month instead",
  getSetMonth
);
proto.years = deprecate(
  "years accessor is deprecated. Use year instead",
  getSetYear
);
proto.zone = deprecate(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  getSetZone
);
proto.isDSTShifted = deprecate(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  isDaylightSavingTimeShifted
);
function createUnix(input) {
  return createLocal(input * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(string2) {
  return string2;
}
var proto$1 = Locale.prototype;
proto$1.calendar = calendar;
proto$1.longDateFormat = longDateFormat;
proto$1.invalidDate = invalidDate;
proto$1.ordinal = ordinal;
proto$1.preparse = preParsePostFormat;
proto$1.postformat = preParsePostFormat;
proto$1.relativeTime = relativeTime;
proto$1.pastFuture = pastFuture;
proto$1.set = set;
proto$1.eras = localeEras;
proto$1.erasParse = localeErasParse;
proto$1.erasConvertYear = localeErasConvertYear;
proto$1.erasAbbrRegex = erasAbbrRegex;
proto$1.erasNameRegex = erasNameRegex;
proto$1.erasNarrowRegex = erasNarrowRegex;
proto$1.months = localeMonths;
proto$1.monthsShort = localeMonthsShort;
proto$1.monthsParse = localeMonthsParse;
proto$1.monthsRegex = monthsRegex;
proto$1.monthsShortRegex = monthsShortRegex;
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;
proto$1.weekdays = localeWeekdays;
proto$1.weekdaysMin = localeWeekdaysMin;
proto$1.weekdaysShort = localeWeekdaysShort;
proto$1.weekdaysParse = localeWeekdaysParse;
proto$1.weekdaysRegex = weekdaysRegex;
proto$1.weekdaysShortRegex = weekdaysShortRegex;
proto$1.weekdaysMinRegex = weekdaysMinRegex;
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;
function get$1(format2, index, field, setter) {
  var locale2 = getLocale(), utc = createUTC().set(setter, index);
  return locale2[field](utc, format2);
}
function listMonthsImpl(format2, index, field) {
  if (isNumber(format2)) {
    index = format2;
    format2 = void 0;
  }
  format2 = format2 || "";
  if (index != null) {
    return get$1(format2, index, field, "month");
  }
  var i, out = [];
  for (i = 0; i < 12; i++) {
    out[i] = get$1(format2, i, field, "month");
  }
  return out;
}
function listWeekdaysImpl(localeSorted, format2, index, field) {
  if (typeof localeSorted === "boolean") {
    if (isNumber(format2)) {
      index = format2;
      format2 = void 0;
    }
    format2 = format2 || "";
  } else {
    format2 = localeSorted;
    index = format2;
    localeSorted = false;
    if (isNumber(format2)) {
      index = format2;
      format2 = void 0;
    }
    format2 = format2 || "";
  }
  var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0, i, out = [];
  if (index != null) {
    return get$1(format2, (index + shift) % 7, field, "day");
  }
  for (i = 0; i < 7; i++) {
    out[i] = get$1(format2, (i + shift) % 7, field, "day");
  }
  return out;
}
function listMonths(format2, index) {
  return listMonthsImpl(format2, index, "months");
}
function listMonthsShort(format2, index) {
  return listMonthsImpl(format2, index, "monthsShort");
}
function listWeekdays(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdays");
}
function listWeekdaysShort(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysShort");
}
function listWeekdaysMin(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysMin");
}
getSetGlobalLocale("en", {
  eras: [
    {
      since: "0001-01-01",
      until: Infinity,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -Infinity,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(number2) {
    var b2 = number2 % 10, output = toInt(number2 % 100 / 10) === 1 ? "th" : b2 === 1 ? "st" : b2 === 2 ? "nd" : b2 === 3 ? "rd" : "th";
    return number2 + output;
  }
});
hooks.lang = deprecate(
  "moment.lang is deprecated. Use moment.locale instead.",
  getSetGlobalLocale
);
hooks.langData = deprecate(
  "moment.langData is deprecated. Use moment.localeData instead.",
  getLocale
);
var mathAbs = Math.abs;
function abs() {
  var data = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  data.milliseconds = mathAbs(data.milliseconds);
  data.seconds = mathAbs(data.seconds);
  data.minutes = mathAbs(data.minutes);
  data.hours = mathAbs(data.hours);
  data.months = mathAbs(data.months);
  data.years = mathAbs(data.years);
  return this;
}
function addSubtract$1(duration, input, value, direction) {
  var other = createDuration(input, value);
  duration._milliseconds += direction * other._milliseconds;
  duration._days += direction * other._days;
  duration._months += direction * other._months;
  return duration._bubble();
}
function add$1(input, value) {
  return addSubtract$1(this, input, value, 1);
}
function subtract$1(input, value) {
  return addSubtract$1(this, input, value, -1);
}
function absCeil(number2) {
  if (number2 < 0) {
    return Math.floor(number2);
  } else {
    return Math.ceil(number2);
  }
}
function bubble() {
  var milliseconds2 = this._milliseconds, days2 = this._days, months2 = this._months, data = this._data, seconds2, minutes2, hours2, years2, monthsFromDays;
  if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
    milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
    days2 = 0;
    months2 = 0;
  }
  data.milliseconds = milliseconds2 % 1e3;
  seconds2 = absFloor(milliseconds2 / 1e3);
  data.seconds = seconds2 % 60;
  minutes2 = absFloor(seconds2 / 60);
  data.minutes = minutes2 % 60;
  hours2 = absFloor(minutes2 / 60);
  data.hours = hours2 % 24;
  days2 += absFloor(hours2 / 24);
  monthsFromDays = absFloor(daysToMonths(days2));
  months2 += monthsFromDays;
  days2 -= absCeil(monthsToDays(monthsFromDays));
  years2 = absFloor(months2 / 12);
  months2 %= 12;
  data.days = days2;
  data.months = months2;
  data.years = years2;
  return this;
}
function daysToMonths(days2) {
  return days2 * 4800 / 146097;
}
function monthsToDays(months2) {
  return months2 * 146097 / 4800;
}
function as$1(units) {
  if (!this.isValid()) {
    return NaN;
  }
  var days2, months2, milliseconds2 = this._milliseconds;
  units = normalizeUnits(units);
  if (units === "month" || units === "quarter" || units === "year") {
    days2 = this._days + milliseconds2 / 864e5;
    months2 = this._months + daysToMonths(days2);
    switch (units) {
      case "month":
        return months2;
      case "quarter":
        return months2 / 3;
      case "year":
        return months2 / 12;
    }
  } else {
    days2 = this._days + Math.round(monthsToDays(this._months));
    switch (units) {
      case "week":
        return days2 / 7 + milliseconds2 / 6048e5;
      case "day":
        return days2 + milliseconds2 / 864e5;
      case "hour":
        return days2 * 24 + milliseconds2 / 36e5;
      case "minute":
        return days2 * 1440 + milliseconds2 / 6e4;
      case "second":
        return days2 * 86400 + milliseconds2 / 1e3;
      case "millisecond":
        return Math.floor(days2 * 864e5) + milliseconds2;
      default:
        throw new Error("Unknown unit " + units);
    }
  }
}
function makeAs(alias) {
  return function() {
    return this.as(alias);
  };
}
var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y"), valueOf$1 = asMilliseconds;
function clone$1() {
  return createDuration(this);
}
function get$2(units) {
  units = normalizeUnits(units);
  return this.isValid() ? this[units + "s"]() : NaN;
}
function makeGetter(name) {
  return function() {
    return this.isValid() ? this._data[name] : NaN;
  };
}
var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
function weeks() {
  return absFloor(this.days() / 7);
}
var round = Math.round, thresholds = {
  ss: 44,
  // a few seconds to seconds
  s: 45,
  // seconds to minute
  m: 45,
  // minutes to hour
  h: 22,
  // hours to day
  d: 26,
  // days to month/week
  w: null,
  // weeks to month
  M: 11
  // months to year
};
function substituteTimeAgo(string2, number2, withoutSuffix, isFuture, locale2) {
  return locale2.relativeTime(number2 || 1, !!withoutSuffix, string2, isFuture);
}
function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
  var duration = createDuration(posNegDuration).abs(), seconds2 = round(duration.as("s")), minutes2 = round(duration.as("m")), hours2 = round(duration.as("h")), days2 = round(duration.as("d")), months2 = round(duration.as("M")), weeks2 = round(duration.as("w")), years2 = round(duration.as("y")), a = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
  if (thresholds2.w != null) {
    a = a || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
  }
  a = a || months2 <= 1 && ["M"] || months2 < thresholds2.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
  a[2] = withoutSuffix;
  a[3] = +posNegDuration > 0;
  a[4] = locale2;
  return substituteTimeAgo.apply(null, a);
}
function getSetRelativeTimeRounding(roundingFunction) {
  if (roundingFunction === void 0) {
    return round;
  }
  if (typeof roundingFunction === "function") {
    round = roundingFunction;
    return true;
  }
  return false;
}
function getSetRelativeTimeThreshold(threshold, limit) {
  if (thresholds[threshold] === void 0) {
    return false;
  }
  if (limit === void 0) {
    return thresholds[threshold];
  }
  thresholds[threshold] = limit;
  if (threshold === "s") {
    thresholds.ss = limit - 1;
  }
  return true;
}
function humanize(argWithSuffix, argThresholds) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var withSuffix = false, th2 = thresholds, locale2, output;
  if (typeof argWithSuffix === "object") {
    argThresholds = argWithSuffix;
    argWithSuffix = false;
  }
  if (typeof argWithSuffix === "boolean") {
    withSuffix = argWithSuffix;
  }
  if (typeof argThresholds === "object") {
    th2 = Object.assign({}, thresholds, argThresholds);
    if (argThresholds.s != null && argThresholds.ss == null) {
      th2.ss = argThresholds.s - 1;
    }
  }
  locale2 = this.localeData();
  output = relativeTime$1(this, !withSuffix, th2, locale2);
  if (withSuffix) {
    output = locale2.pastFuture(+this, output);
  }
  return locale2.postformat(output);
}
var abs$1 = Math.abs;
function sign(x2) {
  return (x2 > 0) - (x2 < 0) || +x2;
}
function toISOString$1() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months2 = abs$1(this._months), minutes2, hours2, years2, s, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
  if (!total) {
    return "P0D";
  }
  minutes2 = absFloor(seconds2 / 60);
  hours2 = absFloor(minutes2 / 60);
  seconds2 %= 60;
  minutes2 %= 60;
  years2 = absFloor(months2 / 12);
  months2 %= 12;
  s = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
  totalSign = total < 0 ? "-" : "";
  ymSign = sign(this._months) !== sign(total) ? "-" : "";
  daysSign = sign(this._days) !== sign(total) ? "-" : "";
  hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
  return totalSign + "P" + (years2 ? ymSign + years2 + "Y" : "") + (months2 ? ymSign + months2 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s + "S" : "");
}
var proto$2 = Duration.prototype;
proto$2.isValid = isValid$1;
proto$2.abs = abs;
proto$2.add = add$1;
proto$2.subtract = subtract$1;
proto$2.as = as$1;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds = asSeconds;
proto$2.asMinutes = asMinutes;
proto$2.asHours = asHours;
proto$2.asDays = asDays;
proto$2.asWeeks = asWeeks;
proto$2.asMonths = asMonths;
proto$2.asQuarters = asQuarters;
proto$2.asYears = asYears;
proto$2.valueOf = valueOf$1;
proto$2._bubble = bubble;
proto$2.clone = clone$1;
proto$2.get = get$2;
proto$2.milliseconds = milliseconds;
proto$2.seconds = seconds;
proto$2.minutes = minutes;
proto$2.hours = hours;
proto$2.days = days;
proto$2.weeks = weeks;
proto$2.months = months;
proto$2.years = years;
proto$2.humanize = humanize;
proto$2.toISOString = toISOString$1;
proto$2.toString = toISOString$1;
proto$2.toJSON = toISOString$1;
proto$2.locale = locale;
proto$2.localeData = localeData;
proto$2.toIsoString = deprecate(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  toISOString$1
);
proto$2.lang = lang;
addFormatToken("X", 0, 0, "unix");
addFormatToken("x", 0, 0, "valueOf");
addRegexToken("x", matchSigned);
addRegexToken("X", matchTimestamp);
addParseToken("X", function(input, array2, config) {
  config._d = new Date(parseFloat(input) * 1e3);
});
addParseToken("x", function(input, array2, config) {
  config._d = new Date(toInt(input));
});
//! moment.js
hooks.version = "2.30.1";
setHookCallback(createLocal);
hooks.fn = proto;
hooks.min = min;
hooks.max = max;
hooks.now = now;
hooks.utc = createUTC;
hooks.unix = createUnix;
hooks.months = listMonths;
hooks.isDate = isDate;
hooks.locale = getSetGlobalLocale;
hooks.invalid = createInvalid;
hooks.duration = createDuration;
hooks.isMoment = isMoment;
hooks.weekdays = listWeekdays;
hooks.parseZone = createInZone;
hooks.localeData = getLocale;
hooks.isDuration = isDuration;
hooks.monthsShort = listMonthsShort;
hooks.weekdaysMin = listWeekdaysMin;
hooks.defineLocale = defineLocale;
hooks.updateLocale = updateLocale;
hooks.locales = listLocales;
hooks.weekdaysShort = listWeekdaysShort;
hooks.normalizeUnits = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat = getCalendarFormat;
hooks.prototype = proto;
hooks.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  // <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  // <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  // <input type="datetime-local" step="0.001" />
  DATE: "YYYY-MM-DD",
  // <input type="date" />
  TIME: "HH:mm",
  // <input type="time" />
  TIME_SECONDS: "HH:mm:ss",
  // <input type="time" step="1" />
  TIME_MS: "HH:mm:ss.SSS",
  // <input type="time" step="0.001" />
  WEEK: "GGGG-[W]WW",
  // <input type="week" />
  MONTH: "YYYY-MM"
  // <input type="month" />
};
const Weather = () => {
  const [weatherData, setWeatherData] = reactExports.useState(null);
  const [loading, setLoading] = reactExports.useState(true);
  const [error, setError] = reactExports.useState(null);
  const [location, setLocation] = reactExports.useState({ lat: null, lon: null });
  const apiKey = "ea49212c9f78228950ae41a8adfc4cc1";
  const fetchWeather = async (lat, lon) => {
    setLoading(true);
    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;
    try {
      const response = await axios.get(apiUrl);
      setWeatherData(response.data);
      setError(null);
    } catch (err) {
      setError("Could not fetch weather data. Please try again.");
    } finally {
      setLoading(false);
    }
  };
  reactExports.useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const { latitude, longitude } = position.coords;
          setLocation({ lat: latitude, lon: longitude });
        },
        (error2) => {
          setError("Permission denied or geolocation is not available.");
          setLoading(false);
        }
      );
    } else {
      setError("Geolocation not supported by this browser.");
      setLoading(false);
    }
  }, []);
  reactExports.useEffect(() => {
    if (location.lat && location.lon) {
      fetchWeather(location.lat, location.lon);
    }
  }, [location]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: " font-poppin  italic flex items-center justify-center  text-white", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " border-gray-600 border container mx-auto p-6 max-w-4xl bg-gray-800 bg-opacity-70 rounded-lg shadow-lg", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center gap-[20px]", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col  items-center", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: "text-xl font-bold mb-4", children: "Weather App" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm", children: hooks().format("dddd, MMMM Do YYYY") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm", children: hooks().format("h:mm:ss a") })
      ] }),
      weatherData && !loading && !error && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex items-center  justify-center", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col items-center", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { className: "text-xl font-bold", children: weatherData.name }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-sm capitalize", children: weatherData.weather[0].description }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "img",
          {
            src: `https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@4x.png`,
            alt: "Weather icon",
            className: "w-28 h-28"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { className: "text-5xl font-bold", children: [
          Math.round(weatherData.main.temp),
          "°C"
        ] })
      ] }) }),
      weatherData && !loading && !error && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " pl-[20px] text-lg flex flex-col items-center justify-center", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "mb-4", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
            "Humidity: ",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "font-bold", children: [
              weatherData.main.humidity,
              "%"
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
            "Wind: ",
            /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { className: "font-bold", children: [
              weatherData.wind.speed,
              " m/s"
            ] })
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "text-sm text-gray-300", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
            "Sunrise: ",
            hooks.unix(weatherData.sys.sunrise).format("h:mm A")
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsxs("p", { children: [
            "Sunset: ",
            hooks.unix(weatherData.sys.sunset).format("h:mm A")
          ] })
        ] })
      ] })
    ] }),
    loading && /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-xl animate-pulse text-center mt-8", children: "Fetching current location..." }),
    error && /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "text-red-500 text-lg text-center mt-8", children: error })
  ] }) });
};
const SearchBar = ({ onSearch }) => {
  const [searchTerm, setSearchTerm] = reactExports.useState("");
  const clientID = "a9b667f8";
  const handleSearch = async () => {
    try {
      const encodedSearchTerm = encodeURIComponent(searchTerm);
      const response = await axios.get(
        `https://api.jamendo.com/v3.0/tracks/?client_id=${clientID}&format=json&limit=10&search=${encodedSearchTerm}`
      );
      onSearch(response.data.results);
    } catch (error) {
      console.error("Error searching for music:", error.response || error.message);
    }
  };
  return (
    // <div>
    //   <input
    //     type="text"
    //     placeholder="Search for music"
    //     value={searchTerm}
    //     onChange={(e) => setSearchTerm(e.target.value)}
    //   />
    //   <button onClick={handleSearch}>Search</button>
    // </div>
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex rounded-full bg-[#0d1829] px-2 w-full max-w-[600px]", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("button", { className: "self-center flex p-1 cursor-pointer bg-[#0d1829]", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", { width: "30px", height: "30px", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", { id: "SVGRepo_bgCarrier", strokeWidth: "0" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", { id: "SVGRepo_tracerCarrier", strokeLinecap: "round", strokeLinejoin: "round" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("g", { id: "SVGRepo_iconCarrier", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M11.567 9.8895C12.2495 8.90124 12.114 7.5637 11.247 6.7325C10.3679 5.88806 9.02339 5.75928 7.99998 6.4215C7.57983 6.69308 7.25013 7.0837 7.05298 7.5435C6.85867 7.99881 6.80774 8.50252 6.90698 8.9875C7.00665 9.47472 7.25054 9.92071 7.60698 10.2675C7.97021 10.6186 8.42786 10.8563 8.92398 10.9515C9.42353 11.049 9.94062 11.0001 10.413 10.8105C10.8798 10.6237 11.2812 10.3033 11.567 9.8895Z", stroke: "#ff5c5c", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M12.433 17.8895C11.7504 16.9012 11.886 15.5637 12.753 14.7325C13.6321 13.8881 14.9766 13.7593 16 14.4215C16.4202 14.6931 16.7498 15.0837 16.947 15.5435C17.1413 15.9988 17.1922 16.5025 17.093 16.9875C16.9933 17.4747 16.7494 17.9207 16.393 18.2675C16.0298 18.6186 15.5721 18.8563 15.076 18.9515C14.5773 19.0481 14.0614 18.9988 13.59 18.8095C13.1222 18.6234 12.7197 18.3034 12.433 17.8895V17.8895Z", stroke: "#ff5c5c", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M12 7.75049C11.5858 7.75049 11.25 8.08627 11.25 8.50049C11.25 8.9147 11.5858 9.25049 12 9.25049V7.75049ZM19 9.25049C19.4142 9.25049 19.75 8.9147 19.75 8.50049C19.75 8.08627 19.4142 7.75049 19 7.75049V9.25049ZM6.857 9.25049C7.27121 9.25049 7.607 8.9147 7.607 8.50049C7.607 8.08627 7.27121 7.75049 6.857 7.75049V9.25049ZM5 7.75049C4.58579 7.75049 4.25 8.08627 4.25 8.50049C4.25 8.9147 4.58579 9.25049 5 9.25049V7.75049ZM12 17.2505C12.4142 17.2505 12.75 16.9147 12.75 16.5005C12.75 16.0863 12.4142 15.7505 12 15.7505V17.2505ZM5 15.7505C4.58579 15.7505 4.25 16.0863 4.25 16.5005C4.25 16.9147 4.58579 17.2505 5 17.2505V15.7505ZM17.143 15.7505C16.7288 15.7505 16.393 16.0863 16.393 16.5005C16.393 16.9147 16.7288 17.2505 17.143 17.2505V15.7505ZM19 17.2505C19.4142 17.2505 19.75 16.9147 19.75 16.5005C19.75 16.0863 19.4142 15.7505 19 15.7505V17.2505ZM12 9.25049H19V7.75049H12V9.25049ZM6.857 7.75049H5V9.25049H6.857V7.75049ZM12 15.7505H5V17.2505H12V15.7505ZM17.143 17.2505H19V15.7505H17.143V17.2505Z", fill: "#ff5c5c" })
        ] })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "input",
        {
          type: "text",
          className: "w-full bg-[#0d1829] bg-transparent pl-2 text-[#cccccc] outline-0",
          placeholder: "Search by music name ",
          value: searchTerm,
          onChange: (e) => setSearchTerm(e.target.value)
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx("button", { onClick: handleSearch, className: "relative p-2 bg-[#0d1829] rounded-full", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("svg", { width: "30px", height: "30px", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", { id: "SVGRepo_bgCarrier", strokeWidth: "0" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", { id: "SVGRepo_tracerCarrier", strokeLinecap: "round", strokeLinejoin: "round" }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("g", { id: "SVGRepo_iconCarrier", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M14.9536 14.9458L21 21M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z", stroke: "#999", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }) })
      ] }) })
    ] })
  );
};
const MusicList = ({ searchResults, onTrackSelect }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { className: " max-h-[300px] overflow-y-scroll", children: searchResults.map((track) => /* @__PURE__ */ jsxRuntimeExports.jsxs("li", { className: " py-[5px] border-b border-gray-400", onClick: () => onTrackSelect(track), children: [
    track.artist_name,
    " - ",
    track.name
  ] }, track.id)) });
};
const scriptRel = function detectScriptRel() {
  const relList = typeof document !== "undefined" && document.createElement("link").relList;
  return relList && relList.supports && relList.supports("modulepreload") ? "modulepreload" : "preload";
}();
const assetsURL = function(dep, importerUrl) {
  return new URL(dep, importerUrl).href;
};
const seen = {};
const __vitePreload = function preload(baseModule, deps, importerUrl) {
  let promise = Promise.resolve();
  if (deps && deps.length > 0) {
    const links = document.getElementsByTagName("link");
    const cspNonceMeta = document.querySelector(
      "meta[property=csp-nonce]"
    );
    const cspNonce = cspNonceMeta?.nonce || cspNonceMeta?.getAttribute("nonce");
    promise = Promise.allSettled(
      deps.map((dep) => {
        dep = assetsURL(dep, importerUrl);
        if (dep in seen) return;
        seen[dep] = true;
        const isCss = dep.endsWith(".css");
        const cssSelector = isCss ? '[rel="stylesheet"]' : "";
        const isBaseRelative = !!importerUrl;
        if (isBaseRelative) {
          for (let i = links.length - 1; i >= 0; i--) {
            const link2 = links[i];
            if (link2.href === dep && (!isCss || link2.rel === "stylesheet")) {
              return;
            }
          }
        } else if (document.querySelector(`link[href="${dep}"]${cssSelector}`)) {
          return;
        }
        const link = document.createElement("link");
        link.rel = isCss ? "stylesheet" : scriptRel;
        if (!isCss) {
          link.as = "script";
        }
        link.crossOrigin = "";
        link.href = dep;
        if (cspNonce) {
          link.setAttribute("nonce", cspNonce);
        }
        document.head.appendChild(link);
        if (isCss) {
          return new Promise((res, rej) => {
            link.addEventListener("load", res);
            link.addEventListener(
              "error",
              () => rej(new Error(`Unable to preload CSS for ${dep}`))
            );
          });
        }
      })
    );
  }
  function handlePreloadError(err) {
    const e = new Event("vite:preloadError", {
      cancelable: true
    });
    e.payload = err;
    window.dispatchEvent(e);
    if (!e.defaultPrevented) {
      throw err;
    }
  }
  return promise.then((res) => {
    for (const item of res || []) {
      if (item.status !== "rejected") continue;
      handlePreloadError(item.reason);
    }
    return baseModule().catch(handlePreloadError);
  });
};
var loadScript = function load(src, opts, cb2) {
  var head = document.head || document.getElementsByTagName("head")[0];
  var script = document.createElement("script");
  if (typeof opts === "function") {
    cb2 = opts;
    opts = {};
  }
  opts = opts || {};
  cb2 = cb2 || function() {
  };
  script.type = opts.type || "text/javascript";
  script.charset = opts.charset || "utf8";
  script.async = "async" in opts ? !!opts.async : true;
  script.src = src;
  if (opts.attrs) {
    setAttributes(script, opts.attrs);
  }
  if (opts.text) {
    script.text = "" + opts.text;
  }
  var onend = "onload" in script ? stdOnEnd : ieOnEnd;
  onend(script, cb2);
  if (!script.onload) {
    stdOnEnd(script, cb2);
  }
  head.appendChild(script);
};
function setAttributes(script, attrs) {
  for (var attr in attrs) {
    script.setAttribute(attr, attrs[attr]);
  }
}
function stdOnEnd(script, cb2) {
  script.onload = function() {
    this.onerror = this.onload = null;
    cb2(null, script);
  };
  script.onerror = function() {
    this.onerror = this.onload = null;
    cb2(new Error("Failed to load " + this.src), script);
  };
}
function ieOnEnd(script, cb2) {
  script.onreadystatechange = function() {
    if (this.readyState != "complete" && this.readyState != "loaded") return;
    this.onreadystatechange = null;
    cb2(null, script);
  };
}
var isMergeableObject = function isMergeableObject2(value) {
  return isNonNullObject(value) && !isSpecial(value);
};
function isNonNullObject(value) {
  return !!value && typeof value === "object";
}
function isSpecial(value) {
  var stringValue = Object.prototype.toString.call(value);
  return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
}
var canUseSymbol = typeof Symbol === "function" && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
function isReactElement(value) {
  return value.$$typeof === REACT_ELEMENT_TYPE;
}
function emptyTarget(val) {
  return Array.isArray(val) ? [] : {};
}
function cloneUnlessOtherwiseSpecified(value, options) {
  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
}
function defaultArrayMerge(target, source, options) {
  return target.concat(source).map(function(element) {
    return cloneUnlessOtherwiseSpecified(element, options);
  });
}
function getMergeFunction(key, options) {
  if (!options.customMerge) {
    return deepmerge;
  }
  var customMerge = options.customMerge(key);
  return typeof customMerge === "function" ? customMerge : deepmerge;
}
function getEnumerableOwnPropertySymbols(target) {
  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
    return Object.propertyIsEnumerable.call(target, symbol);
  }) : [];
}
function getKeys(target) {
  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
}
function propertyIsOnObject(object2, property) {
  try {
    return property in object2;
  } catch (_2) {
    return false;
  }
}
function propertyIsUnsafe(target, key) {
  return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
}
function mergeObject(target, source, options) {
  var destination = {};
  if (options.isMergeableObject(target)) {
    getKeys(target).forEach(function(key) {
      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    });
  }
  getKeys(source).forEach(function(key) {
    if (propertyIsUnsafe(target, key)) {
      return;
    }
    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    } else {
      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    }
  });
  return destination;
}
function deepmerge(target, source, options) {
  options = options || {};
  options.arrayMerge = options.arrayMerge || defaultArrayMerge;
  options.isMergeableObject = options.isMergeableObject || isMergeableObject;
  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
  var sourceIsArray = Array.isArray(source);
  var targetIsArray = Array.isArray(target);
  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
  if (!sourceAndTargetTypesMatch) {
    return cloneUnlessOtherwiseSpecified(source, options);
  } else if (sourceIsArray) {
    return options.arrayMerge(target, source, options);
  } else {
    return mergeObject(target, source, options);
  }
}
deepmerge.all = function deepmergeAll(array2, options) {
  if (!Array.isArray(array2)) {
    throw new Error("first argument should be an array");
  }
  return array2.reduce(function(prev, next2) {
    return deepmerge(prev, next2, options);
  }, {});
};
var deepmerge_1 = deepmerge;
var cjs = deepmerge_1;
var __create$4 = Object.create;
var __defProp$6 = Object.defineProperty;
var __getOwnPropDesc$6 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$6 = Object.getOwnPropertyNames;
var __getProtoOf$4 = Object.getPrototypeOf;
var __hasOwnProp$6 = Object.prototype.hasOwnProperty;
var __export$6 = (target, all2) => {
  for (var name in all2)
    __defProp$6(target, name, { get: all2[name], enumerable: true });
};
var __copyProps$6 = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames$6(from2))
      if (!__hasOwnProp$6.call(to2, key) && key !== except)
        __defProp$6(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc$6(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM$4 = (mod2, isNodeMode, target) => (target = mod2 != null ? __create$4(__getProtoOf$4(mod2)) : {}, __copyProps$6(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !mod2 || !mod2.__esModule ? __defProp$6(target, "default", { value: mod2, enumerable: true }) : target,
  mod2
));
var __toCommonJS$6 = (mod2) => __copyProps$6(__defProp$6({}, "__esModule", { value: true }), mod2);
var utils_exports = {};
__export$6(utils_exports, {
  callPlayer: () => callPlayer,
  getConfig: () => getConfig,
  getSDK: () => getSDK,
  isBlobUrl: () => isBlobUrl,
  isMediaStream: () => isMediaStream,
  lazy: () => lazy,
  omit: () => omit,
  parseEndTime: () => parseEndTime,
  parseStartTime: () => parseStartTime,
  queryString: () => queryString,
  randomString: () => randomString,
  supportsWebKitPresentationMode: () => supportsWebKitPresentationMode
});
var utils = __toCommonJS$6(utils_exports);
var import_react$2 = __toESM$4(reactExports);
var import_load_script = __toESM$4(loadScript);
var import_deepmerge$1 = __toESM$4(cjs);
const lazy = (componentImportFn) => import_react$2.default.lazy(async () => {
  const obj = await componentImportFn();
  return typeof obj.default === "function" ? obj : obj.default;
});
const MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;
const MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;
const MATCH_START_STAMP = /(\d+)(h|m|s)/g;
const MATCH_NUMERIC = /^\d+$/;
function parseTimeParam(url, pattern) {
  if (url instanceof Array) {
    return void 0;
  }
  const match = url.match(pattern);
  if (match) {
    const stamp = match[1];
    if (stamp.match(MATCH_START_STAMP)) {
      return parseTimeString(stamp);
    }
    if (MATCH_NUMERIC.test(stamp)) {
      return parseInt(stamp);
    }
  }
  return void 0;
}
function parseTimeString(stamp) {
  let seconds2 = 0;
  let array2 = MATCH_START_STAMP.exec(stamp);
  while (array2 !== null) {
    const [, count, period] = array2;
    if (period === "h")
      seconds2 += parseInt(count, 10) * 60 * 60;
    if (period === "m")
      seconds2 += parseInt(count, 10) * 60;
    if (period === "s")
      seconds2 += parseInt(count, 10);
    array2 = MATCH_START_STAMP.exec(stamp);
  }
  return seconds2;
}
function parseStartTime(url) {
  return parseTimeParam(url, MATCH_START_QUERY);
}
function parseEndTime(url) {
  return parseTimeParam(url, MATCH_END_QUERY);
}
function randomString() {
  return Math.random().toString(36).substr(2, 5);
}
function queryString(object2) {
  return Object.keys(object2).map((key) => `${key}=${object2[key]}`).join("&");
}
function getGlobal(key) {
  if (window[key]) {
    return window[key];
  }
  if (window.exports && window.exports[key]) {
    return window.exports[key];
  }
  if (window.module && window.module.exports && window.module.exports[key]) {
    return window.module.exports[key];
  }
  return null;
}
const requests = {};
const getSDK = enableStubOn(function getSDK2(url, sdkGlobal, sdkReady = null, isLoaded = () => true, fetchScript = import_load_script.default) {
  const existingGlobal = getGlobal(sdkGlobal);
  if (existingGlobal && isLoaded(existingGlobal)) {
    return Promise.resolve(existingGlobal);
  }
  return new Promise((resolve, reject) => {
    if (requests[url]) {
      requests[url].push({ resolve, reject });
      return;
    }
    requests[url] = [{ resolve, reject }];
    const onLoaded = (sdk) => {
      requests[url].forEach((request) => request.resolve(sdk));
    };
    if (sdkReady) {
      const previousOnReady = window[sdkReady];
      window[sdkReady] = function() {
        if (previousOnReady)
          previousOnReady();
        onLoaded(getGlobal(sdkGlobal));
      };
    }
    fetchScript(url, (err) => {
      if (err) {
        requests[url].forEach((request) => request.reject(err));
        requests[url] = null;
      } else if (!sdkReady) {
        onLoaded(getGlobal(sdkGlobal));
      }
    });
  });
});
function getConfig(props2, defaultProps2) {
  return (0, import_deepmerge$1.default)(defaultProps2.config, props2.config);
}
function omit(object2, ...arrays) {
  const omitKeys = [].concat(...arrays);
  const output = {};
  const keys2 = Object.keys(object2);
  for (const key of keys2) {
    if (omitKeys.indexOf(key) === -1) {
      output[key] = object2[key];
    }
  }
  return output;
}
function callPlayer(method, ...args) {
  if (!this.player || !this.player[method]) {
    let message = `ReactPlayer: ${this.constructor.displayName} player could not call %c${method}%c – `;
    if (!this.player) {
      message += "The player was not available";
    } else if (!this.player[method]) {
      message += "The method was not available";
    }
    console.warn(message, "font-weight: bold", "");
    return null;
  }
  return this.player[method](...args);
}
function isMediaStream(url) {
  return typeof window !== "undefined" && typeof window.MediaStream !== "undefined" && url instanceof window.MediaStream;
}
function isBlobUrl(url) {
  return /^blob:/.test(url);
}
function supportsWebKitPresentationMode(video = document.createElement("video")) {
  const notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;
  return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === "function" && notMobile;
}
function enableStubOn(fn) {
  return fn;
}
var __defProp$5 = Object.defineProperty;
var __getOwnPropDesc$5 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$5 = Object.getOwnPropertyNames;
var __hasOwnProp$5 = Object.prototype.hasOwnProperty;
var __export$5 = (target, all2) => {
  for (var name in all2)
    __defProp$5(target, name, { get: all2[name], enumerable: true });
};
var __copyProps$5 = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames$5(from2))
      if (!__hasOwnProp$5.call(to2, key) && key !== except)
        __defProp$5(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc$5(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toCommonJS$5 = (mod2) => __copyProps$5(__defProp$5({}, "__esModule", { value: true }), mod2);
var patterns_exports = {};
__export$5(patterns_exports, {
  AUDIO_EXTENSIONS: () => AUDIO_EXTENSIONS,
  DASH_EXTENSIONS: () => DASH_EXTENSIONS,
  FLV_EXTENSIONS: () => FLV_EXTENSIONS,
  HLS_EXTENSIONS: () => HLS_EXTENSIONS,
  MATCH_URL_DAILYMOTION: () => MATCH_URL_DAILYMOTION,
  MATCH_URL_FACEBOOK: () => MATCH_URL_FACEBOOK,
  MATCH_URL_FACEBOOK_WATCH: () => MATCH_URL_FACEBOOK_WATCH,
  MATCH_URL_KALTURA: () => MATCH_URL_KALTURA,
  MATCH_URL_MIXCLOUD: () => MATCH_URL_MIXCLOUD,
  MATCH_URL_MUX: () => MATCH_URL_MUX,
  MATCH_URL_SOUNDCLOUD: () => MATCH_URL_SOUNDCLOUD,
  MATCH_URL_STREAMABLE: () => MATCH_URL_STREAMABLE,
  MATCH_URL_TWITCH_CHANNEL: () => MATCH_URL_TWITCH_CHANNEL,
  MATCH_URL_TWITCH_VIDEO: () => MATCH_URL_TWITCH_VIDEO,
  MATCH_URL_VIDYARD: () => MATCH_URL_VIDYARD,
  MATCH_URL_VIMEO: () => MATCH_URL_VIMEO,
  MATCH_URL_WISTIA: () => MATCH_URL_WISTIA,
  MATCH_URL_YOUTUBE: () => MATCH_URL_YOUTUBE,
  VIDEO_EXTENSIONS: () => VIDEO_EXTENSIONS,
  canPlay: () => canPlay
});
var patterns = __toCommonJS$5(patterns_exports);
var import_utils$3 = utils;
const MATCH_URL_YOUTUBE = /(?:youtu\.be\/|youtube(?:-nocookie|education)?\.com\/(?:embed\/|v\/|watch\/|watch\?v=|watch\?.+&v=|shorts\/|live\/))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//;
const MATCH_URL_SOUNDCLOUD = /(?:soundcloud\.com|snd\.sc)\/[^.]+$/;
const MATCH_URL_VIMEO = /vimeo\.com\/(?!progressive_redirect).+/;
const MATCH_URL_MUX = /stream\.mux\.com\/(?!\w+\.m3u8)(\w+)/;
const MATCH_URL_FACEBOOK = /^https?:\/\/(www\.)?facebook\.com.*\/(video(s)?|watch|story)(\.php?|\/).+$/;
const MATCH_URL_FACEBOOK_WATCH = /^https?:\/\/fb\.watch\/.+$/;
const MATCH_URL_STREAMABLE = /streamable\.com\/([a-z0-9]+)$/;
const MATCH_URL_WISTIA = /(?:wistia\.(?:com|net)|wi\.st)\/(?:medias|embed)\/(?:iframe\/)?([^?]+)/;
const MATCH_URL_TWITCH_VIDEO = /(?:www\.|go\.)?twitch\.tv\/videos\/(\d+)($|\?)/;
const MATCH_URL_TWITCH_CHANNEL = /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+)($|\?)/;
const MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\/\/)?(?:www\.)?(?:(?:dailymotion\.com(?:\/embed)?\/video)|dai\.ly)\/([a-zA-Z0-9]+)(?:_[\w_-]+)?(?:[\w.#_-]+)?/;
const MATCH_URL_MIXCLOUD = /mixcloud\.com\/([^/]+\/[^/]+)/;
const MATCH_URL_VIDYARD = /vidyard.com\/(?:watch\/)?([a-zA-Z0-9-_]+)/;
const MATCH_URL_KALTURA = /^https?:\/\/[a-zA-Z]+\.kaltura.(com|org)\/p\/([0-9]+)\/sp\/([0-9]+)00\/embedIframeJs\/uiconf_id\/([0-9]+)\/partner_id\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_].*)$/;
const AUDIO_EXTENSIONS = /\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i;
const VIDEO_EXTENSIONS = /\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\d+]+)?($|\?)/i;
const HLS_EXTENSIONS = /\.(m3u8)($|\?)/i;
const DASH_EXTENSIONS = /\.(mpd)($|\?)/i;
const FLV_EXTENSIONS = /\.(flv)($|\?)/i;
const canPlayFile = (url) => {
  if (url instanceof Array) {
    for (const item of url) {
      if (typeof item === "string" && canPlayFile(item)) {
        return true;
      }
      if (canPlayFile(item.src)) {
        return true;
      }
    }
    return false;
  }
  if ((0, import_utils$3.isMediaStream)(url) || (0, import_utils$3.isBlobUrl)(url)) {
    return true;
  }
  return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url) || FLV_EXTENSIONS.test(url);
};
const canPlay = {
  youtube: (url) => {
    if (url instanceof Array) {
      return url.every((item) => MATCH_URL_YOUTUBE.test(item));
    }
    return MATCH_URL_YOUTUBE.test(url);
  },
  soundcloud: (url) => MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url),
  vimeo: (url) => MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url),
  mux: (url) => MATCH_URL_MUX.test(url),
  facebook: (url) => MATCH_URL_FACEBOOK.test(url) || MATCH_URL_FACEBOOK_WATCH.test(url),
  streamable: (url) => MATCH_URL_STREAMABLE.test(url),
  wistia: (url) => MATCH_URL_WISTIA.test(url),
  twitch: (url) => MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url),
  dailymotion: (url) => MATCH_URL_DAILYMOTION.test(url),
  mixcloud: (url) => MATCH_URL_MIXCLOUD.test(url),
  vidyard: (url) => MATCH_URL_VIDYARD.test(url),
  kaltura: (url) => MATCH_URL_KALTURA.test(url),
  file: canPlayFile
};
var __defProp$4 = Object.defineProperty;
var __getOwnPropDesc$4 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$4 = Object.getOwnPropertyNames;
var __hasOwnProp$4 = Object.prototype.hasOwnProperty;
var __export$4 = (target, all2) => {
  for (var name in all2)
    __defProp$4(target, name, { get: all2[name], enumerable: true });
};
var __copyProps$4 = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames$4(from2))
      if (!__hasOwnProp$4.call(to2, key) && key !== except)
        __defProp$4(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc$4(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toCommonJS$4 = (mod2) => __copyProps$4(__defProp$4({}, "__esModule", { value: true }), mod2);
var players_exports = {};
__export$4(players_exports, {
  default: () => players_default
});
var players = __toCommonJS$4(players_exports);
var import_utils$2 = utils;
var import_patterns = patterns;
var players_default = [
  {
    key: "youtube",
    name: "YouTube",
    canPlay: import_patterns.canPlay.youtube,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerYouTube' */
      "./YouTube-DUeMwitB.js"
    ).then((n2) => n2.Y), true ? [] : void 0, import.meta.url))
  },
  {
    key: "soundcloud",
    name: "SoundCloud",
    canPlay: import_patterns.canPlay.soundcloud,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerSoundCloud' */
      "./SoundCloud-ClKpW5mq.js"
    ).then((n2) => n2.S), true ? [] : void 0, import.meta.url))
  },
  {
    key: "vimeo",
    name: "Vimeo",
    canPlay: import_patterns.canPlay.vimeo,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerVimeo' */
      "./Vimeo-DYbZXWNS.js"
    ).then((n2) => n2.V), true ? [] : void 0, import.meta.url))
  },
  {
    key: "mux",
    name: "Mux",
    canPlay: import_patterns.canPlay.mux,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerMux' */
      "./Mux-BpaMsJMc.js"
    ).then((n2) => n2.M), true ? [] : void 0, import.meta.url))
  },
  {
    key: "facebook",
    name: "Facebook",
    canPlay: import_patterns.canPlay.facebook,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerFacebook' */
      "./Facebook-SSICFQce.js"
    ).then((n2) => n2.F), true ? [] : void 0, import.meta.url))
  },
  {
    key: "streamable",
    name: "Streamable",
    canPlay: import_patterns.canPlay.streamable,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerStreamable' */
      "./Streamable-BixrRKWc.js"
    ).then((n2) => n2.S), true ? [] : void 0, import.meta.url))
  },
  {
    key: "wistia",
    name: "Wistia",
    canPlay: import_patterns.canPlay.wistia,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerWistia' */
      "./Wistia-CkRGqqc_.js"
    ).then((n2) => n2.W), true ? [] : void 0, import.meta.url))
  },
  {
    key: "twitch",
    name: "Twitch",
    canPlay: import_patterns.canPlay.twitch,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerTwitch' */
      "./Twitch-CdwM573c.js"
    ).then((n2) => n2.T), true ? [] : void 0, import.meta.url))
  },
  {
    key: "dailymotion",
    name: "DailyMotion",
    canPlay: import_patterns.canPlay.dailymotion,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerDailyMotion' */
      "./DailyMotion-Cd2Mpqv7.js"
    ).then((n2) => n2.D), true ? [] : void 0, import.meta.url))
  },
  {
    key: "mixcloud",
    name: "Mixcloud",
    canPlay: import_patterns.canPlay.mixcloud,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerMixcloud' */
      "./Mixcloud-Bb8FQTdE.js"
    ).then((n2) => n2.M), true ? [] : void 0, import.meta.url))
  },
  {
    key: "vidyard",
    name: "Vidyard",
    canPlay: import_patterns.canPlay.vidyard,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerVidyard' */
      "./Vidyard-QaYl7RpX.js"
    ).then((n2) => n2.V), true ? [] : void 0, import.meta.url))
  },
  {
    key: "kaltura",
    name: "Kaltura",
    canPlay: import_patterns.canPlay.kaltura,
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerKaltura' */
      "./Kaltura-D9gGpZcw.js"
    ).then((n2) => n2.K), true ? [] : void 0, import.meta.url))
  },
  {
    key: "file",
    name: "FilePlayer",
    canPlay: import_patterns.canPlay.file,
    canEnablePIP: (url) => {
      return import_patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, import_utils$2.supportsWebKitPresentationMode)()) && !import_patterns.AUDIO_EXTENSIONS.test(url);
    },
    lazyPlayer: (0, import_utils$2.lazy)(() => __vitePreload(() => import(
      /* webpackChunkName: 'reactPlayerFilePlayer' */
      "./FilePlayer-DBkc4sub.js"
    ).then((n2) => n2.F), true ? [] : void 0, import.meta.url))
  }
];
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual3) {
  if (isEqual3 === void 0) {
    isEqual3 = areInputsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i2 = 0; _i2 < arguments.length; _i2++) {
      newArgs[_i2] = arguments[_i2];
    }
    if (calledOnce && lastThis === this && isEqual3(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
const memoizeOne_esm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: memoizeOne
}, Symbol.toStringTag, { value: "Module" }));
const require$$2 = /* @__PURE__ */ getAugmentedNamespace(memoizeOne_esm);
var hasElementType = typeof Element !== "undefined";
var hasMap = typeof Map === "function";
var hasSet = typeof Set === "function";
var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
function equal(a, b2) {
  if (a === b2) return true;
  if (a && b2 && typeof a == "object" && typeof b2 == "object") {
    if (a.constructor !== b2.constructor) return false;
    var length, i, keys2;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b2.length) return false;
      for (i = length; i-- !== 0; )
        if (!equal(a[i], b2[i])) return false;
      return true;
    }
    var it;
    if (hasMap && a instanceof Map && b2 instanceof Map) {
      if (a.size !== b2.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b2.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b2.get(i.value[0]))) return false;
      return true;
    }
    if (hasSet && a instanceof Set && b2 instanceof Set) {
      if (a.size !== b2.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b2.has(i.value[0])) return false;
      return true;
    }
    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b2)) {
      length = a.length;
      if (length != b2.length) return false;
      for (i = length; i-- !== 0; )
        if (a[i] !== b2[i]) return false;
      return true;
    }
    if (a.constructor === RegExp) return a.source === b2.source && a.flags === b2.flags;
    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b2.valueOf === "function") return a.valueOf() === b2.valueOf();
    if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b2.toString === "function") return a.toString() === b2.toString();
    keys2 = Object.keys(a);
    length = keys2.length;
    if (length !== Object.keys(b2).length) return false;
    for (i = length; i-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(b2, keys2[i])) return false;
    if (hasElementType && a instanceof Element) return false;
    for (i = length; i-- !== 0; ) {
      if ((keys2[i] === "_owner" || keys2[i] === "__v" || keys2[i] === "__o") && a.$$typeof) {
        continue;
      }
      if (!equal(a[keys2[i]], b2[keys2[i]])) return false;
    }
    return true;
  }
  return a !== a && b2 !== b2;
}
var reactFastCompare = function isEqual2(a, b2) {
  try {
    return equal(a, b2);
  } catch (error) {
    if ((error.message || "").match(/stack|recursion/i)) {
      console.warn("react-fast-compare cannot handle circular refs");
      return false;
    }
    throw error;
  }
};
var propTypes$1 = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props2, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error(
      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
    );
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes$1.exports = factoryWithThrowingShims();
}
var propTypesExports = propTypes$1.exports;
var __create$3 = Object.create;
var __defProp$3 = Object.defineProperty;
var __getOwnPropDesc$3 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$3 = Object.getOwnPropertyNames;
var __getProtoOf$3 = Object.getPrototypeOf;
var __hasOwnProp$3 = Object.prototype.hasOwnProperty;
var __export$3 = (target, all2) => {
  for (var name in all2)
    __defProp$3(target, name, { get: all2[name], enumerable: true });
};
var __copyProps$3 = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames$3(from2))
      if (!__hasOwnProp$3.call(to2, key) && key !== except)
        __defProp$3(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc$3(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM$3 = (mod2, isNodeMode, target) => (target = mod2 != null ? __create$3(__getProtoOf$3(mod2)) : {}, __copyProps$3(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !mod2 || !mod2.__esModule ? __defProp$3(target, "default", { value: mod2, enumerable: true }) : target,
  mod2
));
var __toCommonJS$3 = (mod2) => __copyProps$3(__defProp$3({}, "__esModule", { value: true }), mod2);
var props_exports = {};
__export$3(props_exports, {
  defaultProps: () => defaultProps,
  propTypes: () => propTypes
});
var props = __toCommonJS$3(props_exports);
var import_prop_types = __toESM$3(propTypesExports);
const { string, bool, number, array, oneOfType, shape, object, func, node } = import_prop_types.default;
const propTypes = {
  url: oneOfType([string, array, object]),
  playing: bool,
  loop: bool,
  controls: bool,
  volume: number,
  muted: bool,
  playbackRate: number,
  width: oneOfType([string, number]),
  height: oneOfType([string, number]),
  style: object,
  progressInterval: number,
  playsinline: bool,
  pip: bool,
  stopOnUnmount: bool,
  light: oneOfType([bool, string, object]),
  playIcon: node,
  previewTabIndex: number,
  previewAriaLabel: string,
  fallback: node,
  oEmbedUrl: string,
  wrapper: oneOfType([
    string,
    func,
    shape({ render: func.isRequired })
  ]),
  config: shape({
    soundcloud: shape({
      options: object
    }),
    youtube: shape({
      playerVars: object,
      embedOptions: object,
      onUnstarted: func
    }),
    facebook: shape({
      appId: string,
      version: string,
      playerId: string,
      attributes: object
    }),
    dailymotion: shape({
      params: object
    }),
    vimeo: shape({
      playerOptions: object,
      title: string
    }),
    mux: shape({
      attributes: object,
      version: string
    }),
    file: shape({
      attributes: object,
      tracks: array,
      forceVideo: bool,
      forceAudio: bool,
      forceHLS: bool,
      forceSafariHLS: bool,
      forceDisableHls: bool,
      forceDASH: bool,
      forceFLV: bool,
      hlsOptions: object,
      hlsVersion: string,
      dashVersion: string,
      flvVersion: string
    }),
    wistia: shape({
      options: object,
      playerId: string,
      customControls: array
    }),
    mixcloud: shape({
      options: object
    }),
    twitch: shape({
      options: object,
      playerId: string
    }),
    vidyard: shape({
      options: object
    })
  }),
  onReady: func,
  onStart: func,
  onPlay: func,
  onPause: func,
  onBuffer: func,
  onBufferEnd: func,
  onEnded: func,
  onError: func,
  onDuration: func,
  onSeek: func,
  onPlaybackRateChange: func,
  onPlaybackQualityChange: func,
  onProgress: func,
  onClickPreview: func,
  onEnablePIP: func,
  onDisablePIP: func
};
const noop = () => {
};
const defaultProps = {
  playing: false,
  loop: false,
  controls: false,
  volume: null,
  muted: false,
  playbackRate: 1,
  width: "640px",
  height: "360px",
  style: {},
  progressInterval: 1e3,
  playsinline: false,
  pip: false,
  stopOnUnmount: true,
  light: false,
  fallback: null,
  wrapper: "div",
  previewTabIndex: 0,
  previewAriaLabel: "",
  oEmbedUrl: "https://noembed.com/embed?url={url}",
  config: {
    soundcloud: {
      options: {
        visual: true,
        // Undocumented, but makes player fill container and look better
        buying: false,
        liking: false,
        download: false,
        sharing: false,
        show_comments: false,
        show_playcount: false
      }
    },
    youtube: {
      playerVars: {
        playsinline: 1,
        showinfo: 0,
        rel: 0,
        iv_load_policy: 3,
        modestbranding: 1
      },
      embedOptions: {},
      onUnstarted: noop
    },
    facebook: {
      appId: "1309697205772819",
      version: "v3.3",
      playerId: null,
      attributes: {}
    },
    dailymotion: {
      params: {
        api: 1,
        "endscreen-enable": false
      }
    },
    vimeo: {
      playerOptions: {
        autopause: false,
        byline: false,
        portrait: false,
        title: false
      },
      title: null
    },
    mux: {
      attributes: {},
      version: "2"
    },
    file: {
      attributes: {},
      tracks: [],
      forceVideo: false,
      forceAudio: false,
      forceHLS: false,
      forceDASH: false,
      forceFLV: false,
      hlsOptions: {},
      hlsVersion: "1.1.4",
      dashVersion: "3.1.3",
      flvVersion: "1.5.0",
      forceDisableHls: false
    },
    wistia: {
      options: {},
      playerId: null,
      customControls: null
    },
    mixcloud: {
      options: {
        hide_cover: 1
      }
    },
    twitch: {
      options: {},
      playerId: null
    },
    vidyard: {
      options: {}
    }
  },
  onReady: noop,
  onStart: noop,
  onPlay: noop,
  onPause: noop,
  onBuffer: noop,
  onBufferEnd: noop,
  onEnded: noop,
  onError: noop,
  onDuration: noop,
  onSeek: noop,
  onPlaybackRateChange: noop,
  onPlaybackQualityChange: noop,
  onProgress: noop,
  onClickPreview: noop,
  onEnablePIP: noop,
  onDisablePIP: noop
};
var __create$2 = Object.create;
var __defProp$2 = Object.defineProperty;
var __getOwnPropDesc$2 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$2 = Object.getOwnPropertyNames;
var __getProtoOf$2 = Object.getPrototypeOf;
var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __export$2 = (target, all2) => {
  for (var name in all2)
    __defProp$2(target, name, { get: all2[name], enumerable: true });
};
var __copyProps$2 = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames$2(from2))
      if (!__hasOwnProp$2.call(to2, key) && key !== except)
        __defProp$2(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc$2(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM$2 = (mod2, isNodeMode, target) => (target = mod2 != null ? __create$2(__getProtoOf$2(mod2)) : {}, __copyProps$2(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !mod2 || !mod2.__esModule ? __defProp$2(target, "default", { value: mod2, enumerable: true }) : target,
  mod2
));
var __toCommonJS$2 = (mod2) => __copyProps$2(__defProp$2({}, "__esModule", { value: true }), mod2);
var __publicField$1 = (obj, key, value) => {
  __defNormalProp$1(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var Player_exports = {};
__export$2(Player_exports, {
  default: () => Player
});
var Player_1 = __toCommonJS$2(Player_exports);
var import_react$1 = __toESM$2(reactExports);
var import_react_fast_compare$1 = __toESM$2(reactFastCompare);
var import_props$1 = props;
var import_utils$1 = utils;
const SEEK_ON_PLAY_EXPIRY = 5e3;
class Player extends import_react$1.Component {
  constructor() {
    super(...arguments);
    __publicField$1(this, "mounted", false);
    __publicField$1(this, "isReady", false);
    __publicField$1(this, "isPlaying", false);
    __publicField$1(this, "isLoading", true);
    __publicField$1(this, "loadOnReady", null);
    __publicField$1(this, "startOnPlay", true);
    __publicField$1(this, "seekOnPlay", null);
    __publicField$1(this, "onDurationCalled", false);
    __publicField$1(this, "handlePlayerMount", (player) => {
      if (this.player) {
        this.progress();
        return;
      }
      this.player = player;
      this.player.load(this.props.url);
      this.progress();
    });
    __publicField$1(this, "getInternalPlayer", (key) => {
      if (!this.player)
        return null;
      return this.player[key];
    });
    __publicField$1(this, "progress", () => {
      if (this.props.url && this.player && this.isReady) {
        const playedSeconds = this.getCurrentTime() || 0;
        const loadedSeconds = this.getSecondsLoaded();
        const duration = this.getDuration();
        if (duration) {
          const progress = {
            playedSeconds,
            played: playedSeconds / duration
          };
          if (loadedSeconds !== null) {
            progress.loadedSeconds = loadedSeconds;
            progress.loaded = loadedSeconds / duration;
          }
          if (progress.playedSeconds !== this.prevPlayed || progress.loadedSeconds !== this.prevLoaded) {
            this.props.onProgress(progress);
          }
          this.prevPlayed = progress.playedSeconds;
          this.prevLoaded = progress.loadedSeconds;
        }
      }
      this.progressTimeout = setTimeout(this.progress, this.props.progressFrequency || this.props.progressInterval);
    });
    __publicField$1(this, "handleReady", () => {
      if (!this.mounted)
        return;
      this.isReady = true;
      this.isLoading = false;
      const { onReady, playing, volume, muted } = this.props;
      onReady();
      if (!muted && volume !== null) {
        this.player.setVolume(volume);
      }
      if (this.loadOnReady) {
        this.player.load(this.loadOnReady, true);
        this.loadOnReady = null;
      } else if (playing) {
        this.player.play();
      }
      this.handleDurationCheck();
    });
    __publicField$1(this, "handlePlay", () => {
      this.isPlaying = true;
      this.isLoading = false;
      const { onStart, onPlay, playbackRate } = this.props;
      if (this.startOnPlay) {
        if (this.player.setPlaybackRate && playbackRate !== 1) {
          this.player.setPlaybackRate(playbackRate);
        }
        onStart();
        this.startOnPlay = false;
      }
      onPlay();
      if (this.seekOnPlay) {
        this.seekTo(this.seekOnPlay);
        this.seekOnPlay = null;
      }
      this.handleDurationCheck();
    });
    __publicField$1(this, "handlePause", (e) => {
      this.isPlaying = false;
      if (!this.isLoading) {
        this.props.onPause(e);
      }
    });
    __publicField$1(this, "handleEnded", () => {
      const { activePlayer, loop, onEnded } = this.props;
      if (activePlayer.loopOnEnded && loop) {
        this.seekTo(0);
      }
      if (!loop) {
        this.isPlaying = false;
        onEnded();
      }
    });
    __publicField$1(this, "handleError", (...args) => {
      this.isLoading = false;
      this.props.onError(...args);
    });
    __publicField$1(this, "handleDurationCheck", () => {
      clearTimeout(this.durationCheckTimeout);
      const duration = this.getDuration();
      if (duration) {
        if (!this.onDurationCalled) {
          this.props.onDuration(duration);
          this.onDurationCalled = true;
        }
      } else {
        this.durationCheckTimeout = setTimeout(this.handleDurationCheck, 100);
      }
    });
    __publicField$1(this, "handleLoaded", () => {
      this.isLoading = false;
    });
  }
  componentDidMount() {
    this.mounted = true;
  }
  componentWillUnmount() {
    clearTimeout(this.progressTimeout);
    clearTimeout(this.durationCheckTimeout);
    if (this.isReady && this.props.stopOnUnmount) {
      this.player.stop();
      if (this.player.disablePIP) {
        this.player.disablePIP();
      }
    }
    this.mounted = false;
  }
  componentDidUpdate(prevProps) {
    if (!this.player) {
      return;
    }
    const { url, playing, volume, muted, playbackRate, pip, loop, activePlayer, disableDeferredLoading } = this.props;
    if (!(0, import_react_fast_compare$1.default)(prevProps.url, url)) {
      if (this.isLoading && !activePlayer.forceLoad && !disableDeferredLoading && !(0, import_utils$1.isMediaStream)(url)) {
        console.warn(`ReactPlayer: the attempt to load ${url} is being deferred until the player has loaded`);
        this.loadOnReady = url;
        return;
      }
      this.isLoading = true;
      this.startOnPlay = true;
      this.onDurationCalled = false;
      this.player.load(url, this.isReady);
    }
    if (!prevProps.playing && playing && !this.isPlaying) {
      this.player.play();
    }
    if (prevProps.playing && !playing && this.isPlaying) {
      this.player.pause();
    }
    if (!prevProps.pip && pip && this.player.enablePIP) {
      this.player.enablePIP();
    }
    if (prevProps.pip && !pip && this.player.disablePIP) {
      this.player.disablePIP();
    }
    if (prevProps.volume !== volume && volume !== null) {
      this.player.setVolume(volume);
    }
    if (prevProps.muted !== muted) {
      if (muted) {
        this.player.mute();
      } else {
        this.player.unmute();
        if (volume !== null) {
          setTimeout(() => this.player.setVolume(volume));
        }
      }
    }
    if (prevProps.playbackRate !== playbackRate && this.player.setPlaybackRate) {
      this.player.setPlaybackRate(playbackRate);
    }
    if (prevProps.loop !== loop && this.player.setLoop) {
      this.player.setLoop(loop);
    }
  }
  getDuration() {
    if (!this.isReady)
      return null;
    return this.player.getDuration();
  }
  getCurrentTime() {
    if (!this.isReady)
      return null;
    return this.player.getCurrentTime();
  }
  getSecondsLoaded() {
    if (!this.isReady)
      return null;
    return this.player.getSecondsLoaded();
  }
  seekTo(amount, type, keepPlaying) {
    if (!this.isReady) {
      if (amount !== 0) {
        this.seekOnPlay = amount;
        setTimeout(() => {
          this.seekOnPlay = null;
        }, SEEK_ON_PLAY_EXPIRY);
      }
      return;
    }
    const isFraction = !type ? amount > 0 && amount < 1 : type === "fraction";
    if (isFraction) {
      const duration = this.player.getDuration();
      if (!duration) {
        console.warn("ReactPlayer: could not seek using fraction – duration not yet available");
        return;
      }
      this.player.seekTo(duration * amount, keepPlaying);
      return;
    }
    this.player.seekTo(amount, keepPlaying);
  }
  render() {
    const Player2 = this.props.activePlayer;
    if (!Player2) {
      return null;
    }
    return /* @__PURE__ */ import_react$1.default.createElement(
      Player2,
      {
        ...this.props,
        onMount: this.handlePlayerMount,
        onReady: this.handleReady,
        onPlay: this.handlePlay,
        onPause: this.handlePause,
        onEnded: this.handleEnded,
        onLoaded: this.handleLoaded,
        onError: this.handleError
      }
    );
  }
}
__publicField$1(Player, "displayName", "Player");
__publicField$1(Player, "propTypes", import_props$1.propTypes);
__publicField$1(Player, "defaultProps", import_props$1.defaultProps);
var __create$1 = Object.create;
var __defProp$1 = Object.defineProperty;
var __getOwnPropDesc$1 = Object.getOwnPropertyDescriptor;
var __getOwnPropNames$1 = Object.getOwnPropertyNames;
var __getProtoOf$1 = Object.getPrototypeOf;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __export$1 = (target, all2) => {
  for (var name in all2)
    __defProp$1(target, name, { get: all2[name], enumerable: true });
};
var __copyProps$1 = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames$1(from2))
      if (!__hasOwnProp$1.call(to2, key) && key !== except)
        __defProp$1(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc$1(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM$1 = (mod2, isNodeMode, target) => (target = mod2 != null ? __create$1(__getProtoOf$1(mod2)) : {}, __copyProps$1(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !mod2 || !mod2.__esModule ? __defProp$1(target, "default", { value: mod2, enumerable: true }) : target,
  mod2
));
var __toCommonJS$1 = (mod2) => __copyProps$1(__defProp$1({}, "__esModule", { value: true }), mod2);
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var ReactPlayer_exports = {};
__export$1(ReactPlayer_exports, {
  createReactPlayer: () => createReactPlayer
});
var ReactPlayer$1 = __toCommonJS$1(ReactPlayer_exports);
var import_react = __toESM$1(reactExports);
var import_deepmerge = __toESM$1(cjs);
var import_memoize_one = __toESM$1(require$$2);
var import_react_fast_compare = __toESM$1(reactFastCompare);
var import_props = props;
var import_utils = utils;
var import_Player = __toESM$1(Player_1);
const Preview = (0, import_utils.lazy)(() => __vitePreload(() => import(
  /* webpackChunkName: 'reactPlayerPreview' */
  "./Preview-D8Hkcq9n.js"
).then((n2) => n2.P), true ? [] : void 0, import.meta.url));
const IS_BROWSER = typeof window !== "undefined" && window.document && typeof document !== "undefined";
const IS_GLOBAL = typeof commonjsGlobal !== "undefined" && commonjsGlobal.window && commonjsGlobal.window.document;
const SUPPORTED_PROPS = Object.keys(import_props.propTypes);
const UniversalSuspense = IS_BROWSER || IS_GLOBAL ? import_react.Suspense : () => null;
const customPlayers = [];
const createReactPlayer = (players2, fallback2) => {
  var _a;
  return _a = class extends import_react.Component {
    constructor() {
      super(...arguments);
      __publicField(this, "state", {
        showPreview: !!this.props.light
      });
      __publicField(this, "references", {
        wrapper: (wrapper) => {
          this.wrapper = wrapper;
        },
        player: (player) => {
          this.player = player;
        }
      });
      __publicField(this, "handleClickPreview", (e) => {
        this.setState({ showPreview: false });
        this.props.onClickPreview(e);
      });
      __publicField(this, "showPreview", () => {
        this.setState({ showPreview: true });
      });
      __publicField(this, "getDuration", () => {
        if (!this.player)
          return null;
        return this.player.getDuration();
      });
      __publicField(this, "getCurrentTime", () => {
        if (!this.player)
          return null;
        return this.player.getCurrentTime();
      });
      __publicField(this, "getSecondsLoaded", () => {
        if (!this.player)
          return null;
        return this.player.getSecondsLoaded();
      });
      __publicField(this, "getInternalPlayer", (key = "player") => {
        if (!this.player)
          return null;
        return this.player.getInternalPlayer(key);
      });
      __publicField(this, "seekTo", (fraction, type, keepPlaying) => {
        if (!this.player)
          return null;
        this.player.seekTo(fraction, type, keepPlaying);
      });
      __publicField(this, "handleReady", () => {
        this.props.onReady(this);
      });
      __publicField(this, "getActivePlayer", (0, import_memoize_one.default)((url) => {
        for (const player of [...customPlayers, ...players2]) {
          if (player.canPlay(url)) {
            return player;
          }
        }
        if (fallback2) {
          return fallback2;
        }
        return null;
      }));
      __publicField(this, "getConfig", (0, import_memoize_one.default)((url, key) => {
        const { config } = this.props;
        return import_deepmerge.default.all([
          import_props.defaultProps.config,
          import_props.defaultProps.config[key] || {},
          config,
          config[key] || {}
        ]);
      }));
      __publicField(this, "getAttributes", (0, import_memoize_one.default)((url) => {
        return (0, import_utils.omit)(this.props, SUPPORTED_PROPS);
      }));
      __publicField(this, "renderActivePlayer", (url) => {
        if (!url)
          return null;
        const player = this.getActivePlayer(url);
        if (!player)
          return null;
        const config = this.getConfig(url, player.key);
        return /* @__PURE__ */ import_react.default.createElement(
          import_Player.default,
          {
            ...this.props,
            key: player.key,
            ref: this.references.player,
            config,
            activePlayer: player.lazyPlayer || player,
            onReady: this.handleReady
          }
        );
      });
    }
    shouldComponentUpdate(nextProps, nextState) {
      return !(0, import_react_fast_compare.default)(this.props, nextProps) || !(0, import_react_fast_compare.default)(this.state, nextState);
    }
    componentDidUpdate(prevProps) {
      const { light } = this.props;
      if (!prevProps.light && light) {
        this.setState({ showPreview: true });
      }
      if (prevProps.light && !light) {
        this.setState({ showPreview: false });
      }
    }
    renderPreview(url) {
      if (!url)
        return null;
      const { light, playIcon, previewTabIndex, oEmbedUrl, previewAriaLabel } = this.props;
      return /* @__PURE__ */ import_react.default.createElement(
        Preview,
        {
          url,
          light,
          playIcon,
          previewTabIndex,
          previewAriaLabel,
          oEmbedUrl,
          onClick: this.handleClickPreview
        }
      );
    }
    render() {
      const { url, style, width, height, fallback: fallback22, wrapper: Wrapper } = this.props;
      const { showPreview } = this.state;
      const attributes = this.getAttributes(url);
      const wrapperRef = typeof Wrapper === "string" ? this.references.wrapper : void 0;
      return /* @__PURE__ */ import_react.default.createElement(Wrapper, { ref: wrapperRef, style: { ...style, width, height }, ...attributes }, /* @__PURE__ */ import_react.default.createElement(UniversalSuspense, { fallback: fallback22 }, showPreview ? this.renderPreview(url) : this.renderActivePlayer(url)));
    }
  }, __publicField(_a, "displayName", "ReactPlayer"), __publicField(_a, "propTypes", import_props.propTypes), __publicField(_a, "defaultProps", import_props.defaultProps), __publicField(_a, "addCustomPlayer", (player) => {
    customPlayers.push(player);
  }), __publicField(_a, "removeCustomPlayers", () => {
    customPlayers.length = 0;
  }), __publicField(_a, "canPlay", (url) => {
    for (const Player2 of [...customPlayers, ...players2]) {
      if (Player2.canPlay(url)) {
        return true;
      }
    }
    return false;
  }), __publicField(_a, "canEnablePIP", (url) => {
    for (const Player2 of [...customPlayers, ...players2]) {
      if (Player2.canEnablePIP && Player2.canEnablePIP(url)) {
        return true;
      }
    }
    return false;
  }), _a;
};
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all2) => {
  for (var name in all2)
    __defProp(target, name, { get: all2[name], enumerable: true });
};
var __copyProps = (to2, from2, except, desc) => {
  if (from2 && typeof from2 === "object" || typeof from2 === "function") {
    for (let key of __getOwnPropNames(from2))
      if (!__hasOwnProp.call(to2, key) && key !== except)
        __defProp(to2, key, { get: () => from2[key], enumerable: !(desc = __getOwnPropDesc(from2, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM = (mod2, isNodeMode, target) => (target = mod2 != null ? __create(__getProtoOf(mod2)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !mod2 || !mod2.__esModule ? __defProp(target, "default", { value: mod2, enumerable: true }) : target,
  mod2
));
var __toCommonJS = (mod2) => __copyProps(__defProp({}, "__esModule", { value: true }), mod2);
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
var lib = __toCommonJS(src_exports);
var import_players = __toESM(players);
var import_ReactPlayer = ReactPlayer$1;
const fallback = import_players.default[import_players.default.length - 1];
var src_default = (0, import_ReactPlayer.createReactPlayer)(import_players.default, fallback);
const ReactPlayer = /* @__PURE__ */ getDefaultExportFromCjs(lib);
const MusicPlayer = ({ currentTrack }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: currentTrack ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("h2", { children: [
      "Now Playing: ",
      currentTrack.name,
      " by ",
      currentTrack.artist_name
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      ReactPlayer,
      {
        url: currentTrack.audio,
        playing: true,
        width: "100%",
        height: "200px",
        controls: true,
        onError: (e) => console.error("Error playing track:", e)
      }
    )
  ] }) : /* @__PURE__ */ jsxRuntimeExports.jsx("h2", { children: "Select a track to play" }) });
};
const FinalPlayer = ({ toggleMusicMode }) => {
  const [searchResults, setSearchResults] = reactExports.useState([]);
  const [currentTrack, setCurrentTrack] = reactExports.useState(null);
  const handleSearch = (results) => {
    setSearchResults(results);
  };
  const handleTrackSelect = (track) => {
    console.log("this is track", track);
    setCurrentTrack(track);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "  ", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "relative mx-auto flex p-[20px] rounded-3xl border border-gray-600 flex-col w-[800px] bg-gray-800 bg-opacity-70 ", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " flex justify-center items-center ", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(SearchBar, { onSearch: handleSearch }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("button", { onClick: toggleMusicMode, className: "text-white border border-gray-400 bg-[#0d1829] px-4 py-2 rounded", children: "close" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " flex gap-[10px] p-[20px] ", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: " pr-[20px]", children: /* @__PURE__ */ jsxRuntimeExports.jsx(MusicList, { searchResults, onTrackSelect: handleTrackSelect }) }),
      currentTrack && /* @__PURE__ */ jsxRuntimeExports.jsx(MusicPlayer, { currentTrack })
    ] })
  ] }) });
};
const logo = "" + new URL("logo-DOEvt-Bd.svg", import.meta.url).href;
const Navbar = () => {
  const [sidebarVisible, setSidebarVisible] = reactExports.useState(false);
  const [musicMode, setMusicMode] = reactExports.useState(false);
  reactExports.useEffect(() => {
    const navbar = document.getElementById("navbar");
    const sidebar = document.getElementById("sidebar");
    sidebar.style.top = `${navbar.clientHeight - 1}px`;
  }, []);
  const toggleSidebar = (e) => {
    e.preventDefault();
    setSidebarVisible(!sidebarVisible);
  };
  const toggleMusicMode = () => {
    setMusicMode(!musicMode);
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("nav", { id: "navbar", className: "  w-screen fixed top-0 z-40 flex  flex-row justify-end  px-4 sm:justify-between", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("ul", { className: "breadcrumb hidden flex-row items-center py-4 font-extrabold text-3xl text-white sm:flex", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/", className: "inline", children: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { className: " w-[100px]", src: logo, alt: " logo" }) }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "button",
        {
          id: "btnSidebarToggler",
          type: "button",
          className: "py-4 text-2xl text-white hover:text-gray-200",
          onClick: toggleSidebar,
          children: sidebarVisible ? (
            // Heroicon for Open (Cross Icon)
            /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", className: "h-8 w-8", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M6 18L18 6M6 6l12 12" }) })
          ) : (
            // Heroicon for Closed (Hamburger Menu Icon)
            /* @__PURE__ */ jsxRuntimeExports.jsx("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", className: "h-8 w-8", children: /* @__PURE__ */ jsxRuntimeExports.jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" }) })
          )
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { id: "containerSidebar", className: "z-40", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "navbar-menu relative z-40", children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "nav",
        {
          id: "sidebar",
          className: `fixed left-0 bottom-0 flex w-3/4 flex-col overflow-y-auto bg-[#0a0e1b] pt-6 pb-8 sm:max-w-xs lg:w-80 transition-transform duration-300 ${sidebarVisible ? "translate-x-0" : "-translate-x-full"}`,
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "px-4 pb-6", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "mb-2 text-xs font-medium uppercase text-gray-500", children: "Main" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { className: "mb-8 text-sm font-medium", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/", className: "active flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#homepage", children: "Home" }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "/beauty", className: "active flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#homepage", children: "Beauty" }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("button", { onClick: toggleMusicMode, className: "flex items-center w-screen rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#link1", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "select-none", children: "Muisc" }) }) })
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "px-4 pb-6", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "mb-2 text-xs font-medium uppercase text-gray-500", children: "Legal" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { className: "mb-8 text-sm font-medium", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { className: "flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#tc", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "select-none", children: "Photo Booth" }) }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: "makeups", className: "flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#privacy", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "select-none", children: "Makeups" }) }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { className: "flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#imprint", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "select-none", children: "Watch Videos" }) }) })
              ] })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "px-4 pb-6", children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { className: "mb-2 text-xs font-medium uppercase text-gray-500", children: "Others" }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("ul", { className: "mb-8 text-sm font-medium", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { className: "flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#ex1", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "select-none", children: "Watch Videos" }) }) }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("a", { className: "flex items-center rounded py-3 pl-3 pr-4 text-gray-50 hover:bg-gray-600", href: "#ex2", children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "select-none", children: "Watch Videos" }) }) })
              ] })
            ] })
          ]
        }
      ) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "mx-auto lg:ml-80" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "absolute w-screen   top-[50px] mx-auto  z-10 ", children: musicMode && /* @__PURE__ */ jsxRuntimeExports.jsx(FinalPlayer, { toggleMusicMode }) })
  ] });
};
const responsive = {
  superLargeDesktop: {
    // the naming can be any, depends on you.
    breakpoint: { max: 4e3, min: 2500 },
    items: 4
  },
  desktop: {
    breakpoint: { max: 2500, min: 1024 },
    items: 3
  },
  tablet: {
    breakpoint: { max: 1024, min: 464 },
    items: 2
  },
  mobile: {
    breakpoint: { max: 464, min: 0 },
    items: 2
  }
};
function Home() {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " max-w-[1400px] mx-auto text-white font-poppin text-lg italic min-h-screen grid grid-cols-2  ", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: " flex justify-center  pt-[60px]  ", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: " w-[300px] overflow-hidden h-[400px]  rounded-full border-2 border-white ", children: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: model, alt: " model", className: "p-[1px] w-full h-full " }) }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " flex flex-col   pt-[40px] pr-[100px]", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " ", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "  ", children: "Eyebrow" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Carousel, { itemClass: "carousel-item-custom-padding", responsive, className: "", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyebrow1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyebrow1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyebrow1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyebrow1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyebrow1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyebrow1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: " ", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: "  ", children: "Cheeks" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Carousel, { itemClass: "carousel-item-custom-padding", responsive, className: "", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: cheeks, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: cheeks, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: cheeks, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: cheeks, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: cheeks, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: cheeks, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: " ", children: "Eye shadow" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Carousel, { itemClass: "carousel-item-custom-padding", responsive, className: "", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyeshadow, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyeshadow, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyeshadow, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyeshadow, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyeshadow, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: eyeshadow, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer" })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("p", { className: " ", children: "Lips" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Carousel, { itemClass: "carousel-item-custom-padding", responsive, className: "", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: lips1, alt: " eyebrow", className: " h-[80px] hover:cursor-pointer " }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: lips1, alt: " eyebrow", className: " h-[80px]  hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: lips1, alt: " eyebrow", className: " h-[80px]  hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: lips1, alt: " eyebrow", className: " h-[80px]  hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: lips1, alt: " eyebrow", className: " h-[80px]  hover:cursor-pointer" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: lips1, alt: " eyebrow", className: " h-[80px]  hover:cursor-pointer" })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: " my-[100px]", children: /* @__PURE__ */ jsxRuntimeExports.jsx(Weather, {}) })
    ] })
  ] }) });
}
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const REVISION = "150";
const CullFaceNone = 0;
const CullFaceBack = 1;
const CullFaceFront = 2;
const PCFShadowMap = 1;
const PCFSoftShadowMap = 2;
const VSMShadowMap = 3;
const FrontSide = 0;
const BackSide = 1;
const DoubleSide = 2;
const NoBlending = 0;
const NormalBlending = 1;
const AdditiveBlending = 2;
const SubtractiveBlending = 3;
const MultiplyBlending = 4;
const CustomBlending = 5;
const AddEquation = 100;
const SubtractEquation = 101;
const ReverseSubtractEquation = 102;
const MinEquation = 103;
const MaxEquation = 104;
const ZeroFactor = 200;
const OneFactor = 201;
const SrcColorFactor = 202;
const OneMinusSrcColorFactor = 203;
const SrcAlphaFactor = 204;
const OneMinusSrcAlphaFactor = 205;
const DstAlphaFactor = 206;
const OneMinusDstAlphaFactor = 207;
const DstColorFactor = 208;
const OneMinusDstColorFactor = 209;
const SrcAlphaSaturateFactor = 210;
const NeverDepth = 0;
const AlwaysDepth = 1;
const LessDepth = 2;
const LessEqualDepth = 3;
const EqualDepth = 4;
const GreaterEqualDepth = 5;
const GreaterDepth = 6;
const NotEqualDepth = 7;
const MultiplyOperation = 0;
const MixOperation = 1;
const AddOperation = 2;
const NoToneMapping = 0;
const LinearToneMapping = 1;
const ReinhardToneMapping = 2;
const CineonToneMapping = 3;
const ACESFilmicToneMapping = 4;
const CustomToneMapping = 5;
const UVMapping = 300;
const CubeReflectionMapping = 301;
const CubeRefractionMapping = 302;
const EquirectangularReflectionMapping = 303;
const EquirectangularRefractionMapping = 304;
const CubeUVReflectionMapping = 306;
const RepeatWrapping = 1e3;
const ClampToEdgeWrapping = 1001;
const MirroredRepeatWrapping = 1002;
const NearestFilter = 1003;
const NearestMipmapNearestFilter = 1004;
const NearestMipmapLinearFilter = 1005;
const LinearFilter = 1006;
const LinearMipmapNearestFilter = 1007;
const LinearMipmapLinearFilter = 1008;
const UnsignedByteType = 1009;
const ByteType = 1010;
const ShortType = 1011;
const UnsignedShortType = 1012;
const IntType = 1013;
const UnsignedIntType = 1014;
const FloatType = 1015;
const HalfFloatType = 1016;
const UnsignedShort4444Type = 1017;
const UnsignedShort5551Type = 1018;
const UnsignedInt248Type = 1020;
const AlphaFormat = 1021;
const RGBAFormat = 1023;
const LuminanceFormat = 1024;
const LuminanceAlphaFormat = 1025;
const DepthFormat = 1026;
const DepthStencilFormat = 1027;
const RedFormat = 1028;
const RedIntegerFormat = 1029;
const RGFormat = 1030;
const RGIntegerFormat = 1031;
const RGBAIntegerFormat = 1033;
const RGB_S3TC_DXT1_Format = 33776;
const RGBA_S3TC_DXT1_Format = 33777;
const RGBA_S3TC_DXT3_Format = 33778;
const RGBA_S3TC_DXT5_Format = 33779;
const RGB_PVRTC_4BPPV1_Format = 35840;
const RGB_PVRTC_2BPPV1_Format = 35841;
const RGBA_PVRTC_4BPPV1_Format = 35842;
const RGBA_PVRTC_2BPPV1_Format = 35843;
const RGB_ETC1_Format = 36196;
const RGB_ETC2_Format = 37492;
const RGBA_ETC2_EAC_Format = 37496;
const RGBA_ASTC_4x4_Format = 37808;
const RGBA_ASTC_5x4_Format = 37809;
const RGBA_ASTC_5x5_Format = 37810;
const RGBA_ASTC_6x5_Format = 37811;
const RGBA_ASTC_6x6_Format = 37812;
const RGBA_ASTC_8x5_Format = 37813;
const RGBA_ASTC_8x6_Format = 37814;
const RGBA_ASTC_8x8_Format = 37815;
const RGBA_ASTC_10x5_Format = 37816;
const RGBA_ASTC_10x6_Format = 37817;
const RGBA_ASTC_10x8_Format = 37818;
const RGBA_ASTC_10x10_Format = 37819;
const RGBA_ASTC_12x10_Format = 37820;
const RGBA_ASTC_12x12_Format = 37821;
const RGBA_BPTC_Format = 36492;
const RED_RGTC1_Format = 36283;
const SIGNED_RED_RGTC1_Format = 36284;
const RED_GREEN_RGTC2_Format = 36285;
const SIGNED_RED_GREEN_RGTC2_Format = 36286;
const LinearEncoding = 3e3;
const sRGBEncoding = 3001;
const BasicDepthPacking = 3200;
const RGBADepthPacking = 3201;
const TangentSpaceNormalMap = 0;
const ObjectSpaceNormalMap = 1;
const SRGBColorSpace = "srgb";
const LinearSRGBColorSpace = "srgb-linear";
const DisplayP3ColorSpace = "display-p3";
const KeepStencilOp = 7680;
const AlwaysStencilFunc = 519;
const StaticDrawUsage = 35044;
const GLSL3 = "300 es";
const _SRGBAFormat = 1035;
class EventDispatcher {
  addEventListener(type, listener) {
    if (this._listeners === void 0) this._listeners = {};
    const listeners = this._listeners;
    if (listeners[type] === void 0) {
      listeners[type] = [];
    }
    if (listeners[type].indexOf(listener) === -1) {
      listeners[type].push(listener);
    }
  }
  hasEventListener(type, listener) {
    if (this._listeners === void 0) return false;
    const listeners = this._listeners;
    return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;
  }
  removeEventListener(type, listener) {
    if (this._listeners === void 0) return;
    const listeners = this._listeners;
    const listenerArray = listeners[type];
    if (listenerArray !== void 0) {
      const index = listenerArray.indexOf(listener);
      if (index !== -1) {
        listenerArray.splice(index, 1);
      }
    }
  }
  dispatchEvent(event) {
    if (this._listeners === void 0) return;
    const listeners = this._listeners;
    const listenerArray = listeners[event.type];
    if (listenerArray !== void 0) {
      event.target = this;
      const array2 = listenerArray.slice(0);
      for (let i = 0, l2 = array2.length; i < l2; i++) {
        array2[i].call(this, event);
      }
      event.target = null;
    }
  }
}
const _lut = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0a", "0b", "0c", "0d", "0e", "0f", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2a", "2b", "2c", "2d", "2e", "2f", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3a", "3b", "3c", "3d", "3e", "3f", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4a", "4b", "4c", "4d", "4e", "4f", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6a", "6b", "6c", "6d", "6e", "6f", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "7a", "7b", "7c", "7d", "7e", "7f", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8a", "8b", "8c", "8d", "8e", "8f", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9a", "9b", "9c", "9d", "9e", "9f", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "ba", "bb", "bc", "bd", "be", "bf", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ca", "cb", "cc", "cd", "ce", "cf", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "da", "db", "dc", "dd", "de", "df", "e0", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "ea", "eb", "ec", "ed", "ee", "ef", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "fa", "fb", "fc", "fd", "fe", "ff"];
const DEG2RAD = Math.PI / 180;
const RAD2DEG = 180 / Math.PI;
function generateUUID() {
  const d02 = Math.random() * 4294967295 | 0;
  const d1 = Math.random() * 4294967295 | 0;
  const d2 = Math.random() * 4294967295 | 0;
  const d3 = Math.random() * 4294967295 | 0;
  const uuid = _lut[d02 & 255] + _lut[d02 >> 8 & 255] + _lut[d02 >> 16 & 255] + _lut[d02 >> 24 & 255] + "-" + _lut[d1 & 255] + _lut[d1 >> 8 & 255] + "-" + _lut[d1 >> 16 & 15 | 64] + _lut[d1 >> 24 & 255] + "-" + _lut[d2 & 63 | 128] + _lut[d2 >> 8 & 255] + "-" + _lut[d2 >> 16 & 255] + _lut[d2 >> 24 & 255] + _lut[d3 & 255] + _lut[d3 >> 8 & 255] + _lut[d3 >> 16 & 255] + _lut[d3 >> 24 & 255];
  return uuid.toLowerCase();
}
function clamp(value, min2, max2) {
  return Math.max(min2, Math.min(max2, value));
}
function euclideanModulo(n2, m2) {
  return (n2 % m2 + m2) % m2;
}
function lerp(x2, y2, t2) {
  return (1 - t2) * x2 + t2 * y2;
}
function isPowerOfTwo(value) {
  return (value & value - 1) === 0 && value !== 0;
}
function floorPowerOfTwo(value) {
  return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));
}
function denormalize(value, array2) {
  switch (array2.constructor) {
    case Float32Array:
      return value;
    case Uint16Array:
      return value / 65535;
    case Uint8Array:
      return value / 255;
    case Int16Array:
      return Math.max(value / 32767, -1);
    case Int8Array:
      return Math.max(value / 127, -1);
    default:
      throw new Error("Invalid component type.");
  }
}
function normalize(value, array2) {
  switch (array2.constructor) {
    case Float32Array:
      return value;
    case Uint16Array:
      return Math.round(value * 65535);
    case Uint8Array:
      return Math.round(value * 255);
    case Int16Array:
      return Math.round(value * 32767);
    case Int8Array:
      return Math.round(value * 127);
    default:
      throw new Error("Invalid component type.");
  }
}
class Vector2 {
  constructor(x2 = 0, y2 = 0) {
    Vector2.prototype.isVector2 = true;
    this.x = x2;
    this.y = y2;
  }
  get width() {
    return this.x;
  }
  set width(value) {
    this.x = value;
  }
  get height() {
    return this.y;
  }
  set height(value) {
    this.y = value;
  }
  set(x2, y2) {
    this.x = x2;
    this.y = y2;
    return this;
  }
  setScalar(scalar) {
    this.x = scalar;
    this.y = scalar;
    return this;
  }
  setX(x2) {
    this.x = x2;
    return this;
  }
  setY(y2) {
    this.y = y2;
    return this;
  }
  setComponent(index, value) {
    switch (index) {
      case 0:
        this.x = value;
        break;
      case 1:
        this.y = value;
        break;
      default:
        throw new Error("index is out of range: " + index);
    }
    return this;
  }
  getComponent(index) {
    switch (index) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + index);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(v2) {
    this.x = v2.x;
    this.y = v2.y;
    return this;
  }
  add(v2) {
    this.x += v2.x;
    this.y += v2.y;
    return this;
  }
  addScalar(s) {
    this.x += s;
    this.y += s;
    return this;
  }
  addVectors(a, b2) {
    this.x = a.x + b2.x;
    this.y = a.y + b2.y;
    return this;
  }
  addScaledVector(v2, s) {
    this.x += v2.x * s;
    this.y += v2.y * s;
    return this;
  }
  sub(v2) {
    this.x -= v2.x;
    this.y -= v2.y;
    return this;
  }
  subScalar(s) {
    this.x -= s;
    this.y -= s;
    return this;
  }
  subVectors(a, b2) {
    this.x = a.x - b2.x;
    this.y = a.y - b2.y;
    return this;
  }
  multiply(v2) {
    this.x *= v2.x;
    this.y *= v2.y;
    return this;
  }
  multiplyScalar(scalar) {
    this.x *= scalar;
    this.y *= scalar;
    return this;
  }
  divide(v2) {
    this.x /= v2.x;
    this.y /= v2.y;
    return this;
  }
  divideScalar(scalar) {
    return this.multiplyScalar(1 / scalar);
  }
  applyMatrix3(m2) {
    const x2 = this.x, y2 = this.y;
    const e = m2.elements;
    this.x = e[0] * x2 + e[3] * y2 + e[6];
    this.y = e[1] * x2 + e[4] * y2 + e[7];
    return this;
  }
  min(v2) {
    this.x = Math.min(this.x, v2.x);
    this.y = Math.min(this.y, v2.y);
    return this;
  }
  max(v2) {
    this.x = Math.max(this.x, v2.x);
    this.y = Math.max(this.y, v2.y);
    return this;
  }
  clamp(min2, max2) {
    this.x = Math.max(min2.x, Math.min(max2.x, this.x));
    this.y = Math.max(min2.y, Math.min(max2.y, this.y));
    return this;
  }
  clampScalar(minVal, maxVal) {
    this.x = Math.max(minVal, Math.min(maxVal, this.x));
    this.y = Math.max(minVal, Math.min(maxVal, this.y));
    return this;
  }
  clampLength(min2, max2) {
    const length = this.length();
    return this.divideScalar(length || 1).multiplyScalar(Math.max(min2, Math.min(max2, length)));
  }
  floor() {
    this.x = Math.floor(this.x);
    this.y = Math.floor(this.y);
    return this;
  }
  ceil() {
    this.x = Math.ceil(this.x);
    this.y = Math.ceil(this.y);
    return this;
  }
  round() {
    this.x = Math.round(this.x);
    this.y = Math.round(this.y);
    return this;
  }
  roundToZero() {
    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
    return this;
  }
  negate() {
    this.x = -this.x;
    this.y = -this.y;
    return this;
  }
  dot(v2) {
    return this.x * v2.x + this.y * v2.y;
  }
  cross(v2) {
    return this.x * v2.y - this.y * v2.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    const angle = Math.atan2(-this.y, -this.x) + Math.PI;
    return angle;
  }
  distanceTo(v2) {
    return Math.sqrt(this.distanceToSquared(v2));
  }
  distanceToSquared(v2) {
    const dx = this.x - v2.x, dy = this.y - v2.y;
    return dx * dx + dy * dy;
  }
  manhattanDistanceTo(v2) {
    return Math.abs(this.x - v2.x) + Math.abs(this.y - v2.y);
  }
  setLength(length) {
    return this.normalize().multiplyScalar(length);
  }
  lerp(v2, alpha) {
    this.x += (v2.x - this.x) * alpha;
    this.y += (v2.y - this.y) * alpha;
    return this;
  }
  lerpVectors(v1, v2, alpha) {
    this.x = v1.x + (v2.x - v1.x) * alpha;
    this.y = v1.y + (v2.y - v1.y) * alpha;
    return this;
  }
  equals(v2) {
    return v2.x === this.x && v2.y === this.y;
  }
  fromArray(array2, offset2 = 0) {
    this.x = array2[offset2];
    this.y = array2[offset2 + 1];
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    array2[offset2] = this.x;
    array2[offset2 + 1] = this.y;
    return array2;
  }
  fromBufferAttribute(attribute, index) {
    this.x = attribute.getX(index);
    this.y = attribute.getY(index);
    return this;
  }
  rotateAround(center, angle) {
    const c2 = Math.cos(angle), s = Math.sin(angle);
    const x2 = this.x - center.x;
    const y2 = this.y - center.y;
    this.x = x2 * c2 - y2 * s + center.x;
    this.y = x2 * s + y2 * c2 + center.y;
    return this;
  }
  random() {
    this.x = Math.random();
    this.y = Math.random();
    return this;
  }
  *[Symbol.iterator]() {
    yield this.x;
    yield this.y;
  }
}
class Matrix3 {
  constructor() {
    Matrix3.prototype.isMatrix3 = true;
    this.elements = [
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1
    ];
  }
  set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {
    const te2 = this.elements;
    te2[0] = n11;
    te2[1] = n21;
    te2[2] = n31;
    te2[3] = n12;
    te2[4] = n22;
    te2[5] = n32;
    te2[6] = n13;
    te2[7] = n23;
    te2[8] = n33;
    return this;
  }
  identity() {
    this.set(
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1
    );
    return this;
  }
  copy(m2) {
    const te2 = this.elements;
    const me2 = m2.elements;
    te2[0] = me2[0];
    te2[1] = me2[1];
    te2[2] = me2[2];
    te2[3] = me2[3];
    te2[4] = me2[4];
    te2[5] = me2[5];
    te2[6] = me2[6];
    te2[7] = me2[7];
    te2[8] = me2[8];
    return this;
  }
  extractBasis(xAxis, yAxis, zAxis) {
    xAxis.setFromMatrix3Column(this, 0);
    yAxis.setFromMatrix3Column(this, 1);
    zAxis.setFromMatrix3Column(this, 2);
    return this;
  }
  setFromMatrix4(m2) {
    const me2 = m2.elements;
    this.set(
      me2[0],
      me2[4],
      me2[8],
      me2[1],
      me2[5],
      me2[9],
      me2[2],
      me2[6],
      me2[10]
    );
    return this;
  }
  multiply(m2) {
    return this.multiplyMatrices(this, m2);
  }
  premultiply(m2) {
    return this.multiplyMatrices(m2, this);
  }
  multiplyMatrices(a, b2) {
    const ae2 = a.elements;
    const be2 = b2.elements;
    const te2 = this.elements;
    const a11 = ae2[0], a12 = ae2[3], a13 = ae2[6];
    const a21 = ae2[1], a22 = ae2[4], a23 = ae2[7];
    const a31 = ae2[2], a32 = ae2[5], a33 = ae2[8];
    const b11 = be2[0], b12 = be2[3], b13 = be2[6];
    const b21 = be2[1], b22 = be2[4], b23 = be2[7];
    const b31 = be2[2], b32 = be2[5], b33 = be2[8];
    te2[0] = a11 * b11 + a12 * b21 + a13 * b31;
    te2[3] = a11 * b12 + a12 * b22 + a13 * b32;
    te2[6] = a11 * b13 + a12 * b23 + a13 * b33;
    te2[1] = a21 * b11 + a22 * b21 + a23 * b31;
    te2[4] = a21 * b12 + a22 * b22 + a23 * b32;
    te2[7] = a21 * b13 + a22 * b23 + a23 * b33;
    te2[2] = a31 * b11 + a32 * b21 + a33 * b31;
    te2[5] = a31 * b12 + a32 * b22 + a33 * b32;
    te2[8] = a31 * b13 + a32 * b23 + a33 * b33;
    return this;
  }
  multiplyScalar(s) {
    const te2 = this.elements;
    te2[0] *= s;
    te2[3] *= s;
    te2[6] *= s;
    te2[1] *= s;
    te2[4] *= s;
    te2[7] *= s;
    te2[2] *= s;
    te2[5] *= s;
    te2[8] *= s;
    return this;
  }
  determinant() {
    const te2 = this.elements;
    const a = te2[0], b2 = te2[1], c2 = te2[2], d = te2[3], e = te2[4], f2 = te2[5], g = te2[6], h2 = te2[7], i = te2[8];
    return a * e * i - a * f2 * h2 - b2 * d * i + b2 * f2 * g + c2 * d * h2 - c2 * e * g;
  }
  invert() {
    const te2 = this.elements, n11 = te2[0], n21 = te2[1], n31 = te2[2], n12 = te2[3], n22 = te2[4], n32 = te2[5], n13 = te2[6], n23 = te2[7], n33 = te2[8], t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13, det = n11 * t11 + n21 * t12 + n31 * t13;
    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const detInv = 1 / det;
    te2[0] = t11 * detInv;
    te2[1] = (n31 * n23 - n33 * n21) * detInv;
    te2[2] = (n32 * n21 - n31 * n22) * detInv;
    te2[3] = t12 * detInv;
    te2[4] = (n33 * n11 - n31 * n13) * detInv;
    te2[5] = (n31 * n12 - n32 * n11) * detInv;
    te2[6] = t13 * detInv;
    te2[7] = (n21 * n13 - n23 * n11) * detInv;
    te2[8] = (n22 * n11 - n21 * n12) * detInv;
    return this;
  }
  transpose() {
    let tmp;
    const m2 = this.elements;
    tmp = m2[1];
    m2[1] = m2[3];
    m2[3] = tmp;
    tmp = m2[2];
    m2[2] = m2[6];
    m2[6] = tmp;
    tmp = m2[5];
    m2[5] = m2[7];
    m2[7] = tmp;
    return this;
  }
  getNormalMatrix(matrix4) {
    return this.setFromMatrix4(matrix4).invert().transpose();
  }
  transposeIntoArray(r2) {
    const m2 = this.elements;
    r2[0] = m2[0];
    r2[1] = m2[3];
    r2[2] = m2[6];
    r2[3] = m2[1];
    r2[4] = m2[4];
    r2[5] = m2[7];
    r2[6] = m2[2];
    r2[7] = m2[5];
    r2[8] = m2[8];
    return this;
  }
  setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {
    const c2 = Math.cos(rotation);
    const s = Math.sin(rotation);
    this.set(
      sx * c2,
      sx * s,
      -sx * (c2 * cx + s * cy) + cx + tx,
      -sy * s,
      sy * c2,
      -sy * (-s * cx + c2 * cy) + cy + ty,
      0,
      0,
      1
    );
    return this;
  }
  //
  scale(sx, sy) {
    this.premultiply(_m3.makeScale(sx, sy));
    return this;
  }
  rotate(theta) {
    this.premultiply(_m3.makeRotation(-theta));
    return this;
  }
  translate(tx, ty) {
    this.premultiply(_m3.makeTranslation(tx, ty));
    return this;
  }
  // for 2D Transforms
  makeTranslation(x2, y2) {
    this.set(
      1,
      0,
      x2,
      0,
      1,
      y2,
      0,
      0,
      1
    );
    return this;
  }
  makeRotation(theta) {
    const c2 = Math.cos(theta);
    const s = Math.sin(theta);
    this.set(
      c2,
      -s,
      0,
      s,
      c2,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeScale(x2, y2) {
    this.set(
      x2,
      0,
      0,
      0,
      y2,
      0,
      0,
      0,
      1
    );
    return this;
  }
  //
  equals(matrix) {
    const te2 = this.elements;
    const me2 = matrix.elements;
    for (let i = 0; i < 9; i++) {
      if (te2[i] !== me2[i]) return false;
    }
    return true;
  }
  fromArray(array2, offset2 = 0) {
    for (let i = 0; i < 9; i++) {
      this.elements[i] = array2[i + offset2];
    }
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    const te2 = this.elements;
    array2[offset2] = te2[0];
    array2[offset2 + 1] = te2[1];
    array2[offset2 + 2] = te2[2];
    array2[offset2 + 3] = te2[3];
    array2[offset2 + 4] = te2[4];
    array2[offset2 + 5] = te2[5];
    array2[offset2 + 6] = te2[6];
    array2[offset2 + 7] = te2[7];
    array2[offset2 + 8] = te2[8];
    return array2;
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
const _m3 = /* @__PURE__ */ new Matrix3();
function arrayNeedsUint32(array2) {
  for (let i = array2.length - 1; i >= 0; --i) {
    if (array2[i] >= 65535) return true;
  }
  return false;
}
function createElementNS(name) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", name);
}
class Quaternion {
  constructor(x2 = 0, y2 = 0, z2 = 0, w2 = 1) {
    this.isQuaternion = true;
    this._x = x2;
    this._y = y2;
    this._z = z2;
    this._w = w2;
  }
  static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t2) {
    let x02 = src0[srcOffset0 + 0], y0 = src0[srcOffset0 + 1], z02 = src0[srcOffset0 + 2], w0 = src0[srcOffset0 + 3];
    const x1 = src1[srcOffset1 + 0], y1 = src1[srcOffset1 + 1], z1 = src1[srcOffset1 + 2], w1 = src1[srcOffset1 + 3];
    if (t2 === 0) {
      dst[dstOffset + 0] = x02;
      dst[dstOffset + 1] = y0;
      dst[dstOffset + 2] = z02;
      dst[dstOffset + 3] = w0;
      return;
    }
    if (t2 === 1) {
      dst[dstOffset + 0] = x1;
      dst[dstOffset + 1] = y1;
      dst[dstOffset + 2] = z1;
      dst[dstOffset + 3] = w1;
      return;
    }
    if (w0 !== w1 || x02 !== x1 || y0 !== y1 || z02 !== z1) {
      let s = 1 - t2;
      const cos = x02 * x1 + y0 * y1 + z02 * z1 + w0 * w1, dir = cos >= 0 ? 1 : -1, sqrSin = 1 - cos * cos;
      if (sqrSin > Number.EPSILON) {
        const sin = Math.sqrt(sqrSin), len = Math.atan2(sin, cos * dir);
        s = Math.sin(s * len) / sin;
        t2 = Math.sin(t2 * len) / sin;
      }
      const tDir = t2 * dir;
      x02 = x02 * s + x1 * tDir;
      y0 = y0 * s + y1 * tDir;
      z02 = z02 * s + z1 * tDir;
      w0 = w0 * s + w1 * tDir;
      if (s === 1 - t2) {
        const f2 = 1 / Math.sqrt(x02 * x02 + y0 * y0 + z02 * z02 + w0 * w0);
        x02 *= f2;
        y0 *= f2;
        z02 *= f2;
        w0 *= f2;
      }
    }
    dst[dstOffset] = x02;
    dst[dstOffset + 1] = y0;
    dst[dstOffset + 2] = z02;
    dst[dstOffset + 3] = w0;
  }
  static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {
    const x02 = src0[srcOffset0];
    const y0 = src0[srcOffset0 + 1];
    const z02 = src0[srcOffset0 + 2];
    const w0 = src0[srcOffset0 + 3];
    const x1 = src1[srcOffset1];
    const y1 = src1[srcOffset1 + 1];
    const z1 = src1[srcOffset1 + 2];
    const w1 = src1[srcOffset1 + 3];
    dst[dstOffset] = x02 * w1 + w0 * x1 + y0 * z1 - z02 * y1;
    dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z02 * x1 - x02 * z1;
    dst[dstOffset + 2] = z02 * w1 + w0 * z1 + x02 * y1 - y0 * x1;
    dst[dstOffset + 3] = w0 * w1 - x02 * x1 - y0 * y1 - z02 * z1;
    return dst;
  }
  get x() {
    return this._x;
  }
  set x(value) {
    this._x = value;
    this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(value) {
    this._y = value;
    this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(value) {
    this._z = value;
    this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(value) {
    this._w = value;
    this._onChangeCallback();
  }
  set(x2, y2, z2, w2) {
    this._x = x2;
    this._y = y2;
    this._z = z2;
    this._w = w2;
    this._onChangeCallback();
    return this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(quaternion) {
    this._x = quaternion.x;
    this._y = quaternion.y;
    this._z = quaternion.z;
    this._w = quaternion.w;
    this._onChangeCallback();
    return this;
  }
  setFromEuler(euler, update) {
    const x2 = euler._x, y2 = euler._y, z2 = euler._z, order = euler._order;
    const cos = Math.cos;
    const sin = Math.sin;
    const c1 = cos(x2 / 2);
    const c2 = cos(y2 / 2);
    const c3 = cos(z2 / 2);
    const s1 = sin(x2 / 2);
    const s2 = sin(y2 / 2);
    const s3 = sin(z2 / 2);
    switch (order) {
      case "XYZ":
        this._x = s1 * c2 * c3 + c1 * s2 * s3;
        this._y = c1 * s2 * c3 - s1 * c2 * s3;
        this._z = c1 * c2 * s3 + s1 * s2 * c3;
        this._w = c1 * c2 * c3 - s1 * s2 * s3;
        break;
      case "YXZ":
        this._x = s1 * c2 * c3 + c1 * s2 * s3;
        this._y = c1 * s2 * c3 - s1 * c2 * s3;
        this._z = c1 * c2 * s3 - s1 * s2 * c3;
        this._w = c1 * c2 * c3 + s1 * s2 * s3;
        break;
      case "ZXY":
        this._x = s1 * c2 * c3 - c1 * s2 * s3;
        this._y = c1 * s2 * c3 + s1 * c2 * s3;
        this._z = c1 * c2 * s3 + s1 * s2 * c3;
        this._w = c1 * c2 * c3 - s1 * s2 * s3;
        break;
      case "ZYX":
        this._x = s1 * c2 * c3 - c1 * s2 * s3;
        this._y = c1 * s2 * c3 + s1 * c2 * s3;
        this._z = c1 * c2 * s3 - s1 * s2 * c3;
        this._w = c1 * c2 * c3 + s1 * s2 * s3;
        break;
      case "YZX":
        this._x = s1 * c2 * c3 + c1 * s2 * s3;
        this._y = c1 * s2 * c3 + s1 * c2 * s3;
        this._z = c1 * c2 * s3 - s1 * s2 * c3;
        this._w = c1 * c2 * c3 - s1 * s2 * s3;
        break;
      case "XZY":
        this._x = s1 * c2 * c3 - c1 * s2 * s3;
        this._y = c1 * s2 * c3 - s1 * c2 * s3;
        this._z = c1 * c2 * s3 + s1 * s2 * c3;
        this._w = c1 * c2 * c3 + s1 * s2 * s3;
        break;
      default:
        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + order);
    }
    if (update !== false) this._onChangeCallback();
    return this;
  }
  setFromAxisAngle(axis, angle) {
    const halfAngle = angle / 2, s = Math.sin(halfAngle);
    this._x = axis.x * s;
    this._y = axis.y * s;
    this._z = axis.z * s;
    this._w = Math.cos(halfAngle);
    this._onChangeCallback();
    return this;
  }
  setFromRotationMatrix(m2) {
    const te2 = m2.elements, m11 = te2[0], m12 = te2[4], m13 = te2[8], m21 = te2[1], m22 = te2[5], m23 = te2[9], m31 = te2[2], m32 = te2[6], m33 = te2[10], trace = m11 + m22 + m33;
    if (trace > 0) {
      const s = 0.5 / Math.sqrt(trace + 1);
      this._w = 0.25 / s;
      this._x = (m32 - m23) * s;
      this._y = (m13 - m31) * s;
      this._z = (m21 - m12) * s;
    } else if (m11 > m22 && m11 > m33) {
      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);
      this._w = (m32 - m23) / s;
      this._x = 0.25 * s;
      this._y = (m12 + m21) / s;
      this._z = (m13 + m31) / s;
    } else if (m22 > m33) {
      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);
      this._w = (m13 - m31) / s;
      this._x = (m12 + m21) / s;
      this._y = 0.25 * s;
      this._z = (m23 + m32) / s;
    } else {
      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);
      this._w = (m21 - m12) / s;
      this._x = (m13 + m31) / s;
      this._y = (m23 + m32) / s;
      this._z = 0.25 * s;
    }
    this._onChangeCallback();
    return this;
  }
  setFromUnitVectors(vFrom, vTo) {
    let r2 = vFrom.dot(vTo) + 1;
    if (r2 < Number.EPSILON) {
      r2 = 0;
      if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {
        this._x = -vFrom.y;
        this._y = vFrom.x;
        this._z = 0;
        this._w = r2;
      } else {
        this._x = 0;
        this._y = -vFrom.z;
        this._z = vFrom.y;
        this._w = r2;
      }
    } else {
      this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;
      this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;
      this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;
      this._w = r2;
    }
    return this.normalize();
  }
  angleTo(q2) {
    return 2 * Math.acos(Math.abs(clamp(this.dot(q2), -1, 1)));
  }
  rotateTowards(q2, step) {
    const angle = this.angleTo(q2);
    if (angle === 0) return this;
    const t2 = Math.min(1, step / angle);
    this.slerp(q2, t2);
    return this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    this._x *= -1;
    this._y *= -1;
    this._z *= -1;
    this._onChangeCallback();
    return this;
  }
  dot(v2) {
    return this._x * v2._x + this._y * v2._y + this._z * v2._z + this._w * v2._w;
  }
  lengthSq() {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }
  length() {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }
  normalize() {
    let l2 = this.length();
    if (l2 === 0) {
      this._x = 0;
      this._y = 0;
      this._z = 0;
      this._w = 1;
    } else {
      l2 = 1 / l2;
      this._x = this._x * l2;
      this._y = this._y * l2;
      this._z = this._z * l2;
      this._w = this._w * l2;
    }
    this._onChangeCallback();
    return this;
  }
  multiply(q2) {
    return this.multiplyQuaternions(this, q2);
  }
  premultiply(q2) {
    return this.multiplyQuaternions(q2, this);
  }
  multiplyQuaternions(a, b2) {
    const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
    const qbx = b2._x, qby = b2._y, qbz = b2._z, qbw = b2._w;
    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
    this._onChangeCallback();
    return this;
  }
  slerp(qb2, t2) {
    if (t2 === 0) return this;
    if (t2 === 1) return this.copy(qb2);
    const x2 = this._x, y2 = this._y, z2 = this._z, w2 = this._w;
    let cosHalfTheta = w2 * qb2._w + x2 * qb2._x + y2 * qb2._y + z2 * qb2._z;
    if (cosHalfTheta < 0) {
      this._w = -qb2._w;
      this._x = -qb2._x;
      this._y = -qb2._y;
      this._z = -qb2._z;
      cosHalfTheta = -cosHalfTheta;
    } else {
      this.copy(qb2);
    }
    if (cosHalfTheta >= 1) {
      this._w = w2;
      this._x = x2;
      this._y = y2;
      this._z = z2;
      return this;
    }
    const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;
    if (sqrSinHalfTheta <= Number.EPSILON) {
      const s = 1 - t2;
      this._w = s * w2 + t2 * this._w;
      this._x = s * x2 + t2 * this._x;
      this._y = s * y2 + t2 * this._y;
      this._z = s * z2 + t2 * this._z;
      this.normalize();
      this._onChangeCallback();
      return this;
    }
    const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);
    const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);
    const ratioA = Math.sin((1 - t2) * halfTheta) / sinHalfTheta, ratioB = Math.sin(t2 * halfTheta) / sinHalfTheta;
    this._w = w2 * ratioA + this._w * ratioB;
    this._x = x2 * ratioA + this._x * ratioB;
    this._y = y2 * ratioA + this._y * ratioB;
    this._z = z2 * ratioA + this._z * ratioB;
    this._onChangeCallback();
    return this;
  }
  slerpQuaternions(qa2, qb2, t2) {
    return this.copy(qa2).slerp(qb2, t2);
  }
  random() {
    const u1 = Math.random();
    const sqrt1u1 = Math.sqrt(1 - u1);
    const sqrtu1 = Math.sqrt(u1);
    const u2 = 2 * Math.PI * Math.random();
    const u3 = 2 * Math.PI * Math.random();
    return this.set(
      sqrt1u1 * Math.cos(u2),
      sqrtu1 * Math.sin(u3),
      sqrtu1 * Math.cos(u3),
      sqrt1u1 * Math.sin(u2)
    );
  }
  equals(quaternion) {
    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;
  }
  fromArray(array2, offset2 = 0) {
    this._x = array2[offset2];
    this._y = array2[offset2 + 1];
    this._z = array2[offset2 + 2];
    this._w = array2[offset2 + 3];
    this._onChangeCallback();
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    array2[offset2] = this._x;
    array2[offset2 + 1] = this._y;
    array2[offset2 + 2] = this._z;
    array2[offset2 + 3] = this._w;
    return array2;
  }
  fromBufferAttribute(attribute, index) {
    this._x = attribute.getX(index);
    this._y = attribute.getY(index);
    this._z = attribute.getZ(index);
    this._w = attribute.getW(index);
    return this;
  }
  _onChange(callback) {
    this._onChangeCallback = callback;
    return this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x;
    yield this._y;
    yield this._z;
    yield this._w;
  }
}
class Vector3 {
  constructor(x2 = 0, y2 = 0, z2 = 0) {
    Vector3.prototype.isVector3 = true;
    this.x = x2;
    this.y = y2;
    this.z = z2;
  }
  set(x2, y2, z2) {
    if (z2 === void 0) z2 = this.z;
    this.x = x2;
    this.y = y2;
    this.z = z2;
    return this;
  }
  setScalar(scalar) {
    this.x = scalar;
    this.y = scalar;
    this.z = scalar;
    return this;
  }
  setX(x2) {
    this.x = x2;
    return this;
  }
  setY(y2) {
    this.y = y2;
    return this;
  }
  setZ(z2) {
    this.z = z2;
    return this;
  }
  setComponent(index, value) {
    switch (index) {
      case 0:
        this.x = value;
        break;
      case 1:
        this.y = value;
        break;
      case 2:
        this.z = value;
        break;
      default:
        throw new Error("index is out of range: " + index);
    }
    return this;
  }
  getComponent(index) {
    switch (index) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + index);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(v2) {
    this.x = v2.x;
    this.y = v2.y;
    this.z = v2.z;
    return this;
  }
  add(v2) {
    this.x += v2.x;
    this.y += v2.y;
    this.z += v2.z;
    return this;
  }
  addScalar(s) {
    this.x += s;
    this.y += s;
    this.z += s;
    return this;
  }
  addVectors(a, b2) {
    this.x = a.x + b2.x;
    this.y = a.y + b2.y;
    this.z = a.z + b2.z;
    return this;
  }
  addScaledVector(v2, s) {
    this.x += v2.x * s;
    this.y += v2.y * s;
    this.z += v2.z * s;
    return this;
  }
  sub(v2) {
    this.x -= v2.x;
    this.y -= v2.y;
    this.z -= v2.z;
    return this;
  }
  subScalar(s) {
    this.x -= s;
    this.y -= s;
    this.z -= s;
    return this;
  }
  subVectors(a, b2) {
    this.x = a.x - b2.x;
    this.y = a.y - b2.y;
    this.z = a.z - b2.z;
    return this;
  }
  multiply(v2) {
    this.x *= v2.x;
    this.y *= v2.y;
    this.z *= v2.z;
    return this;
  }
  multiplyScalar(scalar) {
    this.x *= scalar;
    this.y *= scalar;
    this.z *= scalar;
    return this;
  }
  multiplyVectors(a, b2) {
    this.x = a.x * b2.x;
    this.y = a.y * b2.y;
    this.z = a.z * b2.z;
    return this;
  }
  applyEuler(euler) {
    return this.applyQuaternion(_quaternion$4.setFromEuler(euler));
  }
  applyAxisAngle(axis, angle) {
    return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));
  }
  applyMatrix3(m2) {
    const x2 = this.x, y2 = this.y, z2 = this.z;
    const e = m2.elements;
    this.x = e[0] * x2 + e[3] * y2 + e[6] * z2;
    this.y = e[1] * x2 + e[4] * y2 + e[7] * z2;
    this.z = e[2] * x2 + e[5] * y2 + e[8] * z2;
    return this;
  }
  applyNormalMatrix(m2) {
    return this.applyMatrix3(m2).normalize();
  }
  applyMatrix4(m2) {
    const x2 = this.x, y2 = this.y, z2 = this.z;
    const e = m2.elements;
    const w2 = 1 / (e[3] * x2 + e[7] * y2 + e[11] * z2 + e[15]);
    this.x = (e[0] * x2 + e[4] * y2 + e[8] * z2 + e[12]) * w2;
    this.y = (e[1] * x2 + e[5] * y2 + e[9] * z2 + e[13]) * w2;
    this.z = (e[2] * x2 + e[6] * y2 + e[10] * z2 + e[14]) * w2;
    return this;
  }
  applyQuaternion(q2) {
    const x2 = this.x, y2 = this.y, z2 = this.z;
    const qx = q2.x, qy = q2.y, qz = q2.z, qw = q2.w;
    const ix = qw * x2 + qy * z2 - qz * y2;
    const iy = qw * y2 + qz * x2 - qx * z2;
    const iz = qw * z2 + qx * y2 - qy * x2;
    const iw = -qx * x2 - qy * y2 - qz * z2;
    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;
    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;
    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;
    return this;
  }
  project(camera) {
    return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);
  }
  unproject(camera) {
    return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);
  }
  transformDirection(m2) {
    const x2 = this.x, y2 = this.y, z2 = this.z;
    const e = m2.elements;
    this.x = e[0] * x2 + e[4] * y2 + e[8] * z2;
    this.y = e[1] * x2 + e[5] * y2 + e[9] * z2;
    this.z = e[2] * x2 + e[6] * y2 + e[10] * z2;
    return this.normalize();
  }
  divide(v2) {
    this.x /= v2.x;
    this.y /= v2.y;
    this.z /= v2.z;
    return this;
  }
  divideScalar(scalar) {
    return this.multiplyScalar(1 / scalar);
  }
  min(v2) {
    this.x = Math.min(this.x, v2.x);
    this.y = Math.min(this.y, v2.y);
    this.z = Math.min(this.z, v2.z);
    return this;
  }
  max(v2) {
    this.x = Math.max(this.x, v2.x);
    this.y = Math.max(this.y, v2.y);
    this.z = Math.max(this.z, v2.z);
    return this;
  }
  clamp(min2, max2) {
    this.x = Math.max(min2.x, Math.min(max2.x, this.x));
    this.y = Math.max(min2.y, Math.min(max2.y, this.y));
    this.z = Math.max(min2.z, Math.min(max2.z, this.z));
    return this;
  }
  clampScalar(minVal, maxVal) {
    this.x = Math.max(minVal, Math.min(maxVal, this.x));
    this.y = Math.max(minVal, Math.min(maxVal, this.y));
    this.z = Math.max(minVal, Math.min(maxVal, this.z));
    return this;
  }
  clampLength(min2, max2) {
    const length = this.length();
    return this.divideScalar(length || 1).multiplyScalar(Math.max(min2, Math.min(max2, length)));
  }
  floor() {
    this.x = Math.floor(this.x);
    this.y = Math.floor(this.y);
    this.z = Math.floor(this.z);
    return this;
  }
  ceil() {
    this.x = Math.ceil(this.x);
    this.y = Math.ceil(this.y);
    this.z = Math.ceil(this.z);
    return this;
  }
  round() {
    this.x = Math.round(this.x);
    this.y = Math.round(this.y);
    this.z = Math.round(this.z);
    return this;
  }
  roundToZero() {
    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);
    return this;
  }
  negate() {
    this.x = -this.x;
    this.y = -this.y;
    this.z = -this.z;
    return this;
  }
  dot(v2) {
    return this.x * v2.x + this.y * v2.y + this.z * v2.z;
  }
  // TODO lengthSquared?
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(length) {
    return this.normalize().multiplyScalar(length);
  }
  lerp(v2, alpha) {
    this.x += (v2.x - this.x) * alpha;
    this.y += (v2.y - this.y) * alpha;
    this.z += (v2.z - this.z) * alpha;
    return this;
  }
  lerpVectors(v1, v2, alpha) {
    this.x = v1.x + (v2.x - v1.x) * alpha;
    this.y = v1.y + (v2.y - v1.y) * alpha;
    this.z = v1.z + (v2.z - v1.z) * alpha;
    return this;
  }
  cross(v2) {
    return this.crossVectors(this, v2);
  }
  crossVectors(a, b2) {
    const ax = a.x, ay = a.y, az = a.z;
    const bx = b2.x, by = b2.y, bz = b2.z;
    this.x = ay * bz - az * by;
    this.y = az * bx - ax * bz;
    this.z = ax * by - ay * bx;
    return this;
  }
  projectOnVector(v2) {
    const denominator = v2.lengthSq();
    if (denominator === 0) return this.set(0, 0, 0);
    const scalar = v2.dot(this) / denominator;
    return this.copy(v2).multiplyScalar(scalar);
  }
  projectOnPlane(planeNormal) {
    _vector$d.copy(this).projectOnVector(planeNormal);
    return this.sub(_vector$d);
  }
  reflect(normal) {
    return this.sub(_vector$d.copy(normal).multiplyScalar(2 * this.dot(normal)));
  }
  angleTo(v2) {
    const denominator = Math.sqrt(this.lengthSq() * v2.lengthSq());
    if (denominator === 0) return Math.PI / 2;
    const theta = this.dot(v2) / denominator;
    return Math.acos(clamp(theta, -1, 1));
  }
  distanceTo(v2) {
    return Math.sqrt(this.distanceToSquared(v2));
  }
  distanceToSquared(v2) {
    const dx = this.x - v2.x, dy = this.y - v2.y, dz = this.z - v2.z;
    return dx * dx + dy * dy + dz * dz;
  }
  manhattanDistanceTo(v2) {
    return Math.abs(this.x - v2.x) + Math.abs(this.y - v2.y) + Math.abs(this.z - v2.z);
  }
  setFromSpherical(s) {
    return this.setFromSphericalCoords(s.radius, s.phi, s.theta);
  }
  setFromSphericalCoords(radius, phi, theta) {
    const sinPhiRadius = Math.sin(phi) * radius;
    this.x = sinPhiRadius * Math.sin(theta);
    this.y = Math.cos(phi) * radius;
    this.z = sinPhiRadius * Math.cos(theta);
    return this;
  }
  setFromCylindrical(c2) {
    return this.setFromCylindricalCoords(c2.radius, c2.theta, c2.y);
  }
  setFromCylindricalCoords(radius, theta, y2) {
    this.x = radius * Math.sin(theta);
    this.y = y2;
    this.z = radius * Math.cos(theta);
    return this;
  }
  setFromMatrixPosition(m2) {
    const e = m2.elements;
    this.x = e[12];
    this.y = e[13];
    this.z = e[14];
    return this;
  }
  setFromMatrixScale(m2) {
    const sx = this.setFromMatrixColumn(m2, 0).length();
    const sy = this.setFromMatrixColumn(m2, 1).length();
    const sz = this.setFromMatrixColumn(m2, 2).length();
    this.x = sx;
    this.y = sy;
    this.z = sz;
    return this;
  }
  setFromMatrixColumn(m2, index) {
    return this.fromArray(m2.elements, index * 4);
  }
  setFromMatrix3Column(m2, index) {
    return this.fromArray(m2.elements, index * 3);
  }
  setFromEuler(e) {
    this.x = e._x;
    this.y = e._y;
    this.z = e._z;
    return this;
  }
  equals(v2) {
    return v2.x === this.x && v2.y === this.y && v2.z === this.z;
  }
  fromArray(array2, offset2 = 0) {
    this.x = array2[offset2];
    this.y = array2[offset2 + 1];
    this.z = array2[offset2 + 2];
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    array2[offset2] = this.x;
    array2[offset2 + 1] = this.y;
    array2[offset2 + 2] = this.z;
    return array2;
  }
  fromBufferAttribute(attribute, index) {
    this.x = attribute.getX(index);
    this.y = attribute.getY(index);
    this.z = attribute.getZ(index);
    return this;
  }
  random() {
    this.x = Math.random();
    this.y = Math.random();
    this.z = Math.random();
    return this;
  }
  randomDirection() {
    const u2 = (Math.random() - 0.5) * 2;
    const t2 = Math.random() * Math.PI * 2;
    const f2 = Math.sqrt(1 - u2 ** 2);
    this.x = f2 * Math.cos(t2);
    this.y = f2 * Math.sin(t2);
    this.z = u2;
    return this;
  }
  *[Symbol.iterator]() {
    yield this.x;
    yield this.y;
    yield this.z;
  }
}
const _vector$d = /* @__PURE__ */ new Vector3();
const _quaternion$4 = /* @__PURE__ */ new Quaternion();
function SRGBToLinear(c2) {
  return c2 < 0.04045 ? c2 * 0.0773993808 : Math.pow(c2 * 0.9478672986 + 0.0521327014, 2.4);
}
function LinearToSRGB(c2) {
  return c2 < 31308e-7 ? c2 * 12.92 : 1.055 * Math.pow(c2, 0.41666) - 0.055;
}
const LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = new Matrix3().fromArray([
  0.8224621,
  0.0331941,
  0.0170827,
  0.177538,
  0.9668058,
  0.0723974,
  -1e-7,
  1e-7,
  0.9105199
]);
const LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = new Matrix3().fromArray([
  1.2249401,
  -0.0420569,
  -0.0196376,
  -0.2249404,
  1.0420571,
  -0.0786361,
  1e-7,
  0,
  1.0982735
]);
const _vector$c = new Vector3();
function DisplayP3ToLinearSRGB(color) {
  color.convertSRGBToLinear();
  _vector$c.set(color.r, color.g, color.b).applyMatrix3(LINEAR_DISPLAY_P3_TO_LINEAR_SRGB);
  return color.setRGB(_vector$c.x, _vector$c.y, _vector$c.z);
}
function LinearSRGBToDisplayP3(color) {
  _vector$c.set(color.r, color.g, color.b).applyMatrix3(LINEAR_SRGB_TO_LINEAR_DISPLAY_P3);
  return color.setRGB(_vector$c.x, _vector$c.y, _vector$c.z).convertLinearToSRGB();
}
const TO_LINEAR = {
  [LinearSRGBColorSpace]: (color) => color,
  [SRGBColorSpace]: (color) => color.convertSRGBToLinear(),
  [DisplayP3ColorSpace]: DisplayP3ToLinearSRGB
};
const FROM_LINEAR = {
  [LinearSRGBColorSpace]: (color) => color,
  [SRGBColorSpace]: (color) => color.convertLinearToSRGB(),
  [DisplayP3ColorSpace]: LinearSRGBToDisplayP3
};
const ColorManagement = {
  enabled: false,
  get legacyMode() {
    console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.");
    return !this.enabled;
  },
  set legacyMode(legacyMode) {
    console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.");
    this.enabled = !legacyMode;
  },
  get workingColorSpace() {
    return LinearSRGBColorSpace;
  },
  set workingColorSpace(colorSpace) {
    console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
  },
  convert: function(color, sourceColorSpace, targetColorSpace) {
    if (this.enabled === false || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {
      return color;
    }
    const sourceToLinear = TO_LINEAR[sourceColorSpace];
    const targetFromLinear = FROM_LINEAR[targetColorSpace];
    if (sourceToLinear === void 0 || targetFromLinear === void 0) {
      throw new Error(`Unsupported color space conversion, "${sourceColorSpace}" to "${targetColorSpace}".`);
    }
    return targetFromLinear(sourceToLinear(color));
  },
  fromWorkingColorSpace: function(color, targetColorSpace) {
    return this.convert(color, this.workingColorSpace, targetColorSpace);
  },
  toWorkingColorSpace: function(color, sourceColorSpace) {
    return this.convert(color, sourceColorSpace, this.workingColorSpace);
  }
};
let _canvas;
class ImageUtils {
  static getDataURL(image) {
    if (/^data:/i.test(image.src)) {
      return image.src;
    }
    if (typeof HTMLCanvasElement == "undefined") {
      return image.src;
    }
    let canvas;
    if (image instanceof HTMLCanvasElement) {
      canvas = image;
    } else {
      if (_canvas === void 0) _canvas = createElementNS("canvas");
      _canvas.width = image.width;
      _canvas.height = image.height;
      const context = _canvas.getContext("2d");
      if (image instanceof ImageData) {
        context.putImageData(image, 0, 0);
      } else {
        context.drawImage(image, 0, 0, image.width, image.height);
      }
      canvas = _canvas;
    }
    if (canvas.width > 2048 || canvas.height > 2048) {
      console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", image);
      return canvas.toDataURL("image/jpeg", 0.6);
    } else {
      return canvas.toDataURL("image/png");
    }
  }
  static sRGBToLinear(image) {
    if (typeof HTMLImageElement !== "undefined" && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== "undefined" && image instanceof HTMLCanvasElement || typeof ImageBitmap !== "undefined" && image instanceof ImageBitmap) {
      const canvas = createElementNS("canvas");
      canvas.width = image.width;
      canvas.height = image.height;
      const context = canvas.getContext("2d");
      context.drawImage(image, 0, 0, image.width, image.height);
      const imageData = context.getImageData(0, 0, image.width, image.height);
      const data = imageData.data;
      for (let i = 0; i < data.length; i++) {
        data[i] = SRGBToLinear(data[i] / 255) * 255;
      }
      context.putImageData(imageData, 0, 0);
      return canvas;
    } else if (image.data) {
      const data = image.data.slice(0);
      for (let i = 0; i < data.length; i++) {
        if (data instanceof Uint8Array || data instanceof Uint8ClampedArray) {
          data[i] = Math.floor(SRGBToLinear(data[i] / 255) * 255);
        } else {
          data[i] = SRGBToLinear(data[i]);
        }
      }
      return {
        data,
        width: image.width,
        height: image.height
      };
    } else {
      console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.");
      return image;
    }
  }
}
class Source {
  constructor(data = null) {
    this.isSource = true;
    this.uuid = generateUUID();
    this.data = data;
    this.version = 0;
  }
  set needsUpdate(value) {
    if (value === true) this.version++;
  }
  toJSON(meta) {
    const isRootObject = meta === void 0 || typeof meta === "string";
    if (!isRootObject && meta.images[this.uuid] !== void 0) {
      return meta.images[this.uuid];
    }
    const output = {
      uuid: this.uuid,
      url: ""
    };
    const data = this.data;
    if (data !== null) {
      let url;
      if (Array.isArray(data)) {
        url = [];
        for (let i = 0, l2 = data.length; i < l2; i++) {
          if (data[i].isDataTexture) {
            url.push(serializeImage(data[i].image));
          } else {
            url.push(serializeImage(data[i]));
          }
        }
      } else {
        url = serializeImage(data);
      }
      output.url = url;
    }
    if (!isRootObject) {
      meta.images[this.uuid] = output;
    }
    return output;
  }
}
function serializeImage(image) {
  if (typeof HTMLImageElement !== "undefined" && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== "undefined" && image instanceof HTMLCanvasElement || typeof ImageBitmap !== "undefined" && image instanceof ImageBitmap) {
    return ImageUtils.getDataURL(image);
  } else {
    if (image.data) {
      return {
        data: Array.from(image.data),
        width: image.width,
        height: image.height,
        type: image.data.constructor.name
      };
    } else {
      console.warn("THREE.Texture: Unable to serialize Texture.");
      return {};
    }
  }
}
let textureId = 0;
class Texture extends EventDispatcher {
  constructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format2 = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding) {
    super();
    this.isTexture = true;
    Object.defineProperty(this, "id", { value: textureId++ });
    this.uuid = generateUUID();
    this.name = "";
    this.source = new Source(image);
    this.mipmaps = [];
    this.mapping = mapping;
    this.wrapS = wrapS;
    this.wrapT = wrapT;
    this.magFilter = magFilter;
    this.minFilter = minFilter;
    this.anisotropy = anisotropy;
    this.format = format2;
    this.internalFormat = null;
    this.type = type;
    this.offset = new Vector2(0, 0);
    this.repeat = new Vector2(1, 1);
    this.center = new Vector2(0, 0);
    this.rotation = 0;
    this.matrixAutoUpdate = true;
    this.matrix = new Matrix3();
    this.generateMipmaps = true;
    this.premultiplyAlpha = false;
    this.flipY = true;
    this.unpackAlignment = 4;
    this.encoding = encoding;
    this.userData = {};
    this.version = 0;
    this.onUpdate = null;
    this.isRenderTargetTexture = false;
    this.needsPMREMUpdate = false;
  }
  get image() {
    return this.source.data;
  }
  set image(value = null) {
    this.source.data = value;
  }
  updateMatrix() {
    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(source) {
    this.name = source.name;
    this.source = source.source;
    this.mipmaps = source.mipmaps.slice(0);
    this.mapping = source.mapping;
    this.wrapS = source.wrapS;
    this.wrapT = source.wrapT;
    this.magFilter = source.magFilter;
    this.minFilter = source.minFilter;
    this.anisotropy = source.anisotropy;
    this.format = source.format;
    this.internalFormat = source.internalFormat;
    this.type = source.type;
    this.offset.copy(source.offset);
    this.repeat.copy(source.repeat);
    this.center.copy(source.center);
    this.rotation = source.rotation;
    this.matrixAutoUpdate = source.matrixAutoUpdate;
    this.matrix.copy(source.matrix);
    this.generateMipmaps = source.generateMipmaps;
    this.premultiplyAlpha = source.premultiplyAlpha;
    this.flipY = source.flipY;
    this.unpackAlignment = source.unpackAlignment;
    this.encoding = source.encoding;
    this.userData = JSON.parse(JSON.stringify(source.userData));
    this.needsUpdate = true;
    return this;
  }
  toJSON(meta) {
    const isRootObject = meta === void 0 || typeof meta === "string";
    if (!isRootObject && meta.textures[this.uuid] !== void 0) {
      return meta.textures[this.uuid];
    }
    const output = {
      metadata: {
        version: 4.5,
        type: "Texture",
        generator: "Texture.toJSON"
      },
      uuid: this.uuid,
      name: this.name,
      image: this.source.toJSON(meta).uuid,
      mapping: this.mapping,
      repeat: [this.repeat.x, this.repeat.y],
      offset: [this.offset.x, this.offset.y],
      center: [this.center.x, this.center.y],
      rotation: this.rotation,
      wrap: [this.wrapS, this.wrapT],
      format: this.format,
      internalFormat: this.internalFormat,
      type: this.type,
      encoding: this.encoding,
      minFilter: this.minFilter,
      magFilter: this.magFilter,
      anisotropy: this.anisotropy,
      flipY: this.flipY,
      generateMipmaps: this.generateMipmaps,
      premultiplyAlpha: this.premultiplyAlpha,
      unpackAlignment: this.unpackAlignment
    };
    if (Object.keys(this.userData).length > 0) output.userData = this.userData;
    if (!isRootObject) {
      meta.textures[this.uuid] = output;
    }
    return output;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(uv) {
    if (this.mapping !== UVMapping) return uv;
    uv.applyMatrix3(this.matrix);
    if (uv.x < 0 || uv.x > 1) {
      switch (this.wrapS) {
        case RepeatWrapping:
          uv.x = uv.x - Math.floor(uv.x);
          break;
        case ClampToEdgeWrapping:
          uv.x = uv.x < 0 ? 0 : 1;
          break;
        case MirroredRepeatWrapping:
          if (Math.abs(Math.floor(uv.x) % 2) === 1) {
            uv.x = Math.ceil(uv.x) - uv.x;
          } else {
            uv.x = uv.x - Math.floor(uv.x);
          }
          break;
      }
    }
    if (uv.y < 0 || uv.y > 1) {
      switch (this.wrapT) {
        case RepeatWrapping:
          uv.y = uv.y - Math.floor(uv.y);
          break;
        case ClampToEdgeWrapping:
          uv.y = uv.y < 0 ? 0 : 1;
          break;
        case MirroredRepeatWrapping:
          if (Math.abs(Math.floor(uv.y) % 2) === 1) {
            uv.y = Math.ceil(uv.y) - uv.y;
          } else {
            uv.y = uv.y - Math.floor(uv.y);
          }
          break;
      }
    }
    if (this.flipY) {
      uv.y = 1 - uv.y;
    }
    return uv;
  }
  set needsUpdate(value) {
    if (value === true) {
      this.version++;
      this.source.needsUpdate = true;
    }
  }
}
Texture.DEFAULT_IMAGE = null;
Texture.DEFAULT_MAPPING = UVMapping;
Texture.DEFAULT_ANISOTROPY = 1;
class Vector4 {
  constructor(x2 = 0, y2 = 0, z2 = 0, w2 = 1) {
    Vector4.prototype.isVector4 = true;
    this.x = x2;
    this.y = y2;
    this.z = z2;
    this.w = w2;
  }
  get width() {
    return this.z;
  }
  set width(value) {
    this.z = value;
  }
  get height() {
    return this.w;
  }
  set height(value) {
    this.w = value;
  }
  set(x2, y2, z2, w2) {
    this.x = x2;
    this.y = y2;
    this.z = z2;
    this.w = w2;
    return this;
  }
  setScalar(scalar) {
    this.x = scalar;
    this.y = scalar;
    this.z = scalar;
    this.w = scalar;
    return this;
  }
  setX(x2) {
    this.x = x2;
    return this;
  }
  setY(y2) {
    this.y = y2;
    return this;
  }
  setZ(z2) {
    this.z = z2;
    return this;
  }
  setW(w2) {
    this.w = w2;
    return this;
  }
  setComponent(index, value) {
    switch (index) {
      case 0:
        this.x = value;
        break;
      case 1:
        this.y = value;
        break;
      case 2:
        this.z = value;
        break;
      case 3:
        this.w = value;
        break;
      default:
        throw new Error("index is out of range: " + index);
    }
    return this;
  }
  getComponent(index) {
    switch (index) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + index);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(v2) {
    this.x = v2.x;
    this.y = v2.y;
    this.z = v2.z;
    this.w = v2.w !== void 0 ? v2.w : 1;
    return this;
  }
  add(v2) {
    this.x += v2.x;
    this.y += v2.y;
    this.z += v2.z;
    this.w += v2.w;
    return this;
  }
  addScalar(s) {
    this.x += s;
    this.y += s;
    this.z += s;
    this.w += s;
    return this;
  }
  addVectors(a, b2) {
    this.x = a.x + b2.x;
    this.y = a.y + b2.y;
    this.z = a.z + b2.z;
    this.w = a.w + b2.w;
    return this;
  }
  addScaledVector(v2, s) {
    this.x += v2.x * s;
    this.y += v2.y * s;
    this.z += v2.z * s;
    this.w += v2.w * s;
    return this;
  }
  sub(v2) {
    this.x -= v2.x;
    this.y -= v2.y;
    this.z -= v2.z;
    this.w -= v2.w;
    return this;
  }
  subScalar(s) {
    this.x -= s;
    this.y -= s;
    this.z -= s;
    this.w -= s;
    return this;
  }
  subVectors(a, b2) {
    this.x = a.x - b2.x;
    this.y = a.y - b2.y;
    this.z = a.z - b2.z;
    this.w = a.w - b2.w;
    return this;
  }
  multiply(v2) {
    this.x *= v2.x;
    this.y *= v2.y;
    this.z *= v2.z;
    this.w *= v2.w;
    return this;
  }
  multiplyScalar(scalar) {
    this.x *= scalar;
    this.y *= scalar;
    this.z *= scalar;
    this.w *= scalar;
    return this;
  }
  applyMatrix4(m2) {
    const x2 = this.x, y2 = this.y, z2 = this.z, w2 = this.w;
    const e = m2.elements;
    this.x = e[0] * x2 + e[4] * y2 + e[8] * z2 + e[12] * w2;
    this.y = e[1] * x2 + e[5] * y2 + e[9] * z2 + e[13] * w2;
    this.z = e[2] * x2 + e[6] * y2 + e[10] * z2 + e[14] * w2;
    this.w = e[3] * x2 + e[7] * y2 + e[11] * z2 + e[15] * w2;
    return this;
  }
  divideScalar(scalar) {
    return this.multiplyScalar(1 / scalar);
  }
  setAxisAngleFromQuaternion(q2) {
    this.w = 2 * Math.acos(q2.w);
    const s = Math.sqrt(1 - q2.w * q2.w);
    if (s < 1e-4) {
      this.x = 1;
      this.y = 0;
      this.z = 0;
    } else {
      this.x = q2.x / s;
      this.y = q2.y / s;
      this.z = q2.z / s;
    }
    return this;
  }
  setAxisAngleFromRotationMatrix(m2) {
    let angle, x2, y2, z2;
    const epsilon = 0.01, epsilon2 = 0.1, te2 = m2.elements, m11 = te2[0], m12 = te2[4], m13 = te2[8], m21 = te2[1], m22 = te2[5], m23 = te2[9], m31 = te2[2], m32 = te2[6], m33 = te2[10];
    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {
      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {
        this.set(1, 0, 0, 0);
        return this;
      }
      angle = Math.PI;
      const xx = (m11 + 1) / 2;
      const yy = (m22 + 1) / 2;
      const zz = (m33 + 1) / 2;
      const xy = (m12 + m21) / 4;
      const xz = (m13 + m31) / 4;
      const yz = (m23 + m32) / 4;
      if (xx > yy && xx > zz) {
        if (xx < epsilon) {
          x2 = 0;
          y2 = 0.707106781;
          z2 = 0.707106781;
        } else {
          x2 = Math.sqrt(xx);
          y2 = xy / x2;
          z2 = xz / x2;
        }
      } else if (yy > zz) {
        if (yy < epsilon) {
          x2 = 0.707106781;
          y2 = 0;
          z2 = 0.707106781;
        } else {
          y2 = Math.sqrt(yy);
          x2 = xy / y2;
          z2 = yz / y2;
        }
      } else {
        if (zz < epsilon) {
          x2 = 0.707106781;
          y2 = 0.707106781;
          z2 = 0;
        } else {
          z2 = Math.sqrt(zz);
          x2 = xz / z2;
          y2 = yz / z2;
        }
      }
      this.set(x2, y2, z2, angle);
      return this;
    }
    let s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12));
    if (Math.abs(s) < 1e-3) s = 1;
    this.x = (m32 - m23) / s;
    this.y = (m13 - m31) / s;
    this.z = (m21 - m12) / s;
    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);
    return this;
  }
  min(v2) {
    this.x = Math.min(this.x, v2.x);
    this.y = Math.min(this.y, v2.y);
    this.z = Math.min(this.z, v2.z);
    this.w = Math.min(this.w, v2.w);
    return this;
  }
  max(v2) {
    this.x = Math.max(this.x, v2.x);
    this.y = Math.max(this.y, v2.y);
    this.z = Math.max(this.z, v2.z);
    this.w = Math.max(this.w, v2.w);
    return this;
  }
  clamp(min2, max2) {
    this.x = Math.max(min2.x, Math.min(max2.x, this.x));
    this.y = Math.max(min2.y, Math.min(max2.y, this.y));
    this.z = Math.max(min2.z, Math.min(max2.z, this.z));
    this.w = Math.max(min2.w, Math.min(max2.w, this.w));
    return this;
  }
  clampScalar(minVal, maxVal) {
    this.x = Math.max(minVal, Math.min(maxVal, this.x));
    this.y = Math.max(minVal, Math.min(maxVal, this.y));
    this.z = Math.max(minVal, Math.min(maxVal, this.z));
    this.w = Math.max(minVal, Math.min(maxVal, this.w));
    return this;
  }
  clampLength(min2, max2) {
    const length = this.length();
    return this.divideScalar(length || 1).multiplyScalar(Math.max(min2, Math.min(max2, length)));
  }
  floor() {
    this.x = Math.floor(this.x);
    this.y = Math.floor(this.y);
    this.z = Math.floor(this.z);
    this.w = Math.floor(this.w);
    return this;
  }
  ceil() {
    this.x = Math.ceil(this.x);
    this.y = Math.ceil(this.y);
    this.z = Math.ceil(this.z);
    this.w = Math.ceil(this.w);
    return this;
  }
  round() {
    this.x = Math.round(this.x);
    this.y = Math.round(this.y);
    this.z = Math.round(this.z);
    this.w = Math.round(this.w);
    return this;
  }
  roundToZero() {
    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);
    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);
    return this;
  }
  negate() {
    this.x = -this.x;
    this.y = -this.y;
    this.z = -this.z;
    this.w = -this.w;
    return this;
  }
  dot(v2) {
    return this.x * v2.x + this.y * v2.y + this.z * v2.z + this.w * v2.w;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(length) {
    return this.normalize().multiplyScalar(length);
  }
  lerp(v2, alpha) {
    this.x += (v2.x - this.x) * alpha;
    this.y += (v2.y - this.y) * alpha;
    this.z += (v2.z - this.z) * alpha;
    this.w += (v2.w - this.w) * alpha;
    return this;
  }
  lerpVectors(v1, v2, alpha) {
    this.x = v1.x + (v2.x - v1.x) * alpha;
    this.y = v1.y + (v2.y - v1.y) * alpha;
    this.z = v1.z + (v2.z - v1.z) * alpha;
    this.w = v1.w + (v2.w - v1.w) * alpha;
    return this;
  }
  equals(v2) {
    return v2.x === this.x && v2.y === this.y && v2.z === this.z && v2.w === this.w;
  }
  fromArray(array2, offset2 = 0) {
    this.x = array2[offset2];
    this.y = array2[offset2 + 1];
    this.z = array2[offset2 + 2];
    this.w = array2[offset2 + 3];
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    array2[offset2] = this.x;
    array2[offset2 + 1] = this.y;
    array2[offset2 + 2] = this.z;
    array2[offset2 + 3] = this.w;
    return array2;
  }
  fromBufferAttribute(attribute, index) {
    this.x = attribute.getX(index);
    this.y = attribute.getY(index);
    this.z = attribute.getZ(index);
    this.w = attribute.getW(index);
    return this;
  }
  random() {
    this.x = Math.random();
    this.y = Math.random();
    this.z = Math.random();
    this.w = Math.random();
    return this;
  }
  *[Symbol.iterator]() {
    yield this.x;
    yield this.y;
    yield this.z;
    yield this.w;
  }
}
class WebGLRenderTarget extends EventDispatcher {
  constructor(width = 1, height = 1, options = {}) {
    super();
    this.isWebGLRenderTarget = true;
    this.width = width;
    this.height = height;
    this.depth = 1;
    this.scissor = new Vector4(0, 0, width, height);
    this.scissorTest = false;
    this.viewport = new Vector4(0, 0, width, height);
    const image = { width, height, depth: 1 };
    this.texture = new Texture(image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);
    this.texture.isRenderTargetTexture = true;
    this.texture.flipY = false;
    this.texture.generateMipmaps = options.generateMipmaps !== void 0 ? options.generateMipmaps : false;
    this.texture.internalFormat = options.internalFormat !== void 0 ? options.internalFormat : null;
    this.texture.minFilter = options.minFilter !== void 0 ? options.minFilter : LinearFilter;
    this.depthBuffer = options.depthBuffer !== void 0 ? options.depthBuffer : true;
    this.stencilBuffer = options.stencilBuffer !== void 0 ? options.stencilBuffer : false;
    this.depthTexture = options.depthTexture !== void 0 ? options.depthTexture : null;
    this.samples = options.samples !== void 0 ? options.samples : 0;
  }
  setSize(width, height, depth = 1) {
    if (this.width !== width || this.height !== height || this.depth !== depth) {
      this.width = width;
      this.height = height;
      this.depth = depth;
      this.texture.image.width = width;
      this.texture.image.height = height;
      this.texture.image.depth = depth;
      this.dispose();
    }
    this.viewport.set(0, 0, width, height);
    this.scissor.set(0, 0, width, height);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(source) {
    this.width = source.width;
    this.height = source.height;
    this.depth = source.depth;
    this.viewport.copy(source.viewport);
    this.texture = source.texture.clone();
    this.texture.isRenderTargetTexture = true;
    const image = Object.assign({}, source.texture.image);
    this.texture.source = new Source(image);
    this.depthBuffer = source.depthBuffer;
    this.stencilBuffer = source.stencilBuffer;
    if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();
    this.samples = source.samples;
    return this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class DataArrayTexture extends Texture {
  constructor(data = null, width = 1, height = 1, depth = 1) {
    super(null);
    this.isDataArrayTexture = true;
    this.image = { data, width, height, depth };
    this.magFilter = NearestFilter;
    this.minFilter = NearestFilter;
    this.wrapR = ClampToEdgeWrapping;
    this.generateMipmaps = false;
    this.flipY = false;
    this.unpackAlignment = 1;
  }
}
class Data3DTexture extends Texture {
  constructor(data = null, width = 1, height = 1, depth = 1) {
    super(null);
    this.isData3DTexture = true;
    this.image = { data, width, height, depth };
    this.magFilter = NearestFilter;
    this.minFilter = NearestFilter;
    this.wrapR = ClampToEdgeWrapping;
    this.generateMipmaps = false;
    this.flipY = false;
    this.unpackAlignment = 1;
  }
}
class Box3 {
  constructor(min2 = new Vector3(Infinity, Infinity, Infinity), max2 = new Vector3(-Infinity, -Infinity, -Infinity)) {
    this.isBox3 = true;
    this.min = min2;
    this.max = max2;
  }
  set(min2, max2) {
    this.min.copy(min2);
    this.max.copy(max2);
    return this;
  }
  setFromArray(array2) {
    let minX = Infinity;
    let minY = Infinity;
    let minZ = Infinity;
    let maxX = -Infinity;
    let maxY = -Infinity;
    let maxZ = -Infinity;
    for (let i = 0, l2 = array2.length; i < l2; i += 3) {
      const x2 = array2[i];
      const y2 = array2[i + 1];
      const z2 = array2[i + 2];
      if (x2 < minX) minX = x2;
      if (y2 < minY) minY = y2;
      if (z2 < minZ) minZ = z2;
      if (x2 > maxX) maxX = x2;
      if (y2 > maxY) maxY = y2;
      if (z2 > maxZ) maxZ = z2;
    }
    this.min.set(minX, minY, minZ);
    this.max.set(maxX, maxY, maxZ);
    return this;
  }
  setFromBufferAttribute(attribute) {
    let minX = Infinity;
    let minY = Infinity;
    let minZ = Infinity;
    let maxX = -Infinity;
    let maxY = -Infinity;
    let maxZ = -Infinity;
    for (let i = 0, l2 = attribute.count; i < l2; i++) {
      const x2 = attribute.getX(i);
      const y2 = attribute.getY(i);
      const z2 = attribute.getZ(i);
      if (x2 < minX) minX = x2;
      if (y2 < minY) minY = y2;
      if (z2 < minZ) minZ = z2;
      if (x2 > maxX) maxX = x2;
      if (y2 > maxY) maxY = y2;
      if (z2 > maxZ) maxZ = z2;
    }
    this.min.set(minX, minY, minZ);
    this.max.set(maxX, maxY, maxZ);
    return this;
  }
  setFromPoints(points) {
    this.makeEmpty();
    for (let i = 0, il2 = points.length; i < il2; i++) {
      this.expandByPoint(points[i]);
    }
    return this;
  }
  setFromCenterAndSize(center, size) {
    const halfSize = _vector$b.copy(size).multiplyScalar(0.5);
    this.min.copy(center).sub(halfSize);
    this.max.copy(center).add(halfSize);
    return this;
  }
  setFromObject(object2, precise = false) {
    this.makeEmpty();
    return this.expandByObject(object2, precise);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(box) {
    this.min.copy(box.min);
    this.max.copy(box.max);
    return this;
  }
  makeEmpty() {
    this.min.x = this.min.y = this.min.z = Infinity;
    this.max.x = this.max.y = this.max.z = -Infinity;
    return this;
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }
  getCenter(target) {
    return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(target) {
    return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);
  }
  expandByPoint(point) {
    this.min.min(point);
    this.max.max(point);
    return this;
  }
  expandByVector(vector) {
    this.min.sub(vector);
    this.max.add(vector);
    return this;
  }
  expandByScalar(scalar) {
    this.min.addScalar(-scalar);
    this.max.addScalar(scalar);
    return this;
  }
  expandByObject(object2, precise = false) {
    object2.updateWorldMatrix(false, false);
    const geometry = object2.geometry;
    if (geometry !== void 0) {
      if (precise && geometry.attributes != void 0 && geometry.attributes.position !== void 0) {
        const position = geometry.attributes.position;
        for (let i = 0, l2 = position.count; i < l2; i++) {
          _vector$b.fromBufferAttribute(position, i).applyMatrix4(object2.matrixWorld);
          this.expandByPoint(_vector$b);
        }
      } else {
        if (geometry.boundingBox === null) {
          geometry.computeBoundingBox();
        }
        _box$3.copy(geometry.boundingBox);
        _box$3.applyMatrix4(object2.matrixWorld);
        this.union(_box$3);
      }
    }
    const children = object2.children;
    for (let i = 0, l2 = children.length; i < l2; i++) {
      this.expandByObject(children[i], precise);
    }
    return this;
  }
  containsPoint(point) {
    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;
  }
  containsBox(box) {
    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;
  }
  getParameter(point, target) {
    return target.set(
      (point.x - this.min.x) / (this.max.x - this.min.x),
      (point.y - this.min.y) / (this.max.y - this.min.y),
      (point.z - this.min.z) / (this.max.z - this.min.z)
    );
  }
  intersectsBox(box) {
    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;
  }
  intersectsSphere(sphere) {
    this.clampPoint(sphere.center, _vector$b);
    return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;
  }
  intersectsPlane(plane) {
    let min2, max2;
    if (plane.normal.x > 0) {
      min2 = plane.normal.x * this.min.x;
      max2 = plane.normal.x * this.max.x;
    } else {
      min2 = plane.normal.x * this.max.x;
      max2 = plane.normal.x * this.min.x;
    }
    if (plane.normal.y > 0) {
      min2 += plane.normal.y * this.min.y;
      max2 += plane.normal.y * this.max.y;
    } else {
      min2 += plane.normal.y * this.max.y;
      max2 += plane.normal.y * this.min.y;
    }
    if (plane.normal.z > 0) {
      min2 += plane.normal.z * this.min.z;
      max2 += plane.normal.z * this.max.z;
    } else {
      min2 += plane.normal.z * this.max.z;
      max2 += plane.normal.z * this.min.z;
    }
    return min2 <= -plane.constant && max2 >= -plane.constant;
  }
  intersectsTriangle(triangle) {
    if (this.isEmpty()) {
      return false;
    }
    this.getCenter(_center);
    _extents.subVectors(this.max, _center);
    _v0$2.subVectors(triangle.a, _center);
    _v1$7.subVectors(triangle.b, _center);
    _v2$4.subVectors(triangle.c, _center);
    _f0.subVectors(_v1$7, _v0$2);
    _f1.subVectors(_v2$4, _v1$7);
    _f2.subVectors(_v0$2, _v2$4);
    let axes = [
      0,
      -_f0.z,
      _f0.y,
      0,
      -_f1.z,
      _f1.y,
      0,
      -_f2.z,
      _f2.y,
      _f0.z,
      0,
      -_f0.x,
      _f1.z,
      0,
      -_f1.x,
      _f2.z,
      0,
      -_f2.x,
      -_f0.y,
      _f0.x,
      0,
      -_f1.y,
      _f1.x,
      0,
      -_f2.y,
      _f2.x,
      0
    ];
    if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {
      return false;
    }
    axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];
    if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {
      return false;
    }
    _triangleNormal.crossVectors(_f0, _f1);
    axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];
    return satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents);
  }
  clampPoint(point, target) {
    return target.copy(point).clamp(this.min, this.max);
  }
  distanceToPoint(point) {
    return this.clampPoint(point, _vector$b).distanceTo(point);
  }
  getBoundingSphere(target) {
    if (this.isEmpty()) {
      target.makeEmpty();
    } else {
      this.getCenter(target.center);
      target.radius = this.getSize(_vector$b).length() * 0.5;
    }
    return target;
  }
  intersect(box) {
    this.min.max(box.min);
    this.max.min(box.max);
    if (this.isEmpty()) this.makeEmpty();
    return this;
  }
  union(box) {
    this.min.min(box.min);
    this.max.max(box.max);
    return this;
  }
  applyMatrix4(matrix) {
    if (this.isEmpty()) return this;
    _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix);
    _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix);
    _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix);
    _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix);
    _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix);
    _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix);
    _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix);
    _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix);
    this.setFromPoints(_points);
    return this;
  }
  translate(offset2) {
    this.min.add(offset2);
    this.max.add(offset2);
    return this;
  }
  equals(box) {
    return box.min.equals(this.min) && box.max.equals(this.max);
  }
}
const _points = [
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3(),
  /* @__PURE__ */ new Vector3()
];
const _vector$b = /* @__PURE__ */ new Vector3();
const _box$3 = /* @__PURE__ */ new Box3();
const _v0$2 = /* @__PURE__ */ new Vector3();
const _v1$7 = /* @__PURE__ */ new Vector3();
const _v2$4 = /* @__PURE__ */ new Vector3();
const _f0 = /* @__PURE__ */ new Vector3();
const _f1 = /* @__PURE__ */ new Vector3();
const _f2 = /* @__PURE__ */ new Vector3();
const _center = /* @__PURE__ */ new Vector3();
const _extents = /* @__PURE__ */ new Vector3();
const _triangleNormal = /* @__PURE__ */ new Vector3();
const _testAxis = /* @__PURE__ */ new Vector3();
function satForAxes(axes, v02, v1, v2, extents) {
  for (let i = 0, j2 = axes.length - 3; i <= j2; i += 3) {
    _testAxis.fromArray(axes, i);
    const r2 = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z);
    const p02 = v02.dot(_testAxis);
    const p1 = v1.dot(_testAxis);
    const p2 = v2.dot(_testAxis);
    if (Math.max(-Math.max(p02, p1, p2), Math.min(p02, p1, p2)) > r2) {
      return false;
    }
  }
  return true;
}
const _box$2 = /* @__PURE__ */ new Box3();
const _v1$6 = /* @__PURE__ */ new Vector3();
const _v2$3 = /* @__PURE__ */ new Vector3();
class Sphere {
  constructor(center = new Vector3(), radius = -1) {
    this.center = center;
    this.radius = radius;
  }
  set(center, radius) {
    this.center.copy(center);
    this.radius = radius;
    return this;
  }
  setFromPoints(points, optionalCenter) {
    const center = this.center;
    if (optionalCenter !== void 0) {
      center.copy(optionalCenter);
    } else {
      _box$2.setFromPoints(points).getCenter(center);
    }
    let maxRadiusSq = 0;
    for (let i = 0, il2 = points.length; i < il2; i++) {
      maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));
    }
    this.radius = Math.sqrt(maxRadiusSq);
    return this;
  }
  copy(sphere) {
    this.center.copy(sphere.center);
    this.radius = sphere.radius;
    return this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    this.center.set(0, 0, 0);
    this.radius = -1;
    return this;
  }
  containsPoint(point) {
    return point.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(point) {
    return point.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(sphere) {
    const radiusSum = this.radius + sphere.radius;
    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;
  }
  intersectsBox(box) {
    return box.intersectsSphere(this);
  }
  intersectsPlane(plane) {
    return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(point, target) {
    const deltaLengthSq = this.center.distanceToSquared(point);
    target.copy(point);
    if (deltaLengthSq > this.radius * this.radius) {
      target.sub(this.center).normalize();
      target.multiplyScalar(this.radius).add(this.center);
    }
    return target;
  }
  getBoundingBox(target) {
    if (this.isEmpty()) {
      target.makeEmpty();
      return target;
    }
    target.set(this.center, this.center);
    target.expandByScalar(this.radius);
    return target;
  }
  applyMatrix4(matrix) {
    this.center.applyMatrix4(matrix);
    this.radius = this.radius * matrix.getMaxScaleOnAxis();
    return this;
  }
  translate(offset2) {
    this.center.add(offset2);
    return this;
  }
  expandByPoint(point) {
    if (this.isEmpty()) {
      this.center.copy(point);
      this.radius = 0;
      return this;
    }
    _v1$6.subVectors(point, this.center);
    const lengthSq = _v1$6.lengthSq();
    if (lengthSq > this.radius * this.radius) {
      const length = Math.sqrt(lengthSq);
      const delta = (length - this.radius) * 0.5;
      this.center.addScaledVector(_v1$6, delta / length);
      this.radius += delta;
    }
    return this;
  }
  union(sphere) {
    if (sphere.isEmpty()) {
      return this;
    }
    if (this.isEmpty()) {
      this.copy(sphere);
      return this;
    }
    if (this.center.equals(sphere.center) === true) {
      this.radius = Math.max(this.radius, sphere.radius);
    } else {
      _v2$3.subVectors(sphere.center, this.center).setLength(sphere.radius);
      this.expandByPoint(_v1$6.copy(sphere.center).add(_v2$3));
      this.expandByPoint(_v1$6.copy(sphere.center).sub(_v2$3));
    }
    return this;
  }
  equals(sphere) {
    return sphere.center.equals(this.center) && sphere.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const _vector$a = /* @__PURE__ */ new Vector3();
const _segCenter = /* @__PURE__ */ new Vector3();
const _segDir = /* @__PURE__ */ new Vector3();
const _diff = /* @__PURE__ */ new Vector3();
const _edge1 = /* @__PURE__ */ new Vector3();
const _edge2 = /* @__PURE__ */ new Vector3();
const _normal$1 = /* @__PURE__ */ new Vector3();
class Ray {
  constructor(origin2 = new Vector3(), direction = new Vector3(0, 0, -1)) {
    this.origin = origin2;
    this.direction = direction;
  }
  set(origin2, direction) {
    this.origin.copy(origin2);
    this.direction.copy(direction);
    return this;
  }
  copy(ray) {
    this.origin.copy(ray.origin);
    this.direction.copy(ray.direction);
    return this;
  }
  at(t2, target) {
    return target.copy(this.origin).addScaledVector(this.direction, t2);
  }
  lookAt(v2) {
    this.direction.copy(v2).sub(this.origin).normalize();
    return this;
  }
  recast(t2) {
    this.origin.copy(this.at(t2, _vector$a));
    return this;
  }
  closestPointToPoint(point, target) {
    target.subVectors(point, this.origin);
    const directionDistance = target.dot(this.direction);
    if (directionDistance < 0) {
      return target.copy(this.origin);
    }
    return target.copy(this.origin).addScaledVector(this.direction, directionDistance);
  }
  distanceToPoint(point) {
    return Math.sqrt(this.distanceSqToPoint(point));
  }
  distanceSqToPoint(point) {
    const directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction);
    if (directionDistance < 0) {
      return this.origin.distanceToSquared(point);
    }
    _vector$a.copy(this.origin).addScaledVector(this.direction, directionDistance);
    return _vector$a.distanceToSquared(point);
  }
  distanceSqToSegment(v02, v1, optionalPointOnRay, optionalPointOnSegment) {
    _segCenter.copy(v02).add(v1).multiplyScalar(0.5);
    _segDir.copy(v1).sub(v02).normalize();
    _diff.copy(this.origin).sub(_segCenter);
    const segExtent = v02.distanceTo(v1) * 0.5;
    const a01 = -this.direction.dot(_segDir);
    const b02 = _diff.dot(this.direction);
    const b1 = -_diff.dot(_segDir);
    const c2 = _diff.lengthSq();
    const det = Math.abs(1 - a01 * a01);
    let s0, s1, sqrDist, extDet;
    if (det > 0) {
      s0 = a01 * b1 - b02;
      s1 = a01 * b02 - b1;
      extDet = segExtent * det;
      if (s0 >= 0) {
        if (s1 >= -extDet) {
          if (s1 <= extDet) {
            const invDet = 1 / det;
            s0 *= invDet;
            s1 *= invDet;
            sqrDist = s0 * (s0 + a01 * s1 + 2 * b02) + s1 * (a01 * s0 + s1 + 2 * b1) + c2;
          } else {
            s1 = segExtent;
            s0 = Math.max(0, -(a01 * s1 + b02));
            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c2;
          }
        } else {
          s1 = -segExtent;
          s0 = Math.max(0, -(a01 * s1 + b02));
          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c2;
        }
      } else {
        if (s1 <= -extDet) {
          s0 = Math.max(0, -(-a01 * segExtent + b02));
          s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);
          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c2;
        } else if (s1 <= extDet) {
          s0 = 0;
          s1 = Math.min(Math.max(-segExtent, -b1), segExtent);
          sqrDist = s1 * (s1 + 2 * b1) + c2;
        } else {
          s0 = Math.max(0, -(a01 * segExtent + b02));
          s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);
          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c2;
        }
      }
    } else {
      s1 = a01 > 0 ? -segExtent : segExtent;
      s0 = Math.max(0, -(a01 * s1 + b02));
      sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c2;
    }
    if (optionalPointOnRay) {
      optionalPointOnRay.copy(this.origin).addScaledVector(this.direction, s0);
    }
    if (optionalPointOnSegment) {
      optionalPointOnSegment.copy(_segCenter).addScaledVector(_segDir, s1);
    }
    return sqrDist;
  }
  intersectSphere(sphere, target) {
    _vector$a.subVectors(sphere.center, this.origin);
    const tca = _vector$a.dot(this.direction);
    const d2 = _vector$a.dot(_vector$a) - tca * tca;
    const radius2 = sphere.radius * sphere.radius;
    if (d2 > radius2) return null;
    const thc = Math.sqrt(radius2 - d2);
    const t02 = tca - thc;
    const t1 = tca + thc;
    if (t1 < 0) return null;
    if (t02 < 0) return this.at(t1, target);
    return this.at(t02, target);
  }
  intersectsSphere(sphere) {
    return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;
  }
  distanceToPlane(plane) {
    const denominator = plane.normal.dot(this.direction);
    if (denominator === 0) {
      if (plane.distanceToPoint(this.origin) === 0) {
        return 0;
      }
      return null;
    }
    const t2 = -(this.origin.dot(plane.normal) + plane.constant) / denominator;
    return t2 >= 0 ? t2 : null;
  }
  intersectPlane(plane, target) {
    const t2 = this.distanceToPlane(plane);
    if (t2 === null) {
      return null;
    }
    return this.at(t2, target);
  }
  intersectsPlane(plane) {
    const distToPoint = plane.distanceToPoint(this.origin);
    if (distToPoint === 0) {
      return true;
    }
    const denominator = plane.normal.dot(this.direction);
    if (denominator * distToPoint < 0) {
      return true;
    }
    return false;
  }
  intersectBox(box, target) {
    let tmin, tmax, tymin, tymax, tzmin, tzmax;
    const invdirx = 1 / this.direction.x, invdiry = 1 / this.direction.y, invdirz = 1 / this.direction.z;
    const origin2 = this.origin;
    if (invdirx >= 0) {
      tmin = (box.min.x - origin2.x) * invdirx;
      tmax = (box.max.x - origin2.x) * invdirx;
    } else {
      tmin = (box.max.x - origin2.x) * invdirx;
      tmax = (box.min.x - origin2.x) * invdirx;
    }
    if (invdiry >= 0) {
      tymin = (box.min.y - origin2.y) * invdiry;
      tymax = (box.max.y - origin2.y) * invdiry;
    } else {
      tymin = (box.max.y - origin2.y) * invdiry;
      tymax = (box.min.y - origin2.y) * invdiry;
    }
    if (tmin > tymax || tymin > tmax) return null;
    if (tymin > tmin || isNaN(tmin)) tmin = tymin;
    if (tymax < tmax || isNaN(tmax)) tmax = tymax;
    if (invdirz >= 0) {
      tzmin = (box.min.z - origin2.z) * invdirz;
      tzmax = (box.max.z - origin2.z) * invdirz;
    } else {
      tzmin = (box.max.z - origin2.z) * invdirz;
      tzmax = (box.min.z - origin2.z) * invdirz;
    }
    if (tmin > tzmax || tzmin > tmax) return null;
    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;
    if (tzmax < tmax || tmax !== tmax) tmax = tzmax;
    if (tmax < 0) return null;
    return this.at(tmin >= 0 ? tmin : tmax, target);
  }
  intersectsBox(box) {
    return this.intersectBox(box, _vector$a) !== null;
  }
  intersectTriangle(a, b2, c2, backfaceCulling, target) {
    _edge1.subVectors(b2, a);
    _edge2.subVectors(c2, a);
    _normal$1.crossVectors(_edge1, _edge2);
    let DdN = this.direction.dot(_normal$1);
    let sign2;
    if (DdN > 0) {
      if (backfaceCulling) return null;
      sign2 = 1;
    } else if (DdN < 0) {
      sign2 = -1;
      DdN = -DdN;
    } else {
      return null;
    }
    _diff.subVectors(this.origin, a);
    const DdQxE2 = sign2 * this.direction.dot(_edge2.crossVectors(_diff, _edge2));
    if (DdQxE2 < 0) {
      return null;
    }
    const DdE1xQ = sign2 * this.direction.dot(_edge1.cross(_diff));
    if (DdE1xQ < 0) {
      return null;
    }
    if (DdQxE2 + DdE1xQ > DdN) {
      return null;
    }
    const QdN = -sign2 * _diff.dot(_normal$1);
    if (QdN < 0) {
      return null;
    }
    return this.at(QdN / DdN, target);
  }
  applyMatrix4(matrix4) {
    this.origin.applyMatrix4(matrix4);
    this.direction.transformDirection(matrix4);
    return this;
  }
  equals(ray) {
    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class Matrix4 {
  constructor() {
    Matrix4.prototype.isMatrix4 = true;
    this.elements = [
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1
    ];
  }
  set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    const te2 = this.elements;
    te2[0] = n11;
    te2[4] = n12;
    te2[8] = n13;
    te2[12] = n14;
    te2[1] = n21;
    te2[5] = n22;
    te2[9] = n23;
    te2[13] = n24;
    te2[2] = n31;
    te2[6] = n32;
    te2[10] = n33;
    te2[14] = n34;
    te2[3] = n41;
    te2[7] = n42;
    te2[11] = n43;
    te2[15] = n44;
    return this;
  }
  identity() {
    this.set(
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  clone() {
    return new Matrix4().fromArray(this.elements);
  }
  copy(m2) {
    const te2 = this.elements;
    const me2 = m2.elements;
    te2[0] = me2[0];
    te2[1] = me2[1];
    te2[2] = me2[2];
    te2[3] = me2[3];
    te2[4] = me2[4];
    te2[5] = me2[5];
    te2[6] = me2[6];
    te2[7] = me2[7];
    te2[8] = me2[8];
    te2[9] = me2[9];
    te2[10] = me2[10];
    te2[11] = me2[11];
    te2[12] = me2[12];
    te2[13] = me2[13];
    te2[14] = me2[14];
    te2[15] = me2[15];
    return this;
  }
  copyPosition(m2) {
    const te2 = this.elements, me2 = m2.elements;
    te2[12] = me2[12];
    te2[13] = me2[13];
    te2[14] = me2[14];
    return this;
  }
  setFromMatrix3(m2) {
    const me2 = m2.elements;
    this.set(
      me2[0],
      me2[3],
      me2[6],
      0,
      me2[1],
      me2[4],
      me2[7],
      0,
      me2[2],
      me2[5],
      me2[8],
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  extractBasis(xAxis, yAxis, zAxis) {
    xAxis.setFromMatrixColumn(this, 0);
    yAxis.setFromMatrixColumn(this, 1);
    zAxis.setFromMatrixColumn(this, 2);
    return this;
  }
  makeBasis(xAxis, yAxis, zAxis) {
    this.set(
      xAxis.x,
      yAxis.x,
      zAxis.x,
      0,
      xAxis.y,
      yAxis.y,
      zAxis.y,
      0,
      xAxis.z,
      yAxis.z,
      zAxis.z,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  extractRotation(m2) {
    const te2 = this.elements;
    const me2 = m2.elements;
    const scaleX = 1 / _v1$5.setFromMatrixColumn(m2, 0).length();
    const scaleY = 1 / _v1$5.setFromMatrixColumn(m2, 1).length();
    const scaleZ = 1 / _v1$5.setFromMatrixColumn(m2, 2).length();
    te2[0] = me2[0] * scaleX;
    te2[1] = me2[1] * scaleX;
    te2[2] = me2[2] * scaleX;
    te2[3] = 0;
    te2[4] = me2[4] * scaleY;
    te2[5] = me2[5] * scaleY;
    te2[6] = me2[6] * scaleY;
    te2[7] = 0;
    te2[8] = me2[8] * scaleZ;
    te2[9] = me2[9] * scaleZ;
    te2[10] = me2[10] * scaleZ;
    te2[11] = 0;
    te2[12] = 0;
    te2[13] = 0;
    te2[14] = 0;
    te2[15] = 1;
    return this;
  }
  makeRotationFromEuler(euler) {
    const te2 = this.elements;
    const x2 = euler.x, y2 = euler.y, z2 = euler.z;
    const a = Math.cos(x2), b2 = Math.sin(x2);
    const c2 = Math.cos(y2), d = Math.sin(y2);
    const e = Math.cos(z2), f2 = Math.sin(z2);
    if (euler.order === "XYZ") {
      const ae2 = a * e, af2 = a * f2, be2 = b2 * e, bf2 = b2 * f2;
      te2[0] = c2 * e;
      te2[4] = -c2 * f2;
      te2[8] = d;
      te2[1] = af2 + be2 * d;
      te2[5] = ae2 - bf2 * d;
      te2[9] = -b2 * c2;
      te2[2] = bf2 - ae2 * d;
      te2[6] = be2 + af2 * d;
      te2[10] = a * c2;
    } else if (euler.order === "YXZ") {
      const ce2 = c2 * e, cf2 = c2 * f2, de2 = d * e, df2 = d * f2;
      te2[0] = ce2 + df2 * b2;
      te2[4] = de2 * b2 - cf2;
      te2[8] = a * d;
      te2[1] = a * f2;
      te2[5] = a * e;
      te2[9] = -b2;
      te2[2] = cf2 * b2 - de2;
      te2[6] = df2 + ce2 * b2;
      te2[10] = a * c2;
    } else if (euler.order === "ZXY") {
      const ce2 = c2 * e, cf2 = c2 * f2, de2 = d * e, df2 = d * f2;
      te2[0] = ce2 - df2 * b2;
      te2[4] = -a * f2;
      te2[8] = de2 + cf2 * b2;
      te2[1] = cf2 + de2 * b2;
      te2[5] = a * e;
      te2[9] = df2 - ce2 * b2;
      te2[2] = -a * d;
      te2[6] = b2;
      te2[10] = a * c2;
    } else if (euler.order === "ZYX") {
      const ae2 = a * e, af2 = a * f2, be2 = b2 * e, bf2 = b2 * f2;
      te2[0] = c2 * e;
      te2[4] = be2 * d - af2;
      te2[8] = ae2 * d + bf2;
      te2[1] = c2 * f2;
      te2[5] = bf2 * d + ae2;
      te2[9] = af2 * d - be2;
      te2[2] = -d;
      te2[6] = b2 * c2;
      te2[10] = a * c2;
    } else if (euler.order === "YZX") {
      const ac2 = a * c2, ad2 = a * d, bc2 = b2 * c2, bd2 = b2 * d;
      te2[0] = c2 * e;
      te2[4] = bd2 - ac2 * f2;
      te2[8] = bc2 * f2 + ad2;
      te2[1] = f2;
      te2[5] = a * e;
      te2[9] = -b2 * e;
      te2[2] = -d * e;
      te2[6] = ad2 * f2 + bc2;
      te2[10] = ac2 - bd2 * f2;
    } else if (euler.order === "XZY") {
      const ac2 = a * c2, ad2 = a * d, bc2 = b2 * c2, bd2 = b2 * d;
      te2[0] = c2 * e;
      te2[4] = -f2;
      te2[8] = d * e;
      te2[1] = ac2 * f2 + bd2;
      te2[5] = a * e;
      te2[9] = ad2 * f2 - bc2;
      te2[2] = bc2 * f2 - ad2;
      te2[6] = b2 * e;
      te2[10] = bd2 * f2 + ac2;
    }
    te2[3] = 0;
    te2[7] = 0;
    te2[11] = 0;
    te2[12] = 0;
    te2[13] = 0;
    te2[14] = 0;
    te2[15] = 1;
    return this;
  }
  makeRotationFromQuaternion(q2) {
    return this.compose(_zero, q2, _one);
  }
  lookAt(eye, target, up) {
    const te2 = this.elements;
    _z.subVectors(eye, target);
    if (_z.lengthSq() === 0) {
      _z.z = 1;
    }
    _z.normalize();
    _x.crossVectors(up, _z);
    if (_x.lengthSq() === 0) {
      if (Math.abs(up.z) === 1) {
        _z.x += 1e-4;
      } else {
        _z.z += 1e-4;
      }
      _z.normalize();
      _x.crossVectors(up, _z);
    }
    _x.normalize();
    _y.crossVectors(_z, _x);
    te2[0] = _x.x;
    te2[4] = _y.x;
    te2[8] = _z.x;
    te2[1] = _x.y;
    te2[5] = _y.y;
    te2[9] = _z.y;
    te2[2] = _x.z;
    te2[6] = _y.z;
    te2[10] = _z.z;
    return this;
  }
  multiply(m2) {
    return this.multiplyMatrices(this, m2);
  }
  premultiply(m2) {
    return this.multiplyMatrices(m2, this);
  }
  multiplyMatrices(a, b2) {
    const ae2 = a.elements;
    const be2 = b2.elements;
    const te2 = this.elements;
    const a11 = ae2[0], a12 = ae2[4], a13 = ae2[8], a14 = ae2[12];
    const a21 = ae2[1], a22 = ae2[5], a23 = ae2[9], a24 = ae2[13];
    const a31 = ae2[2], a32 = ae2[6], a33 = ae2[10], a34 = ae2[14];
    const a41 = ae2[3], a42 = ae2[7], a43 = ae2[11], a44 = ae2[15];
    const b11 = be2[0], b12 = be2[4], b13 = be2[8], b14 = be2[12];
    const b21 = be2[1], b22 = be2[5], b23 = be2[9], b24 = be2[13];
    const b31 = be2[2], b32 = be2[6], b33 = be2[10], b34 = be2[14];
    const b41 = be2[3], b42 = be2[7], b43 = be2[11], b44 = be2[15];
    te2[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
    te2[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
    te2[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
    te2[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
    te2[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
    te2[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
    te2[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
    te2[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
    te2[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
    te2[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
    te2[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
    te2[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
    te2[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
    te2[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
    te2[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
    te2[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
    return this;
  }
  multiplyScalar(s) {
    const te2 = this.elements;
    te2[0] *= s;
    te2[4] *= s;
    te2[8] *= s;
    te2[12] *= s;
    te2[1] *= s;
    te2[5] *= s;
    te2[9] *= s;
    te2[13] *= s;
    te2[2] *= s;
    te2[6] *= s;
    te2[10] *= s;
    te2[14] *= s;
    te2[3] *= s;
    te2[7] *= s;
    te2[11] *= s;
    te2[15] *= s;
    return this;
  }
  determinant() {
    const te2 = this.elements;
    const n11 = te2[0], n12 = te2[4], n13 = te2[8], n14 = te2[12];
    const n21 = te2[1], n22 = te2[5], n23 = te2[9], n24 = te2[13];
    const n31 = te2[2], n32 = te2[6], n33 = te2[10], n34 = te2[14];
    const n41 = te2[3], n42 = te2[7], n43 = te2[11], n44 = te2[15];
    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);
  }
  transpose() {
    const te2 = this.elements;
    let tmp;
    tmp = te2[1];
    te2[1] = te2[4];
    te2[4] = tmp;
    tmp = te2[2];
    te2[2] = te2[8];
    te2[8] = tmp;
    tmp = te2[6];
    te2[6] = te2[9];
    te2[9] = tmp;
    tmp = te2[3];
    te2[3] = te2[12];
    te2[12] = tmp;
    tmp = te2[7];
    te2[7] = te2[13];
    te2[13] = tmp;
    tmp = te2[11];
    te2[11] = te2[14];
    te2[14] = tmp;
    return this;
  }
  setPosition(x2, y2, z2) {
    const te2 = this.elements;
    if (x2.isVector3) {
      te2[12] = x2.x;
      te2[13] = x2.y;
      te2[14] = x2.z;
    } else {
      te2[12] = x2;
      te2[13] = y2;
      te2[14] = z2;
    }
    return this;
  }
  invert() {
    const te2 = this.elements, n11 = te2[0], n21 = te2[1], n31 = te2[2], n41 = te2[3], n12 = te2[4], n22 = te2[5], n32 = te2[6], n42 = te2[7], n13 = te2[8], n23 = te2[9], n33 = te2[10], n43 = te2[11], n14 = te2[12], n24 = te2[13], n34 = te2[14], n44 = te2[15], t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44, t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44, t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44, t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;
    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const detInv = 1 / det;
    te2[0] = t11 * detInv;
    te2[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;
    te2[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;
    te2[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;
    te2[4] = t12 * detInv;
    te2[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;
    te2[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;
    te2[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;
    te2[8] = t13 * detInv;
    te2[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;
    te2[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;
    te2[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;
    te2[12] = t14 * detInv;
    te2[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;
    te2[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;
    te2[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;
    return this;
  }
  scale(v2) {
    const te2 = this.elements;
    const x2 = v2.x, y2 = v2.y, z2 = v2.z;
    te2[0] *= x2;
    te2[4] *= y2;
    te2[8] *= z2;
    te2[1] *= x2;
    te2[5] *= y2;
    te2[9] *= z2;
    te2[2] *= x2;
    te2[6] *= y2;
    te2[10] *= z2;
    te2[3] *= x2;
    te2[7] *= y2;
    te2[11] *= z2;
    return this;
  }
  getMaxScaleOnAxis() {
    const te2 = this.elements;
    const scaleXSq = te2[0] * te2[0] + te2[1] * te2[1] + te2[2] * te2[2];
    const scaleYSq = te2[4] * te2[4] + te2[5] * te2[5] + te2[6] * te2[6];
    const scaleZSq = te2[8] * te2[8] + te2[9] * te2[9] + te2[10] * te2[10];
    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));
  }
  makeTranslation(x2, y2, z2) {
    this.set(
      1,
      0,
      0,
      x2,
      0,
      1,
      0,
      y2,
      0,
      0,
      1,
      z2,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeRotationX(theta) {
    const c2 = Math.cos(theta), s = Math.sin(theta);
    this.set(
      1,
      0,
      0,
      0,
      0,
      c2,
      -s,
      0,
      0,
      s,
      c2,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeRotationY(theta) {
    const c2 = Math.cos(theta), s = Math.sin(theta);
    this.set(
      c2,
      0,
      s,
      0,
      0,
      1,
      0,
      0,
      -s,
      0,
      c2,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeRotationZ(theta) {
    const c2 = Math.cos(theta), s = Math.sin(theta);
    this.set(
      c2,
      -s,
      0,
      0,
      s,
      c2,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeRotationAxis(axis, angle) {
    const c2 = Math.cos(angle);
    const s = Math.sin(angle);
    const t2 = 1 - c2;
    const x2 = axis.x, y2 = axis.y, z2 = axis.z;
    const tx = t2 * x2, ty = t2 * y2;
    this.set(
      tx * x2 + c2,
      tx * y2 - s * z2,
      tx * z2 + s * y2,
      0,
      tx * y2 + s * z2,
      ty * y2 + c2,
      ty * z2 - s * x2,
      0,
      tx * z2 - s * y2,
      ty * z2 + s * x2,
      t2 * z2 * z2 + c2,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeScale(x2, y2, z2) {
    this.set(
      x2,
      0,
      0,
      0,
      0,
      y2,
      0,
      0,
      0,
      0,
      z2,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  makeShear(xy, xz, yx, yz, zx, zy) {
    this.set(
      1,
      yx,
      zx,
      0,
      xy,
      1,
      zy,
      0,
      xz,
      yz,
      1,
      0,
      0,
      0,
      0,
      1
    );
    return this;
  }
  compose(position, quaternion, scale) {
    const te2 = this.elements;
    const x2 = quaternion._x, y2 = quaternion._y, z2 = quaternion._z, w2 = quaternion._w;
    const x22 = x2 + x2, y22 = y2 + y2, z22 = z2 + z2;
    const xx = x2 * x22, xy = x2 * y22, xz = x2 * z22;
    const yy = y2 * y22, yz = y2 * z22, zz = z2 * z22;
    const wx = w2 * x22, wy = w2 * y22, wz = w2 * z22;
    const sx = scale.x, sy = scale.y, sz = scale.z;
    te2[0] = (1 - (yy + zz)) * sx;
    te2[1] = (xy + wz) * sx;
    te2[2] = (xz - wy) * sx;
    te2[3] = 0;
    te2[4] = (xy - wz) * sy;
    te2[5] = (1 - (xx + zz)) * sy;
    te2[6] = (yz + wx) * sy;
    te2[7] = 0;
    te2[8] = (xz + wy) * sz;
    te2[9] = (yz - wx) * sz;
    te2[10] = (1 - (xx + yy)) * sz;
    te2[11] = 0;
    te2[12] = position.x;
    te2[13] = position.y;
    te2[14] = position.z;
    te2[15] = 1;
    return this;
  }
  decompose(position, quaternion, scale) {
    const te2 = this.elements;
    let sx = _v1$5.set(te2[0], te2[1], te2[2]).length();
    const sy = _v1$5.set(te2[4], te2[5], te2[6]).length();
    const sz = _v1$5.set(te2[8], te2[9], te2[10]).length();
    const det = this.determinant();
    if (det < 0) sx = -sx;
    position.x = te2[12];
    position.y = te2[13];
    position.z = te2[14];
    _m1$2.copy(this);
    const invSX = 1 / sx;
    const invSY = 1 / sy;
    const invSZ = 1 / sz;
    _m1$2.elements[0] *= invSX;
    _m1$2.elements[1] *= invSX;
    _m1$2.elements[2] *= invSX;
    _m1$2.elements[4] *= invSY;
    _m1$2.elements[5] *= invSY;
    _m1$2.elements[6] *= invSY;
    _m1$2.elements[8] *= invSZ;
    _m1$2.elements[9] *= invSZ;
    _m1$2.elements[10] *= invSZ;
    quaternion.setFromRotationMatrix(_m1$2);
    scale.x = sx;
    scale.y = sy;
    scale.z = sz;
    return this;
  }
  makePerspective(left, right, top, bottom, near, far) {
    const te2 = this.elements;
    const x2 = 2 * near / (right - left);
    const y2 = 2 * near / (top - bottom);
    const a = (right + left) / (right - left);
    const b2 = (top + bottom) / (top - bottom);
    const c2 = -(far + near) / (far - near);
    const d = -2 * far * near / (far - near);
    te2[0] = x2;
    te2[4] = 0;
    te2[8] = a;
    te2[12] = 0;
    te2[1] = 0;
    te2[5] = y2;
    te2[9] = b2;
    te2[13] = 0;
    te2[2] = 0;
    te2[6] = 0;
    te2[10] = c2;
    te2[14] = d;
    te2[3] = 0;
    te2[7] = 0;
    te2[11] = -1;
    te2[15] = 0;
    return this;
  }
  makeOrthographic(left, right, top, bottom, near, far) {
    const te2 = this.elements;
    const w2 = 1 / (right - left);
    const h2 = 1 / (top - bottom);
    const p2 = 1 / (far - near);
    const x2 = (right + left) * w2;
    const y2 = (top + bottom) * h2;
    const z2 = (far + near) * p2;
    te2[0] = 2 * w2;
    te2[4] = 0;
    te2[8] = 0;
    te2[12] = -x2;
    te2[1] = 0;
    te2[5] = 2 * h2;
    te2[9] = 0;
    te2[13] = -y2;
    te2[2] = 0;
    te2[6] = 0;
    te2[10] = -2 * p2;
    te2[14] = -z2;
    te2[3] = 0;
    te2[7] = 0;
    te2[11] = 0;
    te2[15] = 1;
    return this;
  }
  equals(matrix) {
    const te2 = this.elements;
    const me2 = matrix.elements;
    for (let i = 0; i < 16; i++) {
      if (te2[i] !== me2[i]) return false;
    }
    return true;
  }
  fromArray(array2, offset2 = 0) {
    for (let i = 0; i < 16; i++) {
      this.elements[i] = array2[i + offset2];
    }
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    const te2 = this.elements;
    array2[offset2] = te2[0];
    array2[offset2 + 1] = te2[1];
    array2[offset2 + 2] = te2[2];
    array2[offset2 + 3] = te2[3];
    array2[offset2 + 4] = te2[4];
    array2[offset2 + 5] = te2[5];
    array2[offset2 + 6] = te2[6];
    array2[offset2 + 7] = te2[7];
    array2[offset2 + 8] = te2[8];
    array2[offset2 + 9] = te2[9];
    array2[offset2 + 10] = te2[10];
    array2[offset2 + 11] = te2[11];
    array2[offset2 + 12] = te2[12];
    array2[offset2 + 13] = te2[13];
    array2[offset2 + 14] = te2[14];
    array2[offset2 + 15] = te2[15];
    return array2;
  }
}
const _v1$5 = /* @__PURE__ */ new Vector3();
const _m1$2 = /* @__PURE__ */ new Matrix4();
const _zero = /* @__PURE__ */ new Vector3(0, 0, 0);
const _one = /* @__PURE__ */ new Vector3(1, 1, 1);
const _x = /* @__PURE__ */ new Vector3();
const _y = /* @__PURE__ */ new Vector3();
const _z = /* @__PURE__ */ new Vector3();
const _matrix$1 = /* @__PURE__ */ new Matrix4();
const _quaternion$3 = /* @__PURE__ */ new Quaternion();
class Euler {
  constructor(x2 = 0, y2 = 0, z2 = 0, order = Euler.DEFAULT_ORDER) {
    this.isEuler = true;
    this._x = x2;
    this._y = y2;
    this._z = z2;
    this._order = order;
  }
  get x() {
    return this._x;
  }
  set x(value) {
    this._x = value;
    this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(value) {
    this._y = value;
    this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(value) {
    this._z = value;
    this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(value) {
    this._order = value;
    this._onChangeCallback();
  }
  set(x2, y2, z2, order = this._order) {
    this._x = x2;
    this._y = y2;
    this._z = z2;
    this._order = order;
    this._onChangeCallback();
    return this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(euler) {
    this._x = euler._x;
    this._y = euler._y;
    this._z = euler._z;
    this._order = euler._order;
    this._onChangeCallback();
    return this;
  }
  setFromRotationMatrix(m2, order = this._order, update = true) {
    const te2 = m2.elements;
    const m11 = te2[0], m12 = te2[4], m13 = te2[8];
    const m21 = te2[1], m22 = te2[5], m23 = te2[9];
    const m31 = te2[2], m32 = te2[6], m33 = te2[10];
    switch (order) {
      case "XYZ":
        this._y = Math.asin(clamp(m13, -1, 1));
        if (Math.abs(m13) < 0.9999999) {
          this._x = Math.atan2(-m23, m33);
          this._z = Math.atan2(-m12, m11);
        } else {
          this._x = Math.atan2(m32, m22);
          this._z = 0;
        }
        break;
      case "YXZ":
        this._x = Math.asin(-clamp(m23, -1, 1));
        if (Math.abs(m23) < 0.9999999) {
          this._y = Math.atan2(m13, m33);
          this._z = Math.atan2(m21, m22);
        } else {
          this._y = Math.atan2(-m31, m11);
          this._z = 0;
        }
        break;
      case "ZXY":
        this._x = Math.asin(clamp(m32, -1, 1));
        if (Math.abs(m32) < 0.9999999) {
          this._y = Math.atan2(-m31, m33);
          this._z = Math.atan2(-m12, m22);
        } else {
          this._y = 0;
          this._z = Math.atan2(m21, m11);
        }
        break;
      case "ZYX":
        this._y = Math.asin(-clamp(m31, -1, 1));
        if (Math.abs(m31) < 0.9999999) {
          this._x = Math.atan2(m32, m33);
          this._z = Math.atan2(m21, m11);
        } else {
          this._x = 0;
          this._z = Math.atan2(-m12, m22);
        }
        break;
      case "YZX":
        this._z = Math.asin(clamp(m21, -1, 1));
        if (Math.abs(m21) < 0.9999999) {
          this._x = Math.atan2(-m23, m22);
          this._y = Math.atan2(-m31, m11);
        } else {
          this._x = 0;
          this._y = Math.atan2(m13, m33);
        }
        break;
      case "XZY":
        this._z = Math.asin(-clamp(m12, -1, 1));
        if (Math.abs(m12) < 0.9999999) {
          this._x = Math.atan2(m32, m22);
          this._y = Math.atan2(m13, m11);
        } else {
          this._x = Math.atan2(-m23, m33);
          this._y = 0;
        }
        break;
      default:
        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + order);
    }
    this._order = order;
    if (update === true) this._onChangeCallback();
    return this;
  }
  setFromQuaternion(q2, order, update) {
    _matrix$1.makeRotationFromQuaternion(q2);
    return this.setFromRotationMatrix(_matrix$1, order, update);
  }
  setFromVector3(v2, order = this._order) {
    return this.set(v2.x, v2.y, v2.z, order);
  }
  reorder(newOrder) {
    _quaternion$3.setFromEuler(this);
    return this.setFromQuaternion(_quaternion$3, newOrder);
  }
  equals(euler) {
    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;
  }
  fromArray(array2) {
    this._x = array2[0];
    this._y = array2[1];
    this._z = array2[2];
    if (array2[3] !== void 0) this._order = array2[3];
    this._onChangeCallback();
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    array2[offset2] = this._x;
    array2[offset2 + 1] = this._y;
    array2[offset2 + 2] = this._z;
    array2[offset2 + 3] = this._order;
    return array2;
  }
  _onChange(callback) {
    this._onChangeCallback = callback;
    return this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x;
    yield this._y;
    yield this._z;
    yield this._order;
  }
}
Euler.DEFAULT_ORDER = "XYZ";
class Layers {
  constructor() {
    this.mask = 1 | 0;
  }
  set(channel) {
    this.mask = (1 << channel | 0) >>> 0;
  }
  enable(channel) {
    this.mask |= 1 << channel | 0;
  }
  enableAll() {
    this.mask = 4294967295 | 0;
  }
  toggle(channel) {
    this.mask ^= 1 << channel | 0;
  }
  disable(channel) {
    this.mask &= ~(1 << channel | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(layers) {
    return (this.mask & layers.mask) !== 0;
  }
  isEnabled(channel) {
    return (this.mask & (1 << channel | 0)) !== 0;
  }
}
let _object3DId = 0;
const _v1$4 = /* @__PURE__ */ new Vector3();
const _q1 = /* @__PURE__ */ new Quaternion();
const _m1$1 = /* @__PURE__ */ new Matrix4();
const _target = /* @__PURE__ */ new Vector3();
const _position$3 = /* @__PURE__ */ new Vector3();
const _scale$2 = /* @__PURE__ */ new Vector3();
const _quaternion$2 = /* @__PURE__ */ new Quaternion();
const _xAxis = /* @__PURE__ */ new Vector3(1, 0, 0);
const _yAxis = /* @__PURE__ */ new Vector3(0, 1, 0);
const _zAxis = /* @__PURE__ */ new Vector3(0, 0, 1);
const _addedEvent = { type: "added" };
const _removedEvent = { type: "removed" };
class Object3D extends EventDispatcher {
  constructor() {
    super();
    this.isObject3D = true;
    Object.defineProperty(this, "id", { value: _object3DId++ });
    this.uuid = generateUUID();
    this.name = "";
    this.type = "Object3D";
    this.parent = null;
    this.children = [];
    this.up = Object3D.DEFAULT_UP.clone();
    const position = new Vector3();
    const rotation = new Euler();
    const quaternion = new Quaternion();
    const scale = new Vector3(1, 1, 1);
    function onRotationChange() {
      quaternion.setFromEuler(rotation, false);
    }
    function onQuaternionChange() {
      rotation.setFromQuaternion(quaternion, void 0, false);
    }
    rotation._onChange(onRotationChange);
    quaternion._onChange(onQuaternionChange);
    Object.defineProperties(this, {
      position: {
        configurable: true,
        enumerable: true,
        value: position
      },
      rotation: {
        configurable: true,
        enumerable: true,
        value: rotation
      },
      quaternion: {
        configurable: true,
        enumerable: true,
        value: quaternion
      },
      scale: {
        configurable: true,
        enumerable: true,
        value: scale
      },
      modelViewMatrix: {
        value: new Matrix4()
      },
      normalMatrix: {
        value: new Matrix3()
      }
    });
    this.matrix = new Matrix4();
    this.matrixWorld = new Matrix4();
    this.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;
    this.matrixWorldNeedsUpdate = false;
    this.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;
    this.layers = new Layers();
    this.visible = true;
    this.castShadow = false;
    this.receiveShadow = false;
    this.frustumCulled = true;
    this.renderOrder = 0;
    this.animations = [];
    this.userData = {};
  }
  onBeforeRender() {
  }
  onAfterRender() {
  }
  applyMatrix4(matrix) {
    if (this.matrixAutoUpdate) this.updateMatrix();
    this.matrix.premultiply(matrix);
    this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(q2) {
    this.quaternion.premultiply(q2);
    return this;
  }
  setRotationFromAxisAngle(axis, angle) {
    this.quaternion.setFromAxisAngle(axis, angle);
  }
  setRotationFromEuler(euler) {
    this.quaternion.setFromEuler(euler, true);
  }
  setRotationFromMatrix(m2) {
    this.quaternion.setFromRotationMatrix(m2);
  }
  setRotationFromQuaternion(q2) {
    this.quaternion.copy(q2);
  }
  rotateOnAxis(axis, angle) {
    _q1.setFromAxisAngle(axis, angle);
    this.quaternion.multiply(_q1);
    return this;
  }
  rotateOnWorldAxis(axis, angle) {
    _q1.setFromAxisAngle(axis, angle);
    this.quaternion.premultiply(_q1);
    return this;
  }
  rotateX(angle) {
    return this.rotateOnAxis(_xAxis, angle);
  }
  rotateY(angle) {
    return this.rotateOnAxis(_yAxis, angle);
  }
  rotateZ(angle) {
    return this.rotateOnAxis(_zAxis, angle);
  }
  translateOnAxis(axis, distance) {
    _v1$4.copy(axis).applyQuaternion(this.quaternion);
    this.position.add(_v1$4.multiplyScalar(distance));
    return this;
  }
  translateX(distance) {
    return this.translateOnAxis(_xAxis, distance);
  }
  translateY(distance) {
    return this.translateOnAxis(_yAxis, distance);
  }
  translateZ(distance) {
    return this.translateOnAxis(_zAxis, distance);
  }
  localToWorld(vector) {
    this.updateWorldMatrix(true, false);
    return vector.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(vector) {
    this.updateWorldMatrix(true, false);
    return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());
  }
  lookAt(x2, y2, z2) {
    if (x2.isVector3) {
      _target.copy(x2);
    } else {
      _target.set(x2, y2, z2);
    }
    const parent = this.parent;
    this.updateWorldMatrix(true, false);
    _position$3.setFromMatrixPosition(this.matrixWorld);
    if (this.isCamera || this.isLight) {
      _m1$1.lookAt(_position$3, _target, this.up);
    } else {
      _m1$1.lookAt(_target, _position$3, this.up);
    }
    this.quaternion.setFromRotationMatrix(_m1$1);
    if (parent) {
      _m1$1.extractRotation(parent.matrixWorld);
      _q1.setFromRotationMatrix(_m1$1);
      this.quaternion.premultiply(_q1.invert());
    }
  }
  add(object2) {
    if (arguments.length > 1) {
      for (let i = 0; i < arguments.length; i++) {
        this.add(arguments[i]);
      }
      return this;
    }
    if (object2 === this) {
      console.error("THREE.Object3D.add: object can't be added as a child of itself.", object2);
      return this;
    }
    if (object2 && object2.isObject3D) {
      if (object2.parent !== null) {
        object2.parent.remove(object2);
      }
      object2.parent = this;
      this.children.push(object2);
      object2.dispatchEvent(_addedEvent);
    } else {
      console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", object2);
    }
    return this;
  }
  remove(object2) {
    if (arguments.length > 1) {
      for (let i = 0; i < arguments.length; i++) {
        this.remove(arguments[i]);
      }
      return this;
    }
    const index = this.children.indexOf(object2);
    if (index !== -1) {
      object2.parent = null;
      this.children.splice(index, 1);
      object2.dispatchEvent(_removedEvent);
    }
    return this;
  }
  removeFromParent() {
    const parent = this.parent;
    if (parent !== null) {
      parent.remove(this);
    }
    return this;
  }
  clear() {
    for (let i = 0; i < this.children.length; i++) {
      const object2 = this.children[i];
      object2.parent = null;
      object2.dispatchEvent(_removedEvent);
    }
    this.children.length = 0;
    return this;
  }
  attach(object2) {
    this.updateWorldMatrix(true, false);
    _m1$1.copy(this.matrixWorld).invert();
    if (object2.parent !== null) {
      object2.parent.updateWorldMatrix(true, false);
      _m1$1.multiply(object2.parent.matrixWorld);
    }
    object2.applyMatrix4(_m1$1);
    this.add(object2);
    object2.updateWorldMatrix(false, true);
    return this;
  }
  getObjectById(id2) {
    return this.getObjectByProperty("id", id2);
  }
  getObjectByName(name) {
    return this.getObjectByProperty("name", name);
  }
  getObjectByProperty(name, value) {
    if (this[name] === value) return this;
    for (let i = 0, l2 = this.children.length; i < l2; i++) {
      const child = this.children[i];
      const object2 = child.getObjectByProperty(name, value);
      if (object2 !== void 0) {
        return object2;
      }
    }
    return void 0;
  }
  getObjectsByProperty(name, value) {
    let result = [];
    if (this[name] === value) result.push(this);
    for (let i = 0, l2 = this.children.length; i < l2; i++) {
      const childResult = this.children[i].getObjectsByProperty(name, value);
      if (childResult.length > 0) {
        result = result.concat(childResult);
      }
    }
    return result;
  }
  getWorldPosition(target) {
    this.updateWorldMatrix(true, false);
    return target.setFromMatrixPosition(this.matrixWorld);
  }
  getWorldQuaternion(target) {
    this.updateWorldMatrix(true, false);
    this.matrixWorld.decompose(_position$3, target, _scale$2);
    return target;
  }
  getWorldScale(target) {
    this.updateWorldMatrix(true, false);
    this.matrixWorld.decompose(_position$3, _quaternion$2, target);
    return target;
  }
  getWorldDirection(target) {
    this.updateWorldMatrix(true, false);
    const e = this.matrixWorld.elements;
    return target.set(e[8], e[9], e[10]).normalize();
  }
  raycast() {
  }
  traverse(callback) {
    callback(this);
    const children = this.children;
    for (let i = 0, l2 = children.length; i < l2; i++) {
      children[i].traverse(callback);
    }
  }
  traverseVisible(callback) {
    if (this.visible === false) return;
    callback(this);
    const children = this.children;
    for (let i = 0, l2 = children.length; i < l2; i++) {
      children[i].traverseVisible(callback);
    }
  }
  traverseAncestors(callback) {
    const parent = this.parent;
    if (parent !== null) {
      callback(parent);
      parent.traverseAncestors(callback);
    }
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale);
    this.matrixWorldNeedsUpdate = true;
  }
  updateMatrixWorld(force) {
    if (this.matrixAutoUpdate) this.updateMatrix();
    if (this.matrixWorldNeedsUpdate || force) {
      if (this.parent === null) {
        this.matrixWorld.copy(this.matrix);
      } else {
        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);
      }
      this.matrixWorldNeedsUpdate = false;
      force = true;
    }
    const children = this.children;
    for (let i = 0, l2 = children.length; i < l2; i++) {
      const child = children[i];
      if (child.matrixWorldAutoUpdate === true || force === true) {
        child.updateMatrixWorld(force);
      }
    }
  }
  updateWorldMatrix(updateParents, updateChildren) {
    const parent = this.parent;
    if (updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true) {
      parent.updateWorldMatrix(true, false);
    }
    if (this.matrixAutoUpdate) this.updateMatrix();
    if (this.parent === null) {
      this.matrixWorld.copy(this.matrix);
    } else {
      this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);
    }
    if (updateChildren === true) {
      const children = this.children;
      for (let i = 0, l2 = children.length; i < l2; i++) {
        const child = children[i];
        if (child.matrixWorldAutoUpdate === true) {
          child.updateWorldMatrix(false, true);
        }
      }
    }
  }
  toJSON(meta) {
    const isRootObject = meta === void 0 || typeof meta === "string";
    const output = {};
    if (isRootObject) {
      meta = {
        geometries: {},
        materials: {},
        textures: {},
        images: {},
        shapes: {},
        skeletons: {},
        animations: {},
        nodes: {}
      };
      output.metadata = {
        version: 4.5,
        type: "Object",
        generator: "Object3D.toJSON"
      };
    }
    const object2 = {};
    object2.uuid = this.uuid;
    object2.type = this.type;
    if (this.name !== "") object2.name = this.name;
    if (this.castShadow === true) object2.castShadow = true;
    if (this.receiveShadow === true) object2.receiveShadow = true;
    if (this.visible === false) object2.visible = false;
    if (this.frustumCulled === false) object2.frustumCulled = false;
    if (this.renderOrder !== 0) object2.renderOrder = this.renderOrder;
    if (Object.keys(this.userData).length > 0) object2.userData = this.userData;
    object2.layers = this.layers.mask;
    object2.matrix = this.matrix.toArray();
    if (this.matrixAutoUpdate === false) object2.matrixAutoUpdate = false;
    if (this.isInstancedMesh) {
      object2.type = "InstancedMesh";
      object2.count = this.count;
      object2.instanceMatrix = this.instanceMatrix.toJSON();
      if (this.instanceColor !== null) object2.instanceColor = this.instanceColor.toJSON();
    }
    function serialize(library, element) {
      if (library[element.uuid] === void 0) {
        library[element.uuid] = element.toJSON(meta);
      }
      return element.uuid;
    }
    if (this.isScene) {
      if (this.background) {
        if (this.background.isColor) {
          object2.background = this.background.toJSON();
        } else if (this.background.isTexture) {
          object2.background = this.background.toJSON(meta).uuid;
        }
      }
      if (this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true) {
        object2.environment = this.environment.toJSON(meta).uuid;
      }
    } else if (this.isMesh || this.isLine || this.isPoints) {
      object2.geometry = serialize(meta.geometries, this.geometry);
      const parameters = this.geometry.parameters;
      if (parameters !== void 0 && parameters.shapes !== void 0) {
        const shapes = parameters.shapes;
        if (Array.isArray(shapes)) {
          for (let i = 0, l2 = shapes.length; i < l2; i++) {
            const shape2 = shapes[i];
            serialize(meta.shapes, shape2);
          }
        } else {
          serialize(meta.shapes, shapes);
        }
      }
    }
    if (this.isSkinnedMesh) {
      object2.bindMode = this.bindMode;
      object2.bindMatrix = this.bindMatrix.toArray();
      if (this.skeleton !== void 0) {
        serialize(meta.skeletons, this.skeleton);
        object2.skeleton = this.skeleton.uuid;
      }
    }
    if (this.material !== void 0) {
      if (Array.isArray(this.material)) {
        const uuids = [];
        for (let i = 0, l2 = this.material.length; i < l2; i++) {
          uuids.push(serialize(meta.materials, this.material[i]));
        }
        object2.material = uuids;
      } else {
        object2.material = serialize(meta.materials, this.material);
      }
    }
    if (this.children.length > 0) {
      object2.children = [];
      for (let i = 0; i < this.children.length; i++) {
        object2.children.push(this.children[i].toJSON(meta).object);
      }
    }
    if (this.animations.length > 0) {
      object2.animations = [];
      for (let i = 0; i < this.animations.length; i++) {
        const animation = this.animations[i];
        object2.animations.push(serialize(meta.animations, animation));
      }
    }
    if (isRootObject) {
      const geometries = extractFromCache(meta.geometries);
      const materials = extractFromCache(meta.materials);
      const textures = extractFromCache(meta.textures);
      const images = extractFromCache(meta.images);
      const shapes = extractFromCache(meta.shapes);
      const skeletons = extractFromCache(meta.skeletons);
      const animations = extractFromCache(meta.animations);
      const nodes = extractFromCache(meta.nodes);
      if (geometries.length > 0) output.geometries = geometries;
      if (materials.length > 0) output.materials = materials;
      if (textures.length > 0) output.textures = textures;
      if (images.length > 0) output.images = images;
      if (shapes.length > 0) output.shapes = shapes;
      if (skeletons.length > 0) output.skeletons = skeletons;
      if (animations.length > 0) output.animations = animations;
      if (nodes.length > 0) output.nodes = nodes;
    }
    output.object = object2;
    return output;
    function extractFromCache(cache) {
      const values = [];
      for (const key in cache) {
        const data = cache[key];
        delete data.metadata;
        values.push(data);
      }
      return values;
    }
  }
  clone(recursive) {
    return new this.constructor().copy(this, recursive);
  }
  copy(source, recursive = true) {
    this.name = source.name;
    this.up.copy(source.up);
    this.position.copy(source.position);
    this.rotation.order = source.rotation.order;
    this.quaternion.copy(source.quaternion);
    this.scale.copy(source.scale);
    this.matrix.copy(source.matrix);
    this.matrixWorld.copy(source.matrixWorld);
    this.matrixAutoUpdate = source.matrixAutoUpdate;
    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;
    this.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;
    this.layers.mask = source.layers.mask;
    this.visible = source.visible;
    this.castShadow = source.castShadow;
    this.receiveShadow = source.receiveShadow;
    this.frustumCulled = source.frustumCulled;
    this.renderOrder = source.renderOrder;
    this.userData = JSON.parse(JSON.stringify(source.userData));
    if (recursive === true) {
      for (let i = 0; i < source.children.length; i++) {
        const child = source.children[i];
        this.add(child.clone());
      }
    }
    return this;
  }
}
Object3D.DEFAULT_UP = /* @__PURE__ */ new Vector3(0, 1, 0);
Object3D.DEFAULT_MATRIX_AUTO_UPDATE = true;
Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;
const _v0$1 = /* @__PURE__ */ new Vector3();
const _v1$3 = /* @__PURE__ */ new Vector3();
const _v2$2 = /* @__PURE__ */ new Vector3();
const _v3$1 = /* @__PURE__ */ new Vector3();
const _vab = /* @__PURE__ */ new Vector3();
const _vac = /* @__PURE__ */ new Vector3();
const _vbc = /* @__PURE__ */ new Vector3();
const _vap = /* @__PURE__ */ new Vector3();
const _vbp = /* @__PURE__ */ new Vector3();
const _vcp = /* @__PURE__ */ new Vector3();
class Triangle {
  constructor(a = new Vector3(), b2 = new Vector3(), c2 = new Vector3()) {
    this.a = a;
    this.b = b2;
    this.c = c2;
  }
  static getNormal(a, b2, c2, target) {
    target.subVectors(c2, b2);
    _v0$1.subVectors(a, b2);
    target.cross(_v0$1);
    const targetLengthSq = target.lengthSq();
    if (targetLengthSq > 0) {
      return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));
    }
    return target.set(0, 0, 0);
  }
  // static/instance method to calculate barycentric coordinates
  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html
  static getBarycoord(point, a, b2, c2, target) {
    _v0$1.subVectors(c2, a);
    _v1$3.subVectors(b2, a);
    _v2$2.subVectors(point, a);
    const dot00 = _v0$1.dot(_v0$1);
    const dot01 = _v0$1.dot(_v1$3);
    const dot02 = _v0$1.dot(_v2$2);
    const dot11 = _v1$3.dot(_v1$3);
    const dot12 = _v1$3.dot(_v2$2);
    const denom = dot00 * dot11 - dot01 * dot01;
    if (denom === 0) {
      return target.set(-2, -1, -1);
    }
    const invDenom = 1 / denom;
    const u2 = (dot11 * dot02 - dot01 * dot12) * invDenom;
    const v2 = (dot00 * dot12 - dot01 * dot02) * invDenom;
    return target.set(1 - u2 - v2, v2, u2);
  }
  static containsPoint(point, a, b2, c2) {
    this.getBarycoord(point, a, b2, c2, _v3$1);
    return _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;
  }
  static getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {
    this.getBarycoord(point, p1, p2, p3, _v3$1);
    target.set(0, 0);
    target.addScaledVector(uv1, _v3$1.x);
    target.addScaledVector(uv2, _v3$1.y);
    target.addScaledVector(uv3, _v3$1.z);
    return target;
  }
  static isFrontFacing(a, b2, c2, direction) {
    _v0$1.subVectors(c2, b2);
    _v1$3.subVectors(a, b2);
    return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;
  }
  set(a, b2, c2) {
    this.a.copy(a);
    this.b.copy(b2);
    this.c.copy(c2);
    return this;
  }
  setFromPointsAndIndices(points, i0, i1, i2) {
    this.a.copy(points[i0]);
    this.b.copy(points[i1]);
    this.c.copy(points[i2]);
    return this;
  }
  setFromAttributeAndIndices(attribute, i0, i1, i2) {
    this.a.fromBufferAttribute(attribute, i0);
    this.b.fromBufferAttribute(attribute, i1);
    this.c.fromBufferAttribute(attribute, i2);
    return this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(triangle) {
    this.a.copy(triangle.a);
    this.b.copy(triangle.b);
    this.c.copy(triangle.c);
    return this;
  }
  getArea() {
    _v0$1.subVectors(this.c, this.b);
    _v1$3.subVectors(this.a, this.b);
    return _v0$1.cross(_v1$3).length() * 0.5;
  }
  getMidpoint(target) {
    return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
  }
  getNormal(target) {
    return Triangle.getNormal(this.a, this.b, this.c, target);
  }
  getPlane(target) {
    return target.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(point, target) {
    return Triangle.getBarycoord(point, this.a, this.b, this.c, target);
  }
  getUV(point, uv1, uv2, uv3, target) {
    return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);
  }
  containsPoint(point) {
    return Triangle.containsPoint(point, this.a, this.b, this.c);
  }
  isFrontFacing(direction) {
    return Triangle.isFrontFacing(this.a, this.b, this.c, direction);
  }
  intersectsBox(box) {
    return box.intersectsTriangle(this);
  }
  closestPointToPoint(p2, target) {
    const a = this.a, b2 = this.b, c2 = this.c;
    let v2, w2;
    _vab.subVectors(b2, a);
    _vac.subVectors(c2, a);
    _vap.subVectors(p2, a);
    const d1 = _vab.dot(_vap);
    const d2 = _vac.dot(_vap);
    if (d1 <= 0 && d2 <= 0) {
      return target.copy(a);
    }
    _vbp.subVectors(p2, b2);
    const d3 = _vab.dot(_vbp);
    const d4 = _vac.dot(_vbp);
    if (d3 >= 0 && d4 <= d3) {
      return target.copy(b2);
    }
    const vc2 = d1 * d4 - d3 * d2;
    if (vc2 <= 0 && d1 >= 0 && d3 <= 0) {
      v2 = d1 / (d1 - d3);
      return target.copy(a).addScaledVector(_vab, v2);
    }
    _vcp.subVectors(p2, c2);
    const d5 = _vab.dot(_vcp);
    const d6 = _vac.dot(_vcp);
    if (d6 >= 0 && d5 <= d6) {
      return target.copy(c2);
    }
    const vb2 = d5 * d2 - d1 * d6;
    if (vb2 <= 0 && d2 >= 0 && d6 <= 0) {
      w2 = d2 / (d2 - d6);
      return target.copy(a).addScaledVector(_vac, w2);
    }
    const va2 = d3 * d6 - d5 * d4;
    if (va2 <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {
      _vbc.subVectors(c2, b2);
      w2 = (d4 - d3) / (d4 - d3 + (d5 - d6));
      return target.copy(b2).addScaledVector(_vbc, w2);
    }
    const denom = 1 / (va2 + vb2 + vc2);
    v2 = vb2 * denom;
    w2 = vc2 * denom;
    return target.copy(a).addScaledVector(_vab, v2).addScaledVector(_vac, w2);
  }
  equals(triangle) {
    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);
  }
}
let materialId = 0;
class Material extends EventDispatcher {
  constructor() {
    super();
    this.isMaterial = true;
    Object.defineProperty(this, "id", { value: materialId++ });
    this.uuid = generateUUID();
    this.name = "";
    this.type = "Material";
    this.blending = NormalBlending;
    this.side = FrontSide;
    this.vertexColors = false;
    this.opacity = 1;
    this.transparent = false;
    this.blendSrc = SrcAlphaFactor;
    this.blendDst = OneMinusSrcAlphaFactor;
    this.blendEquation = AddEquation;
    this.blendSrcAlpha = null;
    this.blendDstAlpha = null;
    this.blendEquationAlpha = null;
    this.depthFunc = LessEqualDepth;
    this.depthTest = true;
    this.depthWrite = true;
    this.stencilWriteMask = 255;
    this.stencilFunc = AlwaysStencilFunc;
    this.stencilRef = 0;
    this.stencilFuncMask = 255;
    this.stencilFail = KeepStencilOp;
    this.stencilZFail = KeepStencilOp;
    this.stencilZPass = KeepStencilOp;
    this.stencilWrite = false;
    this.clippingPlanes = null;
    this.clipIntersection = false;
    this.clipShadows = false;
    this.shadowSide = null;
    this.colorWrite = true;
    this.precision = null;
    this.polygonOffset = false;
    this.polygonOffsetFactor = 0;
    this.polygonOffsetUnits = 0;
    this.dithering = false;
    this.alphaToCoverage = false;
    this.premultipliedAlpha = false;
    this.forceSinglePass = false;
    this.visible = true;
    this.toneMapped = true;
    this.userData = {};
    this.version = 0;
    this._alphaTest = 0;
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(value) {
    if (this._alphaTest > 0 !== value > 0) {
      this.version++;
    }
    this._alphaTest = value;
  }
  onBuild() {
  }
  onBeforeRender() {
  }
  onBeforeCompile() {
  }
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(values) {
    if (values === void 0) return;
    for (const key in values) {
      const newValue = values[key];
      if (newValue === void 0) {
        console.warn("THREE.Material: '" + key + "' parameter is undefined.");
        continue;
      }
      const currentValue = this[key];
      if (currentValue === void 0) {
        console.warn("THREE." + this.type + ": '" + key + "' is not a property of this material.");
        continue;
      }
      if (currentValue && currentValue.isColor) {
        currentValue.set(newValue);
      } else if (currentValue && currentValue.isVector3 && (newValue && newValue.isVector3)) {
        currentValue.copy(newValue);
      } else {
        this[key] = newValue;
      }
    }
  }
  toJSON(meta) {
    const isRootObject = meta === void 0 || typeof meta === "string";
    if (isRootObject) {
      meta = {
        textures: {},
        images: {}
      };
    }
    const data = {
      metadata: {
        version: 4.5,
        type: "Material",
        generator: "Material.toJSON"
      }
    };
    data.uuid = this.uuid;
    data.type = this.type;
    if (this.name !== "") data.name = this.name;
    if (this.color && this.color.isColor) data.color = this.color.getHex();
    if (this.roughness !== void 0) data.roughness = this.roughness;
    if (this.metalness !== void 0) data.metalness = this.metalness;
    if (this.sheen !== void 0) data.sheen = this.sheen;
    if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();
    if (this.sheenRoughness !== void 0) data.sheenRoughness = this.sheenRoughness;
    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();
    if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;
    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();
    if (this.specularIntensity !== void 0) data.specularIntensity = this.specularIntensity;
    if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();
    if (this.shininess !== void 0) data.shininess = this.shininess;
    if (this.clearcoat !== void 0) data.clearcoat = this.clearcoat;
    if (this.clearcoatRoughness !== void 0) data.clearcoatRoughness = this.clearcoatRoughness;
    if (this.clearcoatMap && this.clearcoatMap.isTexture) {
      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;
    }
    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {
      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;
    }
    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {
      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;
      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();
    }
    if (this.iridescence !== void 0) data.iridescence = this.iridescence;
    if (this.iridescenceIOR !== void 0) data.iridescenceIOR = this.iridescenceIOR;
    if (this.iridescenceThicknessRange !== void 0) data.iridescenceThicknessRange = this.iridescenceThicknessRange;
    if (this.iridescenceMap && this.iridescenceMap.isTexture) {
      data.iridescenceMap = this.iridescenceMap.toJSON(meta).uuid;
    }
    if (this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture) {
      data.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(meta).uuid;
    }
    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;
    if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;
    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;
    if (this.lightMap && this.lightMap.isTexture) {
      data.lightMap = this.lightMap.toJSON(meta).uuid;
      data.lightMapIntensity = this.lightMapIntensity;
    }
    if (this.aoMap && this.aoMap.isTexture) {
      data.aoMap = this.aoMap.toJSON(meta).uuid;
      data.aoMapIntensity = this.aoMapIntensity;
    }
    if (this.bumpMap && this.bumpMap.isTexture) {
      data.bumpMap = this.bumpMap.toJSON(meta).uuid;
      data.bumpScale = this.bumpScale;
    }
    if (this.normalMap && this.normalMap.isTexture) {
      data.normalMap = this.normalMap.toJSON(meta).uuid;
      data.normalMapType = this.normalMapType;
      data.normalScale = this.normalScale.toArray();
    }
    if (this.displacementMap && this.displacementMap.isTexture) {
      data.displacementMap = this.displacementMap.toJSON(meta).uuid;
      data.displacementScale = this.displacementScale;
      data.displacementBias = this.displacementBias;
    }
    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;
    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;
    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;
    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;
    if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;
    if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;
    if (this.envMap && this.envMap.isTexture) {
      data.envMap = this.envMap.toJSON(meta).uuid;
      if (this.combine !== void 0) data.combine = this.combine;
    }
    if (this.envMapIntensity !== void 0) data.envMapIntensity = this.envMapIntensity;
    if (this.reflectivity !== void 0) data.reflectivity = this.reflectivity;
    if (this.refractionRatio !== void 0) data.refractionRatio = this.refractionRatio;
    if (this.gradientMap && this.gradientMap.isTexture) {
      data.gradientMap = this.gradientMap.toJSON(meta).uuid;
    }
    if (this.transmission !== void 0) data.transmission = this.transmission;
    if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;
    if (this.thickness !== void 0) data.thickness = this.thickness;
    if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;
    if (this.attenuationDistance !== void 0 && this.attenuationDistance !== Infinity) data.attenuationDistance = this.attenuationDistance;
    if (this.attenuationColor !== void 0) data.attenuationColor = this.attenuationColor.getHex();
    if (this.size !== void 0) data.size = this.size;
    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;
    if (this.sizeAttenuation !== void 0) data.sizeAttenuation = this.sizeAttenuation;
    if (this.blending !== NormalBlending) data.blending = this.blending;
    if (this.side !== FrontSide) data.side = this.side;
    if (this.vertexColors) data.vertexColors = true;
    if (this.opacity < 1) data.opacity = this.opacity;
    if (this.transparent === true) data.transparent = this.transparent;
    data.depthFunc = this.depthFunc;
    data.depthTest = this.depthTest;
    data.depthWrite = this.depthWrite;
    data.colorWrite = this.colorWrite;
    data.stencilWrite = this.stencilWrite;
    data.stencilWriteMask = this.stencilWriteMask;
    data.stencilFunc = this.stencilFunc;
    data.stencilRef = this.stencilRef;
    data.stencilFuncMask = this.stencilFuncMask;
    data.stencilFail = this.stencilFail;
    data.stencilZFail = this.stencilZFail;
    data.stencilZPass = this.stencilZPass;
    if (this.rotation !== void 0 && this.rotation !== 0) data.rotation = this.rotation;
    if (this.polygonOffset === true) data.polygonOffset = true;
    if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;
    if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;
    if (this.linewidth !== void 0 && this.linewidth !== 1) data.linewidth = this.linewidth;
    if (this.dashSize !== void 0) data.dashSize = this.dashSize;
    if (this.gapSize !== void 0) data.gapSize = this.gapSize;
    if (this.scale !== void 0) data.scale = this.scale;
    if (this.dithering === true) data.dithering = true;
    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;
    if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;
    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;
    if (this.forceSinglePass === true) data.forceSinglePass = this.forceSinglePass;
    if (this.wireframe === true) data.wireframe = this.wireframe;
    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;
    if (this.wireframeLinecap !== "round") data.wireframeLinecap = this.wireframeLinecap;
    if (this.wireframeLinejoin !== "round") data.wireframeLinejoin = this.wireframeLinejoin;
    if (this.flatShading === true) data.flatShading = this.flatShading;
    if (this.visible === false) data.visible = false;
    if (this.toneMapped === false) data.toneMapped = false;
    if (this.fog === false) data.fog = false;
    if (Object.keys(this.userData).length > 0) data.userData = this.userData;
    function extractFromCache(cache) {
      const values = [];
      for (const key in cache) {
        const data2 = cache[key];
        delete data2.metadata;
        values.push(data2);
      }
      return values;
    }
    if (isRootObject) {
      const textures = extractFromCache(meta.textures);
      const images = extractFromCache(meta.images);
      if (textures.length > 0) data.textures = textures;
      if (images.length > 0) data.images = images;
    }
    return data;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(source) {
    this.name = source.name;
    this.blending = source.blending;
    this.side = source.side;
    this.vertexColors = source.vertexColors;
    this.opacity = source.opacity;
    this.transparent = source.transparent;
    this.blendSrc = source.blendSrc;
    this.blendDst = source.blendDst;
    this.blendEquation = source.blendEquation;
    this.blendSrcAlpha = source.blendSrcAlpha;
    this.blendDstAlpha = source.blendDstAlpha;
    this.blendEquationAlpha = source.blendEquationAlpha;
    this.depthFunc = source.depthFunc;
    this.depthTest = source.depthTest;
    this.depthWrite = source.depthWrite;
    this.stencilWriteMask = source.stencilWriteMask;
    this.stencilFunc = source.stencilFunc;
    this.stencilRef = source.stencilRef;
    this.stencilFuncMask = source.stencilFuncMask;
    this.stencilFail = source.stencilFail;
    this.stencilZFail = source.stencilZFail;
    this.stencilZPass = source.stencilZPass;
    this.stencilWrite = source.stencilWrite;
    const srcPlanes = source.clippingPlanes;
    let dstPlanes = null;
    if (srcPlanes !== null) {
      const n2 = srcPlanes.length;
      dstPlanes = new Array(n2);
      for (let i = 0; i !== n2; ++i) {
        dstPlanes[i] = srcPlanes[i].clone();
      }
    }
    this.clippingPlanes = dstPlanes;
    this.clipIntersection = source.clipIntersection;
    this.clipShadows = source.clipShadows;
    this.shadowSide = source.shadowSide;
    this.colorWrite = source.colorWrite;
    this.precision = source.precision;
    this.polygonOffset = source.polygonOffset;
    this.polygonOffsetFactor = source.polygonOffsetFactor;
    this.polygonOffsetUnits = source.polygonOffsetUnits;
    this.dithering = source.dithering;
    this.alphaTest = source.alphaTest;
    this.alphaToCoverage = source.alphaToCoverage;
    this.premultipliedAlpha = source.premultipliedAlpha;
    this.forceSinglePass = source.forceSinglePass;
    this.visible = source.visible;
    this.toneMapped = source.toneMapped;
    this.userData = JSON.parse(JSON.stringify(source.userData));
    return this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(value) {
    if (value === true) this.version++;
  }
}
const _colorKeywords = {
  "aliceblue": 15792383,
  "antiquewhite": 16444375,
  "aqua": 65535,
  "aquamarine": 8388564,
  "azure": 15794175,
  "beige": 16119260,
  "bisque": 16770244,
  "black": 0,
  "blanchedalmond": 16772045,
  "blue": 255,
  "blueviolet": 9055202,
  "brown": 10824234,
  "burlywood": 14596231,
  "cadetblue": 6266528,
  "chartreuse": 8388352,
  "chocolate": 13789470,
  "coral": 16744272,
  "cornflowerblue": 6591981,
  "cornsilk": 16775388,
  "crimson": 14423100,
  "cyan": 65535,
  "darkblue": 139,
  "darkcyan": 35723,
  "darkgoldenrod": 12092939,
  "darkgray": 11119017,
  "darkgreen": 25600,
  "darkgrey": 11119017,
  "darkkhaki": 12433259,
  "darkmagenta": 9109643,
  "darkolivegreen": 5597999,
  "darkorange": 16747520,
  "darkorchid": 10040012,
  "darkred": 9109504,
  "darksalmon": 15308410,
  "darkseagreen": 9419919,
  "darkslateblue": 4734347,
  "darkslategray": 3100495,
  "darkslategrey": 3100495,
  "darkturquoise": 52945,
  "darkviolet": 9699539,
  "deeppink": 16716947,
  "deepskyblue": 49151,
  "dimgray": 6908265,
  "dimgrey": 6908265,
  "dodgerblue": 2003199,
  "firebrick": 11674146,
  "floralwhite": 16775920,
  "forestgreen": 2263842,
  "fuchsia": 16711935,
  "gainsboro": 14474460,
  "ghostwhite": 16316671,
  "gold": 16766720,
  "goldenrod": 14329120,
  "gray": 8421504,
  "green": 32768,
  "greenyellow": 11403055,
  "grey": 8421504,
  "honeydew": 15794160,
  "hotpink": 16738740,
  "indianred": 13458524,
  "indigo": 4915330,
  "ivory": 16777200,
  "khaki": 15787660,
  "lavender": 15132410,
  "lavenderblush": 16773365,
  "lawngreen": 8190976,
  "lemonchiffon": 16775885,
  "lightblue": 11393254,
  "lightcoral": 15761536,
  "lightcyan": 14745599,
  "lightgoldenrodyellow": 16448210,
  "lightgray": 13882323,
  "lightgreen": 9498256,
  "lightgrey": 13882323,
  "lightpink": 16758465,
  "lightsalmon": 16752762,
  "lightseagreen": 2142890,
  "lightskyblue": 8900346,
  "lightslategray": 7833753,
  "lightslategrey": 7833753,
  "lightsteelblue": 11584734,
  "lightyellow": 16777184,
  "lime": 65280,
  "limegreen": 3329330,
  "linen": 16445670,
  "magenta": 16711935,
  "maroon": 8388608,
  "mediumaquamarine": 6737322,
  "mediumblue": 205,
  "mediumorchid": 12211667,
  "mediumpurple": 9662683,
  "mediumseagreen": 3978097,
  "mediumslateblue": 8087790,
  "mediumspringgreen": 64154,
  "mediumturquoise": 4772300,
  "mediumvioletred": 13047173,
  "midnightblue": 1644912,
  "mintcream": 16121850,
  "mistyrose": 16770273,
  "moccasin": 16770229,
  "navajowhite": 16768685,
  "navy": 128,
  "oldlace": 16643558,
  "olive": 8421376,
  "olivedrab": 7048739,
  "orange": 16753920,
  "orangered": 16729344,
  "orchid": 14315734,
  "palegoldenrod": 15657130,
  "palegreen": 10025880,
  "paleturquoise": 11529966,
  "palevioletred": 14381203,
  "papayawhip": 16773077,
  "peachpuff": 16767673,
  "peru": 13468991,
  "pink": 16761035,
  "plum": 14524637,
  "powderblue": 11591910,
  "purple": 8388736,
  "rebeccapurple": 6697881,
  "red": 16711680,
  "rosybrown": 12357519,
  "royalblue": 4286945,
  "saddlebrown": 9127187,
  "salmon": 16416882,
  "sandybrown": 16032864,
  "seagreen": 3050327,
  "seashell": 16774638,
  "sienna": 10506797,
  "silver": 12632256,
  "skyblue": 8900331,
  "slateblue": 6970061,
  "slategray": 7372944,
  "slategrey": 7372944,
  "snow": 16775930,
  "springgreen": 65407,
  "steelblue": 4620980,
  "tan": 13808780,
  "teal": 32896,
  "thistle": 14204888,
  "tomato": 16737095,
  "turquoise": 4251856,
  "violet": 15631086,
  "wheat": 16113331,
  "white": 16777215,
  "whitesmoke": 16119285,
  "yellow": 16776960,
  "yellowgreen": 10145074
};
const _hslA = { h: 0, s: 0, l: 0 };
const _hslB = { h: 0, s: 0, l: 0 };
function hue2rgb(p2, q2, t2) {
  if (t2 < 0) t2 += 1;
  if (t2 > 1) t2 -= 1;
  if (t2 < 1 / 6) return p2 + (q2 - p2) * 6 * t2;
  if (t2 < 1 / 2) return q2;
  if (t2 < 2 / 3) return p2 + (q2 - p2) * 6 * (2 / 3 - t2);
  return p2;
}
class Color {
  constructor(r2, g, b2) {
    this.isColor = true;
    this.r = 1;
    this.g = 1;
    this.b = 1;
    if (g === void 0 && b2 === void 0) {
      return this.set(r2);
    }
    return this.setRGB(r2, g, b2);
  }
  set(value) {
    if (value && value.isColor) {
      this.copy(value);
    } else if (typeof value === "number") {
      this.setHex(value);
    } else if (typeof value === "string") {
      this.setStyle(value);
    }
    return this;
  }
  setScalar(scalar) {
    this.r = scalar;
    this.g = scalar;
    this.b = scalar;
    return this;
  }
  setHex(hex, colorSpace = SRGBColorSpace) {
    hex = Math.floor(hex);
    this.r = (hex >> 16 & 255) / 255;
    this.g = (hex >> 8 & 255) / 255;
    this.b = (hex & 255) / 255;
    ColorManagement.toWorkingColorSpace(this, colorSpace);
    return this;
  }
  setRGB(r2, g, b2, colorSpace = ColorManagement.workingColorSpace) {
    this.r = r2;
    this.g = g;
    this.b = b2;
    ColorManagement.toWorkingColorSpace(this, colorSpace);
    return this;
  }
  setHSL(h2, s, l2, colorSpace = ColorManagement.workingColorSpace) {
    h2 = euclideanModulo(h2, 1);
    s = clamp(s, 0, 1);
    l2 = clamp(l2, 0, 1);
    if (s === 0) {
      this.r = this.g = this.b = l2;
    } else {
      const p2 = l2 <= 0.5 ? l2 * (1 + s) : l2 + s - l2 * s;
      const q2 = 2 * l2 - p2;
      this.r = hue2rgb(q2, p2, h2 + 1 / 3);
      this.g = hue2rgb(q2, p2, h2);
      this.b = hue2rgb(q2, p2, h2 - 1 / 3);
    }
    ColorManagement.toWorkingColorSpace(this, colorSpace);
    return this;
  }
  setStyle(style, colorSpace = SRGBColorSpace) {
    function handleAlpha(string2) {
      if (string2 === void 0) return;
      if (parseFloat(string2) < 1) {
        console.warn("THREE.Color: Alpha component of " + style + " will be ignored.");
      }
    }
    let m2;
    if (m2 = /^(\w+)\(([^\)]*)\)/.exec(style)) {
      let color;
      const name = m2[1];
      const components = m2[2];
      switch (name) {
        case "rgb":
        case "rgba":
          if (color = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components)) {
            this.r = Math.min(255, parseInt(color[1], 10)) / 255;
            this.g = Math.min(255, parseInt(color[2], 10)) / 255;
            this.b = Math.min(255, parseInt(color[3], 10)) / 255;
            ColorManagement.toWorkingColorSpace(this, colorSpace);
            handleAlpha(color[4]);
            return this;
          }
          if (color = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components)) {
            this.r = Math.min(100, parseInt(color[1], 10)) / 100;
            this.g = Math.min(100, parseInt(color[2], 10)) / 100;
            this.b = Math.min(100, parseInt(color[3], 10)) / 100;
            ColorManagement.toWorkingColorSpace(this, colorSpace);
            handleAlpha(color[4]);
            return this;
          }
          break;
        case "hsl":
        case "hsla":
          if (color = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components)) {
            const h2 = parseFloat(color[1]) / 360;
            const s = parseFloat(color[2]) / 100;
            const l2 = parseFloat(color[3]) / 100;
            handleAlpha(color[4]);
            return this.setHSL(h2, s, l2, colorSpace);
          }
          break;
        default:
          console.warn("THREE.Color: Unknown color model " + style);
      }
    } else if (m2 = /^\#([A-Fa-f\d]+)$/.exec(style)) {
      const hex = m2[1];
      const size = hex.length;
      if (size === 3) {
        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;
        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;
        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;
        ColorManagement.toWorkingColorSpace(this, colorSpace);
        return this;
      } else if (size === 6) {
        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;
        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;
        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;
        ColorManagement.toWorkingColorSpace(this, colorSpace);
        return this;
      } else {
        console.warn("THREE.Color: Invalid hex color " + style);
      }
    } else if (style && style.length > 0) {
      return this.setColorName(style, colorSpace);
    }
    return this;
  }
  setColorName(style, colorSpace = SRGBColorSpace) {
    const hex = _colorKeywords[style.toLowerCase()];
    if (hex !== void 0) {
      this.setHex(hex, colorSpace);
    } else {
      console.warn("THREE.Color: Unknown color " + style);
    }
    return this;
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(color) {
    this.r = color.r;
    this.g = color.g;
    this.b = color.b;
    return this;
  }
  copySRGBToLinear(color) {
    this.r = SRGBToLinear(color.r);
    this.g = SRGBToLinear(color.g);
    this.b = SRGBToLinear(color.b);
    return this;
  }
  copyLinearToSRGB(color) {
    this.r = LinearToSRGB(color.r);
    this.g = LinearToSRGB(color.g);
    this.b = LinearToSRGB(color.b);
    return this;
  }
  convertSRGBToLinear() {
    this.copySRGBToLinear(this);
    return this;
  }
  convertLinearToSRGB() {
    this.copyLinearToSRGB(this);
    return this;
  }
  getHex(colorSpace = SRGBColorSpace) {
    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
    return clamp(_color.r * 255, 0, 255) << 16 ^ clamp(_color.g * 255, 0, 255) << 8 ^ clamp(_color.b * 255, 0, 255) << 0;
  }
  getHexString(colorSpace = SRGBColorSpace) {
    return ("000000" + this.getHex(colorSpace).toString(16)).slice(-6);
  }
  getHSL(target, colorSpace = ColorManagement.workingColorSpace) {
    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
    const r2 = _color.r, g = _color.g, b2 = _color.b;
    const max2 = Math.max(r2, g, b2);
    const min2 = Math.min(r2, g, b2);
    let hue, saturation;
    const lightness = (min2 + max2) / 2;
    if (min2 === max2) {
      hue = 0;
      saturation = 0;
    } else {
      const delta = max2 - min2;
      saturation = lightness <= 0.5 ? delta / (max2 + min2) : delta / (2 - max2 - min2);
      switch (max2) {
        case r2:
          hue = (g - b2) / delta + (g < b2 ? 6 : 0);
          break;
        case g:
          hue = (b2 - r2) / delta + 2;
          break;
        case b2:
          hue = (r2 - g) / delta + 4;
          break;
      }
      hue /= 6;
    }
    target.h = hue;
    target.s = saturation;
    target.l = lightness;
    return target;
  }
  getRGB(target, colorSpace = ColorManagement.workingColorSpace) {
    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
    target.r = _color.r;
    target.g = _color.g;
    target.b = _color.b;
    return target;
  }
  getStyle(colorSpace = SRGBColorSpace) {
    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);
    const r2 = _color.r, g = _color.g, b2 = _color.b;
    if (colorSpace !== SRGBColorSpace) {
      return `color(${colorSpace} ${r2.toFixed(3)} ${g.toFixed(3)} ${b2.toFixed(3)})`;
    }
    return `rgb(${r2 * 255 | 0},${g * 255 | 0},${b2 * 255 | 0})`;
  }
  offsetHSL(h2, s, l2) {
    this.getHSL(_hslA);
    _hslA.h += h2;
    _hslA.s += s;
    _hslA.l += l2;
    this.setHSL(_hslA.h, _hslA.s, _hslA.l);
    return this;
  }
  add(color) {
    this.r += color.r;
    this.g += color.g;
    this.b += color.b;
    return this;
  }
  addColors(color1, color2) {
    this.r = color1.r + color2.r;
    this.g = color1.g + color2.g;
    this.b = color1.b + color2.b;
    return this;
  }
  addScalar(s) {
    this.r += s;
    this.g += s;
    this.b += s;
    return this;
  }
  sub(color) {
    this.r = Math.max(0, this.r - color.r);
    this.g = Math.max(0, this.g - color.g);
    this.b = Math.max(0, this.b - color.b);
    return this;
  }
  multiply(color) {
    this.r *= color.r;
    this.g *= color.g;
    this.b *= color.b;
    return this;
  }
  multiplyScalar(s) {
    this.r *= s;
    this.g *= s;
    this.b *= s;
    return this;
  }
  lerp(color, alpha) {
    this.r += (color.r - this.r) * alpha;
    this.g += (color.g - this.g) * alpha;
    this.b += (color.b - this.b) * alpha;
    return this;
  }
  lerpColors(color1, color2, alpha) {
    this.r = color1.r + (color2.r - color1.r) * alpha;
    this.g = color1.g + (color2.g - color1.g) * alpha;
    this.b = color1.b + (color2.b - color1.b) * alpha;
    return this;
  }
  lerpHSL(color, alpha) {
    this.getHSL(_hslA);
    color.getHSL(_hslB);
    const h2 = lerp(_hslA.h, _hslB.h, alpha);
    const s = lerp(_hslA.s, _hslB.s, alpha);
    const l2 = lerp(_hslA.l, _hslB.l, alpha);
    this.setHSL(h2, s, l2);
    return this;
  }
  equals(c2) {
    return c2.r === this.r && c2.g === this.g && c2.b === this.b;
  }
  fromArray(array2, offset2 = 0) {
    this.r = array2[offset2];
    this.g = array2[offset2 + 1];
    this.b = array2[offset2 + 2];
    return this;
  }
  toArray(array2 = [], offset2 = 0) {
    array2[offset2] = this.r;
    array2[offset2 + 1] = this.g;
    array2[offset2 + 2] = this.b;
    return array2;
  }
  fromBufferAttribute(attribute, index) {
    this.r = attribute.getX(index);
    this.g = attribute.getY(index);
    this.b = attribute.getZ(index);
    return this;
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r;
    yield this.g;
    yield this.b;
  }
}
const _color = new Color();
Color.NAMES = _colorKeywords;
class MeshBasicMaterial extends Material {
  constructor(parameters) {
    super();
    this.isMeshBasicMaterial = true;
    this.type = "MeshBasicMaterial";
    this.color = new Color(16777215);
    this.map = null;
    this.lightMap = null;
    this.lightMapIntensity = 1;
    this.aoMap = null;
    this.aoMapIntensity = 1;
    this.specularMap = null;
    this.alphaMap = null;
    this.envMap = null;
    this.combine = MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = 0.98;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.wireframeLinecap = "round";
    this.wireframeLinejoin = "round";
    this.fog = true;
    this.setValues(parameters);
  }
  copy(source) {
    super.copy(source);
    this.color.copy(source.color);
    this.map = source.map;
    this.lightMap = source.lightMap;
    this.lightMapIntensity = source.lightMapIntensity;
    this.aoMap = source.aoMap;
    this.aoMapIntensity = source.aoMapIntensity;
    this.specularMap = source.specularMap;
    this.alphaMap = source.alphaMap;
    this.envMap = source.envMap;
    this.combine = source.combine;
    this.reflectivity = source.reflectivity;
    this.refractionRatio = source.refractionRatio;
    this.wireframe = source.wireframe;
    this.wireframeLinewidth = source.wireframeLinewidth;
    this.wireframeLinecap = source.wireframeLinecap;
    this.wireframeLinejoin = source.wireframeLinejoin;
    this.fog = source.fog;
    return this;
  }
}
const _vector$9 = /* @__PURE__ */ new Vector3();
const _vector2$1 = /* @__PURE__ */ new Vector2();
class BufferAttribute {
  constructor(array2, itemSize, normalized = false) {
    if (Array.isArray(array2)) {
      throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    }
    this.isBufferAttribute = true;
    this.name = "";
    this.array = array2;
    this.itemSize = itemSize;
    this.count = array2 !== void 0 ? array2.length / itemSize : 0;
    this.normalized = normalized;
    this.usage = StaticDrawUsage;
    this.updateRange = { offset: 0, count: -1 };
    this.version = 0;
  }
  onUploadCallback() {
  }
  set needsUpdate(value) {
    if (value === true) this.version++;
  }
  setUsage(value) {
    this.usage = value;
    return this;
  }
  copy(source) {
    this.name = source.name;
    this.array = new source.array.constructor(source.array);
    this.itemSize = source.itemSize;
    this.count = source.count;
    this.normalized = source.normalized;
    this.usage = source.usage;
    return this;
  }
  copyAt(index1, attribute, index2) {
    index1 *= this.itemSize;
    index2 *= attribute.itemSize;
    for (let i = 0, l2 = this.itemSize; i < l2; i++) {
      this.array[index1 + i] = attribute.array[index2 + i];
    }
    return this;
  }
  copyArray(array2) {
    this.array.set(array2);
    return this;
  }
  applyMatrix3(m2) {
    if (this.itemSize === 2) {
      for (let i = 0, l2 = this.count; i < l2; i++) {
        _vector2$1.fromBufferAttribute(this, i);
        _vector2$1.applyMatrix3(m2);
        this.setXY(i, _vector2$1.x, _vector2$1.y);
      }
    } else if (this.itemSize === 3) {
      for (let i = 0, l2 = this.count; i < l2; i++) {
        _vector$9.fromBufferAttribute(this, i);
        _vector$9.applyMatrix3(m2);
        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);
      }
    }
    return this;
  }
  applyMatrix4(m2) {
    for (let i = 0, l2 = this.count; i < l2; i++) {
      _vector$9.fromBufferAttribute(this, i);
      _vector$9.applyMatrix4(m2);
      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);
    }
    return this;
  }
  applyNormalMatrix(m2) {
    for (let i = 0, l2 = this.count; i < l2; i++) {
      _vector$9.fromBufferAttribute(this, i);
      _vector$9.applyNormalMatrix(m2);
      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);
    }
    return this;
  }
  transformDirection(m2) {
    for (let i = 0, l2 = this.count; i < l2; i++) {
      _vector$9.fromBufferAttribute(this, i);
      _vector$9.transformDirection(m2);
      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);
    }
    return this;
  }
  set(value, offset2 = 0) {
    this.array.set(value, offset2);
    return this;
  }
  getX(index) {
    let x2 = this.array[index * this.itemSize];
    if (this.normalized) x2 = denormalize(x2, this.array);
    return x2;
  }
  setX(index, x2) {
    if (this.normalized) x2 = normalize(x2, this.array);
    this.array[index * this.itemSize] = x2;
    return this;
  }
  getY(index) {
    let y2 = this.array[index * this.itemSize + 1];
    if (this.normalized) y2 = denormalize(y2, this.array);
    return y2;
  }
  setY(index, y2) {
    if (this.normalized) y2 = normalize(y2, this.array);
    this.array[index * this.itemSize + 1] = y2;
    return this;
  }
  getZ(index) {
    let z2 = this.array[index * this.itemSize + 2];
    if (this.normalized) z2 = denormalize(z2, this.array);
    return z2;
  }
  setZ(index, z2) {
    if (this.normalized) z2 = normalize(z2, this.array);
    this.array[index * this.itemSize + 2] = z2;
    return this;
  }
  getW(index) {
    let w2 = this.array[index * this.itemSize + 3];
    if (this.normalized) w2 = denormalize(w2, this.array);
    return w2;
  }
  setW(index, w2) {
    if (this.normalized) w2 = normalize(w2, this.array);
    this.array[index * this.itemSize + 3] = w2;
    return this;
  }
  setXY(index, x2, y2) {
    index *= this.itemSize;
    if (this.normalized) {
      x2 = normalize(x2, this.array);
      y2 = normalize(y2, this.array);
    }
    this.array[index + 0] = x2;
    this.array[index + 1] = y2;
    return this;
  }
  setXYZ(index, x2, y2, z2) {
    index *= this.itemSize;
    if (this.normalized) {
      x2 = normalize(x2, this.array);
      y2 = normalize(y2, this.array);
      z2 = normalize(z2, this.array);
    }
    this.array[index + 0] = x2;
    this.array[index + 1] = y2;
    this.array[index + 2] = z2;
    return this;
  }
  setXYZW(index, x2, y2, z2, w2) {
    index *= this.itemSize;
    if (this.normalized) {
      x2 = normalize(x2, this.array);
      y2 = normalize(y2, this.array);
      z2 = normalize(z2, this.array);
      w2 = normalize(w2, this.array);
    }
    this.array[index + 0] = x2;
    this.array[index + 1] = y2;
    this.array[index + 2] = z2;
    this.array[index + 3] = w2;
    return this;
  }
  onUpload(callback) {
    this.onUploadCallback = callback;
    return this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const data = {
      itemSize: this.itemSize,
      type: this.array.constructor.name,
      array: Array.from(this.array),
      normalized: this.normalized
    };
    if (this.name !== "") data.name = this.name;
    if (this.usage !== StaticDrawUsage) data.usage = this.usage;
    if (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;
    return data;
  }
  // @deprecated
  copyColorsArray() {
    console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.");
  }
  copyVector2sArray() {
    console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.");
  }
  copyVector3sArray() {
    console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.");
  }
  copyVector4sArray() {
    console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.");
  }
}
class Uint16BufferAttribute extends BufferAttribute {
  constructor(array2, itemSize, normalized) {
    super(new Uint16Array(array2), itemSize, normalized);
  }
}
class Uint32BufferAttribute extends BufferAttribute {
  constructor(array2, itemSize, normalized) {
    super(new Uint32Array(array2), itemSize, normalized);
  }
}
class Float32BufferAttribute extends BufferAttribute {
  constructor(array2, itemSize, normalized) {
    super(new Float32Array(array2), itemSize, normalized);
  }
}
let _id$1 = 0;
const _m1 = /* @__PURE__ */ new Matrix4();
const _obj = /* @__PURE__ */ new Object3D();
const _offset = /* @__PURE__ */ new Vector3();
const _box$1 = /* @__PURE__ */ new Box3();
const _boxMorphTargets = /* @__PURE__ */ new Box3();
const _vector$8 = /* @__PURE__ */ new Vector3();
class BufferGeometry extends EventDispatcher {
  constructor() {
    super();
    this.isBufferGeometry = true;
    Object.defineProperty(this, "id", { value: _id$1++ });
    this.uuid = generateUUID();
    this.name = "";
    this.type = "BufferGeometry";
    this.index = null;
    this.attributes = {};
    this.morphAttributes = {};
    this.morphTargetsRelative = false;
    this.groups = [];
    this.boundingBox = null;
    this.boundingSphere = null;
    this.drawRange = { start: 0, count: Infinity };
    this.userData = {};
  }
  getIndex() {
    return this.index;
  }
  setIndex(index) {
    if (Array.isArray(index)) {
      this.index = new (arrayNeedsUint32(index) ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);
    } else {
      this.index = index;
    }
    return this;
  }
  getAttribute(name) {
    return this.attributes[name];
  }
  setAttribute(name, attribute) {
    this.attributes[name] = attribute;
    return this;
  }
  deleteAttribute(name) {
    delete this.attributes[name];
    return this;
  }
  hasAttribute(name) {
    return this.attributes[name] !== void 0;
  }
  addGroup(start, count, materialIndex = 0) {
    this.groups.push({
      start,
      count,
      materialIndex
    });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(start, count) {
    this.drawRange.start = start;
    this.drawRange.count = count;
  }
  applyMatrix4(matrix) {
    const position = this.attributes.position;
    if (position !== void 0) {
      position.applyMatrix4(matrix);
      position.needsUpdate = true;
    }
    const normal = this.attributes.normal;
    if (normal !== void 0) {
      const normalMatrix = new Matrix3().getNormalMatrix(matrix);
      normal.applyNormalMatrix(normalMatrix);
      normal.needsUpdate = true;
    }
    const tangent = this.attributes.tangent;
    if (tangent !== void 0) {
      tangent.transformDirection(matrix);
      tangent.needsUpdate = true;
    }
    if (this.boundingBox !== null) {
      this.computeBoundingBox();
    }
    if (this.boundingSphere !== null) {
      this.computeBoundingSphere();
    }
    return this;
  }
  applyQuaternion(q2) {
    _m1.makeRotationFromQuaternion(q2);
    this.applyMatrix4(_m1);
    return this;
  }
  rotateX(angle) {
    _m1.makeRotationX(angle);
    this.applyMatrix4(_m1);
    return this;
  }
  rotateY(angle) {
    _m1.makeRotationY(angle);
    this.applyMatrix4(_m1);
    return this;
  }
  rotateZ(angle) {
    _m1.makeRotationZ(angle);
    this.applyMatrix4(_m1);
    return this;
  }
  translate(x2, y2, z2) {
    _m1.makeTranslation(x2, y2, z2);
    this.applyMatrix4(_m1);
    return this;
  }
  scale(x2, y2, z2) {
    _m1.makeScale(x2, y2, z2);
    this.applyMatrix4(_m1);
    return this;
  }
  lookAt(vector) {
    _obj.lookAt(vector);
    _obj.updateMatrix();
    this.applyMatrix4(_obj.matrix);
    return this;
  }
  center() {
    this.computeBoundingBox();
    this.boundingBox.getCenter(_offset).negate();
    this.translate(_offset.x, _offset.y, _offset.z);
    return this;
  }
  setFromPoints(points) {
    const position = [];
    for (let i = 0, l2 = points.length; i < l2; i++) {
      const point = points[i];
      position.push(point.x, point.y, point.z || 0);
    }
    this.setAttribute("position", new Float32BufferAttribute(position, 3));
    return this;
  }
  computeBoundingBox() {
    if (this.boundingBox === null) {
      this.boundingBox = new Box3();
    }
    const position = this.attributes.position;
    const morphAttributesPosition = this.morphAttributes.position;
    if (position && position.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this);
      this.boundingBox.set(
        new Vector3(-Infinity, -Infinity, -Infinity),
        new Vector3(Infinity, Infinity, Infinity)
      );
      return;
    }
    if (position !== void 0) {
      this.boundingBox.setFromBufferAttribute(position);
      if (morphAttributesPosition) {
        for (let i = 0, il2 = morphAttributesPosition.length; i < il2; i++) {
          const morphAttribute = morphAttributesPosition[i];
          _box$1.setFromBufferAttribute(morphAttribute);
          if (this.morphTargetsRelative) {
            _vector$8.addVectors(this.boundingBox.min, _box$1.min);
            this.boundingBox.expandByPoint(_vector$8);
            _vector$8.addVectors(this.boundingBox.max, _box$1.max);
            this.boundingBox.expandByPoint(_vector$8);
          } else {
            this.boundingBox.expandByPoint(_box$1.min);
            this.boundingBox.expandByPoint(_box$1.max);
          }
        }
      }
    } else {
      this.boundingBox.makeEmpty();
    }
    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {
      console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
  }
  computeBoundingSphere() {
    if (this.boundingSphere === null) {
      this.boundingSphere = new Sphere();
    }
    const position = this.attributes.position;
    const morphAttributesPosition = this.morphAttributes.position;
    if (position && position.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this);
      this.boundingSphere.set(new Vector3(), Infinity);
      return;
    }
    if (position) {
      const center = this.boundingSphere.center;
      _box$1.setFromBufferAttribute(position);
      if (morphAttributesPosition) {
        for (let i = 0, il2 = morphAttributesPosition.length; i < il2; i++) {
          const morphAttribute = morphAttributesPosition[i];
          _boxMorphTargets.setFromBufferAttribute(morphAttribute);
          if (this.morphTargetsRelative) {
            _vector$8.addVectors(_box$1.min, _boxMorphTargets.min);
            _box$1.expandByPoint(_vector$8);
            _vector$8.addVectors(_box$1.max, _boxMorphTargets.max);
            _box$1.expandByPoint(_vector$8);
          } else {
            _box$1.expandByPoint(_boxMorphTargets.min);
            _box$1.expandByPoint(_boxMorphTargets.max);
          }
        }
      }
      _box$1.getCenter(center);
      let maxRadiusSq = 0;
      for (let i = 0, il2 = position.count; i < il2; i++) {
        _vector$8.fromBufferAttribute(position, i);
        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));
      }
      if (morphAttributesPosition) {
        for (let i = 0, il2 = morphAttributesPosition.length; i < il2; i++) {
          const morphAttribute = morphAttributesPosition[i];
          const morphTargetsRelative = this.morphTargetsRelative;
          for (let j2 = 0, jl2 = morphAttribute.count; j2 < jl2; j2++) {
            _vector$8.fromBufferAttribute(morphAttribute, j2);
            if (morphTargetsRelative) {
              _offset.fromBufferAttribute(position, j2);
              _vector$8.add(_offset);
            }
            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));
          }
        }
      }
      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);
      if (isNaN(this.boundingSphere.radius)) {
        console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
      }
    }
  }
  computeTangents() {
    const index = this.index;
    const attributes = this.attributes;
    if (index === null || attributes.position === void 0 || attributes.normal === void 0 || attributes.uv === void 0) {
      console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
      return;
    }
    const indices = index.array;
    const positions = attributes.position.array;
    const normals = attributes.normal.array;
    const uvs = attributes.uv.array;
    const nVertices = positions.length / 3;
    if (this.hasAttribute("tangent") === false) {
      this.setAttribute("tangent", new BufferAttribute(new Float32Array(4 * nVertices), 4));
    }
    const tangents = this.getAttribute("tangent").array;
    const tan1 = [], tan2 = [];
    for (let i = 0; i < nVertices; i++) {
      tan1[i] = new Vector3();
      tan2[i] = new Vector3();
    }
    const vA2 = new Vector3(), vB2 = new Vector3(), vC2 = new Vector3(), uvA = new Vector2(), uvB = new Vector2(), uvC = new Vector2(), sdir = new Vector3(), tdir = new Vector3();
    function handleTriangle(a, b2, c2) {
      vA2.fromArray(positions, a * 3);
      vB2.fromArray(positions, b2 * 3);
      vC2.fromArray(positions, c2 * 3);
      uvA.fromArray(uvs, a * 2);
      uvB.fromArray(uvs, b2 * 2);
      uvC.fromArray(uvs, c2 * 2);
      vB2.sub(vA2);
      vC2.sub(vA2);
      uvB.sub(uvA);
      uvC.sub(uvA);
      const r2 = 1 / (uvB.x * uvC.y - uvC.x * uvB.y);
      if (!isFinite(r2)) return;
      sdir.copy(vB2).multiplyScalar(uvC.y).addScaledVector(vC2, -uvB.y).multiplyScalar(r2);
      tdir.copy(vC2).multiplyScalar(uvB.x).addScaledVector(vB2, -uvC.x).multiplyScalar(r2);
      tan1[a].add(sdir);
      tan1[b2].add(sdir);
      tan1[c2].add(sdir);
      tan2[a].add(tdir);
      tan2[b2].add(tdir);
      tan2[c2].add(tdir);
    }
    let groups = this.groups;
    if (groups.length === 0) {
      groups = [{
        start: 0,
        count: indices.length
      }];
    }
    for (let i = 0, il2 = groups.length; i < il2; ++i) {
      const group = groups[i];
      const start = group.start;
      const count = group.count;
      for (let j2 = start, jl2 = start + count; j2 < jl2; j2 += 3) {
        handleTriangle(
          indices[j2 + 0],
          indices[j2 + 1],
          indices[j2 + 2]
        );
      }
    }
    const tmp = new Vector3(), tmp2 = new Vector3();
    const n2 = new Vector3(), n22 = new Vector3();
    function handleVertex(v2) {
      n2.fromArray(normals, v2 * 3);
      n22.copy(n2);
      const t2 = tan1[v2];
      tmp.copy(t2);
      tmp.sub(n2.multiplyScalar(n2.dot(t2))).normalize();
      tmp2.crossVectors(n22, t2);
      const test2 = tmp2.dot(tan2[v2]);
      const w2 = test2 < 0 ? -1 : 1;
      tangents[v2 * 4] = tmp.x;
      tangents[v2 * 4 + 1] = tmp.y;
      tangents[v2 * 4 + 2] = tmp.z;
      tangents[v2 * 4 + 3] = w2;
    }
    for (let i = 0, il2 = groups.length; i < il2; ++i) {
      const group = groups[i];
      const start = group.start;
      const count = group.count;
      for (let j2 = start, jl2 = start + count; j2 < jl2; j2 += 3) {
        handleVertex(indices[j2 + 0]);
        handleVertex(indices[j2 + 1]);
        handleVertex(indices[j2 + 2]);
      }
    }
  }
  computeVertexNormals() {
    const index = this.index;
    const positionAttribute = this.getAttribute("position");
    if (positionAttribute !== void 0) {
      let normalAttribute = this.getAttribute("normal");
      if (normalAttribute === void 0) {
        normalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);
        this.setAttribute("normal", normalAttribute);
      } else {
        for (let i = 0, il2 = normalAttribute.count; i < il2; i++) {
          normalAttribute.setXYZ(i, 0, 0, 0);
        }
      }
      const pA2 = new Vector3(), pB = new Vector3(), pC2 = new Vector3();
      const nA = new Vector3(), nB = new Vector3(), nC = new Vector3();
      const cb2 = new Vector3(), ab2 = new Vector3();
      if (index) {
        for (let i = 0, il2 = index.count; i < il2; i += 3) {
          const vA2 = index.getX(i + 0);
          const vB2 = index.getX(i + 1);
          const vC2 = index.getX(i + 2);
          pA2.fromBufferAttribute(positionAttribute, vA2);
          pB.fromBufferAttribute(positionAttribute, vB2);
          pC2.fromBufferAttribute(positionAttribute, vC2);
          cb2.subVectors(pC2, pB);
          ab2.subVectors(pA2, pB);
          cb2.cross(ab2);
          nA.fromBufferAttribute(normalAttribute, vA2);
          nB.fromBufferAttribute(normalAttribute, vB2);
          nC.fromBufferAttribute(normalAttribute, vC2);
          nA.add(cb2);
          nB.add(cb2);
          nC.add(cb2);
          normalAttribute.setXYZ(vA2, nA.x, nA.y, nA.z);
          normalAttribute.setXYZ(vB2, nB.x, nB.y, nB.z);
          normalAttribute.setXYZ(vC2, nC.x, nC.y, nC.z);
        }
      } else {
        for (let i = 0, il2 = positionAttribute.count; i < il2; i += 3) {
          pA2.fromBufferAttribute(positionAttribute, i + 0);
          pB.fromBufferAttribute(positionAttribute, i + 1);
          pC2.fromBufferAttribute(positionAttribute, i + 2);
          cb2.subVectors(pC2, pB);
          ab2.subVectors(pA2, pB);
          cb2.cross(ab2);
          normalAttribute.setXYZ(i + 0, cb2.x, cb2.y, cb2.z);
          normalAttribute.setXYZ(i + 1, cb2.x, cb2.y, cb2.z);
          normalAttribute.setXYZ(i + 2, cb2.x, cb2.y, cb2.z);
        }
      }
      this.normalizeNormals();
      normalAttribute.needsUpdate = true;
    }
  }
  // @deprecated since r144
  merge() {
    console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.");
    return this;
  }
  normalizeNormals() {
    const normals = this.attributes.normal;
    for (let i = 0, il2 = normals.count; i < il2; i++) {
      _vector$8.fromBufferAttribute(normals, i);
      _vector$8.normalize();
      normals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);
    }
  }
  toNonIndexed() {
    function convertBufferAttribute(attribute, indices2) {
      const array2 = attribute.array;
      const itemSize = attribute.itemSize;
      const normalized = attribute.normalized;
      const array22 = new array2.constructor(indices2.length * itemSize);
      let index = 0, index2 = 0;
      for (let i = 0, l2 = indices2.length; i < l2; i++) {
        if (attribute.isInterleavedBufferAttribute) {
          index = indices2[i] * attribute.data.stride + attribute.offset;
        } else {
          index = indices2[i] * itemSize;
        }
        for (let j2 = 0; j2 < itemSize; j2++) {
          array22[index2++] = array2[index++];
        }
      }
      return new BufferAttribute(array22, itemSize, normalized);
    }
    if (this.index === null) {
      console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.");
      return this;
    }
    const geometry2 = new BufferGeometry();
    const indices = this.index.array;
    const attributes = this.attributes;
    for (const name in attributes) {
      const attribute = attributes[name];
      const newAttribute = convertBufferAttribute(attribute, indices);
      geometry2.setAttribute(name, newAttribute);
    }
    const morphAttributes = this.morphAttributes;
    for (const name in morphAttributes) {
      const morphArray = [];
      const morphAttribute = morphAttributes[name];
      for (let i = 0, il2 = morphAttribute.length; i < il2; i++) {
        const attribute = morphAttribute[i];
        const newAttribute = convertBufferAttribute(attribute, indices);
        morphArray.push(newAttribute);
      }
      geometry2.morphAttributes[name] = morphArray;
    }
    geometry2.morphTargetsRelative = this.morphTargetsRelative;
    const groups = this.groups;
    for (let i = 0, l2 = groups.length; i < l2; i++) {
      const group = groups[i];
      geometry2.addGroup(group.start, group.count, group.materialIndex);
    }
    return geometry2;
  }
  toJSON() {
    const data = {
      metadata: {
        version: 4.5,
        type: "BufferGeometry",
        generator: "BufferGeometry.toJSON"
      }
    };
    data.uuid = this.uuid;
    data.type = this.type;
    if (this.name !== "") data.name = this.name;
    if (Object.keys(this.userData).length > 0) data.userData = this.userData;
    if (this.parameters !== void 0) {
      const parameters = this.parameters;
      for (const key in parameters) {
        if (parameters[key] !== void 0) data[key] = parameters[key];
      }
      return data;
    }
    data.data = { attributes: {} };
    const index = this.index;
    if (index !== null) {
      data.data.index = {
        type: index.array.constructor.name,
        array: Array.prototype.slice.call(index.array)
      };
    }
    const attributes = this.attributes;
    for (const key in attributes) {
      const attribute = attributes[key];
      data.data.attributes[key] = attribute.toJSON(data.data);
    }
    const morphAttributes = {};
    let hasMorphAttributes = false;
    for (const key in this.morphAttributes) {
      const attributeArray = this.morphAttributes[key];
      const array2 = [];
      for (let i = 0, il2 = attributeArray.length; i < il2; i++) {
        const attribute = attributeArray[i];
        array2.push(attribute.toJSON(data.data));
      }
      if (array2.length > 0) {
        morphAttributes[key] = array2;
        hasMorphAttributes = true;
      }
    }
    if (hasMorphAttributes) {
      data.data.morphAttributes = morphAttributes;
      data.data.morphTargetsRelative = this.morphTargetsRelative;
    }
    const groups = this.groups;
    if (groups.length > 0) {
      data.data.groups = JSON.parse(JSON.stringify(groups));
    }
    const boundingSphere = this.boundingSphere;
    if (boundingSphere !== null) {
      data.data.boundingSphere = {
        center: boundingSphere.center.toArray(),
        radius: boundingSphere.radius
      };
    }
    return data;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(source) {
    this.index = null;
    this.attributes = {};
    this.morphAttributes = {};
    this.groups = [];
    this.boundingBox = null;
    this.boundingSphere = null;
    const data = {};
    this.name = source.name;
    const index = source.index;
    if (index !== null) {
      this.setIndex(index.clone(data));
    }
    const attributes = source.attributes;
    for (const name in attributes) {
      const attribute = attributes[name];
      this.setAttribute(name, attribute.clone(data));
    }
    const morphAttributes = source.morphAttributes;
    for (const name in morphAttributes) {
      const array2 = [];
      const morphAttribute = morphAttributes[name];
      for (let i = 0, l2 = morphAttribute.length; i < l2; i++) {
        array2.push(morphAttribute[i].clone(data));
      }
      this.morphAttributes[name] = array2;
    }
    this.morphTargetsRelative = source.morphTargetsRelative;
    const groups = source.groups;
    for (let i = 0, l2 = groups.length; i < l2; i++) {
      const group = groups[i];
      this.addGroup(group.start, group.count, group.materialIndex);
    }
    const boundingBox = source.boundingBox;
    if (boundingBox !== null) {
      this.boundingBox = boundingBox.clone();
    }
    const boundingSphere = source.boundingSphere;
    if (boundingSphere !== null) {
      this.boundingSphere = boundingSphere.clone();
    }
    this.drawRange.start = source.drawRange.start;
    this.drawRange.count = source.drawRange.count;
    this.userData = source.userData;
    return this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const _inverseMatrix$2 = /* @__PURE__ */ new Matrix4();
const _ray$2 = /* @__PURE__ */ new Ray();
const _sphere$3 = /* @__PURE__ */ new Sphere();
const _sphereHitAt = /* @__PURE__ */ new Vector3();
const _vA$1 = /* @__PURE__ */ new Vector3();
const _vB$1 = /* @__PURE__ */ new Vector3();
const _vC$1 = /* @__PURE__ */ new Vector3();
const _tempA = /* @__PURE__ */ new Vector3();
const _morphA = /* @__PURE__ */ new Vector3();
const _uvA$1 = /* @__PURE__ */ new Vector2();
const _uvB$1 = /* @__PURE__ */ new Vector2();
const _uvC$1 = /* @__PURE__ */ new Vector2();
const _intersectionPoint = /* @__PURE__ */ new Vector3();
const _intersectionPointWorld = /* @__PURE__ */ new Vector3();
class Mesh extends Object3D {
  constructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {
    super();
    this.isMesh = true;
    this.type = "Mesh";
    this.geometry = geometry;
    this.material = material;
    this.updateMorphTargets();
  }
  copy(source, recursive) {
    super.copy(source, recursive);
    if (source.morphTargetInfluences !== void 0) {
      this.morphTargetInfluences = source.morphTargetInfluences.slice();
    }
    if (source.morphTargetDictionary !== void 0) {
      this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);
    }
    this.material = source.material;
    this.geometry = source.geometry;
    return this;
  }
  updateMorphTargets() {
    const geometry = this.geometry;
    const morphAttributes = geometry.morphAttributes;
    const keys2 = Object.keys(morphAttributes);
    if (keys2.length > 0) {
      const morphAttribute = morphAttributes[keys2[0]];
      if (morphAttribute !== void 0) {
        this.morphTargetInfluences = [];
        this.morphTargetDictionary = {};
        for (let m2 = 0, ml2 = morphAttribute.length; m2 < ml2; m2++) {
          const name = morphAttribute[m2].name || String(m2);
          this.morphTargetInfluences.push(0);
          this.morphTargetDictionary[name] = m2;
        }
      }
    }
  }
  getVertexPosition(index, target) {
    const geometry = this.geometry;
    const position = geometry.attributes.position;
    const morphPosition = geometry.morphAttributes.position;
    const morphTargetsRelative = geometry.morphTargetsRelative;
    target.fromBufferAttribute(position, index);
    const morphInfluences = this.morphTargetInfluences;
    if (morphPosition && morphInfluences) {
      _morphA.set(0, 0, 0);
      for (let i = 0, il2 = morphPosition.length; i < il2; i++) {
        const influence = morphInfluences[i];
        const morphAttribute = morphPosition[i];
        if (influence === 0) continue;
        _tempA.fromBufferAttribute(morphAttribute, index);
        if (morphTargetsRelative) {
          _morphA.addScaledVector(_tempA, influence);
        } else {
          _morphA.addScaledVector(_tempA.sub(target), influence);
        }
      }
      target.add(_morphA);
    }
    if (this.isSkinnedMesh) {
      this.boneTransform(index, target);
    }
    return target;
  }
  raycast(raycaster, intersects) {
    const geometry = this.geometry;
    const material = this.material;
    const matrixWorld = this.matrixWorld;
    if (material === void 0) return;
    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();
    _sphere$3.copy(geometry.boundingSphere);
    _sphere$3.applyMatrix4(matrixWorld);
    _ray$2.copy(raycaster.ray).recast(raycaster.near);
    if (_sphere$3.containsPoint(_ray$2.origin) === false) {
      if (_ray$2.intersectSphere(_sphere$3, _sphereHitAt) === null) return;
      if (_ray$2.origin.distanceToSquared(_sphereHitAt) > (raycaster.far - raycaster.near) ** 2) return;
    }
    _inverseMatrix$2.copy(matrixWorld).invert();
    _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);
    if (geometry.boundingBox !== null) {
      if (_ray$2.intersectsBox(geometry.boundingBox) === false) return;
    }
    let intersection;
    const index = geometry.index;
    const position = geometry.attributes.position;
    const uv = geometry.attributes.uv;
    const uv2 = geometry.attributes.uv2;
    const groups = geometry.groups;
    const drawRange = geometry.drawRange;
    if (index !== null) {
      if (Array.isArray(material)) {
        for (let i = 0, il2 = groups.length; i < il2; i++) {
          const group = groups[i];
          const groupMaterial = material[group.materialIndex];
          const start = Math.max(group.start, drawRange.start);
          const end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));
          for (let j2 = start, jl2 = end; j2 < jl2; j2 += 3) {
            const a = index.getX(j2);
            const b2 = index.getX(j2 + 1);
            const c2 = index.getX(j2 + 2);
            intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, uv, uv2, a, b2, c2);
            if (intersection) {
              intersection.faceIndex = Math.floor(j2 / 3);
              intersection.face.materialIndex = group.materialIndex;
              intersects.push(intersection);
            }
          }
        }
      } else {
        const start = Math.max(0, drawRange.start);
        const end = Math.min(index.count, drawRange.start + drawRange.count);
        for (let i = start, il2 = end; i < il2; i += 3) {
          const a = index.getX(i);
          const b2 = index.getX(i + 1);
          const c2 = index.getX(i + 2);
          intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, uv, uv2, a, b2, c2);
          if (intersection) {
            intersection.faceIndex = Math.floor(i / 3);
            intersects.push(intersection);
          }
        }
      }
    } else if (position !== void 0) {
      if (Array.isArray(material)) {
        for (let i = 0, il2 = groups.length; i < il2; i++) {
          const group = groups[i];
          const groupMaterial = material[group.materialIndex];
          const start = Math.max(group.start, drawRange.start);
          const end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));
          for (let j2 = start, jl2 = end; j2 < jl2; j2 += 3) {
            const a = j2;
            const b2 = j2 + 1;
            const c2 = j2 + 2;
            intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, uv, uv2, a, b2, c2);
            if (intersection) {
              intersection.faceIndex = Math.floor(j2 / 3);
              intersection.face.materialIndex = group.materialIndex;
              intersects.push(intersection);
            }
          }
        }
      } else {
        const start = Math.max(0, drawRange.start);
        const end = Math.min(position.count, drawRange.start + drawRange.count);
        for (let i = start, il2 = end; i < il2; i += 3) {
          const a = i;
          const b2 = i + 1;
          const c2 = i + 2;
          intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, uv, uv2, a, b2, c2);
          if (intersection) {
            intersection.faceIndex = Math.floor(i / 3);
            intersects.push(intersection);
          }
        }
      }
    }
  }
}
function checkIntersection(object2, material, raycaster, ray, pA2, pB, pC2, point) {
  let intersect;
  if (material.side === BackSide) {
    intersect = ray.intersectTriangle(pC2, pB, pA2, true, point);
  } else {
    intersect = ray.intersectTriangle(pA2, pB, pC2, material.side === FrontSide, point);
  }
  if (intersect === null) return null;
  _intersectionPointWorld.copy(point);
  _intersectionPointWorld.applyMatrix4(object2.matrixWorld);
  const distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);
  if (distance < raycaster.near || distance > raycaster.far) return null;
  return {
    distance,
    point: _intersectionPointWorld.clone(),
    object: object2
  };
}
function checkBufferGeometryIntersection(object2, material, raycaster, ray, uv, uv2, a, b2, c2) {
  object2.getVertexPosition(a, _vA$1);
  object2.getVertexPosition(b2, _vB$1);
  object2.getVertexPosition(c2, _vC$1);
  const intersection = checkIntersection(object2, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);
  if (intersection) {
    if (uv) {
      _uvA$1.fromBufferAttribute(uv, a);
      _uvB$1.fromBufferAttribute(uv, b2);
      _uvC$1.fromBufferAttribute(uv, c2);
      intersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());
    }
    if (uv2) {
      _uvA$1.fromBufferAttribute(uv2, a);
      _uvB$1.fromBufferAttribute(uv2, b2);
      _uvC$1.fromBufferAttribute(uv2, c2);
      intersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());
    }
    const face = {
      a,
      b: b2,
      c: c2,
      normal: new Vector3(),
      materialIndex: 0
    };
    Triangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);
    intersection.face = face;
  }
  return intersection;
}
class BoxGeometry extends BufferGeometry {
  constructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {
    super();
    this.type = "BoxGeometry";
    this.parameters = {
      width,
      height,
      depth,
      widthSegments,
      heightSegments,
      depthSegments
    };
    const scope = this;
    widthSegments = Math.floor(widthSegments);
    heightSegments = Math.floor(heightSegments);
    depthSegments = Math.floor(depthSegments);
    const indices = [];
    const vertices = [];
    const normals = [];
    const uvs = [];
    let numberOfVertices = 0;
    let groupStart = 0;
    buildPlane("z", "y", "x", -1, -1, depth, height, width, depthSegments, heightSegments, 0);
    buildPlane("z", "y", "x", 1, -1, depth, height, -width, depthSegments, heightSegments, 1);
    buildPlane("x", "z", "y", 1, 1, width, depth, height, widthSegments, depthSegments, 2);
    buildPlane("x", "z", "y", 1, -1, width, depth, -height, widthSegments, depthSegments, 3);
    buildPlane("x", "y", "z", 1, -1, width, height, depth, widthSegments, heightSegments, 4);
    buildPlane("x", "y", "z", -1, -1, width, height, -depth, widthSegments, heightSegments, 5);
    this.setIndex(indices);
    this.setAttribute("position", new Float32BufferAttribute(vertices, 3));
    this.setAttribute("normal", new Float32BufferAttribute(normals, 3));
    this.setAttribute("uv", new Float32BufferAttribute(uvs, 2));
    function buildPlane(u2, v2, w2, udir, vdir, width2, height2, depth2, gridX, gridY, materialIndex) {
      const segmentWidth = width2 / gridX;
      const segmentHeight = height2 / gridY;
      const widthHalf = width2 / 2;
      const heightHalf = height2 / 2;
      const depthHalf = depth2 / 2;
      const gridX1 = gridX + 1;
      const gridY1 = gridY + 1;
      let vertexCounter = 0;
      let groupCount = 0;
      const vector = new Vector3();
      for (let iy = 0; iy < gridY1; iy++) {
        const y2 = iy * segmentHeight - heightHalf;
        for (let ix = 0; ix < gridX1; ix++) {
          const x2 = ix * segmentWidth - widthHalf;
          vector[u2] = x2 * udir;
          vector[v2] = y2 * vdir;
          vector[w2] = depthHalf;
          vertices.push(vector.x, vector.y, vector.z);
          vector[u2] = 0;
          vector[v2] = 0;
          vector[w2] = depth2 > 0 ? 1 : -1;
          normals.push(vector.x, vector.y, vector.z);
          uvs.push(ix / gridX);
          uvs.push(1 - iy / gridY);
          vertexCounter += 1;
        }
      }
      for (let iy = 0; iy < gridY; iy++) {
        for (let ix = 0; ix < gridX; ix++) {
          const a = numberOfVertices + ix + gridX1 * iy;
          const b2 = numberOfVertices + ix + gridX1 * (iy + 1);
          const c2 = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);
          const d = numberOfVertices + (ix + 1) + gridX1 * iy;
          indices.push(a, b2, d);
          indices.push(b2, c2, d);
          groupCount += 6;
        }
      }
      scope.addGroup(groupStart, groupCount, materialIndex);
      groupStart += groupCount;
      numberOfVertices += vertexCounter;
    }
  }
  copy(source) {
    super.copy(source);
    this.parameters = Object.assign({}, source.parameters);
    return this;
  }
  static fromJSON(data) {
    return new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);
  }
}
function cloneUniforms(src) {
  const dst = {};
  for (const u2 in src) {
    dst[u2] = {};
    for (const p2 in src[u2]) {
      const property = src[u2][p2];
      if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {
        dst[u2][p2] = property.clone();
      } else if (Array.isArray(property)) {
        dst[u2][p2] = property.slice();
      } else {
        dst[u2][p2] = property;
      }
    }
  }
  return dst;
}
function mergeUniforms(uniforms) {
  const merged = {};
  for (let u2 = 0; u2 < uniforms.length; u2++) {
    const tmp = cloneUniforms(uniforms[u2]);
    for (const p2 in tmp) {
      merged[p2] = tmp[p2];
    }
  }
  return merged;
}
function cloneUniformsGroups(src) {
  const dst = [];
  for (let u2 = 0; u2 < src.length; u2++) {
    dst.push(src[u2].clone());
  }
  return dst;
}
function getUnlitUniformColorSpace(renderer) {
  if (renderer.getRenderTarget() === null) {
    return renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;
  }
  return LinearSRGBColorSpace;
}
const UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };
var default_vertex = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";
var default_fragment = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
class ShaderMaterial extends Material {
  constructor(parameters) {
    super();
    this.isShaderMaterial = true;
    this.type = "ShaderMaterial";
    this.defines = {};
    this.uniforms = {};
    this.uniformsGroups = [];
    this.vertexShader = default_vertex;
    this.fragmentShader = default_fragment;
    this.linewidth = 1;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.fog = false;
    this.lights = false;
    this.clipping = false;
    this.extensions = {
      derivatives: false,
      // set to use derivatives
      fragDepth: false,
      // set to use fragment depth values
      drawBuffers: false,
      // set to use draw buffers
      shaderTextureLOD: false
      // set to use shader texture LOD
    };
    this.defaultAttributeValues = {
      "color": [1, 1, 1],
      "uv": [0, 0],
      "uv2": [0, 0]
    };
    this.index0AttributeName = void 0;
    this.uniformsNeedUpdate = false;
    this.glslVersion = null;
    if (parameters !== void 0) {
      this.setValues(parameters);
    }
  }
  copy(source) {
    super.copy(source);
    this.fragmentShader = source.fragmentShader;
    this.vertexShader = source.vertexShader;
    this.uniforms = cloneUniforms(source.uniforms);
    this.uniformsGroups = cloneUniformsGroups(source.uniformsGroups);
    this.defines = Object.assign({}, source.defines);
    this.wireframe = source.wireframe;
    this.wireframeLinewidth = source.wireframeLinewidth;
    this.fog = source.fog;
    this.lights = source.lights;
    this.clipping = source.clipping;
    this.extensions = Object.assign({}, source.extensions);
    this.glslVersion = source.glslVersion;
    return this;
  }
  toJSON(meta) {
    const data = super.toJSON(meta);
    data.glslVersion = this.glslVersion;
    data.uniforms = {};
    for (const name in this.uniforms) {
      const uniform = this.uniforms[name];
      const value = uniform.value;
      if (value && value.isTexture) {
        data.uniforms[name] = {
          type: "t",
          value: value.toJSON(meta).uuid
        };
      } else if (value && value.isColor) {
        data.uniforms[name] = {
          type: "c",
          value: value.getHex()
        };
      } else if (value && value.isVector2) {
        data.uniforms[name] = {
          type: "v2",
          value: value.toArray()
        };
      } else if (value && value.isVector3) {
        data.uniforms[name] = {
          type: "v3",
          value: value.toArray()
        };
      } else if (value && value.isVector4) {
        data.uniforms[name] = {
          type: "v4",
          value: value.toArray()
        };
      } else if (value && value.isMatrix3) {
        data.uniforms[name] = {
          type: "m3",
          value: value.toArray()
        };
      } else if (value && value.isMatrix4) {
        data.uniforms[name] = {
          type: "m4",
          value: value.toArray()
        };
      } else {
        data.uniforms[name] = {
          value
        };
      }
    }
    if (Object.keys(this.defines).length > 0) data.defines = this.defines;
    data.vertexShader = this.vertexShader;
    data.fragmentShader = this.fragmentShader;
    const extensions = {};
    for (const key in this.extensions) {
      if (this.extensions[key] === true) extensions[key] = true;
    }
    if (Object.keys(extensions).length > 0) data.extensions = extensions;
    return data;
  }
}
class Camera extends Object3D {
  constructor() {
    super();
    this.isCamera = true;
    this.type = "Camera";
    this.matrixWorldInverse = new Matrix4();
    this.projectionMatrix = new Matrix4();
    this.projectionMatrixInverse = new Matrix4();
  }
  copy(source, recursive) {
    super.copy(source, recursive);
    this.matrixWorldInverse.copy(source.matrixWorldInverse);
    this.projectionMatrix.copy(source.projectionMatrix);
    this.projectionMatrixInverse.copy(source.projectionMatrixInverse);
    return this;
  }
  getWorldDirection(target) {
    this.updateWorldMatrix(true, false);
    const e = this.matrixWorld.elements;
    return target.set(-e[8], -e[9], -e[10]).normalize();
  }
  updateMatrixWorld(force) {
    super.updateMatrixWorld(force);
    this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(updateParents, updateChildren) {
    super.updateWorldMatrix(updateParents, updateChildren);
    this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class PerspectiveCamera extends Camera {
  constructor(fov2 = 50, aspect2 = 1, near = 0.1, far = 2e3) {
    super();
    this.isPerspectiveCamera = true;
    this.type = "PerspectiveCamera";
    this.fov = fov2;
    this.zoom = 1;
    this.near = near;
    this.far = far;
    this.focus = 10;
    this.aspect = aspect2;
    this.view = null;
    this.filmGauge = 35;
    this.filmOffset = 0;
    this.updateProjectionMatrix();
  }
  copy(source, recursive) {
    super.copy(source, recursive);
    this.fov = source.fov;
    this.zoom = source.zoom;
    this.near = source.near;
    this.far = source.far;
    this.focus = source.focus;
    this.aspect = source.aspect;
    this.view = source.view === null ? null : Object.assign({}, source.view);
    this.filmGauge = source.filmGauge;
    this.filmOffset = source.filmOffset;
    return this;
  }
  /**
   * Sets the FOV by focal length in respect to the current .filmGauge.
   *
   * The default film gauge is 35, so that the focal length can be specified for
   * a 35mm (full frame) camera.
   *
   * Values for focal length and film gauge must have the same unit.
   */
  setFocalLength(focalLength) {
    const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;
    this.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);
    this.updateProjectionMatrix();
  }
  /**
   * Calculates the focal length from the current .fov and .filmGauge.
   */
  getFocalLength() {
    const vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);
    return 0.5 * this.getFilmHeight() / vExtentSlope;
  }
  getEffectiveFOV() {
    return RAD2DEG * 2 * Math.atan(
      Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom
    );
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  /**
   * Sets an offset in a larger frustum. This is useful for multi-window or
   * multi-monitor/multi-machine setups.
   *
   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
   * the monitors are in grid like this
   *
   *   +---+---+---+
   *   | A | B | C |
   *   +---+---+---+
   *   | D | E | F |
   *   +---+---+---+
   *
   * then for each monitor you would call it like this
   *
   *   const w = 1920;
   *   const h = 1080;
   *   const fullWidth = w * 3;
   *   const fullHeight = h * 2;
   *
   *   --A--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
   *   --B--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
   *   --C--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
   *   --D--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
   *   --E--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
   *   --F--
   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
   *
   *   Note there is no reason monitors have to be the same size or in a grid.
   */
  setViewOffset(fullWidth, fullHeight, x2, y2, width, height) {
    this.aspect = fullWidth / fullHeight;
    if (this.view === null) {
      this.view = {
        enabled: true,
        fullWidth: 1,
        fullHeight: 1,
        offsetX: 0,
        offsetY: 0,
        width: 1,
        height: 1
      };
    }
    this.view.enabled = true;
    this.view.fullWidth = fullWidth;
    this.view.fullHeight = fullHeight;
    this.view.offsetX = x2;
    this.view.offsetY = y2;
    this.view.width = width;
    this.view.height = height;
    this.updateProjectionMatrix();
  }
  clearViewOffset() {
    if (this.view !== null) {
      this.view.enabled = false;
    }
    this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const near = this.near;
    let top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;
    let height = 2 * top;
    let width = this.aspect * height;
    let left = -0.5 * width;
    const view = this.view;
    if (this.view !== null && this.view.enabled) {
      const fullWidth = view.fullWidth, fullHeight = view.fullHeight;
      left += view.offsetX * width / fullWidth;
      top -= view.offsetY * height / fullHeight;
      width *= view.width / fullWidth;
      height *= view.height / fullHeight;
    }
    const skew = this.filmOffset;
    if (skew !== 0) left += near * skew / this.getFilmWidth();
    this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);
    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(meta) {
    const data = super.toJSON(meta);
    data.object.fov = this.fov;
    data.object.zoom = this.zoom;
    data.object.near = this.near;
    data.object.far = this.far;
    data.object.focus = this.focus;
    data.object.aspect = this.aspect;
    if (this.view !== null) data.object.view = Object.assign({}, this.view);
    data.object.filmGauge = this.filmGauge;
    data.object.filmOffset = this.filmOffset;
    return data;
  }
}
const fov = -90;
const aspect = 1;
class CubeCamera extends Object3D {
  constructor(near, far, renderTarget) {
    super();
    this.type = "CubeCamera";
    this.renderTarget = renderTarget;
    const cameraPX = new PerspectiveCamera(fov, aspect, near, far);
    cameraPX.layers = this.layers;
    cameraPX.up.set(0, 1, 0);
    cameraPX.lookAt(1, 0, 0);
    this.add(cameraPX);
    const cameraNX = new PerspectiveCamera(fov, aspect, near, far);
    cameraNX.layers = this.layers;
    cameraNX.up.set(0, 1, 0);
    cameraNX.lookAt(-1, 0, 0);
    this.add(cameraNX);
    const cameraPY = new PerspectiveCamera(fov, aspect, near, far);
    cameraPY.layers = this.layers;
    cameraPY.up.set(0, 0, -1);
    cameraPY.lookAt(0, 1, 0);
    this.add(cameraPY);
    const cameraNY = new PerspectiveCamera(fov, aspect, near, far);
    cameraNY.layers = this.layers;
    cameraNY.up.set(0, 0, 1);
    cameraNY.lookAt(0, -1, 0);
    this.add(cameraNY);
    const cameraPZ = new PerspectiveCamera(fov, aspect, near, far);
    cameraPZ.layers = this.layers;
    cameraPZ.up.set(0, 1, 0);
    cameraPZ.lookAt(0, 0, 1);
    this.add(cameraPZ);
    const cameraNZ = new PerspectiveCamera(fov, aspect, near, far);
    cameraNZ.layers = this.layers;
    cameraNZ.up.set(0, 1, 0);
    cameraNZ.lookAt(0, 0, -1);
    this.add(cameraNZ);
  }
  update(renderer, scene) {
    if (this.parent === null) this.updateMatrixWorld();
    const renderTarget = this.renderTarget;
    const [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;
    const currentRenderTarget = renderer.getRenderTarget();
    const currentToneMapping = renderer.toneMapping;
    const currentXrEnabled = renderer.xr.enabled;
    renderer.toneMapping = NoToneMapping;
    renderer.xr.enabled = false;
    const generateMipmaps = renderTarget.texture.generateMipmaps;
    renderTarget.texture.generateMipmaps = false;
    renderer.setRenderTarget(renderTarget, 0);
    renderer.render(scene, cameraPX);
    renderer.setRenderTarget(renderTarget, 1);
    renderer.render(scene, cameraNX);
    renderer.setRenderTarget(renderTarget, 2);
    renderer.render(scene, cameraPY);
    renderer.setRenderTarget(renderTarget, 3);
    renderer.render(scene, cameraNY);
    renderer.setRenderTarget(renderTarget, 4);
    renderer.render(scene, cameraPZ);
    renderTarget.texture.generateMipmaps = generateMipmaps;
    renderer.setRenderTarget(renderTarget, 5);
    renderer.render(scene, cameraNZ);
    renderer.setRenderTarget(currentRenderTarget);
    renderer.toneMapping = currentToneMapping;
    renderer.xr.enabled = currentXrEnabled;
    renderTarget.texture.needsPMREMUpdate = true;
  }
}
class CubeTexture extends Texture {
  constructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format2, type, anisotropy, encoding) {
    images = images !== void 0 ? images : [];
    mapping = mapping !== void 0 ? mapping : CubeReflectionMapping;
    super(images, mapping, wrapS, wrapT, magFilter, minFilter, format2, type, anisotropy, encoding);
    this.isCubeTexture = true;
    this.flipY = false;
  }
  get images() {
    return this.image;
  }
  set images(value) {
    this.image = value;
  }
}
class WebGLCubeRenderTarget extends WebGLRenderTarget {
  constructor(size = 1, options = {}) {
    super(size, size, options);
    this.isWebGLCubeRenderTarget = true;
    const image = { width: size, height: size, depth: 1 };
    const images = [image, image, image, image, image, image];
    this.texture = new CubeTexture(images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);
    this.texture.isRenderTargetTexture = true;
    this.texture.generateMipmaps = options.generateMipmaps !== void 0 ? options.generateMipmaps : false;
    this.texture.minFilter = options.minFilter !== void 0 ? options.minFilter : LinearFilter;
  }
  fromEquirectangularTexture(renderer, texture) {
    this.texture.type = texture.type;
    this.texture.encoding = texture.encoding;
    this.texture.generateMipmaps = texture.generateMipmaps;
    this.texture.minFilter = texture.minFilter;
    this.texture.magFilter = texture.magFilter;
    const shader = {
      uniforms: {
        tEquirect: { value: null }
      },
      vertexShader: (
        /* glsl */
        `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`
      ),
      fragmentShader: (
        /* glsl */
        `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
      )
    };
    const geometry = new BoxGeometry(5, 5, 5);
    const material = new ShaderMaterial({
      name: "CubemapFromEquirect",
      uniforms: cloneUniforms(shader.uniforms),
      vertexShader: shader.vertexShader,
      fragmentShader: shader.fragmentShader,
      side: BackSide,
      blending: NoBlending
    });
    material.uniforms.tEquirect.value = texture;
    const mesh = new Mesh(geometry, material);
    const currentMinFilter = texture.minFilter;
    if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;
    const camera = new CubeCamera(1, 10, this);
    camera.update(renderer, mesh);
    texture.minFilter = currentMinFilter;
    mesh.geometry.dispose();
    mesh.material.dispose();
    return this;
  }
  clear(renderer, color, depth, stencil) {
    const currentRenderTarget = renderer.getRenderTarget();
    for (let i = 0; i < 6; i++) {
      renderer.setRenderTarget(this, i);
      renderer.clear(color, depth, stencil);
    }
    renderer.setRenderTarget(currentRenderTarget);
  }
}
const _vector1 = /* @__PURE__ */ new Vector3();
const _vector2 = /* @__PURE__ */ new Vector3();
const _normalMatrix = /* @__PURE__ */ new Matrix3();
class Plane {
  constructor(normal = new Vector3(1, 0, 0), constant = 0) {
    this.isPlane = true;
    this.normal = normal;
    this.constant = constant;
  }
  set(normal, constant) {
    this.normal.copy(normal);
    this.constant = constant;
    return this;
  }
  setComponents(x2, y2, z2, w2) {
    this.normal.set(x2, y2, z2);
    this.constant = w2;
    return this;
  }
  setFromNormalAndCoplanarPoint(normal, point) {
    this.normal.copy(normal);
    this.constant = -point.dot(this.normal);
    return this;
  }
  setFromCoplanarPoints(a, b2, c2) {
    const normal = _vector1.subVectors(c2, b2).cross(_vector2.subVectors(a, b2)).normalize();
    this.setFromNormalAndCoplanarPoint(normal, a);
    return this;
  }
  copy(plane) {
    this.normal.copy(plane.normal);
    this.constant = plane.constant;
    return this;
  }
  normalize() {
    const inverseNormalLength = 1 / this.normal.length();
    this.normal.multiplyScalar(inverseNormalLength);
    this.constant *= inverseNormalLength;
    return this;
  }
  negate() {
    this.constant *= -1;
    this.normal.negate();
    return this;
  }
  distanceToPoint(point) {
    return this.normal.dot(point) + this.constant;
  }
  distanceToSphere(sphere) {
    return this.distanceToPoint(sphere.center) - sphere.radius;
  }
  projectPoint(point, target) {
    return target.copy(point).addScaledVector(this.normal, -this.distanceToPoint(point));
  }
  intersectLine(line, target) {
    const direction = line.delta(_vector1);
    const denominator = this.normal.dot(direction);
    if (denominator === 0) {
      if (this.distanceToPoint(line.start) === 0) {
        return target.copy(line.start);
      }
      return null;
    }
    const t2 = -(line.start.dot(this.normal) + this.constant) / denominator;
    if (t2 < 0 || t2 > 1) {
      return null;
    }
    return target.copy(line.start).addScaledVector(direction, t2);
  }
  intersectsLine(line) {
    const startSign = this.distanceToPoint(line.start);
    const endSign = this.distanceToPoint(line.end);
    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;
  }
  intersectsBox(box) {
    return box.intersectsPlane(this);
  }
  intersectsSphere(sphere) {
    return sphere.intersectsPlane(this);
  }
  coplanarPoint(target) {
    return target.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(matrix, optionalNormalMatrix) {
    const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);
    const referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);
    const normal = this.normal.applyMatrix3(normalMatrix).normalize();
    this.constant = -referencePoint.dot(normal);
    return this;
  }
  translate(offset2) {
    this.constant -= offset2.dot(this.normal);
    return this;
  }
  equals(plane) {
    return plane.normal.equals(this.normal) && plane.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const _sphere$2 = /* @__PURE__ */ new Sphere();
const _vector$7 = /* @__PURE__ */ new Vector3();
class Frustum {
  constructor(p02 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {
    this.planes = [p02, p1, p2, p3, p4, p5];
  }
  set(p02, p1, p2, p3, p4, p5) {
    const planes = this.planes;
    planes[0].copy(p02);
    planes[1].copy(p1);
    planes[2].copy(p2);
    planes[3].copy(p3);
    planes[4].copy(p4);
    planes[5].copy(p5);
    return this;
  }
  copy(frustum) {
    const planes = this.planes;
    for (let i = 0; i < 6; i++) {
      planes[i].copy(frustum.planes[i]);
    }
    return this;
  }
  setFromProjectionMatrix(m2) {
    const planes = this.planes;
    const me2 = m2.elements;
    const me0 = me2[0], me1 = me2[1], me22 = me2[2], me3 = me2[3];
    const me4 = me2[4], me5 = me2[5], me6 = me2[6], me7 = me2[7];
    const me8 = me2[8], me9 = me2[9], me10 = me2[10], me11 = me2[11];
    const me12 = me2[12], me13 = me2[13], me14 = me2[14], me15 = me2[15];
    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();
    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();
    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();
    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();
    planes[4].setComponents(me3 - me22, me7 - me6, me11 - me10, me15 - me14).normalize();
    planes[5].setComponents(me3 + me22, me7 + me6, me11 + me10, me15 + me14).normalize();
    return this;
  }
  intersectsObject(object2) {
    const geometry = object2.geometry;
    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();
    _sphere$2.copy(geometry.boundingSphere).applyMatrix4(object2.matrixWorld);
    return this.intersectsSphere(_sphere$2);
  }
  intersectsSprite(sprite) {
    _sphere$2.center.set(0, 0, 0);
    _sphere$2.radius = 0.7071067811865476;
    _sphere$2.applyMatrix4(sprite.matrixWorld);
    return this.intersectsSphere(_sphere$2);
  }
  intersectsSphere(sphere) {
    const planes = this.planes;
    const center = sphere.center;
    const negRadius = -sphere.radius;
    for (let i = 0; i < 6; i++) {
      const distance = planes[i].distanceToPoint(center);
      if (distance < negRadius) {
        return false;
      }
    }
    return true;
  }
  intersectsBox(box) {
    const planes = this.planes;
    for (let i = 0; i < 6; i++) {
      const plane = planes[i];
      _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;
      _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;
      _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;
      if (plane.distanceToPoint(_vector$7) < 0) {
        return false;
      }
    }
    return true;
  }
  containsPoint(point) {
    const planes = this.planes;
    for (let i = 0; i < 6; i++) {
      if (planes[i].distanceToPoint(point) < 0) {
        return false;
      }
    }
    return true;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function WebGLAnimation() {
  let context = null;
  let isAnimating = false;
  let animationLoop = null;
  let requestId = null;
  function onAnimationFrame(time, frame) {
    animationLoop(time, frame);
    requestId = context.requestAnimationFrame(onAnimationFrame);
  }
  return {
    start: function() {
      if (isAnimating === true) return;
      if (animationLoop === null) return;
      requestId = context.requestAnimationFrame(onAnimationFrame);
      isAnimating = true;
    },
    stop: function() {
      context.cancelAnimationFrame(requestId);
      isAnimating = false;
    },
    setAnimationLoop: function(callback) {
      animationLoop = callback;
    },
    setContext: function(value) {
      context = value;
    }
  };
}
function WebGLAttributes(gl2, capabilities) {
  const isWebGL2 = capabilities.isWebGL2;
  const buffers = /* @__PURE__ */ new WeakMap();
  function createBuffer(attribute, bufferType) {
    const array2 = attribute.array;
    const usage = attribute.usage;
    const buffer = gl2.createBuffer();
    gl2.bindBuffer(bufferType, buffer);
    gl2.bufferData(bufferType, array2, usage);
    attribute.onUploadCallback();
    let type;
    if (array2 instanceof Float32Array) {
      type = 5126;
    } else if (array2 instanceof Uint16Array) {
      if (attribute.isFloat16BufferAttribute) {
        if (isWebGL2) {
          type = 5131;
        } else {
          throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");
        }
      } else {
        type = 5123;
      }
    } else if (array2 instanceof Int16Array) {
      type = 5122;
    } else if (array2 instanceof Uint32Array) {
      type = 5125;
    } else if (array2 instanceof Int32Array) {
      type = 5124;
    } else if (array2 instanceof Int8Array) {
      type = 5120;
    } else if (array2 instanceof Uint8Array) {
      type = 5121;
    } else if (array2 instanceof Uint8ClampedArray) {
      type = 5121;
    } else {
      throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + array2);
    }
    return {
      buffer,
      type,
      bytesPerElement: array2.BYTES_PER_ELEMENT,
      version: attribute.version
    };
  }
  function updateBuffer(buffer, attribute, bufferType) {
    const array2 = attribute.array;
    const updateRange = attribute.updateRange;
    gl2.bindBuffer(bufferType, buffer);
    if (updateRange.count === -1) {
      gl2.bufferSubData(bufferType, 0, array2);
    } else {
      if (isWebGL2) {
        gl2.bufferSubData(
          bufferType,
          updateRange.offset * array2.BYTES_PER_ELEMENT,
          array2,
          updateRange.offset,
          updateRange.count
        );
      } else {
        gl2.bufferSubData(
          bufferType,
          updateRange.offset * array2.BYTES_PER_ELEMENT,
          array2.subarray(updateRange.offset, updateRange.offset + updateRange.count)
        );
      }
      updateRange.count = -1;
    }
    attribute.onUploadCallback();
  }
  function get2(attribute) {
    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;
    return buffers.get(attribute);
  }
  function remove(attribute) {
    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;
    const data = buffers.get(attribute);
    if (data) {
      gl2.deleteBuffer(data.buffer);
      buffers.delete(attribute);
    }
  }
  function update(attribute, bufferType) {
    if (attribute.isGLBufferAttribute) {
      const cached = buffers.get(attribute);
      if (!cached || cached.version < attribute.version) {
        buffers.set(attribute, {
          buffer: attribute.buffer,
          type: attribute.type,
          bytesPerElement: attribute.elementSize,
          version: attribute.version
        });
      }
      return;
    }
    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;
    const data = buffers.get(attribute);
    if (data === void 0) {
      buffers.set(attribute, createBuffer(attribute, bufferType));
    } else if (data.version < attribute.version) {
      updateBuffer(data.buffer, attribute, bufferType);
      data.version = attribute.version;
    }
  }
  return {
    get: get2,
    remove,
    update
  };
}
class PlaneGeometry extends BufferGeometry {
  constructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {
    super();
    this.type = "PlaneGeometry";
    this.parameters = {
      width,
      height,
      widthSegments,
      heightSegments
    };
    const width_half = width / 2;
    const height_half = height / 2;
    const gridX = Math.floor(widthSegments);
    const gridY = Math.floor(heightSegments);
    const gridX1 = gridX + 1;
    const gridY1 = gridY + 1;
    const segment_width = width / gridX;
    const segment_height = height / gridY;
    const indices = [];
    const vertices = [];
    const normals = [];
    const uvs = [];
    for (let iy = 0; iy < gridY1; iy++) {
      const y2 = iy * segment_height - height_half;
      for (let ix = 0; ix < gridX1; ix++) {
        const x2 = ix * segment_width - width_half;
        vertices.push(x2, -y2, 0);
        normals.push(0, 0, 1);
        uvs.push(ix / gridX);
        uvs.push(1 - iy / gridY);
      }
    }
    for (let iy = 0; iy < gridY; iy++) {
      for (let ix = 0; ix < gridX; ix++) {
        const a = ix + gridX1 * iy;
        const b2 = ix + gridX1 * (iy + 1);
        const c2 = ix + 1 + gridX1 * (iy + 1);
        const d = ix + 1 + gridX1 * iy;
        indices.push(a, b2, d);
        indices.push(b2, c2, d);
      }
    }
    this.setIndex(indices);
    this.setAttribute("position", new Float32BufferAttribute(vertices, 3));
    this.setAttribute("normal", new Float32BufferAttribute(normals, 3));
    this.setAttribute("uv", new Float32BufferAttribute(uvs, 2));
  }
  copy(source) {
    super.copy(source);
    this.parameters = Object.assign({}, source.parameters);
    return this;
  }
  static fromJSON(data) {
    return new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);
  }
}
var alphamap_fragment = "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";
var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif";
var alphatest_fragment = "#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif";
var alphatest_pars_fragment = "#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif";
var aomap_fragment = "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif";
var aomap_pars_fragment = "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif";
var begin_vertex = "vec3 transformed = vec3( position );";
var beginnormal_vertex = "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif";
var bsdfs = "vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif";
var iridescence_fragment = "#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			 return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float R21 = R12;\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif";
var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = dFdx( surf_pos.xyz );\n		vec3 vSigmaY = dFdy( surf_pos.xyz );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif";
var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif";
var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";
var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif";
var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif";
var color_fragment = "#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif";
var color_pars_fragment = "#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif";
var color_pars_vertex = "#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif";
var color_vertex = "#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif";
var common = "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}";
var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif";
var defaultnormal_vertex = "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif";
var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif";
var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";
var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif";
var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif";
var encodings_fragment = "gl_FragColor = linearToOutputTexel( gl_FragColor );";
var encodings_pars_fragment = "vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}";
var envmap_fragment = "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif";
var envmap_common_pars_fragment = "#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif";
var envmap_pars_fragment = "#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif";
var envmap_pars_vertex = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif";
var envmap_vertex = "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif";
var fog_vertex = "#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif";
var fog_pars_vertex = "#ifdef USE_FOG\n	varying float vFogDepth;\n#endif";
var fog_fragment = "#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";
var fog_pars_fragment = "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif";
var gradientmap_pars_fragment = "#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}";
var lightmap_fragment = "#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif";
var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif";
var lights_lambert_fragment = "LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;";
var lights_lambert_pars_fragment = "varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert";
var lights_pars_begin = "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif";
var envmap_physical_pars_fragment = "#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif";
var lights_toon_fragment = "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;";
var lights_toon_pars_fragment = "varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon";
var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";
var lights_phong_pars_fragment = "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong";
var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif";
var lights_physical_pars_fragment = "struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	#ifdef USE_IRIDESCENCE\n		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n	#else\n		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";
var lights_fragment_begin = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometry.viewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif";
var lights_fragment_maps = "#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif";
var lights_fragment_end = "#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";
var logdepthbuf_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";
var logdepthbuf_pars_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif";
var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif";
var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif";
var map_fragment = "#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif";
var map_pars_fragment = "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif";
var map_particle_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";
var map_particle_pars_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif";
var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif";
var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif";
var morphcolor_vertex = "#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif";
var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif";
var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif";
var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif";
var normal_fragment_begin = "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;";
var normal_fragment_maps = "#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif";
var normal_pars_fragment = "#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif";
var normal_pars_vertex = "#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif";
var normal_vertex = "#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif";
var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif";
var clearcoat_normal_fragment_begin = "#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif";
var clearcoat_normal_fragment_maps = "#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif";
var clearcoat_pars_fragment = "#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif";
var iridescence_pars_fragment = "#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif";
var output_fragment = "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );";
var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";
var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif";
var project_vertex = "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";
var dithering_fragment = "#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";
var dithering_pars_fragment = "#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif";
var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif";
var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif";
var shadowmap_pars_fragment = "#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif";
var shadowmap_pars_vertex = "#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif";
var shadowmap_vertex = "#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif";
var shadowmask_pars_fragment = "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}";
var skinbase_vertex = "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";
var skinning_pars_vertex = "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif";
var skinning_vertex = "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";
var skinnormal_vertex = "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif";
var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif";
var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif";
var tonemapping_fragment = "#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";
var tonemapping_pars_fragment = "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }";
var transmission_fragment = "#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif";
var transmission_pars_fragment = "#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		\n		vec2 lodFudge = pow( 1.95, lod ) / fullSize;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec2 fullSize = vec2( textureSize( sampler, 0 ) );\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif";
var uv_pars_fragment = "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif";
var uv_pars_vertex = "#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif";
var uv_vertex = "#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";
var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif";
var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif";
var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";
var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif";
const vertex$h = "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}";
const fragment$h = "uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}";
const vertex$g = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}";
const fragment$g = "#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}";
const vertex$f = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}";
const fragment$f = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}";
const vertex$e = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}";
const fragment$e = "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}";
const vertex$d = "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}";
const fragment$d = "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}";
const vertex$c = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}";
const fragment$c = "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}";
const vertex$b = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}";
const fragment$b = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}";
const vertex$a = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}";
const fragment$a = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}";
const vertex$9 = "#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}";
const fragment$9 = "#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}";
const vertex$8 = "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}";
const fragment$8 = "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}";
const vertex$7 = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}";
const fragment$7 = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}";
const vertex$6 = "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}";
const fragment$6 = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}";
const vertex$5 = "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}";
const fragment$5 = "#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}";
const vertex$4 = "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}";
const fragment$4 = "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}";
const vertex$3 = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}";
const fragment$3 = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}";
const vertex$2 = "#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}";
const fragment$2 = "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}";
const vertex$1 = "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}";
const fragment$1 = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}";
const ShaderChunk = {
  alphamap_fragment,
  alphamap_pars_fragment,
  alphatest_fragment,
  alphatest_pars_fragment,
  aomap_fragment,
  aomap_pars_fragment,
  begin_vertex,
  beginnormal_vertex,
  bsdfs,
  iridescence_fragment,
  bumpmap_pars_fragment,
  clipping_planes_fragment,
  clipping_planes_pars_fragment,
  clipping_planes_pars_vertex,
  clipping_planes_vertex,
  color_fragment,
  color_pars_fragment,
  color_pars_vertex,
  color_vertex,
  common,
  cube_uv_reflection_fragment,
  defaultnormal_vertex,
  displacementmap_pars_vertex,
  displacementmap_vertex,
  emissivemap_fragment,
  emissivemap_pars_fragment,
  encodings_fragment,
  encodings_pars_fragment,
  envmap_fragment,
  envmap_common_pars_fragment,
  envmap_pars_fragment,
  envmap_pars_vertex,
  envmap_physical_pars_fragment,
  envmap_vertex,
  fog_vertex,
  fog_pars_vertex,
  fog_fragment,
  fog_pars_fragment,
  gradientmap_pars_fragment,
  lightmap_fragment,
  lightmap_pars_fragment,
  lights_lambert_fragment,
  lights_lambert_pars_fragment,
  lights_pars_begin,
  lights_toon_fragment,
  lights_toon_pars_fragment,
  lights_phong_fragment,
  lights_phong_pars_fragment,
  lights_physical_fragment,
  lights_physical_pars_fragment,
  lights_fragment_begin,
  lights_fragment_maps,
  lights_fragment_end,
  logdepthbuf_fragment,
  logdepthbuf_pars_fragment,
  logdepthbuf_pars_vertex,
  logdepthbuf_vertex,
  map_fragment,
  map_pars_fragment,
  map_particle_fragment,
  map_particle_pars_fragment,
  metalnessmap_fragment,
  metalnessmap_pars_fragment,
  morphcolor_vertex,
  morphnormal_vertex,
  morphtarget_pars_vertex,
  morphtarget_vertex,
  normal_fragment_begin,
  normal_fragment_maps,
  normal_pars_fragment,
  normal_pars_vertex,
  normal_vertex,
  normalmap_pars_fragment,
  clearcoat_normal_fragment_begin,
  clearcoat_normal_fragment_maps,
  clearcoat_pars_fragment,
  iridescence_pars_fragment,
  output_fragment,
  packing,
  premultiplied_alpha_fragment,
  project_vertex,
  dithering_fragment,
  dithering_pars_fragment,
  roughnessmap_fragment,
  roughnessmap_pars_fragment,
  shadowmap_pars_fragment,
  shadowmap_pars_vertex,
  shadowmap_vertex,
  shadowmask_pars_fragment,
  skinbase_vertex,
  skinning_pars_vertex,
  skinning_vertex,
  skinnormal_vertex,
  specularmap_fragment,
  specularmap_pars_fragment,
  tonemapping_fragment,
  tonemapping_pars_fragment,
  transmission_fragment,
  transmission_pars_fragment,
  uv_pars_fragment,
  uv_pars_vertex,
  uv_vertex,
  uv2_pars_fragment,
  uv2_pars_vertex,
  uv2_vertex,
  worldpos_vertex,
  background_vert: vertex$h,
  background_frag: fragment$h,
  backgroundCube_vert: vertex$g,
  backgroundCube_frag: fragment$g,
  cube_vert: vertex$f,
  cube_frag: fragment$f,
  depth_vert: vertex$e,
  depth_frag: fragment$e,
  distanceRGBA_vert: vertex$d,
  distanceRGBA_frag: fragment$d,
  equirect_vert: vertex$c,
  equirect_frag: fragment$c,
  linedashed_vert: vertex$b,
  linedashed_frag: fragment$b,
  meshbasic_vert: vertex$a,
  meshbasic_frag: fragment$a,
  meshlambert_vert: vertex$9,
  meshlambert_frag: fragment$9,
  meshmatcap_vert: vertex$8,
  meshmatcap_frag: fragment$8,
  meshnormal_vert: vertex$7,
  meshnormal_frag: fragment$7,
  meshphong_vert: vertex$6,
  meshphong_frag: fragment$6,
  meshphysical_vert: vertex$5,
  meshphysical_frag: fragment$5,
  meshtoon_vert: vertex$4,
  meshtoon_frag: fragment$4,
  points_vert: vertex$3,
  points_frag: fragment$3,
  shadow_vert: vertex$2,
  shadow_frag: fragment$2,
  sprite_vert: vertex$1,
  sprite_frag: fragment$1
};
const UniformsLib = {
  common: {
    diffuse: { value: /* @__PURE__ */ new Color(16777215) },
    opacity: { value: 1 },
    map: { value: null },
    uvTransform: { value: /* @__PURE__ */ new Matrix3() },
    uv2Transform: { value: /* @__PURE__ */ new Matrix3() },
    alphaMap: { value: null },
    alphaTest: { value: 0 }
  },
  specularmap: {
    specularMap: { value: null }
  },
  envmap: {
    envMap: { value: null },
    flipEnvMap: { value: -1 },
    reflectivity: { value: 1 },
    // basic, lambert, phong
    ior: { value: 1.5 },
    // physical
    refractionRatio: { value: 0.98 }
    // basic, lambert, phong
  },
  aomap: {
    aoMap: { value: null },
    aoMapIntensity: { value: 1 }
  },
  lightmap: {
    lightMap: { value: null },
    lightMapIntensity: { value: 1 }
  },
  emissivemap: {
    emissiveMap: { value: null }
  },
  bumpmap: {
    bumpMap: { value: null },
    bumpScale: { value: 1 }
  },
  normalmap: {
    normalMap: { value: null },
    normalScale: { value: /* @__PURE__ */ new Vector2(1, 1) }
  },
  displacementmap: {
    displacementMap: { value: null },
    displacementScale: { value: 1 },
    displacementBias: { value: 0 }
  },
  roughnessmap: {
    roughnessMap: { value: null }
  },
  metalnessmap: {
    metalnessMap: { value: null }
  },
  gradientmap: {
    gradientMap: { value: null }
  },
  fog: {
    fogDensity: { value: 25e-5 },
    fogNear: { value: 1 },
    fogFar: { value: 2e3 },
    fogColor: { value: /* @__PURE__ */ new Color(16777215) }
  },
  lights: {
    ambientLightColor: { value: [] },
    lightProbe: { value: [] },
    directionalLights: { value: [], properties: {
      direction: {},
      color: {}
    } },
    directionalLightShadows: { value: [], properties: {
      shadowBias: {},
      shadowNormalBias: {},
      shadowRadius: {},
      shadowMapSize: {}
    } },
    directionalShadowMap: { value: [] },
    directionalShadowMatrix: { value: [] },
    spotLights: { value: [], properties: {
      color: {},
      position: {},
      direction: {},
      distance: {},
      coneCos: {},
      penumbraCos: {},
      decay: {}
    } },
    spotLightShadows: { value: [], properties: {
      shadowBias: {},
      shadowNormalBias: {},
      shadowRadius: {},
      shadowMapSize: {}
    } },
    spotLightMap: { value: [] },
    spotShadowMap: { value: [] },
    spotLightMatrix: { value: [] },
    pointLights: { value: [], properties: {
      color: {},
      position: {},
      decay: {},
      distance: {}
    } },
    pointLightShadows: { value: [], properties: {
      shadowBias: {},
      shadowNormalBias: {},
      shadowRadius: {},
      shadowMapSize: {},
      shadowCameraNear: {},
      shadowCameraFar: {}
    } },
    pointShadowMap: { value: [] },
    pointShadowMatrix: { value: [] },
    hemisphereLights: { value: [], properties: {
      direction: {},
      skyColor: {},
      groundColor: {}
    } },
    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
    rectAreaLights: { value: [], properties: {
      color: {},
      position: {},
      width: {},
      height: {}
    } },
    ltc_1: { value: null },
    ltc_2: { value: null }
  },
  points: {
    diffuse: { value: /* @__PURE__ */ new Color(16777215) },
    opacity: { value: 1 },
    size: { value: 1 },
    scale: { value: 1 },
    map: { value: null },
    alphaMap: { value: null },
    alphaTest: { value: 0 },
    uvTransform: { value: /* @__PURE__ */ new Matrix3() }
  },
  sprite: {
    diffuse: { value: /* @__PURE__ */ new Color(16777215) },
    opacity: { value: 1 },
    center: { value: /* @__PURE__ */ new Vector2(0.5, 0.5) },
    rotation: { value: 0 },
    map: { value: null },
    alphaMap: { value: null },
    alphaTest: { value: 0 },
    uvTransform: { value: /* @__PURE__ */ new Matrix3() }
  }
};
const ShaderLib = {
  basic: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.specularmap,
      UniformsLib.envmap,
      UniformsLib.aomap,
      UniformsLib.lightmap,
      UniformsLib.fog
    ]),
    vertexShader: ShaderChunk.meshbasic_vert,
    fragmentShader: ShaderChunk.meshbasic_frag
  },
  lambert: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.specularmap,
      UniformsLib.envmap,
      UniformsLib.aomap,
      UniformsLib.lightmap,
      UniformsLib.emissivemap,
      UniformsLib.bumpmap,
      UniformsLib.normalmap,
      UniformsLib.displacementmap,
      UniformsLib.fog,
      UniformsLib.lights,
      {
        emissive: { value: /* @__PURE__ */ new Color(0) }
      }
    ]),
    vertexShader: ShaderChunk.meshlambert_vert,
    fragmentShader: ShaderChunk.meshlambert_frag
  },
  phong: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.specularmap,
      UniformsLib.envmap,
      UniformsLib.aomap,
      UniformsLib.lightmap,
      UniformsLib.emissivemap,
      UniformsLib.bumpmap,
      UniformsLib.normalmap,
      UniformsLib.displacementmap,
      UniformsLib.fog,
      UniformsLib.lights,
      {
        emissive: { value: /* @__PURE__ */ new Color(0) },
        specular: { value: /* @__PURE__ */ new Color(1118481) },
        shininess: { value: 30 }
      }
    ]),
    vertexShader: ShaderChunk.meshphong_vert,
    fragmentShader: ShaderChunk.meshphong_frag
  },
  standard: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.envmap,
      UniformsLib.aomap,
      UniformsLib.lightmap,
      UniformsLib.emissivemap,
      UniformsLib.bumpmap,
      UniformsLib.normalmap,
      UniformsLib.displacementmap,
      UniformsLib.roughnessmap,
      UniformsLib.metalnessmap,
      UniformsLib.fog,
      UniformsLib.lights,
      {
        emissive: { value: /* @__PURE__ */ new Color(0) },
        roughness: { value: 1 },
        metalness: { value: 0 },
        envMapIntensity: { value: 1 }
        // temporary
      }
    ]),
    vertexShader: ShaderChunk.meshphysical_vert,
    fragmentShader: ShaderChunk.meshphysical_frag
  },
  toon: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.aomap,
      UniformsLib.lightmap,
      UniformsLib.emissivemap,
      UniformsLib.bumpmap,
      UniformsLib.normalmap,
      UniformsLib.displacementmap,
      UniformsLib.gradientmap,
      UniformsLib.fog,
      UniformsLib.lights,
      {
        emissive: { value: /* @__PURE__ */ new Color(0) }
      }
    ]),
    vertexShader: ShaderChunk.meshtoon_vert,
    fragmentShader: ShaderChunk.meshtoon_frag
  },
  matcap: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.bumpmap,
      UniformsLib.normalmap,
      UniformsLib.displacementmap,
      UniformsLib.fog,
      {
        matcap: { value: null }
      }
    ]),
    vertexShader: ShaderChunk.meshmatcap_vert,
    fragmentShader: ShaderChunk.meshmatcap_frag
  },
  points: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.points,
      UniformsLib.fog
    ]),
    vertexShader: ShaderChunk.points_vert,
    fragmentShader: ShaderChunk.points_frag
  },
  dashed: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.fog,
      {
        scale: { value: 1 },
        dashSize: { value: 1 },
        totalSize: { value: 2 }
      }
    ]),
    vertexShader: ShaderChunk.linedashed_vert,
    fragmentShader: ShaderChunk.linedashed_frag
  },
  depth: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.displacementmap
    ]),
    vertexShader: ShaderChunk.depth_vert,
    fragmentShader: ShaderChunk.depth_frag
  },
  normal: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.bumpmap,
      UniformsLib.normalmap,
      UniformsLib.displacementmap,
      {
        opacity: { value: 1 }
      }
    ]),
    vertexShader: ShaderChunk.meshnormal_vert,
    fragmentShader: ShaderChunk.meshnormal_frag
  },
  sprite: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.sprite,
      UniformsLib.fog
    ]),
    vertexShader: ShaderChunk.sprite_vert,
    fragmentShader: ShaderChunk.sprite_frag
  },
  background: {
    uniforms: {
      uvTransform: { value: /* @__PURE__ */ new Matrix3() },
      t2D: { value: null },
      backgroundIntensity: { value: 1 }
    },
    vertexShader: ShaderChunk.background_vert,
    fragmentShader: ShaderChunk.background_frag
  },
  backgroundCube: {
    uniforms: {
      envMap: { value: null },
      flipEnvMap: { value: -1 },
      backgroundBlurriness: { value: 0 },
      backgroundIntensity: { value: 1 }
    },
    vertexShader: ShaderChunk.backgroundCube_vert,
    fragmentShader: ShaderChunk.backgroundCube_frag
  },
  cube: {
    uniforms: {
      tCube: { value: null },
      tFlip: { value: -1 },
      opacity: { value: 1 }
    },
    vertexShader: ShaderChunk.cube_vert,
    fragmentShader: ShaderChunk.cube_frag
  },
  equirect: {
    uniforms: {
      tEquirect: { value: null }
    },
    vertexShader: ShaderChunk.equirect_vert,
    fragmentShader: ShaderChunk.equirect_frag
  },
  distanceRGBA: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.common,
      UniformsLib.displacementmap,
      {
        referencePosition: { value: /* @__PURE__ */ new Vector3() },
        nearDistance: { value: 1 },
        farDistance: { value: 1e3 }
      }
    ]),
    vertexShader: ShaderChunk.distanceRGBA_vert,
    fragmentShader: ShaderChunk.distanceRGBA_frag
  },
  shadow: {
    uniforms: /* @__PURE__ */ mergeUniforms([
      UniformsLib.lights,
      UniformsLib.fog,
      {
        color: { value: /* @__PURE__ */ new Color(0) },
        opacity: { value: 1 }
      }
    ]),
    vertexShader: ShaderChunk.shadow_vert,
    fragmentShader: ShaderChunk.shadow_frag
  }
};
ShaderLib.physical = {
  uniforms: /* @__PURE__ */ mergeUniforms([
    ShaderLib.standard.uniforms,
    {
      clearcoat: { value: 0 },
      clearcoatMap: { value: null },
      clearcoatRoughness: { value: 0 },
      clearcoatRoughnessMap: { value: null },
      clearcoatNormalScale: { value: /* @__PURE__ */ new Vector2(1, 1) },
      clearcoatNormalMap: { value: null },
      iridescence: { value: 0 },
      iridescenceMap: { value: null },
      iridescenceIOR: { value: 1.3 },
      iridescenceThicknessMinimum: { value: 100 },
      iridescenceThicknessMaximum: { value: 400 },
      iridescenceThicknessMap: { value: null },
      sheen: { value: 0 },
      sheenColor: { value: /* @__PURE__ */ new Color(0) },
      sheenColorMap: { value: null },
      sheenRoughness: { value: 1 },
      sheenRoughnessMap: { value: null },
      transmission: { value: 0 },
      transmissionMap: { value: null },
      transmissionSamplerSize: { value: /* @__PURE__ */ new Vector2() },
      transmissionSamplerMap: { value: null },
      thickness: { value: 0 },
      thicknessMap: { value: null },
      attenuationDistance: { value: 0 },
      attenuationColor: { value: /* @__PURE__ */ new Color(0) },
      specularIntensity: { value: 1 },
      specularIntensityMap: { value: null },
      specularColor: { value: /* @__PURE__ */ new Color(1, 1, 1) },
      specularColorMap: { value: null }
    }
  ]),
  vertexShader: ShaderChunk.meshphysical_vert,
  fragmentShader: ShaderChunk.meshphysical_frag
};
const _rgb = { r: 0, b: 0, g: 0 };
function WebGLBackground(renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha) {
  const clearColor = new Color(0);
  let clearAlpha = alpha === true ? 0 : 1;
  let planeMesh;
  let boxMesh;
  let currentBackground = null;
  let currentBackgroundVersion = 0;
  let currentTonemapping = null;
  function render(renderList, scene) {
    let forceClear = false;
    let background = scene.isScene === true ? scene.background : null;
    if (background && background.isTexture) {
      const usePMREM = scene.backgroundBlurriness > 0;
      background = (usePMREM ? cubeuvmaps : cubemaps).get(background);
    }
    const xr = renderer.xr;
    const session = xr.getSession && xr.getSession();
    if (session && session.environmentBlendMode === "additive") {
      background = null;
    }
    if (background === null) {
      setClear(clearColor, clearAlpha);
    } else if (background && background.isColor) {
      setClear(background, 1);
      forceClear = true;
    }
    if (renderer.autoClear || forceClear) {
      renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);
    }
    if (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {
      if (boxMesh === void 0) {
        boxMesh = new Mesh(
          new BoxGeometry(1, 1, 1),
          new ShaderMaterial({
            name: "BackgroundCubeMaterial",
            uniforms: cloneUniforms(ShaderLib.backgroundCube.uniforms),
            vertexShader: ShaderLib.backgroundCube.vertexShader,
            fragmentShader: ShaderLib.backgroundCube.fragmentShader,
            side: BackSide,
            depthTest: false,
            depthWrite: false,
            fog: false
          })
        );
        boxMesh.geometry.deleteAttribute("normal");
        boxMesh.geometry.deleteAttribute("uv");
        boxMesh.onBeforeRender = function(renderer2, scene2, camera) {
          this.matrixWorld.copyPosition(camera.matrixWorld);
        };
        Object.defineProperty(boxMesh.material, "envMap", {
          get: function() {
            return this.uniforms.envMap.value;
          }
        });
        objects.update(boxMesh);
      }
      boxMesh.material.uniforms.envMap.value = background;
      boxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;
      boxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;
      boxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;
      boxMesh.material.toneMapped = background.encoding === sRGBEncoding ? false : true;
      if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {
        boxMesh.material.needsUpdate = true;
        currentBackground = background;
        currentBackgroundVersion = background.version;
        currentTonemapping = renderer.toneMapping;
      }
      boxMesh.layers.enableAll();
      renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);
    } else if (background && background.isTexture) {
      if (planeMesh === void 0) {
        planeMesh = new Mesh(
          new PlaneGeometry(2, 2),
          new ShaderMaterial({
            name: "BackgroundMaterial",
            uniforms: cloneUniforms(ShaderLib.background.uniforms),
            vertexShader: ShaderLib.background.vertexShader,
            fragmentShader: ShaderLib.background.fragmentShader,
            side: FrontSide,
            depthTest: false,
            depthWrite: false,
            fog: false
          })
        );
        planeMesh.geometry.deleteAttribute("normal");
        Object.defineProperty(planeMesh.material, "map", {
          get: function() {
            return this.uniforms.t2D.value;
          }
        });
        objects.update(planeMesh);
      }
      planeMesh.material.uniforms.t2D.value = background;
      planeMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;
      planeMesh.material.toneMapped = background.encoding === sRGBEncoding ? false : true;
      if (background.matrixAutoUpdate === true) {
        background.updateMatrix();
      }
      planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);
      if (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {
        planeMesh.material.needsUpdate = true;
        currentBackground = background;
        currentBackgroundVersion = background.version;
        currentTonemapping = renderer.toneMapping;
      }
      planeMesh.layers.enableAll();
      renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);
    }
  }
  function setClear(color, alpha2) {
    color.getRGB(_rgb, getUnlitUniformColorSpace(renderer));
    state.buffers.color.setClear(_rgb.r, _rgb.g, _rgb.b, alpha2, premultipliedAlpha);
  }
  return {
    getClearColor: function() {
      return clearColor;
    },
    setClearColor: function(color, alpha2 = 1) {
      clearColor.set(color);
      clearAlpha = alpha2;
      setClear(clearColor, clearAlpha);
    },
    getClearAlpha: function() {
      return clearAlpha;
    },
    setClearAlpha: function(alpha2) {
      clearAlpha = alpha2;
      setClear(clearColor, clearAlpha);
    },
    render
  };
}
function WebGLBindingStates(gl2, extensions, attributes, capabilities) {
  const maxVertexAttributes = gl2.getParameter(34921);
  const extension = capabilities.isWebGL2 ? null : extensions.get("OES_vertex_array_object");
  const vaoAvailable = capabilities.isWebGL2 || extension !== null;
  const bindingStates = {};
  const defaultState = createBindingState(null);
  let currentState = defaultState;
  let forceUpdate = false;
  function setup(object2, material, program, geometry, index) {
    let updateBuffers = false;
    if (vaoAvailable) {
      const state = getBindingState(geometry, program, material);
      if (currentState !== state) {
        currentState = state;
        bindVertexArrayObject(currentState.object);
      }
      updateBuffers = needsUpdate(object2, geometry, program, index);
      if (updateBuffers) saveCache(object2, geometry, program, index);
    } else {
      const wireframe = material.wireframe === true;
      if (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {
        currentState.geometry = geometry.id;
        currentState.program = program.id;
        currentState.wireframe = wireframe;
        updateBuffers = true;
      }
    }
    if (index !== null) {
      attributes.update(index, 34963);
    }
    if (updateBuffers || forceUpdate) {
      forceUpdate = false;
      setupVertexAttributes(object2, material, program, geometry);
      if (index !== null) {
        gl2.bindBuffer(34963, attributes.get(index).buffer);
      }
    }
  }
  function createVertexArrayObject() {
    if (capabilities.isWebGL2) return gl2.createVertexArray();
    return extension.createVertexArrayOES();
  }
  function bindVertexArrayObject(vao) {
    if (capabilities.isWebGL2) return gl2.bindVertexArray(vao);
    return extension.bindVertexArrayOES(vao);
  }
  function deleteVertexArrayObject(vao) {
    if (capabilities.isWebGL2) return gl2.deleteVertexArray(vao);
    return extension.deleteVertexArrayOES(vao);
  }
  function getBindingState(geometry, program, material) {
    const wireframe = material.wireframe === true;
    let programMap = bindingStates[geometry.id];
    if (programMap === void 0) {
      programMap = {};
      bindingStates[geometry.id] = programMap;
    }
    let stateMap = programMap[program.id];
    if (stateMap === void 0) {
      stateMap = {};
      programMap[program.id] = stateMap;
    }
    let state = stateMap[wireframe];
    if (state === void 0) {
      state = createBindingState(createVertexArrayObject());
      stateMap[wireframe] = state;
    }
    return state;
  }
  function createBindingState(vao) {
    const newAttributes = [];
    const enabledAttributes = [];
    const attributeDivisors = [];
    for (let i = 0; i < maxVertexAttributes; i++) {
      newAttributes[i] = 0;
      enabledAttributes[i] = 0;
      attributeDivisors[i] = 0;
    }
    return {
      // for backward compatibility on non-VAO support browser
      geometry: null,
      program: null,
      wireframe: false,
      newAttributes,
      enabledAttributes,
      attributeDivisors,
      object: vao,
      attributes: {},
      index: null
    };
  }
  function needsUpdate(object2, geometry, program, index) {
    const cachedAttributes = currentState.attributes;
    const geometryAttributes = geometry.attributes;
    let attributesNum = 0;
    const programAttributes = program.getAttributes();
    for (const name in programAttributes) {
      const programAttribute = programAttributes[name];
      if (programAttribute.location >= 0) {
        const cachedAttribute = cachedAttributes[name];
        let geometryAttribute = geometryAttributes[name];
        if (geometryAttribute === void 0) {
          if (name === "instanceMatrix" && object2.instanceMatrix) geometryAttribute = object2.instanceMatrix;
          if (name === "instanceColor" && object2.instanceColor) geometryAttribute = object2.instanceColor;
        }
        if (cachedAttribute === void 0) return true;
        if (cachedAttribute.attribute !== geometryAttribute) return true;
        if (geometryAttribute && cachedAttribute.data !== geometryAttribute.data) return true;
        attributesNum++;
      }
    }
    if (currentState.attributesNum !== attributesNum) return true;
    if (currentState.index !== index) return true;
    return false;
  }
  function saveCache(object2, geometry, program, index) {
    const cache = {};
    const attributes2 = geometry.attributes;
    let attributesNum = 0;
    const programAttributes = program.getAttributes();
    for (const name in programAttributes) {
      const programAttribute = programAttributes[name];
      if (programAttribute.location >= 0) {
        let attribute = attributes2[name];
        if (attribute === void 0) {
          if (name === "instanceMatrix" && object2.instanceMatrix) attribute = object2.instanceMatrix;
          if (name === "instanceColor" && object2.instanceColor) attribute = object2.instanceColor;
        }
        const data = {};
        data.attribute = attribute;
        if (attribute && attribute.data) {
          data.data = attribute.data;
        }
        cache[name] = data;
        attributesNum++;
      }
    }
    currentState.attributes = cache;
    currentState.attributesNum = attributesNum;
    currentState.index = index;
  }
  function initAttributes() {
    const newAttributes = currentState.newAttributes;
    for (let i = 0, il2 = newAttributes.length; i < il2; i++) {
      newAttributes[i] = 0;
    }
  }
  function enableAttribute(attribute) {
    enableAttributeAndDivisor(attribute, 0);
  }
  function enableAttributeAndDivisor(attribute, meshPerAttribute) {
    const newAttributes = currentState.newAttributes;
    const enabledAttributes = currentState.enabledAttributes;
    const attributeDivisors = currentState.attributeDivisors;
    newAttributes[attribute] = 1;
    if (enabledAttributes[attribute] === 0) {
      gl2.enableVertexAttribArray(attribute);
      enabledAttributes[attribute] = 1;
    }
    if (attributeDivisors[attribute] !== meshPerAttribute) {
      const extension2 = capabilities.isWebGL2 ? gl2 : extensions.get("ANGLE_instanced_arrays");
      extension2[capabilities.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](attribute, meshPerAttribute);
      attributeDivisors[attribute] = meshPerAttribute;
    }
  }
  function disableUnusedAttributes() {
    const newAttributes = currentState.newAttributes;
    const enabledAttributes = currentState.enabledAttributes;
    for (let i = 0, il2 = enabledAttributes.length; i < il2; i++) {
      if (enabledAttributes[i] !== newAttributes[i]) {
        gl2.disableVertexAttribArray(i);
        enabledAttributes[i] = 0;
      }
    }
  }
  function vertexAttribPointer(index, size, type, normalized, stride, offset2) {
    if (capabilities.isWebGL2 === true && (type === 5124 || type === 5125)) {
      gl2.vertexAttribIPointer(index, size, type, stride, offset2);
    } else {
      gl2.vertexAttribPointer(index, size, type, normalized, stride, offset2);
    }
  }
  function setupVertexAttributes(object2, material, program, geometry) {
    if (capabilities.isWebGL2 === false && (object2.isInstancedMesh || geometry.isInstancedBufferGeometry)) {
      if (extensions.get("ANGLE_instanced_arrays") === null) return;
    }
    initAttributes();
    const geometryAttributes = geometry.attributes;
    const programAttributes = program.getAttributes();
    const materialDefaultAttributeValues = material.defaultAttributeValues;
    for (const name in programAttributes) {
      const programAttribute = programAttributes[name];
      if (programAttribute.location >= 0) {
        let geometryAttribute = geometryAttributes[name];
        if (geometryAttribute === void 0) {
          if (name === "instanceMatrix" && object2.instanceMatrix) geometryAttribute = object2.instanceMatrix;
          if (name === "instanceColor" && object2.instanceColor) geometryAttribute = object2.instanceColor;
        }
        if (geometryAttribute !== void 0) {
          const normalized = geometryAttribute.normalized;
          const size = geometryAttribute.itemSize;
          const attribute = attributes.get(geometryAttribute);
          if (attribute === void 0) continue;
          const buffer = attribute.buffer;
          const type = attribute.type;
          const bytesPerElement = attribute.bytesPerElement;
          if (geometryAttribute.isInterleavedBufferAttribute) {
            const data = geometryAttribute.data;
            const stride = data.stride;
            const offset2 = geometryAttribute.offset;
            if (data.isInstancedInterleavedBuffer) {
              for (let i = 0; i < programAttribute.locationSize; i++) {
                enableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);
              }
              if (object2.isInstancedMesh !== true && geometry._maxInstanceCount === void 0) {
                geometry._maxInstanceCount = data.meshPerAttribute * data.count;
              }
            } else {
              for (let i = 0; i < programAttribute.locationSize; i++) {
                enableAttribute(programAttribute.location + i);
              }
            }
            gl2.bindBuffer(34962, buffer);
            for (let i = 0; i < programAttribute.locationSize; i++) {
              vertexAttribPointer(
                programAttribute.location + i,
                size / programAttribute.locationSize,
                type,
                normalized,
                stride * bytesPerElement,
                (offset2 + size / programAttribute.locationSize * i) * bytesPerElement
              );
            }
          } else {
            if (geometryAttribute.isInstancedBufferAttribute) {
              for (let i = 0; i < programAttribute.locationSize; i++) {
                enableAttributeAndDivisor(programAttribute.location + i, geometryAttribute.meshPerAttribute);
              }
              if (object2.isInstancedMesh !== true && geometry._maxInstanceCount === void 0) {
                geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;
              }
            } else {
              for (let i = 0; i < programAttribute.locationSize; i++) {
                enableAttribute(programAttribute.location + i);
              }
            }
            gl2.bindBuffer(34962, buffer);
            for (let i = 0; i < programAttribute.locationSize; i++) {
              vertexAttribPointer(
                programAttribute.location + i,
                size / programAttribute.locationSize,
                type,
                normalized,
                size * bytesPerElement,
                size / programAttribute.locationSize * i * bytesPerElement
              );
            }
          }
        } else if (materialDefaultAttributeValues !== void 0) {
          const value = materialDefaultAttributeValues[name];
          if (value !== void 0) {
            switch (value.length) {
              case 2:
                gl2.vertexAttrib2fv(programAttribute.location, value);
                break;
              case 3:
                gl2.vertexAttrib3fv(programAttribute.location, value);
                break;
              case 4:
                gl2.vertexAttrib4fv(programAttribute.location, value);
                break;
              default:
                gl2.vertexAttrib1fv(programAttribute.location, value);
            }
          }
        }
      }
    }
    disableUnusedAttributes();
  }
  function dispose() {
    reset();
    for (const geometryId in bindingStates) {
      const programMap = bindingStates[geometryId];
      for (const programId in programMap) {
        const stateMap = programMap[programId];
        for (const wireframe in stateMap) {
          deleteVertexArrayObject(stateMap[wireframe].object);
          delete stateMap[wireframe];
        }
        delete programMap[programId];
      }
      delete bindingStates[geometryId];
    }
  }
  function releaseStatesOfGeometry(geometry) {
    if (bindingStates[geometry.id] === void 0) return;
    const programMap = bindingStates[geometry.id];
    for (const programId in programMap) {
      const stateMap = programMap[programId];
      for (const wireframe in stateMap) {
        deleteVertexArrayObject(stateMap[wireframe].object);
        delete stateMap[wireframe];
      }
      delete programMap[programId];
    }
    delete bindingStates[geometry.id];
  }
  function releaseStatesOfProgram(program) {
    for (const geometryId in bindingStates) {
      const programMap = bindingStates[geometryId];
      if (programMap[program.id] === void 0) continue;
      const stateMap = programMap[program.id];
      for (const wireframe in stateMap) {
        deleteVertexArrayObject(stateMap[wireframe].object);
        delete stateMap[wireframe];
      }
      delete programMap[program.id];
    }
  }
  function reset() {
    resetDefaultState();
    forceUpdate = true;
    if (currentState === defaultState) return;
    currentState = defaultState;
    bindVertexArrayObject(currentState.object);
  }
  function resetDefaultState() {
    defaultState.geometry = null;
    defaultState.program = null;
    defaultState.wireframe = false;
  }
  return {
    setup,
    reset,
    resetDefaultState,
    dispose,
    releaseStatesOfGeometry,
    releaseStatesOfProgram,
    initAttributes,
    enableAttribute,
    disableUnusedAttributes
  };
}
function WebGLBufferRenderer(gl2, extensions, info, capabilities) {
  const isWebGL2 = capabilities.isWebGL2;
  let mode;
  function setMode(value) {
    mode = value;
  }
  function render(start, count) {
    gl2.drawArrays(mode, start, count);
    info.update(count, mode, 1);
  }
  function renderInstances(start, count, primcount) {
    if (primcount === 0) return;
    let extension, methodName;
    if (isWebGL2) {
      extension = gl2;
      methodName = "drawArraysInstanced";
    } else {
      extension = extensions.get("ANGLE_instanced_arrays");
      methodName = "drawArraysInstancedANGLE";
      if (extension === null) {
        console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
        return;
      }
    }
    extension[methodName](mode, start, count, primcount);
    info.update(count, mode, primcount);
  }
  this.setMode = setMode;
  this.render = render;
  this.renderInstances = renderInstances;
}
function WebGLCapabilities(gl2, extensions, parameters) {
  let maxAnisotropy;
  function getMaxAnisotropy() {
    if (maxAnisotropy !== void 0) return maxAnisotropy;
    if (extensions.has("EXT_texture_filter_anisotropic") === true) {
      const extension = extensions.get("EXT_texture_filter_anisotropic");
      maxAnisotropy = gl2.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else {
      maxAnisotropy = 0;
    }
    return maxAnisotropy;
  }
  function getMaxPrecision(precision2) {
    if (precision2 === "highp") {
      if (gl2.getShaderPrecisionFormat(35633, 36338).precision > 0 && gl2.getShaderPrecisionFormat(35632, 36338).precision > 0) {
        return "highp";
      }
      precision2 = "mediump";
    }
    if (precision2 === "mediump") {
      if (gl2.getShaderPrecisionFormat(35633, 36337).precision > 0 && gl2.getShaderPrecisionFormat(35632, 36337).precision > 0) {
        return "mediump";
      }
    }
    return "lowp";
  }
  const isWebGL2 = typeof WebGL2RenderingContext !== "undefined" && gl2 instanceof WebGL2RenderingContext;
  let precision = parameters.precision !== void 0 ? parameters.precision : "highp";
  const maxPrecision = getMaxPrecision(precision);
  if (maxPrecision !== precision) {
    console.warn("THREE.WebGLRenderer:", precision, "not supported, using", maxPrecision, "instead.");
    precision = maxPrecision;
  }
  const drawBuffers = isWebGL2 || extensions.has("WEBGL_draw_buffers");
  const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;
  const maxTextures = gl2.getParameter(34930);
  const maxVertexTextures = gl2.getParameter(35660);
  const maxTextureSize = gl2.getParameter(3379);
  const maxCubemapSize = gl2.getParameter(34076);
  const maxAttributes = gl2.getParameter(34921);
  const maxVertexUniforms = gl2.getParameter(36347);
  const maxVaryings = gl2.getParameter(36348);
  const maxFragmentUniforms = gl2.getParameter(36349);
  const vertexTextures = maxVertexTextures > 0;
  const floatFragmentTextures = isWebGL2 || extensions.has("OES_texture_float");
  const floatVertexTextures = vertexTextures && floatFragmentTextures;
  const maxSamples = isWebGL2 ? gl2.getParameter(36183) : 0;
  return {
    isWebGL2,
    drawBuffers,
    getMaxAnisotropy,
    getMaxPrecision,
    precision,
    logarithmicDepthBuffer,
    maxTextures,
    maxVertexTextures,
    maxTextureSize,
    maxCubemapSize,
    maxAttributes,
    maxVertexUniforms,
    maxVaryings,
    maxFragmentUniforms,
    vertexTextures,
    floatFragmentTextures,
    floatVertexTextures,
    maxSamples
  };
}
function WebGLClipping(properties) {
  const scope = this;
  let globalState = null, numGlobalPlanes = 0, localClippingEnabled = false, renderingShadows = false;
  const plane = new Plane(), viewNormalMatrix = new Matrix3(), uniform = { value: null, needsUpdate: false };
  this.uniform = uniform;
  this.numPlanes = 0;
  this.numIntersection = 0;
  this.init = function(planes, enableLocalClipping) {
    const enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to
    // run another frame in order to reset the state:
    numGlobalPlanes !== 0 || localClippingEnabled;
    localClippingEnabled = enableLocalClipping;
    numGlobalPlanes = planes.length;
    return enabled;
  };
  this.beginShadows = function() {
    renderingShadows = true;
    projectPlanes(null);
  };
  this.endShadows = function() {
    renderingShadows = false;
  };
  this.setGlobalState = function(planes, camera) {
    globalState = projectPlanes(planes, camera, 0);
  };
  this.setState = function(material, camera, useCache) {
    const planes = material.clippingPlanes, clipIntersection = material.clipIntersection, clipShadows = material.clipShadows;
    const materialProperties = properties.get(material);
    if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {
      if (renderingShadows) {
        projectPlanes(null);
      } else {
        resetGlobalState();
      }
    } else {
      const nGlobal = renderingShadows ? 0 : numGlobalPlanes, lGlobal = nGlobal * 4;
      let dstArray = materialProperties.clippingState || null;
      uniform.value = dstArray;
      dstArray = projectPlanes(planes, camera, lGlobal, useCache);
      for (let i = 0; i !== lGlobal; ++i) {
        dstArray[i] = globalState[i];
      }
      materialProperties.clippingState = dstArray;
      this.numIntersection = clipIntersection ? this.numPlanes : 0;
      this.numPlanes += nGlobal;
    }
  };
  function resetGlobalState() {
    if (uniform.value !== globalState) {
      uniform.value = globalState;
      uniform.needsUpdate = numGlobalPlanes > 0;
    }
    scope.numPlanes = numGlobalPlanes;
    scope.numIntersection = 0;
  }
  function projectPlanes(planes, camera, dstOffset, skipTransform) {
    const nPlanes = planes !== null ? planes.length : 0;
    let dstArray = null;
    if (nPlanes !== 0) {
      dstArray = uniform.value;
      if (skipTransform !== true || dstArray === null) {
        const flatSize = dstOffset + nPlanes * 4, viewMatrix = camera.matrixWorldInverse;
        viewNormalMatrix.getNormalMatrix(viewMatrix);
        if (dstArray === null || dstArray.length < flatSize) {
          dstArray = new Float32Array(flatSize);
        }
        for (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {
          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);
          plane.normal.toArray(dstArray, i4);
          dstArray[i4 + 3] = plane.constant;
        }
      }
      uniform.value = dstArray;
      uniform.needsUpdate = true;
    }
    scope.numPlanes = nPlanes;
    scope.numIntersection = 0;
    return dstArray;
  }
}
function WebGLCubeMaps(renderer) {
  let cubemaps = /* @__PURE__ */ new WeakMap();
  function mapTextureMapping(texture, mapping) {
    if (mapping === EquirectangularReflectionMapping) {
      texture.mapping = CubeReflectionMapping;
    } else if (mapping === EquirectangularRefractionMapping) {
      texture.mapping = CubeRefractionMapping;
    }
    return texture;
  }
  function get2(texture) {
    if (texture && texture.isTexture && texture.isRenderTargetTexture === false) {
      const mapping = texture.mapping;
      if (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {
        if (cubemaps.has(texture)) {
          const cubemap = cubemaps.get(texture).texture;
          return mapTextureMapping(cubemap, texture.mapping);
        } else {
          const image = texture.image;
          if (image && image.height > 0) {
            const renderTarget = new WebGLCubeRenderTarget(image.height / 2);
            renderTarget.fromEquirectangularTexture(renderer, texture);
            cubemaps.set(texture, renderTarget);
            texture.addEventListener("dispose", onTextureDispose);
            return mapTextureMapping(renderTarget.texture, texture.mapping);
          } else {
            return null;
          }
        }
      }
    }
    return texture;
  }
  function onTextureDispose(event) {
    const texture = event.target;
    texture.removeEventListener("dispose", onTextureDispose);
    const cubemap = cubemaps.get(texture);
    if (cubemap !== void 0) {
      cubemaps.delete(texture);
      cubemap.dispose();
    }
  }
  function dispose() {
    cubemaps = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: get2,
    dispose
  };
}
class OrthographicCamera extends Camera {
  constructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2e3) {
    super();
    this.isOrthographicCamera = true;
    this.type = "OrthographicCamera";
    this.zoom = 1;
    this.view = null;
    this.left = left;
    this.right = right;
    this.top = top;
    this.bottom = bottom;
    this.near = near;
    this.far = far;
    this.updateProjectionMatrix();
  }
  copy(source, recursive) {
    super.copy(source, recursive);
    this.left = source.left;
    this.right = source.right;
    this.top = source.top;
    this.bottom = source.bottom;
    this.near = source.near;
    this.far = source.far;
    this.zoom = source.zoom;
    this.view = source.view === null ? null : Object.assign({}, source.view);
    return this;
  }
  setViewOffset(fullWidth, fullHeight, x2, y2, width, height) {
    if (this.view === null) {
      this.view = {
        enabled: true,
        fullWidth: 1,
        fullHeight: 1,
        offsetX: 0,
        offsetY: 0,
        width: 1,
        height: 1
      };
    }
    this.view.enabled = true;
    this.view.fullWidth = fullWidth;
    this.view.fullHeight = fullHeight;
    this.view.offsetX = x2;
    this.view.offsetY = y2;
    this.view.width = width;
    this.view.height = height;
    this.updateProjectionMatrix();
  }
  clearViewOffset() {
    if (this.view !== null) {
      this.view.enabled = false;
    }
    this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const dx = (this.right - this.left) / (2 * this.zoom);
    const dy = (this.top - this.bottom) / (2 * this.zoom);
    const cx = (this.right + this.left) / 2;
    const cy = (this.top + this.bottom) / 2;
    let left = cx - dx;
    let right = cx + dx;
    let top = cy + dy;
    let bottom = cy - dy;
    if (this.view !== null && this.view.enabled) {
      const scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;
      const scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      left += scaleW * this.view.offsetX;
      right = left + scaleW * this.view.width;
      top -= scaleH * this.view.offsetY;
      bottom = top - scaleH * this.view.height;
    }
    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);
    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(meta) {
    const data = super.toJSON(meta);
    data.object.zoom = this.zoom;
    data.object.left = this.left;
    data.object.right = this.right;
    data.object.top = this.top;
    data.object.bottom = this.bottom;
    data.object.near = this.near;
    data.object.far = this.far;
    if (this.view !== null) data.object.view = Object.assign({}, this.view);
    return data;
  }
}
const LOD_MIN = 4;
const EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];
const MAX_SAMPLES = 20;
const _flatCamera = /* @__PURE__ */ new OrthographicCamera();
const _clearColor = /* @__PURE__ */ new Color();
let _oldTarget = null;
const PHI = (1 + Math.sqrt(5)) / 2;
const INV_PHI = 1 / PHI;
const _axisDirections = [
  /* @__PURE__ */ new Vector3(1, 1, 1),
  /* @__PURE__ */ new Vector3(-1, 1, 1),
  /* @__PURE__ */ new Vector3(1, 1, -1),
  /* @__PURE__ */ new Vector3(-1, 1, -1),
  /* @__PURE__ */ new Vector3(0, PHI, INV_PHI),
  /* @__PURE__ */ new Vector3(0, PHI, -INV_PHI),
  /* @__PURE__ */ new Vector3(INV_PHI, 0, PHI),
  /* @__PURE__ */ new Vector3(-INV_PHI, 0, PHI),
  /* @__PURE__ */ new Vector3(PHI, INV_PHI, 0),
  /* @__PURE__ */ new Vector3(-PHI, INV_PHI, 0)
];
class PMREMGenerator {
  constructor(renderer) {
    this._renderer = renderer;
    this._pingPongRenderTarget = null;
    this._lodMax = 0;
    this._cubeSize = 0;
    this._lodPlanes = [];
    this._sizeLods = [];
    this._sigmas = [];
    this._blurMaterial = null;
    this._cubemapMaterial = null;
    this._equirectMaterial = null;
    this._compileMaterial(this._blurMaterial);
  }
  /**
   * Generates a PMREM from a supplied Scene, which can be faster than using an
   * image if networking bandwidth is low. Optional sigma specifies a blur radius
   * in radians to be applied to the scene before PMREM generation. Optional near
   * and far planes ensure the scene is rendered in its entirety (the cubeCamera
   * is placed at the origin).
   */
  fromScene(scene, sigma = 0, near = 0.1, far = 100) {
    _oldTarget = this._renderer.getRenderTarget();
    this._setSize(256);
    const cubeUVRenderTarget = this._allocateTargets();
    cubeUVRenderTarget.depthBuffer = true;
    this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);
    if (sigma > 0) {
      this._blur(cubeUVRenderTarget, 0, 0, sigma);
    }
    this._applyPMREM(cubeUVRenderTarget);
    this._cleanup(cubeUVRenderTarget);
    return cubeUVRenderTarget;
  }
  /**
   * Generates a PMREM from an equirectangular texture, which can be either LDR
   * or HDR. The ideal input image size is 1k (1024 x 512),
   * as this matches best with the 256 x 256 cubemap output.
   */
  fromEquirectangular(equirectangular, renderTarget = null) {
    return this._fromTexture(equirectangular, renderTarget);
  }
  /**
   * Generates a PMREM from an cubemap texture, which can be either LDR
   * or HDR. The ideal input cube size is 256 x 256,
   * as this matches best with the 256 x 256 cubemap output.
   */
  fromCubemap(cubemap, renderTarget = null) {
    return this._fromTexture(cubemap, renderTarget);
  }
  /**
   * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during
   * your texture's network fetch for increased concurrency.
   */
  compileCubemapShader() {
    if (this._cubemapMaterial === null) {
      this._cubemapMaterial = _getCubemapMaterial();
      this._compileMaterial(this._cubemapMaterial);
    }
  }
  /**
   * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during
   * your texture's network fetch for increased concurrency.
   */
  compileEquirectangularShader() {
    if (this._equirectMaterial === null) {
      this._equirectMaterial = _getEquirectMaterial();
      this._compileMaterial(this._equirectMaterial);
    }
  }
  /**
   * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,
   * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on
   * one of them will cause any others to also become unusable.
   */
  dispose() {
    this._dispose();
    if (this._cubemapMaterial !== null) this._cubemapMaterial.dispose();
    if (this._equirectMaterial !== null) this._equirectMaterial.dispose();
  }
  // private interface
  _setSize(cubeSize) {
    this._lodMax = Math.floor(Math.log2(cubeSize));
    this._cubeSize = Math.pow(2, this._lodMax);
  }
  _dispose() {
    if (this._blurMaterial !== null) this._blurMaterial.dispose();
    if (this._pingPongRenderTarget !== null) this._pingPongRenderTarget.dispose();
    for (let i = 0; i < this._lodPlanes.length; i++) {
      this._lodPlanes[i].dispose();
    }
  }
  _cleanup(outputTarget) {
    this._renderer.setRenderTarget(_oldTarget);
    outputTarget.scissorTest = false;
    _setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);
  }
  _fromTexture(texture, renderTarget) {
    if (texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping) {
      this._setSize(texture.image.length === 0 ? 16 : texture.image[0].width || texture.image[0].image.width);
    } else {
      this._setSize(texture.image.width / 4);
    }
    _oldTarget = this._renderer.getRenderTarget();
    const cubeUVRenderTarget = renderTarget || this._allocateTargets();
    this._textureToCubeUV(texture, cubeUVRenderTarget);
    this._applyPMREM(cubeUVRenderTarget);
    this._cleanup(cubeUVRenderTarget);
    return cubeUVRenderTarget;
  }
  _allocateTargets() {
    const width = 3 * Math.max(this._cubeSize, 16 * 7);
    const height = 4 * this._cubeSize;
    const params = {
      magFilter: LinearFilter,
      minFilter: LinearFilter,
      generateMipmaps: false,
      type: HalfFloatType,
      format: RGBAFormat,
      encoding: LinearEncoding,
      depthBuffer: false
    };
    const cubeUVRenderTarget = _createRenderTarget(width, height, params);
    if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height) {
      if (this._pingPongRenderTarget !== null) {
        this._dispose();
      }
      this._pingPongRenderTarget = _createRenderTarget(width, height, params);
      const { _lodMax } = this;
      ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes(_lodMax));
      this._blurMaterial = _getBlurShader(_lodMax, width, height);
    }
    return cubeUVRenderTarget;
  }
  _compileMaterial(material) {
    const tmpMesh = new Mesh(this._lodPlanes[0], material);
    this._renderer.compile(tmpMesh, _flatCamera);
  }
  _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {
    const fov2 = 90;
    const aspect2 = 1;
    const cubeCamera = new PerspectiveCamera(fov2, aspect2, near, far);
    const upSign = [1, -1, 1, 1, 1, 1];
    const forwardSign = [1, 1, 1, -1, -1, -1];
    const renderer = this._renderer;
    const originalAutoClear = renderer.autoClear;
    const toneMapping = renderer.toneMapping;
    renderer.getClearColor(_clearColor);
    renderer.toneMapping = NoToneMapping;
    renderer.autoClear = false;
    const backgroundMaterial = new MeshBasicMaterial({
      name: "PMREM.Background",
      side: BackSide,
      depthWrite: false,
      depthTest: false
    });
    const backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);
    let useSolidColor = false;
    const background = scene.background;
    if (background) {
      if (background.isColor) {
        backgroundMaterial.color.copy(background);
        scene.background = null;
        useSolidColor = true;
      }
    } else {
      backgroundMaterial.color.copy(_clearColor);
      useSolidColor = true;
    }
    for (let i = 0; i < 6; i++) {
      const col = i % 3;
      if (col === 0) {
        cubeCamera.up.set(0, upSign[i], 0);
        cubeCamera.lookAt(forwardSign[i], 0, 0);
      } else if (col === 1) {
        cubeCamera.up.set(0, 0, upSign[i]);
        cubeCamera.lookAt(0, forwardSign[i], 0);
      } else {
        cubeCamera.up.set(0, upSign[i], 0);
        cubeCamera.lookAt(0, 0, forwardSign[i]);
      }
      const size = this._cubeSize;
      _setViewport(cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size);
      renderer.setRenderTarget(cubeUVRenderTarget);
      if (useSolidColor) {
        renderer.render(backgroundBox, cubeCamera);
      }
      renderer.render(scene, cubeCamera);
    }
    backgroundBox.geometry.dispose();
    backgroundBox.material.dispose();
    renderer.toneMapping = toneMapping;
    renderer.autoClear = originalAutoClear;
    scene.background = background;
  }
  _textureToCubeUV(texture, cubeUVRenderTarget) {
    const renderer = this._renderer;
    const isCubeTexture = texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping;
    if (isCubeTexture) {
      if (this._cubemapMaterial === null) {
        this._cubemapMaterial = _getCubemapMaterial();
      }
      this._cubemapMaterial.uniforms.flipEnvMap.value = texture.isRenderTargetTexture === false ? -1 : 1;
    } else {
      if (this._equirectMaterial === null) {
        this._equirectMaterial = _getEquirectMaterial();
      }
    }
    const material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;
    const mesh = new Mesh(this._lodPlanes[0], material);
    const uniforms = material.uniforms;
    uniforms["envMap"].value = texture;
    const size = this._cubeSize;
    _setViewport(cubeUVRenderTarget, 0, 0, 3 * size, 2 * size);
    renderer.setRenderTarget(cubeUVRenderTarget);
    renderer.render(mesh, _flatCamera);
  }
  _applyPMREM(cubeUVRenderTarget) {
    const renderer = this._renderer;
    const autoClear = renderer.autoClear;
    renderer.autoClear = false;
    for (let i = 1; i < this._lodPlanes.length; i++) {
      const sigma = Math.sqrt(this._sigmas[i] * this._sigmas[i] - this._sigmas[i - 1] * this._sigmas[i - 1]);
      const poleAxis = _axisDirections[(i - 1) % _axisDirections.length];
      this._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);
    }
    renderer.autoClear = autoClear;
  }
  /**
   * This is a two-pass Gaussian blur for a cubemap. Normally this is done
   * vertically and horizontally, but this breaks down on a cube. Here we apply
   * the blur latitudinally (around the poles), and then longitudinally (towards
   * the poles) to approximate the orthogonally-separable blur. It is least
   * accurate at the poles, but still does a decent job.
   */
  _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {
    const pingPongRenderTarget = this._pingPongRenderTarget;
    this._halfBlur(
      cubeUVRenderTarget,
      pingPongRenderTarget,
      lodIn,
      lodOut,
      sigma,
      "latitudinal",
      poleAxis
    );
    this._halfBlur(
      pingPongRenderTarget,
      cubeUVRenderTarget,
      lodOut,
      lodOut,
      sigma,
      "longitudinal",
      poleAxis
    );
  }
  _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {
    const renderer = this._renderer;
    const blurMaterial = this._blurMaterial;
    if (direction !== "latitudinal" && direction !== "longitudinal") {
      console.error(
        "blur direction must be either latitudinal or longitudinal!"
      );
    }
    const STANDARD_DEVIATIONS = 3;
    const blurMesh = new Mesh(this._lodPlanes[lodOut], blurMaterial);
    const blurUniforms = blurMaterial.uniforms;
    const pixels = this._sizeLods[lodIn] - 1;
    const radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);
    const sigmaPixels = sigmaRadians / radiansPerPixel;
    const samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;
    if (samples > MAX_SAMPLES) {
      console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);
    }
    const weights = [];
    let sum = 0;
    for (let i = 0; i < MAX_SAMPLES; ++i) {
      const x3 = i / sigmaPixels;
      const weight = Math.exp(-x3 * x3 / 2);
      weights.push(weight);
      if (i === 0) {
        sum += weight;
      } else if (i < samples) {
        sum += 2 * weight;
      }
    }
    for (let i = 0; i < weights.length; i++) {
      weights[i] = weights[i] / sum;
    }
    blurUniforms["envMap"].value = targetIn.texture;
    blurUniforms["samples"].value = samples;
    blurUniforms["weights"].value = weights;
    blurUniforms["latitudinal"].value = direction === "latitudinal";
    if (poleAxis) {
      blurUniforms["poleAxis"].value = poleAxis;
    }
    const { _lodMax } = this;
    blurUniforms["dTheta"].value = radiansPerPixel;
    blurUniforms["mipInt"].value = _lodMax - lodIn;
    const outputSize = this._sizeLods[lodOut];
    const x2 = 3 * outputSize * (lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0);
    const y2 = 4 * (this._cubeSize - outputSize);
    _setViewport(targetOut, x2, y2, 3 * outputSize, 2 * outputSize);
    renderer.setRenderTarget(targetOut);
    renderer.render(blurMesh, _flatCamera);
  }
}
function _createPlanes(lodMax) {
  const lodPlanes = [];
  const sizeLods = [];
  const sigmas = [];
  let lod = lodMax;
  const totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;
  for (let i = 0; i < totalLods; i++) {
    const sizeLod = Math.pow(2, lod);
    sizeLods.push(sizeLod);
    let sigma = 1 / sizeLod;
    if (i > lodMax - LOD_MIN) {
      sigma = EXTRA_LOD_SIGMA[i - lodMax + LOD_MIN - 1];
    } else if (i === 0) {
      sigma = 0;
    }
    sigmas.push(sigma);
    const texelSize = 1 / (sizeLod - 2);
    const min2 = -texelSize;
    const max2 = 1 + texelSize;
    const uv1 = [min2, min2, max2, min2, max2, max2, min2, min2, max2, max2, min2, max2];
    const cubeFaces = 6;
    const vertices = 6;
    const positionSize = 3;
    const uvSize = 2;
    const faceIndexSize = 1;
    const position = new Float32Array(positionSize * vertices * cubeFaces);
    const uv = new Float32Array(uvSize * vertices * cubeFaces);
    const faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);
    for (let face = 0; face < cubeFaces; face++) {
      const x2 = face % 3 * 2 / 3 - 1;
      const y2 = face > 2 ? 0 : -1;
      const coordinates = [
        x2,
        y2,
        0,
        x2 + 2 / 3,
        y2,
        0,
        x2 + 2 / 3,
        y2 + 1,
        0,
        x2,
        y2,
        0,
        x2 + 2 / 3,
        y2 + 1,
        0,
        x2,
        y2 + 1,
        0
      ];
      position.set(coordinates, positionSize * vertices * face);
      uv.set(uv1, uvSize * vertices * face);
      const fill = [face, face, face, face, face, face];
      faceIndex.set(fill, faceIndexSize * vertices * face);
    }
    const planes = new BufferGeometry();
    planes.setAttribute("position", new BufferAttribute(position, positionSize));
    planes.setAttribute("uv", new BufferAttribute(uv, uvSize));
    planes.setAttribute("faceIndex", new BufferAttribute(faceIndex, faceIndexSize));
    lodPlanes.push(planes);
    if (lod > LOD_MIN) {
      lod--;
    }
  }
  return { lodPlanes, sizeLods, sigmas };
}
function _createRenderTarget(width, height, params) {
  const cubeUVRenderTarget = new WebGLRenderTarget(width, height, params);
  cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;
  cubeUVRenderTarget.texture.name = "PMREM.cubeUv";
  cubeUVRenderTarget.scissorTest = true;
  return cubeUVRenderTarget;
}
function _setViewport(target, x2, y2, width, height) {
  target.viewport.set(x2, y2, width, height);
  target.scissor.set(x2, y2, width, height);
}
function _getBlurShader(lodMax, width, height) {
  const weights = new Float32Array(MAX_SAMPLES);
  const poleAxis = new Vector3(0, 1, 0);
  const shaderMaterial = new ShaderMaterial({
    name: "SphericalGaussianBlur",
    defines: {
      "n": MAX_SAMPLES,
      "CUBEUV_TEXEL_WIDTH": 1 / width,
      "CUBEUV_TEXEL_HEIGHT": 1 / height,
      "CUBEUV_MAX_MIP": `${lodMax}.0`
    },
    uniforms: {
      "envMap": { value: null },
      "samples": { value: 1 },
      "weights": { value: weights },
      "latitudinal": { value: false },
      "dTheta": { value: 0 },
      "mipInt": { value: 0 },
      "poleAxis": { value: poleAxis }
    },
    vertexShader: _getCommonVertexShader(),
    fragmentShader: (
      /* glsl */
      `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`
    ),
    blending: NoBlending,
    depthTest: false,
    depthWrite: false
  });
  return shaderMaterial;
}
function _getEquirectMaterial() {
  return new ShaderMaterial({
    name: "EquirectangularToCubeUV",
    uniforms: {
      "envMap": { value: null }
    },
    vertexShader: _getCommonVertexShader(),
    fragmentShader: (
      /* glsl */
      `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`
    ),
    blending: NoBlending,
    depthTest: false,
    depthWrite: false
  });
}
function _getCubemapMaterial() {
  return new ShaderMaterial({
    name: "CubemapToCubeUV",
    uniforms: {
      "envMap": { value: null },
      "flipEnvMap": { value: -1 }
    },
    vertexShader: _getCommonVertexShader(),
    fragmentShader: (
      /* glsl */
      `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`
    ),
    blending: NoBlending,
    depthTest: false,
    depthWrite: false
  });
}
function _getCommonVertexShader() {
  return (
    /* glsl */
    `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`
  );
}
function WebGLCubeUVMaps(renderer) {
  let cubeUVmaps = /* @__PURE__ */ new WeakMap();
  let pmremGenerator = null;
  function get2(texture) {
    if (texture && texture.isTexture) {
      const mapping = texture.mapping;
      const isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;
      const isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;
      if (isEquirectMap || isCubeMap) {
        if (texture.isRenderTargetTexture && texture.needsPMREMUpdate === true) {
          texture.needsPMREMUpdate = false;
          let renderTarget = cubeUVmaps.get(texture);
          if (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);
          renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture, renderTarget) : pmremGenerator.fromCubemap(texture, renderTarget);
          cubeUVmaps.set(texture, renderTarget);
          return renderTarget.texture;
        } else {
          if (cubeUVmaps.has(texture)) {
            return cubeUVmaps.get(texture).texture;
          } else {
            const image = texture.image;
            if (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {
              if (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);
              const renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);
              cubeUVmaps.set(texture, renderTarget);
              texture.addEventListener("dispose", onTextureDispose);
              return renderTarget.texture;
            } else {
              return null;
            }
          }
        }
      }
    }
    return texture;
  }
  function isCubeTextureComplete(image) {
    let count = 0;
    const length = 6;
    for (let i = 0; i < length; i++) {
      if (image[i] !== void 0) count++;
    }
    return count === length;
  }
  function onTextureDispose(event) {
    const texture = event.target;
    texture.removeEventListener("dispose", onTextureDispose);
    const cubemapUV = cubeUVmaps.get(texture);
    if (cubemapUV !== void 0) {
      cubeUVmaps.delete(texture);
      cubemapUV.dispose();
    }
  }
  function dispose() {
    cubeUVmaps = /* @__PURE__ */ new WeakMap();
    if (pmremGenerator !== null) {
      pmremGenerator.dispose();
      pmremGenerator = null;
    }
  }
  return {
    get: get2,
    dispose
  };
}
function WebGLExtensions(gl2) {
  const extensions = {};
  function getExtension(name) {
    if (extensions[name] !== void 0) {
      return extensions[name];
    }
    let extension;
    switch (name) {
      case "WEBGL_depth_texture":
        extension = gl2.getExtension("WEBGL_depth_texture") || gl2.getExtension("MOZ_WEBGL_depth_texture") || gl2.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        extension = gl2.getExtension("EXT_texture_filter_anisotropic") || gl2.getExtension("MOZ_EXT_texture_filter_anisotropic") || gl2.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        extension = gl2.getExtension("WEBGL_compressed_texture_s3tc") || gl2.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || gl2.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        extension = gl2.getExtension("WEBGL_compressed_texture_pvrtc") || gl2.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        extension = gl2.getExtension(name);
    }
    extensions[name] = extension;
    return extension;
  }
  return {
    has: function(name) {
      return getExtension(name) !== null;
    },
    init: function(capabilities) {
      if (capabilities.isWebGL2) {
        getExtension("EXT_color_buffer_float");
      } else {
        getExtension("WEBGL_depth_texture");
        getExtension("OES_texture_float");
        getExtension("OES_texture_half_float");
        getExtension("OES_texture_half_float_linear");
        getExtension("OES_standard_derivatives");
        getExtension("OES_element_index_uint");
        getExtension("OES_vertex_array_object");
        getExtension("ANGLE_instanced_arrays");
      }
      getExtension("OES_texture_float_linear");
      getExtension("EXT_color_buffer_half_float");
      getExtension("WEBGL_multisampled_render_to_texture");
    },
    get: function(name) {
      const extension = getExtension(name);
      if (extension === null) {
        console.warn("THREE.WebGLRenderer: " + name + " extension not supported.");
      }
      return extension;
    }
  };
}
function WebGLGeometries(gl2, attributes, info, bindingStates) {
  const geometries = {};
  const wireframeAttributes = /* @__PURE__ */ new WeakMap();
  function onGeometryDispose(event) {
    const geometry = event.target;
    if (geometry.index !== null) {
      attributes.remove(geometry.index);
    }
    for (const name in geometry.attributes) {
      attributes.remove(geometry.attributes[name]);
    }
    geometry.removeEventListener("dispose", onGeometryDispose);
    delete geometries[geometry.id];
    const attribute = wireframeAttributes.get(geometry);
    if (attribute) {
      attributes.remove(attribute);
      wireframeAttributes.delete(geometry);
    }
    bindingStates.releaseStatesOfGeometry(geometry);
    if (geometry.isInstancedBufferGeometry === true) {
      delete geometry._maxInstanceCount;
    }
    info.memory.geometries--;
  }
  function get2(object2, geometry) {
    if (geometries[geometry.id] === true) return geometry;
    geometry.addEventListener("dispose", onGeometryDispose);
    geometries[geometry.id] = true;
    info.memory.geometries++;
    return geometry;
  }
  function update(geometry) {
    const geometryAttributes = geometry.attributes;
    for (const name in geometryAttributes) {
      attributes.update(geometryAttributes[name], 34962);
    }
    const morphAttributes = geometry.morphAttributes;
    for (const name in morphAttributes) {
      const array2 = morphAttributes[name];
      for (let i = 0, l2 = array2.length; i < l2; i++) {
        attributes.update(array2[i], 34962);
      }
    }
  }
  function updateWireframeAttribute(geometry) {
    const indices = [];
    const geometryIndex = geometry.index;
    const geometryPosition = geometry.attributes.position;
    let version = 0;
    if (geometryIndex !== null) {
      const array2 = geometryIndex.array;
      version = geometryIndex.version;
      for (let i = 0, l2 = array2.length; i < l2; i += 3) {
        const a = array2[i + 0];
        const b2 = array2[i + 1];
        const c2 = array2[i + 2];
        indices.push(a, b2, b2, c2, c2, a);
      }
    } else {
      const array2 = geometryPosition.array;
      version = geometryPosition.version;
      for (let i = 0, l2 = array2.length / 3 - 1; i < l2; i += 3) {
        const a = i + 0;
        const b2 = i + 1;
        const c2 = i + 2;
        indices.push(a, b2, b2, c2, c2, a);
      }
    }
    const attribute = new (arrayNeedsUint32(indices) ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);
    attribute.version = version;
    const previousAttribute = wireframeAttributes.get(geometry);
    if (previousAttribute) attributes.remove(previousAttribute);
    wireframeAttributes.set(geometry, attribute);
  }
  function getWireframeAttribute(geometry) {
    const currentAttribute = wireframeAttributes.get(geometry);
    if (currentAttribute) {
      const geometryIndex = geometry.index;
      if (geometryIndex !== null) {
        if (currentAttribute.version < geometryIndex.version) {
          updateWireframeAttribute(geometry);
        }
      }
    } else {
      updateWireframeAttribute(geometry);
    }
    return wireframeAttributes.get(geometry);
  }
  return {
    get: get2,
    update,
    getWireframeAttribute
  };
}
function WebGLIndexedBufferRenderer(gl2, extensions, info, capabilities) {
  const isWebGL2 = capabilities.isWebGL2;
  let mode;
  function setMode(value) {
    mode = value;
  }
  let type, bytesPerElement;
  function setIndex(value) {
    type = value.type;
    bytesPerElement = value.bytesPerElement;
  }
  function render(start, count) {
    gl2.drawElements(mode, count, type, start * bytesPerElement);
    info.update(count, mode, 1);
  }
  function renderInstances(start, count, primcount) {
    if (primcount === 0) return;
    let extension, methodName;
    if (isWebGL2) {
      extension = gl2;
      methodName = "drawElementsInstanced";
    } else {
      extension = extensions.get("ANGLE_instanced_arrays");
      methodName = "drawElementsInstancedANGLE";
      if (extension === null) {
        console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
        return;
      }
    }
    extension[methodName](mode, count, type, start * bytesPerElement, primcount);
    info.update(count, mode, primcount);
  }
  this.setMode = setMode;
  this.setIndex = setIndex;
  this.render = render;
  this.renderInstances = renderInstances;
}
function WebGLInfo(gl2) {
  const memory = {
    geometries: 0,
    textures: 0
  };
  const render = {
    frame: 0,
    calls: 0,
    triangles: 0,
    points: 0,
    lines: 0
  };
  function update(count, mode, instanceCount) {
    render.calls++;
    switch (mode) {
      case 4:
        render.triangles += instanceCount * (count / 3);
        break;
      case 1:
        render.lines += instanceCount * (count / 2);
        break;
      case 3:
        render.lines += instanceCount * (count - 1);
        break;
      case 2:
        render.lines += instanceCount * count;
        break;
      case 0:
        render.points += instanceCount * count;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", mode);
        break;
    }
  }
  function reset() {
    render.frame++;
    render.calls = 0;
    render.triangles = 0;
    render.points = 0;
    render.lines = 0;
  }
  return {
    memory,
    render,
    programs: null,
    autoReset: true,
    reset,
    update
  };
}
function numericalSort(a, b2) {
  return a[0] - b2[0];
}
function absNumericalSort(a, b2) {
  return Math.abs(b2[1]) - Math.abs(a[1]);
}
function WebGLMorphtargets(gl2, capabilities, textures) {
  const influencesList = {};
  const morphInfluences = new Float32Array(8);
  const morphTextures = /* @__PURE__ */ new WeakMap();
  const morph = new Vector4();
  const workInfluences = [];
  for (let i = 0; i < 8; i++) {
    workInfluences[i] = [i, 0];
  }
  function update(object2, geometry, program) {
    const objectInfluences = object2.morphTargetInfluences;
    if (capabilities.isWebGL2 === true) {
      const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;
      const morphTargetsCount = morphAttribute !== void 0 ? morphAttribute.length : 0;
      let entry = morphTextures.get(geometry);
      if (entry === void 0 || entry.count !== morphTargetsCount) {
        let disposeTexture = function() {
          texture.dispose();
          morphTextures.delete(geometry);
          geometry.removeEventListener("dispose", disposeTexture);
        };
        if (entry !== void 0) entry.texture.dispose();
        const hasMorphPosition = geometry.morphAttributes.position !== void 0;
        const hasMorphNormals = geometry.morphAttributes.normal !== void 0;
        const hasMorphColors = geometry.morphAttributes.color !== void 0;
        const morphTargets = geometry.morphAttributes.position || [];
        const morphNormals = geometry.morphAttributes.normal || [];
        const morphColors = geometry.morphAttributes.color || [];
        let vertexDataCount = 0;
        if (hasMorphPosition === true) vertexDataCount = 1;
        if (hasMorphNormals === true) vertexDataCount = 2;
        if (hasMorphColors === true) vertexDataCount = 3;
        let width = geometry.attributes.position.count * vertexDataCount;
        let height = 1;
        if (width > capabilities.maxTextureSize) {
          height = Math.ceil(width / capabilities.maxTextureSize);
          width = capabilities.maxTextureSize;
        }
        const buffer = new Float32Array(width * height * 4 * morphTargetsCount);
        const texture = new DataArrayTexture(buffer, width, height, morphTargetsCount);
        texture.type = FloatType;
        texture.needsUpdate = true;
        const vertexDataStride = vertexDataCount * 4;
        for (let i = 0; i < morphTargetsCount; i++) {
          const morphTarget = morphTargets[i];
          const morphNormal = morphNormals[i];
          const morphColor = morphColors[i];
          const offset2 = width * height * 4 * i;
          for (let j2 = 0; j2 < morphTarget.count; j2++) {
            const stride = j2 * vertexDataStride;
            if (hasMorphPosition === true) {
              morph.fromBufferAttribute(morphTarget, j2);
              buffer[offset2 + stride + 0] = morph.x;
              buffer[offset2 + stride + 1] = morph.y;
              buffer[offset2 + stride + 2] = morph.z;
              buffer[offset2 + stride + 3] = 0;
            }
            if (hasMorphNormals === true) {
              morph.fromBufferAttribute(morphNormal, j2);
              buffer[offset2 + stride + 4] = morph.x;
              buffer[offset2 + stride + 5] = morph.y;
              buffer[offset2 + stride + 6] = morph.z;
              buffer[offset2 + stride + 7] = 0;
            }
            if (hasMorphColors === true) {
              morph.fromBufferAttribute(morphColor, j2);
              buffer[offset2 + stride + 8] = morph.x;
              buffer[offset2 + stride + 9] = morph.y;
              buffer[offset2 + stride + 10] = morph.z;
              buffer[offset2 + stride + 11] = morphColor.itemSize === 4 ? morph.w : 1;
            }
          }
        }
        entry = {
          count: morphTargetsCount,
          texture,
          size: new Vector2(width, height)
        };
        morphTextures.set(geometry, entry);
        geometry.addEventListener("dispose", disposeTexture);
      }
      let morphInfluencesSum = 0;
      for (let i = 0; i < objectInfluences.length; i++) {
        morphInfluencesSum += objectInfluences[i];
      }
      const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;
      program.getUniforms().setValue(gl2, "morphTargetBaseInfluence", morphBaseInfluence);
      program.getUniforms().setValue(gl2, "morphTargetInfluences", objectInfluences);
      program.getUniforms().setValue(gl2, "morphTargetsTexture", entry.texture, textures);
      program.getUniforms().setValue(gl2, "morphTargetsTextureSize", entry.size);
    } else {
      const length = objectInfluences === void 0 ? 0 : objectInfluences.length;
      let influences = influencesList[geometry.id];
      if (influences === void 0 || influences.length !== length) {
        influences = [];
        for (let i = 0; i < length; i++) {
          influences[i] = [i, 0];
        }
        influencesList[geometry.id] = influences;
      }
      for (let i = 0; i < length; i++) {
        const influence = influences[i];
        influence[0] = i;
        influence[1] = objectInfluences[i];
      }
      influences.sort(absNumericalSort);
      for (let i = 0; i < 8; i++) {
        if (i < length && influences[i][1]) {
          workInfluences[i][0] = influences[i][0];
          workInfluences[i][1] = influences[i][1];
        } else {
          workInfluences[i][0] = Number.MAX_SAFE_INTEGER;
          workInfluences[i][1] = 0;
        }
      }
      workInfluences.sort(numericalSort);
      const morphTargets = geometry.morphAttributes.position;
      const morphNormals = geometry.morphAttributes.normal;
      let morphInfluencesSum = 0;
      for (let i = 0; i < 8; i++) {
        const influence = workInfluences[i];
        const index = influence[0];
        const value = influence[1];
        if (index !== Number.MAX_SAFE_INTEGER && value) {
          if (morphTargets && geometry.getAttribute("morphTarget" + i) !== morphTargets[index]) {
            geometry.setAttribute("morphTarget" + i, morphTargets[index]);
          }
          if (morphNormals && geometry.getAttribute("morphNormal" + i) !== morphNormals[index]) {
            geometry.setAttribute("morphNormal" + i, morphNormals[index]);
          }
          morphInfluences[i] = value;
          morphInfluencesSum += value;
        } else {
          if (morphTargets && geometry.hasAttribute("morphTarget" + i) === true) {
            geometry.deleteAttribute("morphTarget" + i);
          }
          if (morphNormals && geometry.hasAttribute("morphNormal" + i) === true) {
            geometry.deleteAttribute("morphNormal" + i);
          }
          morphInfluences[i] = 0;
        }
      }
      const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;
      program.getUniforms().setValue(gl2, "morphTargetBaseInfluence", morphBaseInfluence);
      program.getUniforms().setValue(gl2, "morphTargetInfluences", morphInfluences);
    }
  }
  return {
    update
  };
}
function WebGLObjects(gl2, geometries, attributes, info) {
  let updateMap = /* @__PURE__ */ new WeakMap();
  function update(object2) {
    const frame = info.render.frame;
    const geometry = object2.geometry;
    const buffergeometry = geometries.get(object2, geometry);
    if (updateMap.get(buffergeometry) !== frame) {
      geometries.update(buffergeometry);
      updateMap.set(buffergeometry, frame);
    }
    if (object2.isInstancedMesh) {
      if (object2.hasEventListener("dispose", onInstancedMeshDispose) === false) {
        object2.addEventListener("dispose", onInstancedMeshDispose);
      }
      attributes.update(object2.instanceMatrix, 34962);
      if (object2.instanceColor !== null) {
        attributes.update(object2.instanceColor, 34962);
      }
    }
    return buffergeometry;
  }
  function dispose() {
    updateMap = /* @__PURE__ */ new WeakMap();
  }
  function onInstancedMeshDispose(event) {
    const instancedMesh = event.target;
    instancedMesh.removeEventListener("dispose", onInstancedMeshDispose);
    attributes.remove(instancedMesh.instanceMatrix);
    if (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);
  }
  return {
    update,
    dispose
  };
}
const emptyTexture = /* @__PURE__ */ new Texture();
const emptyArrayTexture = /* @__PURE__ */ new DataArrayTexture();
const empty3dTexture = /* @__PURE__ */ new Data3DTexture();
const emptyCubeTexture = /* @__PURE__ */ new CubeTexture();
const arrayCacheF32 = [];
const arrayCacheI32 = [];
const mat4array = new Float32Array(16);
const mat3array = new Float32Array(9);
const mat2array = new Float32Array(4);
function flatten(array2, nBlocks, blockSize) {
  const firstElem = array2[0];
  if (firstElem <= 0 || firstElem > 0) return array2;
  const n2 = nBlocks * blockSize;
  let r2 = arrayCacheF32[n2];
  if (r2 === void 0) {
    r2 = new Float32Array(n2);
    arrayCacheF32[n2] = r2;
  }
  if (nBlocks !== 0) {
    firstElem.toArray(r2, 0);
    for (let i = 1, offset2 = 0; i !== nBlocks; ++i) {
      offset2 += blockSize;
      array2[i].toArray(r2, offset2);
    }
  }
  return r2;
}
function arraysEqual(a, b2) {
  if (a.length !== b2.length) return false;
  for (let i = 0, l2 = a.length; i < l2; i++) {
    if (a[i] !== b2[i]) return false;
  }
  return true;
}
function copyArray(a, b2) {
  for (let i = 0, l2 = b2.length; i < l2; i++) {
    a[i] = b2[i];
  }
}
function allocTexUnits(textures, n2) {
  let r2 = arrayCacheI32[n2];
  if (r2 === void 0) {
    r2 = new Int32Array(n2);
    arrayCacheI32[n2] = r2;
  }
  for (let i = 0; i !== n2; ++i) {
    r2[i] = textures.allocateTextureUnit();
  }
  return r2;
}
function setValueV1f(gl2, v2) {
  const cache = this.cache;
  if (cache[0] === v2) return;
  gl2.uniform1f(this.addr, v2);
  cache[0] = v2;
}
function setValueV2f(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y) {
      gl2.uniform2f(this.addr, v2.x, v2.y);
      cache[0] = v2.x;
      cache[1] = v2.y;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform2fv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV3f(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y || cache[2] !== v2.z) {
      gl2.uniform3f(this.addr, v2.x, v2.y, v2.z);
      cache[0] = v2.x;
      cache[1] = v2.y;
      cache[2] = v2.z;
    }
  } else if (v2.r !== void 0) {
    if (cache[0] !== v2.r || cache[1] !== v2.g || cache[2] !== v2.b) {
      gl2.uniform3f(this.addr, v2.r, v2.g, v2.b);
      cache[0] = v2.r;
      cache[1] = v2.g;
      cache[2] = v2.b;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform3fv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV4f(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y || cache[2] !== v2.z || cache[3] !== v2.w) {
      gl2.uniform4f(this.addr, v2.x, v2.y, v2.z, v2.w);
      cache[0] = v2.x;
      cache[1] = v2.y;
      cache[2] = v2.z;
      cache[3] = v2.w;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform4fv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueM2(gl2, v2) {
  const cache = this.cache;
  const elements = v2.elements;
  if (elements === void 0) {
    if (arraysEqual(cache, v2)) return;
    gl2.uniformMatrix2fv(this.addr, false, v2);
    copyArray(cache, v2);
  } else {
    if (arraysEqual(cache, elements)) return;
    mat2array.set(elements);
    gl2.uniformMatrix2fv(this.addr, false, mat2array);
    copyArray(cache, elements);
  }
}
function setValueM3(gl2, v2) {
  const cache = this.cache;
  const elements = v2.elements;
  if (elements === void 0) {
    if (arraysEqual(cache, v2)) return;
    gl2.uniformMatrix3fv(this.addr, false, v2);
    copyArray(cache, v2);
  } else {
    if (arraysEqual(cache, elements)) return;
    mat3array.set(elements);
    gl2.uniformMatrix3fv(this.addr, false, mat3array);
    copyArray(cache, elements);
  }
}
function setValueM4(gl2, v2) {
  const cache = this.cache;
  const elements = v2.elements;
  if (elements === void 0) {
    if (arraysEqual(cache, v2)) return;
    gl2.uniformMatrix4fv(this.addr, false, v2);
    copyArray(cache, v2);
  } else {
    if (arraysEqual(cache, elements)) return;
    mat4array.set(elements);
    gl2.uniformMatrix4fv(this.addr, false, mat4array);
    copyArray(cache, elements);
  }
}
function setValueV1i(gl2, v2) {
  const cache = this.cache;
  if (cache[0] === v2) return;
  gl2.uniform1i(this.addr, v2);
  cache[0] = v2;
}
function setValueV2i(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y) {
      gl2.uniform2i(this.addr, v2.x, v2.y);
      cache[0] = v2.x;
      cache[1] = v2.y;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform2iv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV3i(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y || cache[2] !== v2.z) {
      gl2.uniform3i(this.addr, v2.x, v2.y, v2.z);
      cache[0] = v2.x;
      cache[1] = v2.y;
      cache[2] = v2.z;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform3iv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV4i(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y || cache[2] !== v2.z || cache[3] !== v2.w) {
      gl2.uniform4i(this.addr, v2.x, v2.y, v2.z, v2.w);
      cache[0] = v2.x;
      cache[1] = v2.y;
      cache[2] = v2.z;
      cache[3] = v2.w;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform4iv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV1ui(gl2, v2) {
  const cache = this.cache;
  if (cache[0] === v2) return;
  gl2.uniform1ui(this.addr, v2);
  cache[0] = v2;
}
function setValueV2ui(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y) {
      gl2.uniform2ui(this.addr, v2.x, v2.y);
      cache[0] = v2.x;
      cache[1] = v2.y;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform2uiv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV3ui(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y || cache[2] !== v2.z) {
      gl2.uniform3ui(this.addr, v2.x, v2.y, v2.z);
      cache[0] = v2.x;
      cache[1] = v2.y;
      cache[2] = v2.z;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform3uiv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueV4ui(gl2, v2) {
  const cache = this.cache;
  if (v2.x !== void 0) {
    if (cache[0] !== v2.x || cache[1] !== v2.y || cache[2] !== v2.z || cache[3] !== v2.w) {
      gl2.uniform4ui(this.addr, v2.x, v2.y, v2.z, v2.w);
      cache[0] = v2.x;
      cache[1] = v2.y;
      cache[2] = v2.z;
      cache[3] = v2.w;
    }
  } else {
    if (arraysEqual(cache, v2)) return;
    gl2.uniform4uiv(this.addr, v2);
    copyArray(cache, v2);
  }
}
function setValueT1(gl2, v2, textures) {
  const cache = this.cache;
  const unit = textures.allocateTextureUnit();
  if (cache[0] !== unit) {
    gl2.uniform1i(this.addr, unit);
    cache[0] = unit;
  }
  textures.setTexture2D(v2 || emptyTexture, unit);
}
function setValueT3D1(gl2, v2, textures) {
  const cache = this.cache;
  const unit = textures.allocateTextureUnit();
  if (cache[0] !== unit) {
    gl2.uniform1i(this.addr, unit);
    cache[0] = unit;
  }
  textures.setTexture3D(v2 || empty3dTexture, unit);
}
function setValueT6(gl2, v2, textures) {
  const cache = this.cache;
  const unit = textures.allocateTextureUnit();
  if (cache[0] !== unit) {
    gl2.uniform1i(this.addr, unit);
    cache[0] = unit;
  }
  textures.setTextureCube(v2 || emptyCubeTexture, unit);
}
function setValueT2DArray1(gl2, v2, textures) {
  const cache = this.cache;
  const unit = textures.allocateTextureUnit();
  if (cache[0] !== unit) {
    gl2.uniform1i(this.addr, unit);
    cache[0] = unit;
  }
  textures.setTexture2DArray(v2 || emptyArrayTexture, unit);
}
function getSingularSetter(type) {
  switch (type) {
    case 5126:
      return setValueV1f;
    case 35664:
      return setValueV2f;
    case 35665:
      return setValueV3f;
    case 35666:
      return setValueV4f;
    case 35674:
      return setValueM2;
    case 35675:
      return setValueM3;
    case 35676:
      return setValueM4;
    case 5124:
    case 35670:
      return setValueV1i;
    case 35667:
    case 35671:
      return setValueV2i;
    case 35668:
    case 35672:
      return setValueV3i;
    case 35669:
    case 35673:
      return setValueV4i;
    case 5125:
      return setValueV1ui;
    case 36294:
      return setValueV2ui;
    case 36295:
      return setValueV3ui;
    case 36296:
      return setValueV4ui;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return setValueT1;
    case 35679:
    case 36299:
    case 36307:
      return setValueT3D1;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return setValueT6;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return setValueT2DArray1;
  }
}
function setValueV1fArray(gl2, v2) {
  gl2.uniform1fv(this.addr, v2);
}
function setValueV2fArray(gl2, v2) {
  const data = flatten(v2, this.size, 2);
  gl2.uniform2fv(this.addr, data);
}
function setValueV3fArray(gl2, v2) {
  const data = flatten(v2, this.size, 3);
  gl2.uniform3fv(this.addr, data);
}
function setValueV4fArray(gl2, v2) {
  const data = flatten(v2, this.size, 4);
  gl2.uniform4fv(this.addr, data);
}
function setValueM2Array(gl2, v2) {
  const data = flatten(v2, this.size, 4);
  gl2.uniformMatrix2fv(this.addr, false, data);
}
function setValueM3Array(gl2, v2) {
  const data = flatten(v2, this.size, 9);
  gl2.uniformMatrix3fv(this.addr, false, data);
}
function setValueM4Array(gl2, v2) {
  const data = flatten(v2, this.size, 16);
  gl2.uniformMatrix4fv(this.addr, false, data);
}
function setValueV1iArray(gl2, v2) {
  gl2.uniform1iv(this.addr, v2);
}
function setValueV2iArray(gl2, v2) {
  gl2.uniform2iv(this.addr, v2);
}
function setValueV3iArray(gl2, v2) {
  gl2.uniform3iv(this.addr, v2);
}
function setValueV4iArray(gl2, v2) {
  gl2.uniform4iv(this.addr, v2);
}
function setValueV1uiArray(gl2, v2) {
  gl2.uniform1uiv(this.addr, v2);
}
function setValueV2uiArray(gl2, v2) {
  gl2.uniform2uiv(this.addr, v2);
}
function setValueV3uiArray(gl2, v2) {
  gl2.uniform3uiv(this.addr, v2);
}
function setValueV4uiArray(gl2, v2) {
  gl2.uniform4uiv(this.addr, v2);
}
function setValueT1Array(gl2, v2, textures) {
  const cache = this.cache;
  const n2 = v2.length;
  const units = allocTexUnits(textures, n2);
  if (!arraysEqual(cache, units)) {
    gl2.uniform1iv(this.addr, units);
    copyArray(cache, units);
  }
  for (let i = 0; i !== n2; ++i) {
    textures.setTexture2D(v2[i] || emptyTexture, units[i]);
  }
}
function setValueT3DArray(gl2, v2, textures) {
  const cache = this.cache;
  const n2 = v2.length;
  const units = allocTexUnits(textures, n2);
  if (!arraysEqual(cache, units)) {
    gl2.uniform1iv(this.addr, units);
    copyArray(cache, units);
  }
  for (let i = 0; i !== n2; ++i) {
    textures.setTexture3D(v2[i] || empty3dTexture, units[i]);
  }
}
function setValueT6Array(gl2, v2, textures) {
  const cache = this.cache;
  const n2 = v2.length;
  const units = allocTexUnits(textures, n2);
  if (!arraysEqual(cache, units)) {
    gl2.uniform1iv(this.addr, units);
    copyArray(cache, units);
  }
  for (let i = 0; i !== n2; ++i) {
    textures.setTextureCube(v2[i] || emptyCubeTexture, units[i]);
  }
}
function setValueT2DArrayArray(gl2, v2, textures) {
  const cache = this.cache;
  const n2 = v2.length;
  const units = allocTexUnits(textures, n2);
  if (!arraysEqual(cache, units)) {
    gl2.uniform1iv(this.addr, units);
    copyArray(cache, units);
  }
  for (let i = 0; i !== n2; ++i) {
    textures.setTexture2DArray(v2[i] || emptyArrayTexture, units[i]);
  }
}
function getPureArraySetter(type) {
  switch (type) {
    case 5126:
      return setValueV1fArray;
    case 35664:
      return setValueV2fArray;
    case 35665:
      return setValueV3fArray;
    case 35666:
      return setValueV4fArray;
    case 35674:
      return setValueM2Array;
    case 35675:
      return setValueM3Array;
    case 35676:
      return setValueM4Array;
    case 5124:
    case 35670:
      return setValueV1iArray;
    case 35667:
    case 35671:
      return setValueV2iArray;
    case 35668:
    case 35672:
      return setValueV3iArray;
    case 35669:
    case 35673:
      return setValueV4iArray;
    case 5125:
      return setValueV1uiArray;
    case 36294:
      return setValueV2uiArray;
    case 36295:
      return setValueV3uiArray;
    case 36296:
      return setValueV4uiArray;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return setValueT1Array;
    case 35679:
    case 36299:
    case 36307:
      return setValueT3DArray;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return setValueT6Array;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return setValueT2DArrayArray;
  }
}
class SingleUniform {
  constructor(id2, activeInfo, addr) {
    this.id = id2;
    this.addr = addr;
    this.cache = [];
    this.setValue = getSingularSetter(activeInfo.type);
  }
}
class PureArrayUniform {
  constructor(id2, activeInfo, addr) {
    this.id = id2;
    this.addr = addr;
    this.cache = [];
    this.size = activeInfo.size;
    this.setValue = getPureArraySetter(activeInfo.type);
  }
}
class StructuredUniform {
  constructor(id2) {
    this.id = id2;
    this.seq = [];
    this.map = {};
  }
  setValue(gl2, value, textures) {
    const seq = this.seq;
    for (let i = 0, n2 = seq.length; i !== n2; ++i) {
      const u2 = seq[i];
      u2.setValue(gl2, value[u2.id], textures);
    }
  }
}
const RePathPart = /(\w+)(\])?(\[|\.)?/g;
function addUniform(container, uniformObject) {
  container.seq.push(uniformObject);
  container.map[uniformObject.id] = uniformObject;
}
function parseUniform(activeInfo, addr, container) {
  const path = activeInfo.name, pathLength = path.length;
  RePathPart.lastIndex = 0;
  while (true) {
    const match = RePathPart.exec(path), matchEnd = RePathPart.lastIndex;
    let id2 = match[1];
    const idIsIndex = match[2] === "]", subscript = match[3];
    if (idIsIndex) id2 = id2 | 0;
    if (subscript === void 0 || subscript === "[" && matchEnd + 2 === pathLength) {
      addUniform(container, subscript === void 0 ? new SingleUniform(id2, activeInfo, addr) : new PureArrayUniform(id2, activeInfo, addr));
      break;
    } else {
      const map2 = container.map;
      let next2 = map2[id2];
      if (next2 === void 0) {
        next2 = new StructuredUniform(id2);
        addUniform(container, next2);
      }
      container = next2;
    }
  }
}
class WebGLUniforms {
  constructor(gl2, program) {
    this.seq = [];
    this.map = {};
    const n2 = gl2.getProgramParameter(program, 35718);
    for (let i = 0; i < n2; ++i) {
      const info = gl2.getActiveUniform(program, i), addr = gl2.getUniformLocation(program, info.name);
      parseUniform(info, addr, this);
    }
  }
  setValue(gl2, name, value, textures) {
    const u2 = this.map[name];
    if (u2 !== void 0) u2.setValue(gl2, value, textures);
  }
  setOptional(gl2, object2, name) {
    const v2 = object2[name];
    if (v2 !== void 0) this.setValue(gl2, name, v2);
  }
  static upload(gl2, seq, values, textures) {
    for (let i = 0, n2 = seq.length; i !== n2; ++i) {
      const u2 = seq[i], v2 = values[u2.id];
      if (v2.needsUpdate !== false) {
        u2.setValue(gl2, v2.value, textures);
      }
    }
  }
  static seqWithValue(seq, values) {
    const r2 = [];
    for (let i = 0, n2 = seq.length; i !== n2; ++i) {
      const u2 = seq[i];
      if (u2.id in values) r2.push(u2);
    }
    return r2;
  }
}
function WebGLShader(gl2, type, string2) {
  const shader = gl2.createShader(type);
  gl2.shaderSource(shader, string2);
  gl2.compileShader(shader);
  return shader;
}
let programIdCount = 0;
function handleSource(string2, errorLine) {
  const lines = string2.split("\n");
  const lines2 = [];
  const from2 = Math.max(errorLine - 6, 0);
  const to2 = Math.min(errorLine + 6, lines.length);
  for (let i = from2; i < to2; i++) {
    const line = i + 1;
    lines2.push(`${line === errorLine ? ">" : " "} ${line}: ${lines[i]}`);
  }
  return lines2.join("\n");
}
function getEncodingComponents(encoding) {
  switch (encoding) {
    case LinearEncoding:
      return ["Linear", "( value )"];
    case sRGBEncoding:
      return ["sRGB", "( value )"];
    default:
      console.warn("THREE.WebGLProgram: Unsupported encoding:", encoding);
      return ["Linear", "( value )"];
  }
}
function getShaderErrors(gl2, shader, type) {
  const status = gl2.getShaderParameter(shader, 35713);
  const errors = gl2.getShaderInfoLog(shader).trim();
  if (status && errors === "") return "";
  const errorMatches = /ERROR: 0:(\d+)/.exec(errors);
  if (errorMatches) {
    const errorLine = parseInt(errorMatches[1]);
    return type.toUpperCase() + "\n\n" + errors + "\n\n" + handleSource(gl2.getShaderSource(shader), errorLine);
  } else {
    return errors;
  }
}
function getTexelEncodingFunction(functionName, encoding) {
  const components = getEncodingComponents(encoding);
  return "vec4 " + functionName + "( vec4 value ) { return LinearTo" + components[0] + components[1] + "; }";
}
function getToneMappingFunction(functionName, toneMapping) {
  let toneMappingName;
  switch (toneMapping) {
    case LinearToneMapping:
      toneMappingName = "Linear";
      break;
    case ReinhardToneMapping:
      toneMappingName = "Reinhard";
      break;
    case CineonToneMapping:
      toneMappingName = "OptimizedCineon";
      break;
    case ACESFilmicToneMapping:
      toneMappingName = "ACESFilmic";
      break;
    case CustomToneMapping:
      toneMappingName = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", toneMapping);
      toneMappingName = "Linear";
  }
  return "vec3 " + functionName + "( vec3 color ) { return " + toneMappingName + "ToneMapping( color ); }";
}
function generateExtensions(parameters) {
  const chunks = [
    parameters.extensionDerivatives || !!parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
    (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
    parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
    (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
  ];
  return chunks.filter(filterEmptyLine).join("\n");
}
function generateDefines(defines) {
  const chunks = [];
  for (const name in defines) {
    const value = defines[name];
    if (value === false) continue;
    chunks.push("#define " + name + " " + value);
  }
  return chunks.join("\n");
}
function fetchAttributeLocations(gl2, program) {
  const attributes = {};
  const n2 = gl2.getProgramParameter(program, 35721);
  for (let i = 0; i < n2; i++) {
    const info = gl2.getActiveAttrib(program, i);
    const name = info.name;
    let locationSize = 1;
    if (info.type === 35674) locationSize = 2;
    if (info.type === 35675) locationSize = 3;
    if (info.type === 35676) locationSize = 4;
    attributes[name] = {
      type: info.type,
      location: gl2.getAttribLocation(program, name),
      locationSize
    };
  }
  return attributes;
}
function filterEmptyLine(string2) {
  return string2 !== "";
}
function replaceLightNums(string2, parameters) {
  const numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;
  return string2.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);
}
function replaceClippingPlaneNums(string2, parameters) {
  return string2.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);
}
const includePattern = /^[ \t]*#include +<([\w\d./]+)>/gm;
function resolveIncludes(string2) {
  return string2.replace(includePattern, includeReplacer);
}
function includeReplacer(match, include) {
  const string2 = ShaderChunk[include];
  if (string2 === void 0) {
    throw new Error("Can not resolve #include <" + include + ">");
  }
  return resolveIncludes(string2);
}
const unrollLoopPattern = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function unrollLoops(string2) {
  return string2.replace(unrollLoopPattern, loopReplacer);
}
function loopReplacer(match, start, end, snippet) {
  let string2 = "";
  for (let i = parseInt(start); i < parseInt(end); i++) {
    string2 += snippet.replace(/\[\s*i\s*\]/g, "[ " + i + " ]").replace(/UNROLLED_LOOP_INDEX/g, i);
  }
  return string2;
}
function generatePrecision(parameters) {
  let precisionstring = "precision " + parameters.precision + " float;\nprecision " + parameters.precision + " int;";
  if (parameters.precision === "highp") {
    precisionstring += "\n#define HIGH_PRECISION";
  } else if (parameters.precision === "mediump") {
    precisionstring += "\n#define MEDIUM_PRECISION";
  } else if (parameters.precision === "lowp") {
    precisionstring += "\n#define LOW_PRECISION";
  }
  return precisionstring;
}
function generateShadowMapTypeDefine(parameters) {
  let shadowMapTypeDefine = "SHADOWMAP_TYPE_BASIC";
  if (parameters.shadowMapType === PCFShadowMap) {
    shadowMapTypeDefine = "SHADOWMAP_TYPE_PCF";
  } else if (parameters.shadowMapType === PCFSoftShadowMap) {
    shadowMapTypeDefine = "SHADOWMAP_TYPE_PCF_SOFT";
  } else if (parameters.shadowMapType === VSMShadowMap) {
    shadowMapTypeDefine = "SHADOWMAP_TYPE_VSM";
  }
  return shadowMapTypeDefine;
}
function generateEnvMapTypeDefine(parameters) {
  let envMapTypeDefine = "ENVMAP_TYPE_CUBE";
  if (parameters.envMap) {
    switch (parameters.envMapMode) {
      case CubeReflectionMapping:
      case CubeRefractionMapping:
        envMapTypeDefine = "ENVMAP_TYPE_CUBE";
        break;
      case CubeUVReflectionMapping:
        envMapTypeDefine = "ENVMAP_TYPE_CUBE_UV";
        break;
    }
  }
  return envMapTypeDefine;
}
function generateEnvMapModeDefine(parameters) {
  let envMapModeDefine = "ENVMAP_MODE_REFLECTION";
  if (parameters.envMap) {
    switch (parameters.envMapMode) {
      case CubeRefractionMapping:
        envMapModeDefine = "ENVMAP_MODE_REFRACTION";
        break;
    }
  }
  return envMapModeDefine;
}
function generateEnvMapBlendingDefine(parameters) {
  let envMapBlendingDefine = "ENVMAP_BLENDING_NONE";
  if (parameters.envMap) {
    switch (parameters.combine) {
      case MultiplyOperation:
        envMapBlendingDefine = "ENVMAP_BLENDING_MULTIPLY";
        break;
      case MixOperation:
        envMapBlendingDefine = "ENVMAP_BLENDING_MIX";
        break;
      case AddOperation:
        envMapBlendingDefine = "ENVMAP_BLENDING_ADD";
        break;
    }
  }
  return envMapBlendingDefine;
}
function generateCubeUVSize(parameters) {
  const imageHeight = parameters.envMapCubeUVHeight;
  if (imageHeight === null) return null;
  const maxMip = Math.log2(imageHeight) - 2;
  const texelHeight = 1 / imageHeight;
  const texelWidth = 1 / (3 * Math.max(Math.pow(2, maxMip), 7 * 16));
  return { texelWidth, texelHeight, maxMip };
}
function WebGLProgram(renderer, cacheKey, parameters, bindingStates) {
  const gl2 = renderer.getContext();
  const defines = parameters.defines;
  let vertexShader = parameters.vertexShader;
  let fragmentShader = parameters.fragmentShader;
  const shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);
  const envMapTypeDefine = generateEnvMapTypeDefine(parameters);
  const envMapModeDefine = generateEnvMapModeDefine(parameters);
  const envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);
  const envMapCubeUVSize = generateCubeUVSize(parameters);
  const customExtensions = parameters.isWebGL2 ? "" : generateExtensions(parameters);
  const customDefines = generateDefines(defines);
  const program = gl2.createProgram();
  let prefixVertex, prefixFragment;
  let versionString = parameters.glslVersion ? "#version " + parameters.glslVersion + "\n" : "";
  if (parameters.isRawShaderMaterial) {
    prefixVertex = [
      customDefines
    ].filter(filterEmptyLine).join("\n");
    if (prefixVertex.length > 0) {
      prefixVertex += "\n";
    }
    prefixFragment = [
      customExtensions,
      customDefines
    ].filter(filterEmptyLine).join("\n");
    if (prefixFragment.length > 0) {
      prefixFragment += "\n";
    }
  } else {
    prefixVertex = [
      generatePrecision(parameters),
      "#define SHADER_NAME " + parameters.shaderName,
      customDefines,
      parameters.instancing ? "#define USE_INSTANCING" : "",
      parameters.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
      parameters.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
      parameters.useFog && parameters.fog ? "#define USE_FOG" : "",
      parameters.useFog && parameters.fogExp2 ? "#define FOG_EXP2" : "",
      parameters.map ? "#define USE_MAP" : "",
      parameters.envMap ? "#define USE_ENVMAP" : "",
      parameters.envMap ? "#define " + envMapModeDefine : "",
      parameters.lightMap ? "#define USE_LIGHTMAP" : "",
      parameters.aoMap ? "#define USE_AOMAP" : "",
      parameters.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
      parameters.bumpMap ? "#define USE_BUMPMAP" : "",
      parameters.normalMap ? "#define USE_NORMALMAP" : "",
      parameters.normalMap && parameters.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
      parameters.normalMap && parameters.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
      parameters.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
      parameters.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
      parameters.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
      parameters.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
      parameters.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
      parameters.displacementMap && parameters.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
      parameters.specularMap ? "#define USE_SPECULARMAP" : "",
      parameters.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
      parameters.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
      parameters.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
      parameters.metalnessMap ? "#define USE_METALNESSMAP" : "",
      parameters.alphaMap ? "#define USE_ALPHAMAP" : "",
      parameters.transmission ? "#define USE_TRANSMISSION" : "",
      parameters.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
      parameters.thicknessMap ? "#define USE_THICKNESSMAP" : "",
      parameters.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
      parameters.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
      parameters.vertexTangents ? "#define USE_TANGENT" : "",
      parameters.vertexColors ? "#define USE_COLOR" : "",
      parameters.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
      parameters.vertexUvs ? "#define USE_UV" : "",
      parameters.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
      parameters.flatShading ? "#define FLAT_SHADED" : "",
      parameters.skinning ? "#define USE_SKINNING" : "",
      parameters.morphTargets ? "#define USE_MORPHTARGETS" : "",
      parameters.morphNormals && parameters.flatShading === false ? "#define USE_MORPHNORMALS" : "",
      parameters.morphColors && parameters.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
      parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
      parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + parameters.morphTextureStride : "",
      parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? "#define MORPHTARGETS_COUNT " + parameters.morphTargetsCount : "",
      parameters.doubleSided ? "#define DOUBLE_SIDED" : "",
      parameters.flipSided ? "#define FLIP_SIDED" : "",
      parameters.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
      parameters.shadowMapEnabled ? "#define " + shadowMapTypeDefine : "",
      parameters.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
      parameters.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
      parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
      "uniform mat4 modelMatrix;",
      "uniform mat4 modelViewMatrix;",
      "uniform mat4 projectionMatrix;",
      "uniform mat4 viewMatrix;",
      "uniform mat3 normalMatrix;",
      "uniform vec3 cameraPosition;",
      "uniform bool isOrthographic;",
      "#ifdef USE_INSTANCING",
      "	attribute mat4 instanceMatrix;",
      "#endif",
      "#ifdef USE_INSTANCING_COLOR",
      "	attribute vec3 instanceColor;",
      "#endif",
      "attribute vec3 position;",
      "attribute vec3 normal;",
      "attribute vec2 uv;",
      "#ifdef USE_TANGENT",
      "	attribute vec4 tangent;",
      "#endif",
      "#if defined( USE_COLOR_ALPHA )",
      "	attribute vec4 color;",
      "#elif defined( USE_COLOR )",
      "	attribute vec3 color;",
      "#endif",
      "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
      "	attribute vec3 morphTarget0;",
      "	attribute vec3 morphTarget1;",
      "	attribute vec3 morphTarget2;",
      "	attribute vec3 morphTarget3;",
      "	#ifdef USE_MORPHNORMALS",
      "		attribute vec3 morphNormal0;",
      "		attribute vec3 morphNormal1;",
      "		attribute vec3 morphNormal2;",
      "		attribute vec3 morphNormal3;",
      "	#else",
      "		attribute vec3 morphTarget4;",
      "		attribute vec3 morphTarget5;",
      "		attribute vec3 morphTarget6;",
      "		attribute vec3 morphTarget7;",
      "	#endif",
      "#endif",
      "#ifdef USE_SKINNING",
      "	attribute vec4 skinIndex;",
      "	attribute vec4 skinWeight;",
      "#endif",
      "\n"
    ].filter(filterEmptyLine).join("\n");
    prefixFragment = [
      customExtensions,
      generatePrecision(parameters),
      "#define SHADER_NAME " + parameters.shaderName,
      customDefines,
      parameters.useFog && parameters.fog ? "#define USE_FOG" : "",
      parameters.useFog && parameters.fogExp2 ? "#define FOG_EXP2" : "",
      parameters.map ? "#define USE_MAP" : "",
      parameters.matcap ? "#define USE_MATCAP" : "",
      parameters.envMap ? "#define USE_ENVMAP" : "",
      parameters.envMap ? "#define " + envMapTypeDefine : "",
      parameters.envMap ? "#define " + envMapModeDefine : "",
      parameters.envMap ? "#define " + envMapBlendingDefine : "",
      envMapCubeUVSize ? "#define CUBEUV_TEXEL_WIDTH " + envMapCubeUVSize.texelWidth : "",
      envMapCubeUVSize ? "#define CUBEUV_TEXEL_HEIGHT " + envMapCubeUVSize.texelHeight : "",
      envMapCubeUVSize ? "#define CUBEUV_MAX_MIP " + envMapCubeUVSize.maxMip + ".0" : "",
      parameters.lightMap ? "#define USE_LIGHTMAP" : "",
      parameters.aoMap ? "#define USE_AOMAP" : "",
      parameters.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
      parameters.bumpMap ? "#define USE_BUMPMAP" : "",
      parameters.normalMap ? "#define USE_NORMALMAP" : "",
      parameters.normalMap && parameters.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
      parameters.normalMap && parameters.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
      parameters.clearcoat ? "#define USE_CLEARCOAT" : "",
      parameters.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
      parameters.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
      parameters.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
      parameters.iridescence ? "#define USE_IRIDESCENCE" : "",
      parameters.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
      parameters.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
      parameters.specularMap ? "#define USE_SPECULARMAP" : "",
      parameters.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
      parameters.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
      parameters.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
      parameters.metalnessMap ? "#define USE_METALNESSMAP" : "",
      parameters.alphaMap ? "#define USE_ALPHAMAP" : "",
      parameters.alphaTest ? "#define USE_ALPHATEST" : "",
      parameters.sheen ? "#define USE_SHEEN" : "",
      parameters.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
      parameters.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
      parameters.transmission ? "#define USE_TRANSMISSION" : "",
      parameters.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
      parameters.thicknessMap ? "#define USE_THICKNESSMAP" : "",
      parameters.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
      parameters.vertexTangents ? "#define USE_TANGENT" : "",
      parameters.vertexColors || parameters.instancingColor ? "#define USE_COLOR" : "",
      parameters.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
      parameters.vertexUvs ? "#define USE_UV" : "",
      parameters.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
      parameters.gradientMap ? "#define USE_GRADIENTMAP" : "",
      parameters.flatShading ? "#define FLAT_SHADED" : "",
      parameters.doubleSided ? "#define DOUBLE_SIDED" : "",
      parameters.flipSided ? "#define FLIP_SIDED" : "",
      parameters.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
      parameters.shadowMapEnabled ? "#define " + shadowMapTypeDefine : "",
      parameters.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
      parameters.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
      parameters.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
      parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
      "uniform mat4 viewMatrix;",
      "uniform vec3 cameraPosition;",
      "uniform bool isOrthographic;",
      parameters.toneMapping !== NoToneMapping ? "#define TONE_MAPPING" : "",
      parameters.toneMapping !== NoToneMapping ? ShaderChunk["tonemapping_pars_fragment"] : "",
      // this code is required here because it is used by the toneMapping() function defined below
      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction("toneMapping", parameters.toneMapping) : "",
      parameters.dithering ? "#define DITHERING" : "",
      parameters.opaque ? "#define OPAQUE" : "",
      ShaderChunk["encodings_pars_fragment"],
      // this code is required here because it is used by the various encoding/decoding function defined below
      getTexelEncodingFunction("linearToOutputTexel", parameters.outputEncoding),
      parameters.useDepthPacking ? "#define DEPTH_PACKING " + parameters.depthPacking : "",
      "\n"
    ].filter(filterEmptyLine).join("\n");
  }
  vertexShader = resolveIncludes(vertexShader);
  vertexShader = replaceLightNums(vertexShader, parameters);
  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);
  fragmentShader = resolveIncludes(fragmentShader);
  fragmentShader = replaceLightNums(fragmentShader, parameters);
  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);
  vertexShader = unrollLoops(vertexShader);
  fragmentShader = unrollLoops(fragmentShader);
  if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {
    versionString = "#version 300 es\n";
    prefixVertex = [
      "precision mediump sampler2DArray;",
      "#define attribute in",
      "#define varying out",
      "#define texture2D texture"
    ].join("\n") + "\n" + prefixVertex;
    prefixFragment = [
      "#define varying in",
      parameters.glslVersion === GLSL3 ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
      parameters.glslVersion === GLSL3 ? "" : "#define gl_FragColor pc_fragColor",
      "#define gl_FragDepthEXT gl_FragDepth",
      "#define texture2D texture",
      "#define textureCube texture",
      "#define texture2DProj textureProj",
      "#define texture2DLodEXT textureLod",
      "#define texture2DProjLodEXT textureProjLod",
      "#define textureCubeLodEXT textureLod",
      "#define texture2DGradEXT textureGrad",
      "#define texture2DProjGradEXT textureProjGrad",
      "#define textureCubeGradEXT textureGrad"
    ].join("\n") + "\n" + prefixFragment;
  }
  const vertexGlsl = versionString + prefixVertex + vertexShader;
  const fragmentGlsl = versionString + prefixFragment + fragmentShader;
  const glVertexShader = WebGLShader(gl2, 35633, vertexGlsl);
  const glFragmentShader = WebGLShader(gl2, 35632, fragmentGlsl);
  gl2.attachShader(program, glVertexShader);
  gl2.attachShader(program, glFragmentShader);
  if (parameters.index0AttributeName !== void 0) {
    gl2.bindAttribLocation(program, 0, parameters.index0AttributeName);
  } else if (parameters.morphTargets === true) {
    gl2.bindAttribLocation(program, 0, "position");
  }
  gl2.linkProgram(program);
  if (renderer.debug.checkShaderErrors) {
    const programLog = gl2.getProgramInfoLog(program).trim();
    const vertexLog = gl2.getShaderInfoLog(glVertexShader).trim();
    const fragmentLog = gl2.getShaderInfoLog(glFragmentShader).trim();
    let runnable = true;
    let haveDiagnostics = true;
    if (gl2.getProgramParameter(program, 35714) === false) {
      runnable = false;
      const vertexErrors = getShaderErrors(gl2, glVertexShader, "vertex");
      const fragmentErrors = getShaderErrors(gl2, glFragmentShader, "fragment");
      console.error(
        "THREE.WebGLProgram: Shader Error " + gl2.getError() + " - VALIDATE_STATUS " + gl2.getProgramParameter(program, 35715) + "\n\nProgram Info Log: " + programLog + "\n" + vertexErrors + "\n" + fragmentErrors
      );
    } else if (programLog !== "") {
      console.warn("THREE.WebGLProgram: Program Info Log:", programLog);
    } else if (vertexLog === "" || fragmentLog === "") {
      haveDiagnostics = false;
    }
    if (haveDiagnostics) {
      this.diagnostics = {
        runnable,
        programLog,
        vertexShader: {
          log: vertexLog,
          prefix: prefixVertex
        },
        fragmentShader: {
          log: fragmentLog,
          prefix: prefixFragment
        }
      };
    }
  }
  gl2.deleteShader(glVertexShader);
  gl2.deleteShader(glFragmentShader);
  let cachedUniforms;
  this.getUniforms = function() {
    if (cachedUniforms === void 0) {
      cachedUniforms = new WebGLUniforms(gl2, program);
    }
    return cachedUniforms;
  };
  let cachedAttributes;
  this.getAttributes = function() {
    if (cachedAttributes === void 0) {
      cachedAttributes = fetchAttributeLocations(gl2, program);
    }
    return cachedAttributes;
  };
  this.destroy = function() {
    bindingStates.releaseStatesOfProgram(this);
    gl2.deleteProgram(program);
    this.program = void 0;
  };
  this.name = parameters.shaderName;
  this.id = programIdCount++;
  this.cacheKey = cacheKey;
  this.usedTimes = 1;
  this.program = program;
  this.vertexShader = glVertexShader;
  this.fragmentShader = glFragmentShader;
  return this;
}
let _id = 0;
class WebGLShaderCache {
  constructor() {
    this.shaderCache = /* @__PURE__ */ new Map();
    this.materialCache = /* @__PURE__ */ new Map();
  }
  update(material) {
    const vertexShader = material.vertexShader;
    const fragmentShader = material.fragmentShader;
    const vertexShaderStage = this._getShaderStage(vertexShader);
    const fragmentShaderStage = this._getShaderStage(fragmentShader);
    const materialShaders = this._getShaderCacheForMaterial(material);
    if (materialShaders.has(vertexShaderStage) === false) {
      materialShaders.add(vertexShaderStage);
      vertexShaderStage.usedTimes++;
    }
    if (materialShaders.has(fragmentShaderStage) === false) {
      materialShaders.add(fragmentShaderStage);
      fragmentShaderStage.usedTimes++;
    }
    return this;
  }
  remove(material) {
    const materialShaders = this.materialCache.get(material);
    for (const shaderStage of materialShaders) {
      shaderStage.usedTimes--;
      if (shaderStage.usedTimes === 0) this.shaderCache.delete(shaderStage.code);
    }
    this.materialCache.delete(material);
    return this;
  }
  getVertexShaderID(material) {
    return this._getShaderStage(material.vertexShader).id;
  }
  getFragmentShaderID(material) {
    return this._getShaderStage(material.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear();
    this.materialCache.clear();
  }
  _getShaderCacheForMaterial(material) {
    const cache = this.materialCache;
    let set2 = cache.get(material);
    if (set2 === void 0) {
      set2 = /* @__PURE__ */ new Set();
      cache.set(material, set2);
    }
    return set2;
  }
  _getShaderStage(code) {
    const cache = this.shaderCache;
    let stage = cache.get(code);
    if (stage === void 0) {
      stage = new WebGLShaderStage(code);
      cache.set(code, stage);
    }
    return stage;
  }
}
class WebGLShaderStage {
  constructor(code) {
    this.id = _id++;
    this.code = code;
    this.usedTimes = 0;
  }
}
function WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {
  const _programLayers = new Layers();
  const _customShaders = new WebGLShaderCache();
  const programs = [];
  const isWebGL2 = capabilities.isWebGL2;
  const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;
  const vertexTextures = capabilities.vertexTextures;
  let precision = capabilities.precision;
  const shaderIDs = {
    MeshDepthMaterial: "depth",
    MeshDistanceMaterial: "distanceRGBA",
    MeshNormalMaterial: "normal",
    MeshBasicMaterial: "basic",
    MeshLambertMaterial: "lambert",
    MeshPhongMaterial: "phong",
    MeshToonMaterial: "toon",
    MeshStandardMaterial: "physical",
    MeshPhysicalMaterial: "physical",
    MeshMatcapMaterial: "matcap",
    LineBasicMaterial: "basic",
    LineDashedMaterial: "dashed",
    PointsMaterial: "points",
    ShadowMaterial: "shadow",
    SpriteMaterial: "sprite"
  };
  function getParameters(material, lights, shadows, scene, object2) {
    const fog = scene.fog;
    const geometry = object2.geometry;
    const environment = material.isMeshStandardMaterial ? scene.environment : null;
    const envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);
    const envMapCubeUVHeight = !!envMap && envMap.mapping === CubeUVReflectionMapping ? envMap.image.height : null;
    const shaderID = shaderIDs[material.type];
    if (material.precision !== null) {
      precision = capabilities.getMaxPrecision(material.precision);
      if (precision !== material.precision) {
        console.warn("THREE.WebGLProgram.getParameters:", material.precision, "not supported, using", precision, "instead.");
      }
    }
    const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;
    const morphTargetsCount = morphAttribute !== void 0 ? morphAttribute.length : 0;
    let morphTextureStride = 0;
    if (geometry.morphAttributes.position !== void 0) morphTextureStride = 1;
    if (geometry.morphAttributes.normal !== void 0) morphTextureStride = 2;
    if (geometry.morphAttributes.color !== void 0) morphTextureStride = 3;
    let vertexShader, fragmentShader;
    let customVertexShaderID, customFragmentShaderID;
    if (shaderID) {
      const shader = ShaderLib[shaderID];
      vertexShader = shader.vertexShader;
      fragmentShader = shader.fragmentShader;
    } else {
      vertexShader = material.vertexShader;
      fragmentShader = material.fragmentShader;
      _customShaders.update(material);
      customVertexShaderID = _customShaders.getVertexShaderID(material);
      customFragmentShaderID = _customShaders.getFragmentShaderID(material);
    }
    const currentRenderTarget = renderer.getRenderTarget();
    const useAlphaTest = material.alphaTest > 0;
    const useClearcoat = material.clearcoat > 0;
    const useIridescence = material.iridescence > 0;
    const parameters = {
      isWebGL2,
      shaderID,
      shaderName: material.type,
      vertexShader,
      fragmentShader,
      defines: material.defines,
      customVertexShaderID,
      customFragmentShaderID,
      isRawShaderMaterial: material.isRawShaderMaterial === true,
      glslVersion: material.glslVersion,
      precision,
      instancing: object2.isInstancedMesh === true,
      instancingColor: object2.isInstancedMesh === true && object2.instanceColor !== null,
      supportsVertexTextures: vertexTextures,
      outputEncoding: currentRenderTarget === null ? renderer.outputEncoding : currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding,
      map: !!material.map,
      matcap: !!material.matcap,
      envMap: !!envMap,
      envMapMode: envMap && envMap.mapping,
      envMapCubeUVHeight,
      lightMap: !!material.lightMap,
      aoMap: !!material.aoMap,
      emissiveMap: !!material.emissiveMap,
      bumpMap: !!material.bumpMap,
      normalMap: !!material.normalMap,
      objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,
      tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,
      decodeVideoTexture: !!material.map && material.map.isVideoTexture === true && material.map.encoding === sRGBEncoding,
      clearcoat: useClearcoat,
      clearcoatMap: useClearcoat && !!material.clearcoatMap,
      clearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,
      clearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,
      iridescence: useIridescence,
      iridescenceMap: useIridescence && !!material.iridescenceMap,
      iridescenceThicknessMap: useIridescence && !!material.iridescenceThicknessMap,
      displacementMap: !!material.displacementMap,
      roughnessMap: !!material.roughnessMap,
      metalnessMap: !!material.metalnessMap,
      specularMap: !!material.specularMap,
      specularIntensityMap: !!material.specularIntensityMap,
      specularColorMap: !!material.specularColorMap,
      opaque: material.transparent === false && material.blending === NormalBlending,
      alphaMap: !!material.alphaMap,
      alphaTest: useAlphaTest,
      gradientMap: !!material.gradientMap,
      sheen: material.sheen > 0,
      sheenColorMap: !!material.sheenColorMap,
      sheenRoughnessMap: !!material.sheenRoughnessMap,
      transmission: material.transmission > 0,
      transmissionMap: !!material.transmissionMap,
      thicknessMap: !!material.thicknessMap,
      combine: material.combine,
      vertexTangents: !!material.normalMap && !!geometry.attributes.tangent,
      vertexColors: material.vertexColors,
      vertexAlphas: material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4,
      vertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.iridescenceMap || !!material.iridescenceThicknessMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheenColorMap || !!material.sheenRoughnessMap,
      uvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.iridescenceMap || !!material.iridescenceThicknessMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || material.sheen > 0 || !!material.sheenColorMap || !!material.sheenRoughnessMap) && !!material.displacementMap,
      fog: !!fog,
      useFog: material.fog === true,
      fogExp2: fog && fog.isFogExp2,
      flatShading: !!material.flatShading,
      sizeAttenuation: material.sizeAttenuation,
      logarithmicDepthBuffer,
      skinning: object2.isSkinnedMesh === true,
      morphTargets: geometry.morphAttributes.position !== void 0,
      morphNormals: geometry.morphAttributes.normal !== void 0,
      morphColors: geometry.morphAttributes.color !== void 0,
      morphTargetsCount,
      morphTextureStride,
      numDirLights: lights.directional.length,
      numPointLights: lights.point.length,
      numSpotLights: lights.spot.length,
      numSpotLightMaps: lights.spotLightMap.length,
      numRectAreaLights: lights.rectArea.length,
      numHemiLights: lights.hemi.length,
      numDirLightShadows: lights.directionalShadowMap.length,
      numPointLightShadows: lights.pointShadowMap.length,
      numSpotLightShadows: lights.spotShadowMap.length,
      numSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,
      numClippingPlanes: clipping.numPlanes,
      numClipIntersection: clipping.numIntersection,
      dithering: material.dithering,
      shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,
      shadowMapType: renderer.shadowMap.type,
      toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,
      useLegacyLights: renderer.useLegacyLights,
      premultipliedAlpha: material.premultipliedAlpha,
      doubleSided: material.side === DoubleSide,
      flipSided: material.side === BackSide,
      useDepthPacking: !!material.depthPacking,
      depthPacking: material.depthPacking || 0,
      index0AttributeName: material.index0AttributeName,
      extensionDerivatives: material.extensions && material.extensions.derivatives,
      extensionFragDepth: material.extensions && material.extensions.fragDepth,
      extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,
      extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,
      rendererExtensionFragDepth: isWebGL2 || extensions.has("EXT_frag_depth"),
      rendererExtensionDrawBuffers: isWebGL2 || extensions.has("WEBGL_draw_buffers"),
      rendererExtensionShaderTextureLod: isWebGL2 || extensions.has("EXT_shader_texture_lod"),
      customProgramCacheKey: material.customProgramCacheKey()
    };
    return parameters;
  }
  function getProgramCacheKey(parameters) {
    const array2 = [];
    if (parameters.shaderID) {
      array2.push(parameters.shaderID);
    } else {
      array2.push(parameters.customVertexShaderID);
      array2.push(parameters.customFragmentShaderID);
    }
    if (parameters.defines !== void 0) {
      for (const name in parameters.defines) {
        array2.push(name);
        array2.push(parameters.defines[name]);
      }
    }
    if (parameters.isRawShaderMaterial === false) {
      getProgramCacheKeyParameters(array2, parameters);
      getProgramCacheKeyBooleans(array2, parameters);
      array2.push(renderer.outputEncoding);
    }
    array2.push(parameters.customProgramCacheKey);
    return array2.join();
  }
  function getProgramCacheKeyParameters(array2, parameters) {
    array2.push(parameters.precision);
    array2.push(parameters.outputEncoding);
    array2.push(parameters.envMapMode);
    array2.push(parameters.envMapCubeUVHeight);
    array2.push(parameters.combine);
    array2.push(parameters.vertexUvs);
    array2.push(parameters.fogExp2);
    array2.push(parameters.sizeAttenuation);
    array2.push(parameters.morphTargetsCount);
    array2.push(parameters.morphAttributeCount);
    array2.push(parameters.numDirLights);
    array2.push(parameters.numPointLights);
    array2.push(parameters.numSpotLights);
    array2.push(parameters.numSpotLightMaps);
    array2.push(parameters.numHemiLights);
    array2.push(parameters.numRectAreaLights);
    array2.push(parameters.numDirLightShadows);
    array2.push(parameters.numPointLightShadows);
    array2.push(parameters.numSpotLightShadows);
    array2.push(parameters.numSpotLightShadowsWithMaps);
    array2.push(parameters.shadowMapType);
    array2.push(parameters.toneMapping);
    array2.push(parameters.numClippingPlanes);
    array2.push(parameters.numClipIntersection);
    array2.push(parameters.depthPacking);
  }
  function getProgramCacheKeyBooleans(array2, parameters) {
    _programLayers.disableAll();
    if (parameters.isWebGL2)
      _programLayers.enable(0);
    if (parameters.supportsVertexTextures)
      _programLayers.enable(1);
    if (parameters.instancing)
      _programLayers.enable(2);
    if (parameters.instancingColor)
      _programLayers.enable(3);
    if (parameters.map)
      _programLayers.enable(4);
    if (parameters.matcap)
      _programLayers.enable(5);
    if (parameters.envMap)
      _programLayers.enable(6);
    if (parameters.lightMap)
      _programLayers.enable(7);
    if (parameters.aoMap)
      _programLayers.enable(8);
    if (parameters.emissiveMap)
      _programLayers.enable(9);
    if (parameters.bumpMap)
      _programLayers.enable(10);
    if (parameters.normalMap)
      _programLayers.enable(11);
    if (parameters.objectSpaceNormalMap)
      _programLayers.enable(12);
    if (parameters.tangentSpaceNormalMap)
      _programLayers.enable(13);
    if (parameters.clearcoat)
      _programLayers.enable(14);
    if (parameters.clearcoatMap)
      _programLayers.enable(15);
    if (parameters.clearcoatRoughnessMap)
      _programLayers.enable(16);
    if (parameters.clearcoatNormalMap)
      _programLayers.enable(17);
    if (parameters.iridescence)
      _programLayers.enable(18);
    if (parameters.iridescenceMap)
      _programLayers.enable(19);
    if (parameters.iridescenceThicknessMap)
      _programLayers.enable(20);
    if (parameters.displacementMap)
      _programLayers.enable(21);
    if (parameters.specularMap)
      _programLayers.enable(22);
    if (parameters.roughnessMap)
      _programLayers.enable(23);
    if (parameters.metalnessMap)
      _programLayers.enable(24);
    if (parameters.gradientMap)
      _programLayers.enable(25);
    if (parameters.alphaMap)
      _programLayers.enable(26);
    if (parameters.alphaTest)
      _programLayers.enable(27);
    if (parameters.vertexColors)
      _programLayers.enable(28);
    if (parameters.vertexAlphas)
      _programLayers.enable(29);
    if (parameters.vertexUvs)
      _programLayers.enable(30);
    if (parameters.vertexTangents)
      _programLayers.enable(31);
    if (parameters.uvsVertexOnly)
      _programLayers.enable(32);
    array2.push(_programLayers.mask);
    _programLayers.disableAll();
    if (parameters.fog)
      _programLayers.enable(0);
    if (parameters.useFog)
      _programLayers.enable(1);
    if (parameters.flatShading)
      _programLayers.enable(2);
    if (parameters.logarithmicDepthBuffer)
      _programLayers.enable(3);
    if (parameters.skinning)
      _programLayers.enable(4);
    if (parameters.morphTargets)
      _programLayers.enable(5);
    if (parameters.morphNormals)
      _programLayers.enable(6);
    if (parameters.morphColors)
      _programLayers.enable(7);
    if (parameters.premultipliedAlpha)
      _programLayers.enable(8);
    if (parameters.shadowMapEnabled)
      _programLayers.enable(9);
    if (parameters.useLegacyLights)
      _programLayers.enable(10);
    if (parameters.doubleSided)
      _programLayers.enable(11);
    if (parameters.flipSided)
      _programLayers.enable(12);
    if (parameters.useDepthPacking)
      _programLayers.enable(13);
    if (parameters.dithering)
      _programLayers.enable(14);
    if (parameters.specularIntensityMap)
      _programLayers.enable(15);
    if (parameters.specularColorMap)
      _programLayers.enable(16);
    if (parameters.transmission)
      _programLayers.enable(17);
    if (parameters.transmissionMap)
      _programLayers.enable(18);
    if (parameters.thicknessMap)
      _programLayers.enable(19);
    if (parameters.sheen)
      _programLayers.enable(20);
    if (parameters.sheenColorMap)
      _programLayers.enable(21);
    if (parameters.sheenRoughnessMap)
      _programLayers.enable(22);
    if (parameters.decodeVideoTexture)
      _programLayers.enable(23);
    if (parameters.opaque)
      _programLayers.enable(24);
    array2.push(_programLayers.mask);
  }
  function getUniforms(material) {
    const shaderID = shaderIDs[material.type];
    let uniforms;
    if (shaderID) {
      const shader = ShaderLib[shaderID];
      uniforms = UniformsUtils.clone(shader.uniforms);
    } else {
      uniforms = material.uniforms;
    }
    return uniforms;
  }
  function acquireProgram(parameters, cacheKey) {
    let program;
    for (let p2 = 0, pl2 = programs.length; p2 < pl2; p2++) {
      const preexistingProgram = programs[p2];
      if (preexistingProgram.cacheKey === cacheKey) {
        program = preexistingProgram;
        ++program.usedTimes;
        break;
      }
    }
    if (program === void 0) {
      program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);
      programs.push(program);
    }
    return program;
  }
  function releaseProgram(program) {
    if (--program.usedTimes === 0) {
      const i = programs.indexOf(program);
      programs[i] = programs[programs.length - 1];
      programs.pop();
      program.destroy();
    }
  }
  function releaseShaderCache(material) {
    _customShaders.remove(material);
  }
  function dispose() {
    _customShaders.dispose();
  }
  return {
    getParameters,
    getProgramCacheKey,
    getUniforms,
    acquireProgram,
    releaseProgram,
    releaseShaderCache,
    // Exposed for resource monitoring & error feedback via renderer.info:
    programs,
    dispose
  };
}
function WebGLProperties() {
  let properties = /* @__PURE__ */ new WeakMap();
  function get2(object2) {
    let map2 = properties.get(object2);
    if (map2 === void 0) {
      map2 = {};
      properties.set(object2, map2);
    }
    return map2;
  }
  function remove(object2) {
    properties.delete(object2);
  }
  function update(object2, key, value) {
    properties.get(object2)[key] = value;
  }
  function dispose() {
    properties = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: get2,
    remove,
    update,
    dispose
  };
}
function painterSortStable(a, b2) {
  if (a.groupOrder !== b2.groupOrder) {
    return a.groupOrder - b2.groupOrder;
  } else if (a.renderOrder !== b2.renderOrder) {
    return a.renderOrder - b2.renderOrder;
  } else if (a.material.id !== b2.material.id) {
    return a.material.id - b2.material.id;
  } else if (a.z !== b2.z) {
    return a.z - b2.z;
  } else {
    return a.id - b2.id;
  }
}
function reversePainterSortStable(a, b2) {
  if (a.groupOrder !== b2.groupOrder) {
    return a.groupOrder - b2.groupOrder;
  } else if (a.renderOrder !== b2.renderOrder) {
    return a.renderOrder - b2.renderOrder;
  } else if (a.z !== b2.z) {
    return b2.z - a.z;
  } else {
    return a.id - b2.id;
  }
}
function WebGLRenderList() {
  const renderItems = [];
  let renderItemsIndex = 0;
  const opaque = [];
  const transmissive = [];
  const transparent = [];
  function init() {
    renderItemsIndex = 0;
    opaque.length = 0;
    transmissive.length = 0;
    transparent.length = 0;
  }
  function getNextRenderItem(object2, geometry, material, groupOrder, z2, group) {
    let renderItem = renderItems[renderItemsIndex];
    if (renderItem === void 0) {
      renderItem = {
        id: object2.id,
        object: object2,
        geometry,
        material,
        groupOrder,
        renderOrder: object2.renderOrder,
        z: z2,
        group
      };
      renderItems[renderItemsIndex] = renderItem;
    } else {
      renderItem.id = object2.id;
      renderItem.object = object2;
      renderItem.geometry = geometry;
      renderItem.material = material;
      renderItem.groupOrder = groupOrder;
      renderItem.renderOrder = object2.renderOrder;
      renderItem.z = z2;
      renderItem.group = group;
    }
    renderItemsIndex++;
    return renderItem;
  }
  function push(object2, geometry, material, groupOrder, z2, group) {
    const renderItem = getNextRenderItem(object2, geometry, material, groupOrder, z2, group);
    if (material.transmission > 0) {
      transmissive.push(renderItem);
    } else if (material.transparent === true) {
      transparent.push(renderItem);
    } else {
      opaque.push(renderItem);
    }
  }
  function unshift(object2, geometry, material, groupOrder, z2, group) {
    const renderItem = getNextRenderItem(object2, geometry, material, groupOrder, z2, group);
    if (material.transmission > 0) {
      transmissive.unshift(renderItem);
    } else if (material.transparent === true) {
      transparent.unshift(renderItem);
    } else {
      opaque.unshift(renderItem);
    }
  }
  function sort(customOpaqueSort, customTransparentSort) {
    if (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);
    if (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);
    if (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);
  }
  function finish() {
    for (let i = renderItemsIndex, il2 = renderItems.length; i < il2; i++) {
      const renderItem = renderItems[i];
      if (renderItem.id === null) break;
      renderItem.id = null;
      renderItem.object = null;
      renderItem.geometry = null;
      renderItem.material = null;
      renderItem.group = null;
    }
  }
  return {
    opaque,
    transmissive,
    transparent,
    init,
    push,
    unshift,
    finish,
    sort
  };
}
function WebGLRenderLists() {
  let lists = /* @__PURE__ */ new WeakMap();
  function get2(scene, renderCallDepth) {
    const listArray = lists.get(scene);
    let list;
    if (listArray === void 0) {
      list = new WebGLRenderList();
      lists.set(scene, [list]);
    } else {
      if (renderCallDepth >= listArray.length) {
        list = new WebGLRenderList();
        listArray.push(list);
      } else {
        list = listArray[renderCallDepth];
      }
    }
    return list;
  }
  function dispose() {
    lists = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: get2,
    dispose
  };
}
function UniformsCache() {
  const lights = {};
  return {
    get: function(light) {
      if (lights[light.id] !== void 0) {
        return lights[light.id];
      }
      let uniforms;
      switch (light.type) {
        case "DirectionalLight":
          uniforms = {
            direction: new Vector3(),
            color: new Color()
          };
          break;
        case "SpotLight":
          uniforms = {
            position: new Vector3(),
            direction: new Vector3(),
            color: new Color(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0
          };
          break;
        case "PointLight":
          uniforms = {
            position: new Vector3(),
            color: new Color(),
            distance: 0,
            decay: 0
          };
          break;
        case "HemisphereLight":
          uniforms = {
            direction: new Vector3(),
            skyColor: new Color(),
            groundColor: new Color()
          };
          break;
        case "RectAreaLight":
          uniforms = {
            color: new Color(),
            position: new Vector3(),
            halfWidth: new Vector3(),
            halfHeight: new Vector3()
          };
          break;
      }
      lights[light.id] = uniforms;
      return uniforms;
    }
  };
}
function ShadowUniformsCache() {
  const lights = {};
  return {
    get: function(light) {
      if (lights[light.id] !== void 0) {
        return lights[light.id];
      }
      let uniforms;
      switch (light.type) {
        case "DirectionalLight":
          uniforms = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new Vector2()
          };
          break;
        case "SpotLight":
          uniforms = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new Vector2()
          };
          break;
        case "PointLight":
          uniforms = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new Vector2(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3
          };
          break;
      }
      lights[light.id] = uniforms;
      return uniforms;
    }
  };
}
let nextVersion = 0;
function shadowCastingAndTexturingLightsFirst(lightA, lightB) {
  return (lightB.castShadow ? 2 : 0) - (lightA.castShadow ? 2 : 0) + (lightB.map ? 1 : 0) - (lightA.map ? 1 : 0);
}
function WebGLLights(extensions, capabilities) {
  const cache = new UniformsCache();
  const shadowCache = ShadowUniformsCache();
  const state = {
    version: 0,
    hash: {
      directionalLength: -1,
      pointLength: -1,
      spotLength: -1,
      rectAreaLength: -1,
      hemiLength: -1,
      numDirectionalShadows: -1,
      numPointShadows: -1,
      numSpotShadows: -1,
      numSpotMaps: -1
    },
    ambient: [0, 0, 0],
    probe: [],
    directional: [],
    directionalShadow: [],
    directionalShadowMap: [],
    directionalShadowMatrix: [],
    spot: [],
    spotLightMap: [],
    spotShadow: [],
    spotShadowMap: [],
    spotLightMatrix: [],
    rectArea: [],
    rectAreaLTC1: null,
    rectAreaLTC2: null,
    point: [],
    pointShadow: [],
    pointShadowMap: [],
    pointShadowMatrix: [],
    hemi: [],
    numSpotLightShadowsWithMaps: 0
  };
  for (let i = 0; i < 9; i++) state.probe.push(new Vector3());
  const vector3 = new Vector3();
  const matrix4 = new Matrix4();
  const matrix42 = new Matrix4();
  function setup(lights, useLegacyLights) {
    let r2 = 0, g = 0, b2 = 0;
    for (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);
    let directionalLength = 0;
    let pointLength = 0;
    let spotLength = 0;
    let rectAreaLength = 0;
    let hemiLength = 0;
    let numDirectionalShadows = 0;
    let numPointShadows = 0;
    let numSpotShadows = 0;
    let numSpotMaps = 0;
    let numSpotShadowsWithMaps = 0;
    lights.sort(shadowCastingAndTexturingLightsFirst);
    const scaleFactor = useLegacyLights === true ? Math.PI : 1;
    for (let i = 0, l2 = lights.length; i < l2; i++) {
      const light = lights[i];
      const color = light.color;
      const intensity = light.intensity;
      const distance = light.distance;
      const shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;
      if (light.isAmbientLight) {
        r2 += color.r * intensity * scaleFactor;
        g += color.g * intensity * scaleFactor;
        b2 += color.b * intensity * scaleFactor;
      } else if (light.isLightProbe) {
        for (let j2 = 0; j2 < 9; j2++) {
          state.probe[j2].addScaledVector(light.sh.coefficients[j2], intensity);
        }
      } else if (light.isDirectionalLight) {
        const uniforms = cache.get(light);
        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);
        if (light.castShadow) {
          const shadow = light.shadow;
          const shadowUniforms = shadowCache.get(light);
          shadowUniforms.shadowBias = shadow.bias;
          shadowUniforms.shadowNormalBias = shadow.normalBias;
          shadowUniforms.shadowRadius = shadow.radius;
          shadowUniforms.shadowMapSize = shadow.mapSize;
          state.directionalShadow[directionalLength] = shadowUniforms;
          state.directionalShadowMap[directionalLength] = shadowMap;
          state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;
          numDirectionalShadows++;
        }
        state.directional[directionalLength] = uniforms;
        directionalLength++;
      } else if (light.isSpotLight) {
        const uniforms = cache.get(light);
        uniforms.position.setFromMatrixPosition(light.matrixWorld);
        uniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);
        uniforms.distance = distance;
        uniforms.coneCos = Math.cos(light.angle);
        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));
        uniforms.decay = light.decay;
        state.spot[spotLength] = uniforms;
        const shadow = light.shadow;
        if (light.map) {
          state.spotLightMap[numSpotMaps] = light.map;
          numSpotMaps++;
          shadow.updateMatrices(light);
          if (light.castShadow) numSpotShadowsWithMaps++;
        }
        state.spotLightMatrix[spotLength] = shadow.matrix;
        if (light.castShadow) {
          const shadowUniforms = shadowCache.get(light);
          shadowUniforms.shadowBias = shadow.bias;
          shadowUniforms.shadowNormalBias = shadow.normalBias;
          shadowUniforms.shadowRadius = shadow.radius;
          shadowUniforms.shadowMapSize = shadow.mapSize;
          state.spotShadow[spotLength] = shadowUniforms;
          state.spotShadowMap[spotLength] = shadowMap;
          numSpotShadows++;
        }
        spotLength++;
      } else if (light.isRectAreaLight) {
        const uniforms = cache.get(light);
        uniforms.color.copy(color).multiplyScalar(intensity);
        uniforms.halfWidth.set(light.width * 0.5, 0, 0);
        uniforms.halfHeight.set(0, light.height * 0.5, 0);
        state.rectArea[rectAreaLength] = uniforms;
        rectAreaLength++;
      } else if (light.isPointLight) {
        const uniforms = cache.get(light);
        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);
        uniforms.distance = light.distance;
        uniforms.decay = light.decay;
        if (light.castShadow) {
          const shadow = light.shadow;
          const shadowUniforms = shadowCache.get(light);
          shadowUniforms.shadowBias = shadow.bias;
          shadowUniforms.shadowNormalBias = shadow.normalBias;
          shadowUniforms.shadowRadius = shadow.radius;
          shadowUniforms.shadowMapSize = shadow.mapSize;
          shadowUniforms.shadowCameraNear = shadow.camera.near;
          shadowUniforms.shadowCameraFar = shadow.camera.far;
          state.pointShadow[pointLength] = shadowUniforms;
          state.pointShadowMap[pointLength] = shadowMap;
          state.pointShadowMatrix[pointLength] = light.shadow.matrix;
          numPointShadows++;
        }
        state.point[pointLength] = uniforms;
        pointLength++;
      } else if (light.isHemisphereLight) {
        const uniforms = cache.get(light);
        uniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);
        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);
        state.hemi[hemiLength] = uniforms;
        hemiLength++;
      }
    }
    if (rectAreaLength > 0) {
      if (capabilities.isWebGL2) {
        state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;
        state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;
      } else {
        if (extensions.has("OES_texture_float_linear") === true) {
          state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;
          state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;
        } else if (extensions.has("OES_texture_half_float_linear") === true) {
          state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;
          state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;
        } else {
          console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.");
        }
      }
    }
    state.ambient[0] = r2;
    state.ambient[1] = g;
    state.ambient[2] = b2;
    const hash = state.hash;
    if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows || hash.numSpotMaps !== numSpotMaps) {
      state.directional.length = directionalLength;
      state.spot.length = spotLength;
      state.rectArea.length = rectAreaLength;
      state.point.length = pointLength;
      state.hemi.length = hemiLength;
      state.directionalShadow.length = numDirectionalShadows;
      state.directionalShadowMap.length = numDirectionalShadows;
      state.pointShadow.length = numPointShadows;
      state.pointShadowMap.length = numPointShadows;
      state.spotShadow.length = numSpotShadows;
      state.spotShadowMap.length = numSpotShadows;
      state.directionalShadowMatrix.length = numDirectionalShadows;
      state.pointShadowMatrix.length = numPointShadows;
      state.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;
      state.spotLightMap.length = numSpotMaps;
      state.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;
      hash.directionalLength = directionalLength;
      hash.pointLength = pointLength;
      hash.spotLength = spotLength;
      hash.rectAreaLength = rectAreaLength;
      hash.hemiLength = hemiLength;
      hash.numDirectionalShadows = numDirectionalShadows;
      hash.numPointShadows = numPointShadows;
      hash.numSpotShadows = numSpotShadows;
      hash.numSpotMaps = numSpotMaps;
      state.version = nextVersion++;
    }
  }
  function setupView(lights, camera) {
    let directionalLength = 0;
    let pointLength = 0;
    let spotLength = 0;
    let rectAreaLength = 0;
    let hemiLength = 0;
    const viewMatrix = camera.matrixWorldInverse;
    for (let i = 0, l2 = lights.length; i < l2; i++) {
      const light = lights[i];
      if (light.isDirectionalLight) {
        const uniforms = state.directional[directionalLength];
        uniforms.direction.setFromMatrixPosition(light.matrixWorld);
        vector3.setFromMatrixPosition(light.target.matrixWorld);
        uniforms.direction.sub(vector3);
        uniforms.direction.transformDirection(viewMatrix);
        directionalLength++;
      } else if (light.isSpotLight) {
        const uniforms = state.spot[spotLength];
        uniforms.position.setFromMatrixPosition(light.matrixWorld);
        uniforms.position.applyMatrix4(viewMatrix);
        uniforms.direction.setFromMatrixPosition(light.matrixWorld);
        vector3.setFromMatrixPosition(light.target.matrixWorld);
        uniforms.direction.sub(vector3);
        uniforms.direction.transformDirection(viewMatrix);
        spotLength++;
      } else if (light.isRectAreaLight) {
        const uniforms = state.rectArea[rectAreaLength];
        uniforms.position.setFromMatrixPosition(light.matrixWorld);
        uniforms.position.applyMatrix4(viewMatrix);
        matrix42.identity();
        matrix4.copy(light.matrixWorld);
        matrix4.premultiply(viewMatrix);
        matrix42.extractRotation(matrix4);
        uniforms.halfWidth.set(light.width * 0.5, 0, 0);
        uniforms.halfHeight.set(0, light.height * 0.5, 0);
        uniforms.halfWidth.applyMatrix4(matrix42);
        uniforms.halfHeight.applyMatrix4(matrix42);
        rectAreaLength++;
      } else if (light.isPointLight) {
        const uniforms = state.point[pointLength];
        uniforms.position.setFromMatrixPosition(light.matrixWorld);
        uniforms.position.applyMatrix4(viewMatrix);
        pointLength++;
      } else if (light.isHemisphereLight) {
        const uniforms = state.hemi[hemiLength];
        uniforms.direction.setFromMatrixPosition(light.matrixWorld);
        uniforms.direction.transformDirection(viewMatrix);
        hemiLength++;
      }
    }
  }
  return {
    setup,
    setupView,
    state
  };
}
function WebGLRenderState(extensions, capabilities) {
  const lights = new WebGLLights(extensions, capabilities);
  const lightsArray = [];
  const shadowsArray = [];
  function init() {
    lightsArray.length = 0;
    shadowsArray.length = 0;
  }
  function pushLight(light) {
    lightsArray.push(light);
  }
  function pushShadow(shadowLight) {
    shadowsArray.push(shadowLight);
  }
  function setupLights(useLegacyLights) {
    lights.setup(lightsArray, useLegacyLights);
  }
  function setupLightsView(camera) {
    lights.setupView(lightsArray, camera);
  }
  const state = {
    lightsArray,
    shadowsArray,
    lights
  };
  return {
    init,
    state,
    setupLights,
    setupLightsView,
    pushLight,
    pushShadow
  };
}
function WebGLRenderStates(extensions, capabilities) {
  let renderStates = /* @__PURE__ */ new WeakMap();
  function get2(scene, renderCallDepth = 0) {
    const renderStateArray = renderStates.get(scene);
    let renderState;
    if (renderStateArray === void 0) {
      renderState = new WebGLRenderState(extensions, capabilities);
      renderStates.set(scene, [renderState]);
    } else {
      if (renderCallDepth >= renderStateArray.length) {
        renderState = new WebGLRenderState(extensions, capabilities);
        renderStateArray.push(renderState);
      } else {
        renderState = renderStateArray[renderCallDepth];
      }
    }
    return renderState;
  }
  function dispose() {
    renderStates = /* @__PURE__ */ new WeakMap();
  }
  return {
    get: get2,
    dispose
  };
}
class MeshDepthMaterial extends Material {
  constructor(parameters) {
    super();
    this.isMeshDepthMaterial = true;
    this.type = "MeshDepthMaterial";
    this.depthPacking = BasicDepthPacking;
    this.map = null;
    this.alphaMap = null;
    this.displacementMap = null;
    this.displacementScale = 1;
    this.displacementBias = 0;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.setValues(parameters);
  }
  copy(source) {
    super.copy(source);
    this.depthPacking = source.depthPacking;
    this.map = source.map;
    this.alphaMap = source.alphaMap;
    this.displacementMap = source.displacementMap;
    this.displacementScale = source.displacementScale;
    this.displacementBias = source.displacementBias;
    this.wireframe = source.wireframe;
    this.wireframeLinewidth = source.wireframeLinewidth;
    return this;
  }
}
class MeshDistanceMaterial extends Material {
  constructor(parameters) {
    super();
    this.isMeshDistanceMaterial = true;
    this.type = "MeshDistanceMaterial";
    this.referencePosition = new Vector3();
    this.nearDistance = 1;
    this.farDistance = 1e3;
    this.map = null;
    this.alphaMap = null;
    this.displacementMap = null;
    this.displacementScale = 1;
    this.displacementBias = 0;
    this.setValues(parameters);
  }
  copy(source) {
    super.copy(source);
    this.referencePosition.copy(source.referencePosition);
    this.nearDistance = source.nearDistance;
    this.farDistance = source.farDistance;
    this.map = source.map;
    this.alphaMap = source.alphaMap;
    this.displacementMap = source.displacementMap;
    this.displacementScale = source.displacementScale;
    this.displacementBias = source.displacementBias;
    return this;
  }
}
const vertex = "void main() {\n	gl_Position = vec4( position, 1.0 );\n}";
const fragment = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";
function WebGLShadowMap(_renderer, _objects, _capabilities) {
  let _frustum = new Frustum();
  const _shadowMapSize = new Vector2(), _viewportSize = new Vector2(), _viewport = new Vector4(), _depthMaterial = new MeshDepthMaterial({ depthPacking: RGBADepthPacking }), _distanceMaterial = new MeshDistanceMaterial(), _materialCache = {}, _maxTextureSize = _capabilities.maxTextureSize;
  const shadowSide = { [FrontSide]: BackSide, [BackSide]: FrontSide, [DoubleSide]: DoubleSide };
  const shadowMaterialVertical = new ShaderMaterial({
    defines: {
      VSM_SAMPLES: 8
    },
    uniforms: {
      shadow_pass: { value: null },
      resolution: { value: new Vector2() },
      radius: { value: 4 }
    },
    vertexShader: vertex,
    fragmentShader: fragment
  });
  const shadowMaterialHorizontal = shadowMaterialVertical.clone();
  shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;
  const fullScreenTri = new BufferGeometry();
  fullScreenTri.setAttribute(
    "position",
    new BufferAttribute(
      new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]),
      3
    )
  );
  const fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);
  const scope = this;
  this.enabled = false;
  this.autoUpdate = true;
  this.needsUpdate = false;
  this.type = PCFShadowMap;
  this.render = function(lights, scene, camera) {
    if (scope.enabled === false) return;
    if (scope.autoUpdate === false && scope.needsUpdate === false) return;
    if (lights.length === 0) return;
    const currentRenderTarget = _renderer.getRenderTarget();
    const activeCubeFace = _renderer.getActiveCubeFace();
    const activeMipmapLevel = _renderer.getActiveMipmapLevel();
    const _state = _renderer.state;
    _state.setBlending(NoBlending);
    _state.buffers.color.setClear(1, 1, 1, 1);
    _state.buffers.depth.setTest(true);
    _state.setScissorTest(false);
    for (let i = 0, il2 = lights.length; i < il2; i++) {
      const light = lights[i];
      const shadow = light.shadow;
      if (shadow === void 0) {
        console.warn("THREE.WebGLShadowMap:", light, "has no shadow.");
        continue;
      }
      if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;
      _shadowMapSize.copy(shadow.mapSize);
      const shadowFrameExtents = shadow.getFrameExtents();
      _shadowMapSize.multiply(shadowFrameExtents);
      _viewportSize.copy(shadow.mapSize);
      if (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {
        if (_shadowMapSize.x > _maxTextureSize) {
          _viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);
          _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;
          shadow.mapSize.x = _viewportSize.x;
        }
        if (_shadowMapSize.y > _maxTextureSize) {
          _viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);
          _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;
          shadow.mapSize.y = _viewportSize.y;
        }
      }
      if (shadow.map === null) {
        const pars = this.type !== VSMShadowMap ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};
        shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);
        shadow.map.texture.name = light.name + ".shadowMap";
        shadow.camera.updateProjectionMatrix();
      }
      _renderer.setRenderTarget(shadow.map);
      _renderer.clear();
      const viewportCount = shadow.getViewportCount();
      for (let vp = 0; vp < viewportCount; vp++) {
        const viewport = shadow.getViewport(vp);
        _viewport.set(
          _viewportSize.x * viewport.x,
          _viewportSize.y * viewport.y,
          _viewportSize.x * viewport.z,
          _viewportSize.y * viewport.w
        );
        _state.viewport(_viewport);
        shadow.updateMatrices(light, vp);
        _frustum = shadow.getFrustum();
        renderObject(scene, camera, shadow.camera, light, this.type);
      }
      if (shadow.isPointLightShadow !== true && this.type === VSMShadowMap) {
        VSMPass(shadow, camera);
      }
      shadow.needsUpdate = false;
    }
    scope.needsUpdate = false;
    _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);
  };
  function VSMPass(shadow, camera) {
    const geometry = _objects.update(fullScreenMesh);
    if (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {
      shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;
      shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;
      shadowMaterialVertical.needsUpdate = true;
      shadowMaterialHorizontal.needsUpdate = true;
    }
    if (shadow.mapPass === null) {
      shadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y);
    }
    shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;
    shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;
    shadowMaterialVertical.uniforms.radius.value = shadow.radius;
    _renderer.setRenderTarget(shadow.mapPass);
    _renderer.clear();
    _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null);
    shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;
    shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;
    shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;
    _renderer.setRenderTarget(shadow.map);
    _renderer.clear();
    _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);
  }
  function getDepthMaterial(object2, material, light, shadowCameraNear, shadowCameraFar, type) {
    let result = null;
    const customMaterial = light.isPointLight === true ? object2.customDistanceMaterial : object2.customDepthMaterial;
    if (customMaterial !== void 0) {
      result = customMaterial;
    } else {
      result = light.isPointLight === true ? _distanceMaterial : _depthMaterial;
      if (_renderer.localClippingEnabled && material.clipShadows === true && Array.isArray(material.clippingPlanes) && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0 || material.map && material.alphaTest > 0) {
        const keyA = result.uuid, keyB = material.uuid;
        let materialsForVariant = _materialCache[keyA];
        if (materialsForVariant === void 0) {
          materialsForVariant = {};
          _materialCache[keyA] = materialsForVariant;
        }
        let cachedMaterial = materialsForVariant[keyB];
        if (cachedMaterial === void 0) {
          cachedMaterial = result.clone();
          materialsForVariant[keyB] = cachedMaterial;
        }
        result = cachedMaterial;
      }
    }
    result.visible = material.visible;
    result.wireframe = material.wireframe;
    if (type === VSMShadowMap) {
      result.side = material.shadowSide !== null ? material.shadowSide : material.side;
    } else {
      result.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];
    }
    result.alphaMap = material.alphaMap;
    result.alphaTest = material.alphaTest;
    result.map = material.map;
    result.clipShadows = material.clipShadows;
    result.clippingPlanes = material.clippingPlanes;
    result.clipIntersection = material.clipIntersection;
    result.displacementMap = material.displacementMap;
    result.displacementScale = material.displacementScale;
    result.displacementBias = material.displacementBias;
    result.wireframeLinewidth = material.wireframeLinewidth;
    result.linewidth = material.linewidth;
    if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {
      result.referencePosition.setFromMatrixPosition(light.matrixWorld);
      result.nearDistance = shadowCameraNear;
      result.farDistance = shadowCameraFar;
    }
    return result;
  }
  function renderObject(object2, camera, shadowCamera, light, type) {
    if (object2.visible === false) return;
    const visible = object2.layers.test(camera.layers);
    if (visible && (object2.isMesh || object2.isLine || object2.isPoints)) {
      if ((object2.castShadow || object2.receiveShadow && type === VSMShadowMap) && (!object2.frustumCulled || _frustum.intersectsObject(object2))) {
        object2.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object2.matrixWorld);
        const geometry = _objects.update(object2);
        const material = object2.material;
        if (Array.isArray(material)) {
          const groups = geometry.groups;
          for (let k2 = 0, kl2 = groups.length; k2 < kl2; k2++) {
            const group = groups[k2];
            const groupMaterial = material[group.materialIndex];
            if (groupMaterial && groupMaterial.visible) {
              const depthMaterial = getDepthMaterial(object2, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);
              _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object2, group);
            }
          }
        } else if (material.visible) {
          const depthMaterial = getDepthMaterial(object2, material, light, shadowCamera.near, shadowCamera.far, type);
          _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object2, null);
        }
      }
    }
    const children = object2.children;
    for (let i = 0, l2 = children.length; i < l2; i++) {
      renderObject(children[i], camera, shadowCamera, light, type);
    }
  }
}
function WebGLState(gl2, extensions, capabilities) {
  const isWebGL2 = capabilities.isWebGL2;
  function ColorBuffer() {
    let locked = false;
    const color = new Vector4();
    let currentColorMask = null;
    const currentColorClear = new Vector4(0, 0, 0, 0);
    return {
      setMask: function(colorMask) {
        if (currentColorMask !== colorMask && !locked) {
          gl2.colorMask(colorMask, colorMask, colorMask, colorMask);
          currentColorMask = colorMask;
        }
      },
      setLocked: function(lock) {
        locked = lock;
      },
      setClear: function(r2, g, b2, a, premultipliedAlpha) {
        if (premultipliedAlpha === true) {
          r2 *= a;
          g *= a;
          b2 *= a;
        }
        color.set(r2, g, b2, a);
        if (currentColorClear.equals(color) === false) {
          gl2.clearColor(r2, g, b2, a);
          currentColorClear.copy(color);
        }
      },
      reset: function() {
        locked = false;
        currentColorMask = null;
        currentColorClear.set(-1, 0, 0, 0);
      }
    };
  }
  function DepthBuffer() {
    let locked = false;
    let currentDepthMask = null;
    let currentDepthFunc = null;
    let currentDepthClear = null;
    return {
      setTest: function(depthTest) {
        if (depthTest) {
          enable(2929);
        } else {
          disable(2929);
        }
      },
      setMask: function(depthMask) {
        if (currentDepthMask !== depthMask && !locked) {
          gl2.depthMask(depthMask);
          currentDepthMask = depthMask;
        }
      },
      setFunc: function(depthFunc) {
        if (currentDepthFunc !== depthFunc) {
          switch (depthFunc) {
            case NeverDepth:
              gl2.depthFunc(512);
              break;
            case AlwaysDepth:
              gl2.depthFunc(519);
              break;
            case LessDepth:
              gl2.depthFunc(513);
              break;
            case LessEqualDepth:
              gl2.depthFunc(515);
              break;
            case EqualDepth:
              gl2.depthFunc(514);
              break;
            case GreaterEqualDepth:
              gl2.depthFunc(518);
              break;
            case GreaterDepth:
              gl2.depthFunc(516);
              break;
            case NotEqualDepth:
              gl2.depthFunc(517);
              break;
            default:
              gl2.depthFunc(515);
          }
          currentDepthFunc = depthFunc;
        }
      },
      setLocked: function(lock) {
        locked = lock;
      },
      setClear: function(depth) {
        if (currentDepthClear !== depth) {
          gl2.clearDepth(depth);
          currentDepthClear = depth;
        }
      },
      reset: function() {
        locked = false;
        currentDepthMask = null;
        currentDepthFunc = null;
        currentDepthClear = null;
      }
    };
  }
  function StencilBuffer() {
    let locked = false;
    let currentStencilMask = null;
    let currentStencilFunc = null;
    let currentStencilRef = null;
    let currentStencilFuncMask = null;
    let currentStencilFail = null;
    let currentStencilZFail = null;
    let currentStencilZPass = null;
    let currentStencilClear = null;
    return {
      setTest: function(stencilTest) {
        if (!locked) {
          if (stencilTest) {
            enable(2960);
          } else {
            disable(2960);
          }
        }
      },
      setMask: function(stencilMask) {
        if (currentStencilMask !== stencilMask && !locked) {
          gl2.stencilMask(stencilMask);
          currentStencilMask = stencilMask;
        }
      },
      setFunc: function(stencilFunc, stencilRef, stencilMask) {
        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {
          gl2.stencilFunc(stencilFunc, stencilRef, stencilMask);
          currentStencilFunc = stencilFunc;
          currentStencilRef = stencilRef;
          currentStencilFuncMask = stencilMask;
        }
      },
      setOp: function(stencilFail, stencilZFail, stencilZPass) {
        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {
          gl2.stencilOp(stencilFail, stencilZFail, stencilZPass);
          currentStencilFail = stencilFail;
          currentStencilZFail = stencilZFail;
          currentStencilZPass = stencilZPass;
        }
      },
      setLocked: function(lock) {
        locked = lock;
      },
      setClear: function(stencil) {
        if (currentStencilClear !== stencil) {
          gl2.clearStencil(stencil);
          currentStencilClear = stencil;
        }
      },
      reset: function() {
        locked = false;
        currentStencilMask = null;
        currentStencilFunc = null;
        currentStencilRef = null;
        currentStencilFuncMask = null;
        currentStencilFail = null;
        currentStencilZFail = null;
        currentStencilZPass = null;
        currentStencilClear = null;
      }
    };
  }
  const colorBuffer = new ColorBuffer();
  const depthBuffer = new DepthBuffer();
  const stencilBuffer = new StencilBuffer();
  const uboBindings = /* @__PURE__ */ new WeakMap();
  const uboProgramMap = /* @__PURE__ */ new WeakMap();
  let enabledCapabilities = {};
  let currentBoundFramebuffers = {};
  let currentDrawbuffers = /* @__PURE__ */ new WeakMap();
  let defaultDrawbuffers = [];
  let currentProgram = null;
  let currentBlendingEnabled = false;
  let currentBlending = null;
  let currentBlendEquation = null;
  let currentBlendSrc = null;
  let currentBlendDst = null;
  let currentBlendEquationAlpha = null;
  let currentBlendSrcAlpha = null;
  let currentBlendDstAlpha = null;
  let currentPremultipledAlpha = false;
  let currentFlipSided = null;
  let currentCullFace = null;
  let currentLineWidth = null;
  let currentPolygonOffsetFactor = null;
  let currentPolygonOffsetUnits = null;
  const maxTextures = gl2.getParameter(35661);
  let lineWidthAvailable = false;
  let version = 0;
  const glVersion = gl2.getParameter(7938);
  if (glVersion.indexOf("WebGL") !== -1) {
    version = parseFloat(/^WebGL (\d)/.exec(glVersion)[1]);
    lineWidthAvailable = version >= 1;
  } else if (glVersion.indexOf("OpenGL ES") !== -1) {
    version = parseFloat(/^OpenGL ES (\d)/.exec(glVersion)[1]);
    lineWidthAvailable = version >= 2;
  }
  let currentTextureSlot = null;
  let currentBoundTextures = {};
  const scissorParam = gl2.getParameter(3088);
  const viewportParam = gl2.getParameter(2978);
  const currentScissor = new Vector4().fromArray(scissorParam);
  const currentViewport = new Vector4().fromArray(viewportParam);
  function createTexture(type, target, count) {
    const data = new Uint8Array(4);
    const texture = gl2.createTexture();
    gl2.bindTexture(type, texture);
    gl2.texParameteri(type, 10241, 9728);
    gl2.texParameteri(type, 10240, 9728);
    for (let i = 0; i < count; i++) {
      gl2.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);
    }
    return texture;
  }
  const emptyTextures = {};
  emptyTextures[3553] = createTexture(3553, 3553, 1);
  emptyTextures[34067] = createTexture(34067, 34069, 6);
  colorBuffer.setClear(0, 0, 0, 1);
  depthBuffer.setClear(1);
  stencilBuffer.setClear(0);
  enable(2929);
  depthBuffer.setFunc(LessEqualDepth);
  setFlipSided(false);
  setCullFace(CullFaceBack);
  enable(2884);
  setBlending(NoBlending);
  function enable(id2) {
    if (enabledCapabilities[id2] !== true) {
      gl2.enable(id2);
      enabledCapabilities[id2] = true;
    }
  }
  function disable(id2) {
    if (enabledCapabilities[id2] !== false) {
      gl2.disable(id2);
      enabledCapabilities[id2] = false;
    }
  }
  function bindFramebuffer(target, framebuffer) {
    if (currentBoundFramebuffers[target] !== framebuffer) {
      gl2.bindFramebuffer(target, framebuffer);
      currentBoundFramebuffers[target] = framebuffer;
      if (isWebGL2) {
        if (target === 36009) {
          currentBoundFramebuffers[36160] = framebuffer;
        }
        if (target === 36160) {
          currentBoundFramebuffers[36009] = framebuffer;
        }
      }
      return true;
    }
    return false;
  }
  function drawBuffers(renderTarget, framebuffer) {
    let drawBuffers2 = defaultDrawbuffers;
    let needsUpdate = false;
    if (renderTarget) {
      drawBuffers2 = currentDrawbuffers.get(framebuffer);
      if (drawBuffers2 === void 0) {
        drawBuffers2 = [];
        currentDrawbuffers.set(framebuffer, drawBuffers2);
      }
      if (renderTarget.isWebGLMultipleRenderTargets) {
        const textures = renderTarget.texture;
        if (drawBuffers2.length !== textures.length || drawBuffers2[0] !== 36064) {
          for (let i = 0, il2 = textures.length; i < il2; i++) {
            drawBuffers2[i] = 36064 + i;
          }
          drawBuffers2.length = textures.length;
          needsUpdate = true;
        }
      } else {
        if (drawBuffers2[0] !== 36064) {
          drawBuffers2[0] = 36064;
          needsUpdate = true;
        }
      }
    } else {
      if (drawBuffers2[0] !== 1029) {
        drawBuffers2[0] = 1029;
        needsUpdate = true;
      }
    }
    if (needsUpdate) {
      if (capabilities.isWebGL2) {
        gl2.drawBuffers(drawBuffers2);
      } else {
        extensions.get("WEBGL_draw_buffers").drawBuffersWEBGL(drawBuffers2);
      }
    }
  }
  function useProgram(program) {
    if (currentProgram !== program) {
      gl2.useProgram(program);
      currentProgram = program;
      return true;
    }
    return false;
  }
  const equationToGL = {
    [AddEquation]: 32774,
    [SubtractEquation]: 32778,
    [ReverseSubtractEquation]: 32779
  };
  if (isWebGL2) {
    equationToGL[MinEquation] = 32775;
    equationToGL[MaxEquation] = 32776;
  } else {
    const extension = extensions.get("EXT_blend_minmax");
    if (extension !== null) {
      equationToGL[MinEquation] = extension.MIN_EXT;
      equationToGL[MaxEquation] = extension.MAX_EXT;
    }
  }
  const factorToGL = {
    [ZeroFactor]: 0,
    [OneFactor]: 1,
    [SrcColorFactor]: 768,
    [SrcAlphaFactor]: 770,
    [SrcAlphaSaturateFactor]: 776,
    [DstColorFactor]: 774,
    [DstAlphaFactor]: 772,
    [OneMinusSrcColorFactor]: 769,
    [OneMinusSrcAlphaFactor]: 771,
    [OneMinusDstColorFactor]: 775,
    [OneMinusDstAlphaFactor]: 773
  };
  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {
    if (blending === NoBlending) {
      if (currentBlendingEnabled === true) {
        disable(3042);
        currentBlendingEnabled = false;
      }
      return;
    }
    if (currentBlendingEnabled === false) {
      enable(3042);
      currentBlendingEnabled = true;
    }
    if (blending !== CustomBlending) {
      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {
        if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {
          gl2.blendEquation(32774);
          currentBlendEquation = AddEquation;
          currentBlendEquationAlpha = AddEquation;
        }
        if (premultipliedAlpha) {
          switch (blending) {
            case NormalBlending:
              gl2.blendFuncSeparate(1, 771, 1, 771);
              break;
            case AdditiveBlending:
              gl2.blendFunc(1, 1);
              break;
            case SubtractiveBlending:
              gl2.blendFuncSeparate(0, 769, 0, 1);
              break;
            case MultiplyBlending:
              gl2.blendFuncSeparate(0, 768, 0, 770);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", blending);
              break;
          }
        } else {
          switch (blending) {
            case NormalBlending:
              gl2.blendFuncSeparate(770, 771, 1, 771);
              break;
            case AdditiveBlending:
              gl2.blendFunc(770, 1);
              break;
            case SubtractiveBlending:
              gl2.blendFuncSeparate(0, 769, 0, 1);
              break;
            case MultiplyBlending:
              gl2.blendFunc(0, 768);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", blending);
              break;
          }
        }
        currentBlendSrc = null;
        currentBlendDst = null;
        currentBlendSrcAlpha = null;
        currentBlendDstAlpha = null;
        currentBlending = blending;
        currentPremultipledAlpha = premultipliedAlpha;
      }
      return;
    }
    blendEquationAlpha = blendEquationAlpha || blendEquation;
    blendSrcAlpha = blendSrcAlpha || blendSrc;
    blendDstAlpha = blendDstAlpha || blendDst;
    if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {
      gl2.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);
      currentBlendEquation = blendEquation;
      currentBlendEquationAlpha = blendEquationAlpha;
    }
    if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {
      gl2.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);
      currentBlendSrc = blendSrc;
      currentBlendDst = blendDst;
      currentBlendSrcAlpha = blendSrcAlpha;
      currentBlendDstAlpha = blendDstAlpha;
    }
    currentBlending = blending;
    currentPremultipledAlpha = false;
  }
  function setMaterial(material, frontFaceCW) {
    material.side === DoubleSide ? disable(2884) : enable(2884);
    let flipSided = material.side === BackSide;
    if (frontFaceCW) flipSided = !flipSided;
    setFlipSided(flipSided);
    material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);
    depthBuffer.setFunc(material.depthFunc);
    depthBuffer.setTest(material.depthTest);
    depthBuffer.setMask(material.depthWrite);
    colorBuffer.setMask(material.colorWrite);
    const stencilWrite = material.stencilWrite;
    stencilBuffer.setTest(stencilWrite);
    if (stencilWrite) {
      stencilBuffer.setMask(material.stencilWriteMask);
      stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);
      stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);
    }
    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);
    material.alphaToCoverage === true ? enable(32926) : disable(32926);
  }
  function setFlipSided(flipSided) {
    if (currentFlipSided !== flipSided) {
      if (flipSided) {
        gl2.frontFace(2304);
      } else {
        gl2.frontFace(2305);
      }
      currentFlipSided = flipSided;
    }
  }
  function setCullFace(cullFace) {
    if (cullFace !== CullFaceNone) {
      enable(2884);
      if (cullFace !== currentCullFace) {
        if (cullFace === CullFaceBack) {
          gl2.cullFace(1029);
        } else if (cullFace === CullFaceFront) {
          gl2.cullFace(1028);
        } else {
          gl2.cullFace(1032);
        }
      }
    } else {
      disable(2884);
    }
    currentCullFace = cullFace;
  }
  function setLineWidth(width) {
    if (width !== currentLineWidth) {
      if (lineWidthAvailable) gl2.lineWidth(width);
      currentLineWidth = width;
    }
  }
  function setPolygonOffset(polygonOffset, factor, units) {
    if (polygonOffset) {
      enable(32823);
      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {
        gl2.polygonOffset(factor, units);
        currentPolygonOffsetFactor = factor;
        currentPolygonOffsetUnits = units;
      }
    } else {
      disable(32823);
    }
  }
  function setScissorTest(scissorTest) {
    if (scissorTest) {
      enable(3089);
    } else {
      disable(3089);
    }
  }
  function activeTexture(webglSlot) {
    if (webglSlot === void 0) webglSlot = 33984 + maxTextures - 1;
    if (currentTextureSlot !== webglSlot) {
      gl2.activeTexture(webglSlot);
      currentTextureSlot = webglSlot;
    }
  }
  function bindTexture(webglType, webglTexture, webglSlot) {
    if (webglSlot === void 0) {
      if (currentTextureSlot === null) {
        webglSlot = 33984 + maxTextures - 1;
      } else {
        webglSlot = currentTextureSlot;
      }
    }
    let boundTexture = currentBoundTextures[webglSlot];
    if (boundTexture === void 0) {
      boundTexture = { type: void 0, texture: void 0 };
      currentBoundTextures[webglSlot] = boundTexture;
    }
    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {
      if (currentTextureSlot !== webglSlot) {
        gl2.activeTexture(webglSlot);
        currentTextureSlot = webglSlot;
      }
      gl2.bindTexture(webglType, webglTexture || emptyTextures[webglType]);
      boundTexture.type = webglType;
      boundTexture.texture = webglTexture;
    }
  }
  function unbindTexture() {
    const boundTexture = currentBoundTextures[currentTextureSlot];
    if (boundTexture !== void 0 && boundTexture.type !== void 0) {
      gl2.bindTexture(boundTexture.type, null);
      boundTexture.type = void 0;
      boundTexture.texture = void 0;
    }
  }
  function compressedTexImage2D() {
    try {
      gl2.compressedTexImage2D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function compressedTexImage3D() {
    try {
      gl2.compressedTexImage3D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function texSubImage2D() {
    try {
      gl2.texSubImage2D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function texSubImage3D() {
    try {
      gl2.texSubImage3D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function compressedTexSubImage2D() {
    try {
      gl2.compressedTexSubImage2D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function compressedTexSubImage3D() {
    try {
      gl2.compressedTexSubImage3D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function texStorage2D() {
    try {
      gl2.texStorage2D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function texStorage3D() {
    try {
      gl2.texStorage3D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function texImage2D() {
    try {
      gl2.texImage2D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function texImage3D() {
    try {
      gl2.texImage3D.apply(gl2, arguments);
    } catch (error) {
      console.error("THREE.WebGLState:", error);
    }
  }
  function scissor(scissor2) {
    if (currentScissor.equals(scissor2) === false) {
      gl2.scissor(scissor2.x, scissor2.y, scissor2.z, scissor2.w);
      currentScissor.copy(scissor2);
    }
  }
  function viewport(viewport2) {
    if (currentViewport.equals(viewport2) === false) {
      gl2.viewport(viewport2.x, viewport2.y, viewport2.z, viewport2.w);
      currentViewport.copy(viewport2);
    }
  }
  function updateUBOMapping(uniformsGroup, program) {
    let mapping = uboProgramMap.get(program);
    if (mapping === void 0) {
      mapping = /* @__PURE__ */ new WeakMap();
      uboProgramMap.set(program, mapping);
    }
    let blockIndex = mapping.get(uniformsGroup);
    if (blockIndex === void 0) {
      blockIndex = gl2.getUniformBlockIndex(program, uniformsGroup.name);
      mapping.set(uniformsGroup, blockIndex);
    }
  }
  function uniformBlockBinding(uniformsGroup, program) {
    const mapping = uboProgramMap.get(program);
    const blockIndex = mapping.get(uniformsGroup);
    if (uboBindings.get(program) !== blockIndex) {
      gl2.uniformBlockBinding(program, blockIndex, uniformsGroup.__bindingPointIndex);
      uboBindings.set(program, blockIndex);
    }
  }
  function reset() {
    gl2.disable(3042);
    gl2.disable(2884);
    gl2.disable(2929);
    gl2.disable(32823);
    gl2.disable(3089);
    gl2.disable(2960);
    gl2.disable(32926);
    gl2.blendEquation(32774);
    gl2.blendFunc(1, 0);
    gl2.blendFuncSeparate(1, 0, 1, 0);
    gl2.colorMask(true, true, true, true);
    gl2.clearColor(0, 0, 0, 0);
    gl2.depthMask(true);
    gl2.depthFunc(513);
    gl2.clearDepth(1);
    gl2.stencilMask(4294967295);
    gl2.stencilFunc(519, 0, 4294967295);
    gl2.stencilOp(7680, 7680, 7680);
    gl2.clearStencil(0);
    gl2.cullFace(1029);
    gl2.frontFace(2305);
    gl2.polygonOffset(0, 0);
    gl2.activeTexture(33984);
    gl2.bindFramebuffer(36160, null);
    if (isWebGL2 === true) {
      gl2.bindFramebuffer(36009, null);
      gl2.bindFramebuffer(36008, null);
    }
    gl2.useProgram(null);
    gl2.lineWidth(1);
    gl2.scissor(0, 0, gl2.canvas.width, gl2.canvas.height);
    gl2.viewport(0, 0, gl2.canvas.width, gl2.canvas.height);
    enabledCapabilities = {};
    currentTextureSlot = null;
    currentBoundTextures = {};
    currentBoundFramebuffers = {};
    currentDrawbuffers = /* @__PURE__ */ new WeakMap();
    defaultDrawbuffers = [];
    currentProgram = null;
    currentBlendingEnabled = false;
    currentBlending = null;
    currentBlendEquation = null;
    currentBlendSrc = null;
    currentBlendDst = null;
    currentBlendEquationAlpha = null;
    currentBlendSrcAlpha = null;
    currentBlendDstAlpha = null;
    currentPremultipledAlpha = false;
    currentFlipSided = null;
    currentCullFace = null;
    currentLineWidth = null;
    currentPolygonOffsetFactor = null;
    currentPolygonOffsetUnits = null;
    currentScissor.set(0, 0, gl2.canvas.width, gl2.canvas.height);
    currentViewport.set(0, 0, gl2.canvas.width, gl2.canvas.height);
    colorBuffer.reset();
    depthBuffer.reset();
    stencilBuffer.reset();
  }
  return {
    buffers: {
      color: colorBuffer,
      depth: depthBuffer,
      stencil: stencilBuffer
    },
    enable,
    disable,
    bindFramebuffer,
    drawBuffers,
    useProgram,
    setBlending,
    setMaterial,
    setFlipSided,
    setCullFace,
    setLineWidth,
    setPolygonOffset,
    setScissorTest,
    activeTexture,
    bindTexture,
    unbindTexture,
    compressedTexImage2D,
    compressedTexImage3D,
    texImage2D,
    texImage3D,
    updateUBOMapping,
    uniformBlockBinding,
    texStorage2D,
    texStorage3D,
    texSubImage2D,
    texSubImage3D,
    compressedTexSubImage2D,
    compressedTexSubImage3D,
    scissor,
    viewport,
    reset
  };
}
function WebGLTextures(_gl, extensions, state, properties, capabilities, utils2, info) {
  const isWebGL2 = capabilities.isWebGL2;
  const maxTextures = capabilities.maxTextures;
  const maxCubemapSize = capabilities.maxCubemapSize;
  const maxTextureSize = capabilities.maxTextureSize;
  const maxSamples = capabilities.maxSamples;
  const multisampledRTTExt = extensions.has("WEBGL_multisampled_render_to_texture") ? extensions.get("WEBGL_multisampled_render_to_texture") : null;
  const supportsInvalidateFramebuffer = typeof navigator === "undefined" ? false : /OculusBrowser/g.test(navigator.userAgent);
  const _videoTextures = /* @__PURE__ */ new WeakMap();
  let _canvas2;
  const _sources = /* @__PURE__ */ new WeakMap();
  let useOffscreenCanvas = false;
  try {
    useOffscreenCanvas = typeof OffscreenCanvas !== "undefined" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch (err) {
  }
  function createCanvas(width, height) {
    return useOffscreenCanvas ? (
      // eslint-disable-next-line compat/compat
      new OffscreenCanvas(width, height)
    ) : createElementNS("canvas");
  }
  function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {
    let scale = 1;
    if (image.width > maxSize || image.height > maxSize) {
      scale = maxSize / Math.max(image.width, image.height);
    }
    if (scale < 1 || needsPowerOfTwo === true) {
      if (typeof HTMLImageElement !== "undefined" && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== "undefined" && image instanceof HTMLCanvasElement || typeof ImageBitmap !== "undefined" && image instanceof ImageBitmap) {
        const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;
        const width = floor(scale * image.width);
        const height = floor(scale * image.height);
        if (_canvas2 === void 0) _canvas2 = createCanvas(width, height);
        const canvas = needsNewCanvas ? createCanvas(width, height) : _canvas2;
        canvas.width = width;
        canvas.height = height;
        const context = canvas.getContext("2d");
        context.drawImage(image, 0, 0, width, height);
        console.warn("THREE.WebGLRenderer: Texture has been resized from (" + image.width + "x" + image.height + ") to (" + width + "x" + height + ").");
        return canvas;
      } else {
        if ("data" in image) {
          console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + image.width + "x" + image.height + ").");
        }
        return image;
      }
    }
    return image;
  }
  function isPowerOfTwo$1(image) {
    return isPowerOfTwo(image.width) && isPowerOfTwo(image.height);
  }
  function textureNeedsPowerOfTwo(texture) {
    if (isWebGL2) return false;
    return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;
  }
  function textureNeedsGenerateMipmaps(texture, supportsMips) {
    return texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;
  }
  function generateMipmap(target) {
    _gl.generateMipmap(target);
  }
  function getInternalFormat(internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false) {
    if (isWebGL2 === false) return glFormat;
    if (internalFormatName !== null) {
      if (_gl[internalFormatName] !== void 0) return _gl[internalFormatName];
      console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + internalFormatName + "'");
    }
    let internalFormat = glFormat;
    if (glFormat === 6403) {
      if (glType === 5126) internalFormat = 33326;
      if (glType === 5131) internalFormat = 33325;
      if (glType === 5121) internalFormat = 33321;
    }
    if (glFormat === 33319) {
      if (glType === 5126) internalFormat = 33328;
      if (glType === 5131) internalFormat = 33327;
      if (glType === 5121) internalFormat = 33323;
    }
    if (glFormat === 6408) {
      if (glType === 5126) internalFormat = 34836;
      if (glType === 5131) internalFormat = 34842;
      if (glType === 5121) internalFormat = encoding === sRGBEncoding && forceLinearEncoding === false ? 35907 : 32856;
      if (glType === 32819) internalFormat = 32854;
      if (glType === 32820) internalFormat = 32855;
    }
    if (internalFormat === 33325 || internalFormat === 33326 || internalFormat === 33327 || internalFormat === 33328 || internalFormat === 34842 || internalFormat === 34836) {
      extensions.get("EXT_color_buffer_float");
    }
    return internalFormat;
  }
  function getMipLevels(texture, image, supportsMips) {
    if (textureNeedsGenerateMipmaps(texture, supportsMips) === true || texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {
      return Math.log2(Math.max(image.width, image.height)) + 1;
    } else if (texture.mipmaps !== void 0 && texture.mipmaps.length > 0) {
      return texture.mipmaps.length;
    } else if (texture.isCompressedTexture && Array.isArray(texture.image)) {
      return image.mipmaps.length;
    } else {
      return 1;
    }
  }
  function filterFallback(f2) {
    if (f2 === NearestFilter || f2 === NearestMipmapNearestFilter || f2 === NearestMipmapLinearFilter) {
      return 9728;
    }
    return 9729;
  }
  function onTextureDispose(event) {
    const texture = event.target;
    texture.removeEventListener("dispose", onTextureDispose);
    deallocateTexture(texture);
    if (texture.isVideoTexture) {
      _videoTextures.delete(texture);
    }
  }
  function onRenderTargetDispose(event) {
    const renderTarget = event.target;
    renderTarget.removeEventListener("dispose", onRenderTargetDispose);
    deallocateRenderTarget(renderTarget);
  }
  function deallocateTexture(texture) {
    const textureProperties = properties.get(texture);
    if (textureProperties.__webglInit === void 0) return;
    const source = texture.source;
    const webglTextures = _sources.get(source);
    if (webglTextures) {
      const webglTexture = webglTextures[textureProperties.__cacheKey];
      webglTexture.usedTimes--;
      if (webglTexture.usedTimes === 0) {
        deleteTexture(texture);
      }
      if (Object.keys(webglTextures).length === 0) {
        _sources.delete(source);
      }
    }
    properties.remove(texture);
  }
  function deleteTexture(texture) {
    const textureProperties = properties.get(texture);
    _gl.deleteTexture(textureProperties.__webglTexture);
    const source = texture.source;
    const webglTextures = _sources.get(source);
    delete webglTextures[textureProperties.__cacheKey];
    info.memory.textures--;
  }
  function deallocateRenderTarget(renderTarget) {
    const texture = renderTarget.texture;
    const renderTargetProperties = properties.get(renderTarget);
    const textureProperties = properties.get(texture);
    if (textureProperties.__webglTexture !== void 0) {
      _gl.deleteTexture(textureProperties.__webglTexture);
      info.memory.textures--;
    }
    if (renderTarget.depthTexture) {
      renderTarget.depthTexture.dispose();
    }
    if (renderTarget.isWebGLCubeRenderTarget) {
      for (let i = 0; i < 6; i++) {
        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);
        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);
      }
    } else {
      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);
      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);
      if (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);
      if (renderTargetProperties.__webglColorRenderbuffer) {
        for (let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i++) {
          if (renderTargetProperties.__webglColorRenderbuffer[i]) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer[i]);
        }
      }
      if (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);
    }
    if (renderTarget.isWebGLMultipleRenderTargets) {
      for (let i = 0, il2 = texture.length; i < il2; i++) {
        const attachmentProperties = properties.get(texture[i]);
        if (attachmentProperties.__webglTexture) {
          _gl.deleteTexture(attachmentProperties.__webglTexture);
          info.memory.textures--;
        }
        properties.remove(texture[i]);
      }
    }
    properties.remove(texture);
    properties.remove(renderTarget);
  }
  let textureUnits = 0;
  function resetTextureUnits() {
    textureUnits = 0;
  }
  function allocateTextureUnit() {
    const textureUnit = textureUnits;
    if (textureUnit >= maxTextures) {
      console.warn("THREE.WebGLTextures: Trying to use " + textureUnit + " texture units while this GPU supports only " + maxTextures);
    }
    textureUnits += 1;
    return textureUnit;
  }
  function getTextureCacheKey(texture) {
    const array2 = [];
    array2.push(texture.wrapS);
    array2.push(texture.wrapT);
    array2.push(texture.wrapR || 0);
    array2.push(texture.magFilter);
    array2.push(texture.minFilter);
    array2.push(texture.anisotropy);
    array2.push(texture.internalFormat);
    array2.push(texture.format);
    array2.push(texture.type);
    array2.push(texture.generateMipmaps);
    array2.push(texture.premultiplyAlpha);
    array2.push(texture.flipY);
    array2.push(texture.unpackAlignment);
    array2.push(texture.encoding);
    return array2.join();
  }
  function setTexture2D(texture, slot) {
    const textureProperties = properties.get(texture);
    if (texture.isVideoTexture) updateVideoTexture(texture);
    if (texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version) {
      const image = texture.image;
      if (image === null) {
        console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
      } else if (image.complete === false) {
        console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
      } else {
        uploadTexture(textureProperties, texture, slot);
        return;
      }
    }
    state.bindTexture(3553, textureProperties.__webglTexture, 33984 + slot);
  }
  function setTexture2DArray(texture, slot) {
    const textureProperties = properties.get(texture);
    if (texture.version > 0 && textureProperties.__version !== texture.version) {
      uploadTexture(textureProperties, texture, slot);
      return;
    }
    state.bindTexture(35866, textureProperties.__webglTexture, 33984 + slot);
  }
  function setTexture3D(texture, slot) {
    const textureProperties = properties.get(texture);
    if (texture.version > 0 && textureProperties.__version !== texture.version) {
      uploadTexture(textureProperties, texture, slot);
      return;
    }
    state.bindTexture(32879, textureProperties.__webglTexture, 33984 + slot);
  }
  function setTextureCube(texture, slot) {
    const textureProperties = properties.get(texture);
    if (texture.version > 0 && textureProperties.__version !== texture.version) {
      uploadCubeTexture(textureProperties, texture, slot);
      return;
    }
    state.bindTexture(34067, textureProperties.__webglTexture, 33984 + slot);
  }
  const wrappingToGL = {
    [RepeatWrapping]: 10497,
    [ClampToEdgeWrapping]: 33071,
    [MirroredRepeatWrapping]: 33648
  };
  const filterToGL = {
    [NearestFilter]: 9728,
    [NearestMipmapNearestFilter]: 9984,
    [NearestMipmapLinearFilter]: 9986,
    [LinearFilter]: 9729,
    [LinearMipmapNearestFilter]: 9985,
    [LinearMipmapLinearFilter]: 9987
  };
  function setTextureParameters(textureType, texture, supportsMips) {
    if (supportsMips) {
      _gl.texParameteri(textureType, 10242, wrappingToGL[texture.wrapS]);
      _gl.texParameteri(textureType, 10243, wrappingToGL[texture.wrapT]);
      if (textureType === 32879 || textureType === 35866) {
        _gl.texParameteri(textureType, 32882, wrappingToGL[texture.wrapR]);
      }
      _gl.texParameteri(textureType, 10240, filterToGL[texture.magFilter]);
      _gl.texParameteri(textureType, 10241, filterToGL[texture.minFilter]);
    } else {
      _gl.texParameteri(textureType, 10242, 33071);
      _gl.texParameteri(textureType, 10243, 33071);
      if (textureType === 32879 || textureType === 35866) {
        _gl.texParameteri(textureType, 32882, 33071);
      }
      if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {
        console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.");
      }
      _gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));
      _gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));
      if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {
        console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.");
      }
    }
    if (extensions.has("EXT_texture_filter_anisotropic") === true) {
      const extension = extensions.get("EXT_texture_filter_anisotropic");
      if (texture.magFilter === NearestFilter) return;
      if (texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter) return;
      if (texture.type === FloatType && extensions.has("OES_texture_float_linear") === false) return;
      if (isWebGL2 === false && (texture.type === HalfFloatType && extensions.has("OES_texture_half_float_linear") === false)) return;
      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {
        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));
        properties.get(texture).__currentAnisotropy = texture.anisotropy;
      }
    }
  }
  function initTexture(textureProperties, texture) {
    let forceUpload = false;
    if (textureProperties.__webglInit === void 0) {
      textureProperties.__webglInit = true;
      texture.addEventListener("dispose", onTextureDispose);
    }
    const source = texture.source;
    let webglTextures = _sources.get(source);
    if (webglTextures === void 0) {
      webglTextures = {};
      _sources.set(source, webglTextures);
    }
    const textureCacheKey = getTextureCacheKey(texture);
    if (textureCacheKey !== textureProperties.__cacheKey) {
      if (webglTextures[textureCacheKey] === void 0) {
        webglTextures[textureCacheKey] = {
          texture: _gl.createTexture(),
          usedTimes: 0
        };
        info.memory.textures++;
        forceUpload = true;
      }
      webglTextures[textureCacheKey].usedTimes++;
      const webglTexture = webglTextures[textureProperties.__cacheKey];
      if (webglTexture !== void 0) {
        webglTextures[textureProperties.__cacheKey].usedTimes--;
        if (webglTexture.usedTimes === 0) {
          deleteTexture(texture);
        }
      }
      textureProperties.__cacheKey = textureCacheKey;
      textureProperties.__webglTexture = webglTextures[textureCacheKey].texture;
    }
    return forceUpload;
  }
  function uploadTexture(textureProperties, texture, slot) {
    let textureType = 3553;
    if (texture.isDataArrayTexture || texture.isCompressedArrayTexture) textureType = 35866;
    if (texture.isData3DTexture) textureType = 32879;
    const forceUpload = initTexture(textureProperties, texture);
    const source = texture.source;
    state.bindTexture(textureType, textureProperties.__webglTexture, 33984 + slot);
    const sourceProperties = properties.get(source);
    if (source.version !== sourceProperties.__version || forceUpload === true) {
      state.activeTexture(33984 + slot);
      _gl.pixelStorei(37440, texture.flipY);
      _gl.pixelStorei(37441, texture.premultiplyAlpha);
      _gl.pixelStorei(3317, texture.unpackAlignment);
      _gl.pixelStorei(37443, 0);
      const needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;
      let image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);
      image = verifyColorSpace(texture, image);
      const supportsMips = isPowerOfTwo$1(image) || isWebGL2, glFormat = utils2.convert(texture.format, texture.encoding);
      let glType = utils2.convert(texture.type), glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture);
      setTextureParameters(textureType, texture, supportsMips);
      let mipmap;
      const mipmaps = texture.mipmaps;
      const useTexStorage = isWebGL2 && texture.isVideoTexture !== true;
      const allocateMemory = sourceProperties.__version === void 0 || forceUpload === true;
      const levels = getMipLevels(texture, image, supportsMips);
      if (texture.isDepthTexture) {
        glInternalFormat = 6402;
        if (isWebGL2) {
          if (texture.type === FloatType) {
            glInternalFormat = 36012;
          } else if (texture.type === UnsignedIntType) {
            glInternalFormat = 33190;
          } else if (texture.type === UnsignedInt248Type) {
            glInternalFormat = 35056;
          } else {
            glInternalFormat = 33189;
          }
        } else {
          if (texture.type === FloatType) {
            console.error("WebGLRenderer: Floating point depth texture requires WebGL2.");
          }
        }
        if (texture.format === DepthFormat && glInternalFormat === 6402) {
          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {
            console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.");
            texture.type = UnsignedIntType;
            glType = utils2.convert(texture.type);
          }
        }
        if (texture.format === DepthStencilFormat && glInternalFormat === 6402) {
          glInternalFormat = 34041;
          if (texture.type !== UnsignedInt248Type) {
            console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.");
            texture.type = UnsignedInt248Type;
            glType = utils2.convert(texture.type);
          }
        }
        if (allocateMemory) {
          if (useTexStorage) {
            state.texStorage2D(3553, 1, glInternalFormat, image.width, image.height);
          } else {
            state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);
          }
        }
      } else if (texture.isDataTexture) {
        if (mipmaps.length > 0 && supportsMips) {
          if (useTexStorage && allocateMemory) {
            state.texStorage2D(3553, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);
          }
          for (let i = 0, il2 = mipmaps.length; i < il2; i++) {
            mipmap = mipmaps[i];
            if (useTexStorage) {
              state.texSubImage2D(3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);
            } else {
              state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);
            }
          }
          texture.generateMipmaps = false;
        } else {
          if (useTexStorage) {
            if (allocateMemory) {
              state.texStorage2D(3553, levels, glInternalFormat, image.width, image.height);
            }
            state.texSubImage2D(3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data);
          } else {
            state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);
          }
        }
      } else if (texture.isCompressedTexture) {
        if (texture.isCompressedArrayTexture) {
          if (useTexStorage && allocateMemory) {
            state.texStorage3D(35866, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height, image.depth);
          }
          for (let i = 0, il2 = mipmaps.length; i < il2; i++) {
            mipmap = mipmaps[i];
            if (texture.format !== RGBAFormat) {
              if (glFormat !== null) {
                if (useTexStorage) {
                  state.compressedTexSubImage3D(35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0);
                } else {
                  state.compressedTexImage3D(35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0);
                }
              } else {
                console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
              }
            } else {
              if (useTexStorage) {
                state.texSubImage3D(35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data);
              } else {
                state.texImage3D(35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data);
              }
            }
          }
        } else {
          if (useTexStorage && allocateMemory) {
            state.texStorage2D(3553, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);
          }
          for (let i = 0, il2 = mipmaps.length; i < il2; i++) {
            mipmap = mipmaps[i];
            if (texture.format !== RGBAFormat) {
              if (glFormat !== null) {
                if (useTexStorage) {
                  state.compressedTexSubImage2D(3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);
                } else {
                  state.compressedTexImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);
                }
              } else {
                console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
              }
            } else {
              if (useTexStorage) {
                state.texSubImage2D(3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);
              } else {
                state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);
              }
            }
          }
        }
      } else if (texture.isDataArrayTexture) {
        if (useTexStorage) {
          if (allocateMemory) {
            state.texStorage3D(35866, levels, glInternalFormat, image.width, image.height, image.depth);
          }
          state.texSubImage3D(35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data);
        } else {
          state.texImage3D(35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);
        }
      } else if (texture.isData3DTexture) {
        if (useTexStorage) {
          if (allocateMemory) {
            state.texStorage3D(32879, levels, glInternalFormat, image.width, image.height, image.depth);
          }
          state.texSubImage3D(32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data);
        } else {
          state.texImage3D(32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);
        }
      } else if (texture.isFramebufferTexture) {
        if (allocateMemory) {
          if (useTexStorage) {
            state.texStorage2D(3553, levels, glInternalFormat, image.width, image.height);
          } else {
            let width = image.width, height = image.height;
            for (let i = 0; i < levels; i++) {
              state.texImage2D(3553, i, glInternalFormat, width, height, 0, glFormat, glType, null);
              width >>= 1;
              height >>= 1;
            }
          }
        }
      } else {
        if (mipmaps.length > 0 && supportsMips) {
          if (useTexStorage && allocateMemory) {
            state.texStorage2D(3553, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);
          }
          for (let i = 0, il2 = mipmaps.length; i < il2; i++) {
            mipmap = mipmaps[i];
            if (useTexStorage) {
              state.texSubImage2D(3553, i, 0, 0, glFormat, glType, mipmap);
            } else {
              state.texImage2D(3553, i, glInternalFormat, glFormat, glType, mipmap);
            }
          }
          texture.generateMipmaps = false;
        } else {
          if (useTexStorage) {
            if (allocateMemory) {
              state.texStorage2D(3553, levels, glInternalFormat, image.width, image.height);
            }
            state.texSubImage2D(3553, 0, 0, 0, glFormat, glType, image);
          } else {
            state.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);
          }
        }
      }
      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {
        generateMipmap(textureType);
      }
      sourceProperties.__version = source.version;
      if (texture.onUpdate) texture.onUpdate(texture);
    }
    textureProperties.__version = texture.version;
  }
  function uploadCubeTexture(textureProperties, texture, slot) {
    if (texture.image.length !== 6) return;
    const forceUpload = initTexture(textureProperties, texture);
    const source = texture.source;
    state.bindTexture(34067, textureProperties.__webglTexture, 33984 + slot);
    const sourceProperties = properties.get(source);
    if (source.version !== sourceProperties.__version || forceUpload === true) {
      state.activeTexture(33984 + slot);
      _gl.pixelStorei(37440, texture.flipY);
      _gl.pixelStorei(37441, texture.premultiplyAlpha);
      _gl.pixelStorei(3317, texture.unpackAlignment);
      _gl.pixelStorei(37443, 0);
      const isCompressed = texture.isCompressedTexture || texture.image[0].isCompressedTexture;
      const isDataTexture = texture.image[0] && texture.image[0].isDataTexture;
      const cubeImage = [];
      for (let i = 0; i < 6; i++) {
        if (!isCompressed && !isDataTexture) {
          cubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);
        } else {
          cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];
        }
        cubeImage[i] = verifyColorSpace(texture, cubeImage[i]);
      }
      const image = cubeImage[0], supportsMips = isPowerOfTwo$1(image) || isWebGL2, glFormat = utils2.convert(texture.format, texture.encoding), glType = utils2.convert(texture.type), glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);
      const useTexStorage = isWebGL2 && texture.isVideoTexture !== true;
      const allocateMemory = sourceProperties.__version === void 0 || forceUpload === true;
      let levels = getMipLevels(texture, image, supportsMips);
      setTextureParameters(34067, texture, supportsMips);
      let mipmaps;
      if (isCompressed) {
        if (useTexStorage && allocateMemory) {
          state.texStorage2D(34067, levels, glInternalFormat, image.width, image.height);
        }
        for (let i = 0; i < 6; i++) {
          mipmaps = cubeImage[i].mipmaps;
          for (let j2 = 0; j2 < mipmaps.length; j2++) {
            const mipmap = mipmaps[j2];
            if (texture.format !== RGBAFormat) {
              if (glFormat !== null) {
                if (useTexStorage) {
                  state.compressedTexSubImage2D(34069 + i, j2, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);
                } else {
                  state.compressedTexImage2D(34069 + i, j2, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);
                }
              } else {
                console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()");
              }
            } else {
              if (useTexStorage) {
                state.texSubImage2D(34069 + i, j2, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);
              } else {
                state.texImage2D(34069 + i, j2, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);
              }
            }
          }
        }
      } else {
        mipmaps = texture.mipmaps;
        if (useTexStorage && allocateMemory) {
          if (mipmaps.length > 0) levels++;
          state.texStorage2D(34067, levels, glInternalFormat, cubeImage[0].width, cubeImage[0].height);
        }
        for (let i = 0; i < 6; i++) {
          if (isDataTexture) {
            if (useTexStorage) {
              state.texSubImage2D(34069 + i, 0, 0, 0, cubeImage[i].width, cubeImage[i].height, glFormat, glType, cubeImage[i].data);
            } else {
              state.texImage2D(34069 + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);
            }
            for (let j2 = 0; j2 < mipmaps.length; j2++) {
              const mipmap = mipmaps[j2];
              const mipmapImage = mipmap.image[i].image;
              if (useTexStorage) {
                state.texSubImage2D(34069 + i, j2 + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data);
              } else {
                state.texImage2D(34069 + i, j2 + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);
              }
            }
          } else {
            if (useTexStorage) {
              state.texSubImage2D(34069 + i, 0, 0, 0, glFormat, glType, cubeImage[i]);
            } else {
              state.texImage2D(34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);
            }
            for (let j2 = 0; j2 < mipmaps.length; j2++) {
              const mipmap = mipmaps[j2];
              if (useTexStorage) {
                state.texSubImage2D(34069 + i, j2 + 1, 0, 0, glFormat, glType, mipmap.image[i]);
              } else {
                state.texImage2D(34069 + i, j2 + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);
              }
            }
          }
        }
      }
      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {
        generateMipmap(34067);
      }
      sourceProperties.__version = source.version;
      if (texture.onUpdate) texture.onUpdate(texture);
    }
    textureProperties.__version = texture.version;
  }
  function setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {
    const glFormat = utils2.convert(texture.format, texture.encoding);
    const glType = utils2.convert(texture.type);
    const glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);
    const renderTargetProperties = properties.get(renderTarget);
    if (!renderTargetProperties.__hasExternalTextures) {
      if (textureTarget === 32879 || textureTarget === 35866) {
        state.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);
      } else {
        state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);
      }
    }
    state.bindFramebuffer(36160, framebuffer);
    if (useMultisampledRTT(renderTarget)) {
      multisampledRTTExt.framebufferTexture2DMultisampleEXT(36160, attachment, textureTarget, properties.get(texture).__webglTexture, 0, getRenderTargetSamples(renderTarget));
    } else if (textureTarget === 3553 || textureTarget >= 34069 && textureTarget <= 34074) {
      _gl.framebufferTexture2D(36160, attachment, textureTarget, properties.get(texture).__webglTexture, 0);
    }
    state.bindFramebuffer(36160, null);
  }
  function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {
    _gl.bindRenderbuffer(36161, renderbuffer);
    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {
      let glInternalFormat = 33189;
      if (isMultisample || useMultisampledRTT(renderTarget)) {
        const depthTexture = renderTarget.depthTexture;
        if (depthTexture && depthTexture.isDepthTexture) {
          if (depthTexture.type === FloatType) {
            glInternalFormat = 36012;
          } else if (depthTexture.type === UnsignedIntType) {
            glInternalFormat = 33190;
          }
        }
        const samples = getRenderTargetSamples(renderTarget);
        if (useMultisampledRTT(renderTarget)) {
          multisampledRTTExt.renderbufferStorageMultisampleEXT(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);
        } else {
          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);
        }
      } else {
        _gl.renderbufferStorage(36161, glInternalFormat, renderTarget.width, renderTarget.height);
      }
      _gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);
    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {
      const samples = getRenderTargetSamples(renderTarget);
      if (isMultisample && useMultisampledRTT(renderTarget) === false) {
        _gl.renderbufferStorageMultisample(36161, samples, 35056, renderTarget.width, renderTarget.height);
      } else if (useMultisampledRTT(renderTarget)) {
        multisampledRTTExt.renderbufferStorageMultisampleEXT(36161, samples, 35056, renderTarget.width, renderTarget.height);
      } else {
        _gl.renderbufferStorage(36161, 34041, renderTarget.width, renderTarget.height);
      }
      _gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);
    } else {
      const textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];
      for (let i = 0; i < textures.length; i++) {
        const texture = textures[i];
        const glFormat = utils2.convert(texture.format, texture.encoding);
        const glType = utils2.convert(texture.type);
        const glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);
        const samples = getRenderTargetSamples(renderTarget);
        if (isMultisample && useMultisampledRTT(renderTarget) === false) {
          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);
        } else if (useMultisampledRTT(renderTarget)) {
          multisampledRTTExt.renderbufferStorageMultisampleEXT(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);
        } else {
          _gl.renderbufferStorage(36161, glInternalFormat, renderTarget.width, renderTarget.height);
        }
      }
    }
    _gl.bindRenderbuffer(36161, null);
  }
  function setupDepthTexture(framebuffer, renderTarget) {
    const isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;
    if (isCube) throw new Error("Depth Texture with cube render targets is not supported");
    state.bindFramebuffer(36160, framebuffer);
    if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {
      throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
    }
    if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {
      renderTarget.depthTexture.image.width = renderTarget.width;
      renderTarget.depthTexture.image.height = renderTarget.height;
      renderTarget.depthTexture.needsUpdate = true;
    }
    setTexture2D(renderTarget.depthTexture, 0);
    const webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;
    const samples = getRenderTargetSamples(renderTarget);
    if (renderTarget.depthTexture.format === DepthFormat) {
      if (useMultisampledRTT(renderTarget)) {
        multisampledRTTExt.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, webglDepthTexture, 0, samples);
      } else {
        _gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);
      }
    } else if (renderTarget.depthTexture.format === DepthStencilFormat) {
      if (useMultisampledRTT(renderTarget)) {
        multisampledRTTExt.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, webglDepthTexture, 0, samples);
      } else {
        _gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);
      }
    } else {
      throw new Error("Unknown depthTexture format");
    }
  }
  function setupDepthRenderbuffer(renderTarget) {
    const renderTargetProperties = properties.get(renderTarget);
    const isCube = renderTarget.isWebGLCubeRenderTarget === true;
    if (renderTarget.depthTexture && !renderTargetProperties.__autoAllocateDepthBuffer) {
      if (isCube) throw new Error("target.depthTexture not supported in Cube render targets");
      setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);
    } else {
      if (isCube) {
        renderTargetProperties.__webglDepthbuffer = [];
        for (let i = 0; i < 6; i++) {
          state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer[i]);
          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();
          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);
        }
      } else {
        state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);
        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();
        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);
      }
    }
    state.bindFramebuffer(36160, null);
  }
  function rebindTextures(renderTarget, colorTexture, depthTexture) {
    const renderTargetProperties = properties.get(renderTarget);
    if (colorTexture !== void 0) {
      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553);
    }
    if (depthTexture !== void 0) {
      setupDepthRenderbuffer(renderTarget);
    }
  }
  function setupRenderTarget(renderTarget) {
    const texture = renderTarget.texture;
    const renderTargetProperties = properties.get(renderTarget);
    const textureProperties = properties.get(texture);
    renderTarget.addEventListener("dispose", onRenderTargetDispose);
    if (renderTarget.isWebGLMultipleRenderTargets !== true) {
      if (textureProperties.__webglTexture === void 0) {
        textureProperties.__webglTexture = _gl.createTexture();
      }
      textureProperties.__version = texture.version;
      info.memory.textures++;
    }
    const isCube = renderTarget.isWebGLCubeRenderTarget === true;
    const isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;
    const supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;
    if (isCube) {
      renderTargetProperties.__webglFramebuffer = [];
      for (let i = 0; i < 6; i++) {
        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();
      }
    } else {
      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();
      if (isMultipleRenderTargets) {
        if (capabilities.drawBuffers) {
          const textures = renderTarget.texture;
          for (let i = 0, il2 = textures.length; i < il2; i++) {
            const attachmentProperties = properties.get(textures[i]);
            if (attachmentProperties.__webglTexture === void 0) {
              attachmentProperties.__webglTexture = _gl.createTexture();
              info.memory.textures++;
            }
          }
        } else {
          console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
        }
      }
      if (isWebGL2 && renderTarget.samples > 0 && useMultisampledRTT(renderTarget) === false) {
        const textures = isMultipleRenderTargets ? texture : [texture];
        renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();
        renderTargetProperties.__webglColorRenderbuffer = [];
        state.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);
        for (let i = 0; i < textures.length; i++) {
          const texture2 = textures[i];
          renderTargetProperties.__webglColorRenderbuffer[i] = _gl.createRenderbuffer();
          _gl.bindRenderbuffer(36161, renderTargetProperties.__webglColorRenderbuffer[i]);
          const glFormat = utils2.convert(texture2.format, texture2.encoding);
          const glType = utils2.convert(texture2.type);
          const glInternalFormat = getInternalFormat(texture2.internalFormat, glFormat, glType, texture2.encoding, renderTarget.isXRRenderTarget === true);
          const samples = getRenderTargetSamples(renderTarget);
          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);
          _gl.framebufferRenderbuffer(36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[i]);
        }
        _gl.bindRenderbuffer(36161, null);
        if (renderTarget.depthBuffer) {
          renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();
          setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);
        }
        state.bindFramebuffer(36160, null);
      }
    }
    if (isCube) {
      state.bindTexture(34067, textureProperties.__webglTexture);
      setTextureParameters(34067, texture, supportsMips);
      for (let i = 0; i < 6; i++) {
        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, 36064, 34069 + i);
      }
      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {
        generateMipmap(34067);
      }
      state.unbindTexture();
    } else if (isMultipleRenderTargets) {
      const textures = renderTarget.texture;
      for (let i = 0, il2 = textures.length; i < il2; i++) {
        const attachment = textures[i];
        const attachmentProperties = properties.get(attachment);
        state.bindTexture(3553, attachmentProperties.__webglTexture);
        setTextureParameters(3553, attachment, supportsMips);
        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553);
        if (textureNeedsGenerateMipmaps(attachment, supportsMips)) {
          generateMipmap(3553);
        }
      }
      state.unbindTexture();
    } else {
      let glTextureType = 3553;
      if (renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget) {
        if (isWebGL2) {
          glTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;
        } else {
          console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.");
        }
      }
      state.bindTexture(glTextureType, textureProperties.__webglTexture);
      setTextureParameters(glTextureType, texture, supportsMips);
      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType);
      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {
        generateMipmap(glTextureType);
      }
      state.unbindTexture();
    }
    if (renderTarget.depthBuffer) {
      setupDepthRenderbuffer(renderTarget);
    }
  }
  function updateRenderTargetMipmap(renderTarget) {
    const supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;
    const textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];
    for (let i = 0, il2 = textures.length; i < il2; i++) {
      const texture = textures[i];
      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {
        const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;
        const webglTexture = properties.get(texture).__webglTexture;
        state.bindTexture(target, webglTexture);
        generateMipmap(target);
        state.unbindTexture();
      }
    }
  }
  function updateMultisampleRenderTarget(renderTarget) {
    if (isWebGL2 && renderTarget.samples > 0 && useMultisampledRTT(renderTarget) === false) {
      const textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [renderTarget.texture];
      const width = renderTarget.width;
      const height = renderTarget.height;
      let mask = 16384;
      const invalidationArray = [];
      const depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;
      const renderTargetProperties = properties.get(renderTarget);
      const isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;
      if (isMultipleRenderTargets) {
        for (let i = 0; i < textures.length; i++) {
          state.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);
          _gl.framebufferRenderbuffer(36160, 36064 + i, 36161, null);
          state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);
          _gl.framebufferTexture2D(36009, 36064 + i, 3553, null, 0);
        }
      }
      state.bindFramebuffer(36008, renderTargetProperties.__webglMultisampledFramebuffer);
      state.bindFramebuffer(36009, renderTargetProperties.__webglFramebuffer);
      for (let i = 0; i < textures.length; i++) {
        invalidationArray.push(36064 + i);
        if (renderTarget.depthBuffer) {
          invalidationArray.push(depthStyle);
        }
        const ignoreDepthValues = renderTargetProperties.__ignoreDepthValues !== void 0 ? renderTargetProperties.__ignoreDepthValues : false;
        if (ignoreDepthValues === false) {
          if (renderTarget.depthBuffer) mask |= 256;
          if (renderTarget.stencilBuffer) mask |= 1024;
        }
        if (isMultipleRenderTargets) {
          _gl.framebufferRenderbuffer(36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[i]);
        }
        if (ignoreDepthValues === true) {
          _gl.invalidateFramebuffer(36008, [depthStyle]);
          _gl.invalidateFramebuffer(36009, [depthStyle]);
        }
        if (isMultipleRenderTargets) {
          const webglTexture = properties.get(textures[i]).__webglTexture;
          _gl.framebufferTexture2D(36009, 36064, 3553, webglTexture, 0);
        }
        _gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, 9728);
        if (supportsInvalidateFramebuffer) {
          _gl.invalidateFramebuffer(36008, invalidationArray);
        }
      }
      state.bindFramebuffer(36008, null);
      state.bindFramebuffer(36009, null);
      if (isMultipleRenderTargets) {
        for (let i = 0; i < textures.length; i++) {
          state.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);
          _gl.framebufferRenderbuffer(36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[i]);
          const webglTexture = properties.get(textures[i]).__webglTexture;
          state.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);
          _gl.framebufferTexture2D(36009, 36064 + i, 3553, webglTexture, 0);
        }
      }
      state.bindFramebuffer(36009, renderTargetProperties.__webglMultisampledFramebuffer);
    }
  }
  function getRenderTargetSamples(renderTarget) {
    return Math.min(maxSamples, renderTarget.samples);
  }
  function useMultisampledRTT(renderTarget) {
    const renderTargetProperties = properties.get(renderTarget);
    return isWebGL2 && renderTarget.samples > 0 && extensions.has("WEBGL_multisampled_render_to_texture") === true && renderTargetProperties.__useRenderToTexture !== false;
  }
  function updateVideoTexture(texture) {
    const frame = info.render.frame;
    if (_videoTextures.get(texture) !== frame) {
      _videoTextures.set(texture, frame);
      texture.update();
    }
  }
  function verifyColorSpace(texture, image) {
    const encoding = texture.encoding;
    const format2 = texture.format;
    const type = texture.type;
    if (texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat) return image;
    if (encoding !== LinearEncoding) {
      if (encoding === sRGBEncoding) {
        if (isWebGL2 === false) {
          if (extensions.has("EXT_sRGB") === true && format2 === RGBAFormat) {
            texture.format = _SRGBAFormat;
            texture.minFilter = LinearFilter;
            texture.generateMipmaps = false;
          } else {
            image = ImageUtils.sRGBToLinear(image);
          }
        } else {
          if (format2 !== RGBAFormat || type !== UnsignedByteType) {
            console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.");
          }
        }
      } else {
        console.error("THREE.WebGLTextures: Unsupported texture encoding:", encoding);
      }
    }
    return image;
  }
  this.allocateTextureUnit = allocateTextureUnit;
  this.resetTextureUnits = resetTextureUnits;
  this.setTexture2D = setTexture2D;
  this.setTexture2DArray = setTexture2DArray;
  this.setTexture3D = setTexture3D;
  this.setTextureCube = setTextureCube;
  this.rebindTextures = rebindTextures;
  this.setupRenderTarget = setupRenderTarget;
  this.updateRenderTargetMipmap = updateRenderTargetMipmap;
  this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;
  this.setupDepthRenderbuffer = setupDepthRenderbuffer;
  this.setupFrameBufferTexture = setupFrameBufferTexture;
  this.useMultisampledRTT = useMultisampledRTT;
}
function WebGLUtils(gl2, extensions, capabilities) {
  const isWebGL2 = capabilities.isWebGL2;
  function convert(p2, encoding = null) {
    let extension;
    if (p2 === UnsignedByteType) return 5121;
    if (p2 === UnsignedShort4444Type) return 32819;
    if (p2 === UnsignedShort5551Type) return 32820;
    if (p2 === ByteType) return 5120;
    if (p2 === ShortType) return 5122;
    if (p2 === UnsignedShortType) return 5123;
    if (p2 === IntType) return 5124;
    if (p2 === UnsignedIntType) return 5125;
    if (p2 === FloatType) return 5126;
    if (p2 === HalfFloatType) {
      if (isWebGL2) return 5131;
      extension = extensions.get("OES_texture_half_float");
      if (extension !== null) {
        return extension.HALF_FLOAT_OES;
      } else {
        return null;
      }
    }
    if (p2 === AlphaFormat) return 6406;
    if (p2 === RGBAFormat) return 6408;
    if (p2 === LuminanceFormat) return 6409;
    if (p2 === LuminanceAlphaFormat) return 6410;
    if (p2 === DepthFormat) return 6402;
    if (p2 === DepthStencilFormat) return 34041;
    if (p2 === _SRGBAFormat) {
      extension = extensions.get("EXT_sRGB");
      if (extension !== null) {
        return extension.SRGB_ALPHA_EXT;
      } else {
        return null;
      }
    }
    if (p2 === RedFormat) return 6403;
    if (p2 === RedIntegerFormat) return 36244;
    if (p2 === RGFormat) return 33319;
    if (p2 === RGIntegerFormat) return 33320;
    if (p2 === RGBAIntegerFormat) return 36249;
    if (p2 === RGB_S3TC_DXT1_Format || p2 === RGBA_S3TC_DXT1_Format || p2 === RGBA_S3TC_DXT3_Format || p2 === RGBA_S3TC_DXT5_Format) {
      if (encoding === sRGBEncoding) {
        extension = extensions.get("WEBGL_compressed_texture_s3tc_srgb");
        if (extension !== null) {
          if (p2 === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;
          if (p2 === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
          if (p2 === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
          if (p2 === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else {
          return null;
        }
      } else {
        extension = extensions.get("WEBGL_compressed_texture_s3tc");
        if (extension !== null) {
          if (p2 === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;
          if (p2 === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;
          if (p2 === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;
          if (p2 === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else {
          return null;
        }
      }
    }
    if (p2 === RGB_PVRTC_4BPPV1_Format || p2 === RGB_PVRTC_2BPPV1_Format || p2 === RGBA_PVRTC_4BPPV1_Format || p2 === RGBA_PVRTC_2BPPV1_Format) {
      extension = extensions.get("WEBGL_compressed_texture_pvrtc");
      if (extension !== null) {
        if (p2 === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (p2 === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (p2 === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (p2 === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      } else {
        return null;
      }
    }
    if (p2 === RGB_ETC1_Format) {
      extension = extensions.get("WEBGL_compressed_texture_etc1");
      if (extension !== null) {
        return extension.COMPRESSED_RGB_ETC1_WEBGL;
      } else {
        return null;
      }
    }
    if (p2 === RGB_ETC2_Format || p2 === RGBA_ETC2_EAC_Format) {
      extension = extensions.get("WEBGL_compressed_texture_etc");
      if (extension !== null) {
        if (p2 === RGB_ETC2_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;
        if (p2 === RGBA_ETC2_EAC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;
      } else {
        return null;
      }
    }
    if (p2 === RGBA_ASTC_4x4_Format || p2 === RGBA_ASTC_5x4_Format || p2 === RGBA_ASTC_5x5_Format || p2 === RGBA_ASTC_6x5_Format || p2 === RGBA_ASTC_6x6_Format || p2 === RGBA_ASTC_8x5_Format || p2 === RGBA_ASTC_8x6_Format || p2 === RGBA_ASTC_8x8_Format || p2 === RGBA_ASTC_10x5_Format || p2 === RGBA_ASTC_10x6_Format || p2 === RGBA_ASTC_10x8_Format || p2 === RGBA_ASTC_10x10_Format || p2 === RGBA_ASTC_12x10_Format || p2 === RGBA_ASTC_12x12_Format) {
      extension = extensions.get("WEBGL_compressed_texture_astc");
      if (extension !== null) {
        if (p2 === RGBA_ASTC_4x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;
        if (p2 === RGBA_ASTC_5x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;
        if (p2 === RGBA_ASTC_5x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;
        if (p2 === RGBA_ASTC_6x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;
        if (p2 === RGBA_ASTC_6x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;
        if (p2 === RGBA_ASTC_8x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;
        if (p2 === RGBA_ASTC_8x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;
        if (p2 === RGBA_ASTC_8x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;
        if (p2 === RGBA_ASTC_10x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;
        if (p2 === RGBA_ASTC_10x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;
        if (p2 === RGBA_ASTC_10x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;
        if (p2 === RGBA_ASTC_10x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;
        if (p2 === RGBA_ASTC_12x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;
        if (p2 === RGBA_ASTC_12x12_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;
      } else {
        return null;
      }
    }
    if (p2 === RGBA_BPTC_Format) {
      extension = extensions.get("EXT_texture_compression_bptc");
      if (extension !== null) {
        if (p2 === RGBA_BPTC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;
      } else {
        return null;
      }
    }
    if (p2 === RED_RGTC1_Format || p2 === SIGNED_RED_RGTC1_Format || p2 === RED_GREEN_RGTC2_Format || p2 === SIGNED_RED_GREEN_RGTC2_Format) {
      extension = extensions.get("EXT_texture_compression_rgtc");
      if (extension !== null) {
        if (p2 === RGBA_BPTC_Format) return extension.COMPRESSED_RED_RGTC1_EXT;
        if (p2 === SIGNED_RED_RGTC1_Format) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;
        if (p2 === RED_GREEN_RGTC2_Format) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;
        if (p2 === SIGNED_RED_GREEN_RGTC2_Format) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
      } else {
        return null;
      }
    }
    if (p2 === UnsignedInt248Type) {
      if (isWebGL2) return 34042;
      extension = extensions.get("WEBGL_depth_texture");
      if (extension !== null) {
        return extension.UNSIGNED_INT_24_8_WEBGL;
      } else {
        return null;
      }
    }
    return gl2[p2] !== void 0 ? gl2[p2] : null;
  }
  return { convert };
}
class ArrayCamera extends PerspectiveCamera {
  constructor(array2 = []) {
    super();
    this.isArrayCamera = true;
    this.cameras = array2;
  }
}
class Group extends Object3D {
  constructor() {
    super();
    this.isGroup = true;
    this.type = "Group";
  }
}
const _moveEvent = { type: "move" };
class WebXRController {
  constructor() {
    this._targetRay = null;
    this._grip = null;
    this._hand = null;
  }
  getHandSpace() {
    if (this._hand === null) {
      this._hand = new Group();
      this._hand.matrixAutoUpdate = false;
      this._hand.visible = false;
      this._hand.joints = {};
      this._hand.inputState = { pinching: false };
    }
    return this._hand;
  }
  getTargetRaySpace() {
    if (this._targetRay === null) {
      this._targetRay = new Group();
      this._targetRay.matrixAutoUpdate = false;
      this._targetRay.visible = false;
      this._targetRay.hasLinearVelocity = false;
      this._targetRay.linearVelocity = new Vector3();
      this._targetRay.hasAngularVelocity = false;
      this._targetRay.angularVelocity = new Vector3();
    }
    return this._targetRay;
  }
  getGripSpace() {
    if (this._grip === null) {
      this._grip = new Group();
      this._grip.matrixAutoUpdate = false;
      this._grip.visible = false;
      this._grip.hasLinearVelocity = false;
      this._grip.linearVelocity = new Vector3();
      this._grip.hasAngularVelocity = false;
      this._grip.angularVelocity = new Vector3();
    }
    return this._grip;
  }
  dispatchEvent(event) {
    if (this._targetRay !== null) {
      this._targetRay.dispatchEvent(event);
    }
    if (this._grip !== null) {
      this._grip.dispatchEvent(event);
    }
    if (this._hand !== null) {
      this._hand.dispatchEvent(event);
    }
    return this;
  }
  connect(inputSource) {
    if (inputSource && inputSource.hand) {
      const hand = this._hand;
      if (hand) {
        for (const inputjoint of inputSource.hand.values()) {
          this._getHandJoint(hand, inputjoint);
        }
      }
    }
    this.dispatchEvent({ type: "connected", data: inputSource });
    return this;
  }
  disconnect(inputSource) {
    this.dispatchEvent({ type: "disconnected", data: inputSource });
    if (this._targetRay !== null) {
      this._targetRay.visible = false;
    }
    if (this._grip !== null) {
      this._grip.visible = false;
    }
    if (this._hand !== null) {
      this._hand.visible = false;
    }
    return this;
  }
  update(inputSource, frame, referenceSpace) {
    let inputPose = null;
    let gripPose = null;
    let handPose = null;
    const targetRay = this._targetRay;
    const grip = this._grip;
    const hand = this._hand;
    if (inputSource && frame.session.visibilityState !== "visible-blurred") {
      if (hand && inputSource.hand) {
        handPose = true;
        for (const inputjoint of inputSource.hand.values()) {
          const jointPose = frame.getJointPose(inputjoint, referenceSpace);
          const joint = this._getHandJoint(hand, inputjoint);
          if (jointPose !== null) {
            joint.matrix.fromArray(jointPose.transform.matrix);
            joint.matrix.decompose(joint.position, joint.rotation, joint.scale);
            joint.jointRadius = jointPose.radius;
          }
          joint.visible = jointPose !== null;
        }
        const indexTip = hand.joints["index-finger-tip"];
        const thumbTip = hand.joints["thumb-tip"];
        const distance = indexTip.position.distanceTo(thumbTip.position);
        const distanceToPinch = 0.02;
        const threshold = 5e-3;
        if (hand.inputState.pinching && distance > distanceToPinch + threshold) {
          hand.inputState.pinching = false;
          this.dispatchEvent({
            type: "pinchend",
            handedness: inputSource.handedness,
            target: this
          });
        } else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {
          hand.inputState.pinching = true;
          this.dispatchEvent({
            type: "pinchstart",
            handedness: inputSource.handedness,
            target: this
          });
        }
      } else {
        if (grip !== null && inputSource.gripSpace) {
          gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);
          if (gripPose !== null) {
            grip.matrix.fromArray(gripPose.transform.matrix);
            grip.matrix.decompose(grip.position, grip.rotation, grip.scale);
            if (gripPose.linearVelocity) {
              grip.hasLinearVelocity = true;
              grip.linearVelocity.copy(gripPose.linearVelocity);
            } else {
              grip.hasLinearVelocity = false;
            }
            if (gripPose.angularVelocity) {
              grip.hasAngularVelocity = true;
              grip.angularVelocity.copy(gripPose.angularVelocity);
            } else {
              grip.hasAngularVelocity = false;
            }
          }
        }
      }
      if (targetRay !== null) {
        inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);
        if (inputPose === null && gripPose !== null) {
          inputPose = gripPose;
        }
        if (inputPose !== null) {
          targetRay.matrix.fromArray(inputPose.transform.matrix);
          targetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);
          if (inputPose.linearVelocity) {
            targetRay.hasLinearVelocity = true;
            targetRay.linearVelocity.copy(inputPose.linearVelocity);
          } else {
            targetRay.hasLinearVelocity = false;
          }
          if (inputPose.angularVelocity) {
            targetRay.hasAngularVelocity = true;
            targetRay.angularVelocity.copy(inputPose.angularVelocity);
          } else {
            targetRay.hasAngularVelocity = false;
          }
          this.dispatchEvent(_moveEvent);
        }
      }
    }
    if (targetRay !== null) {
      targetRay.visible = inputPose !== null;
    }
    if (grip !== null) {
      grip.visible = gripPose !== null;
    }
    if (hand !== null) {
      hand.visible = handPose !== null;
    }
    return this;
  }
  // private method
  _getHandJoint(hand, inputjoint) {
    if (hand.joints[inputjoint.jointName] === void 0) {
      const joint = new Group();
      joint.matrixAutoUpdate = false;
      joint.visible = false;
      hand.joints[inputjoint.jointName] = joint;
      hand.add(joint);
    }
    return hand.joints[inputjoint.jointName];
  }
}
class DepthTexture extends Texture {
  constructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format2) {
    format2 = format2 !== void 0 ? format2 : DepthFormat;
    if (format2 !== DepthFormat && format2 !== DepthStencilFormat) {
      throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    }
    if (type === void 0 && format2 === DepthFormat) type = UnsignedIntType;
    if (type === void 0 && format2 === DepthStencilFormat) type = UnsignedInt248Type;
    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format2, type, anisotropy);
    this.isDepthTexture = true;
    this.image = { width, height };
    this.magFilter = magFilter !== void 0 ? magFilter : NearestFilter;
    this.minFilter = minFilter !== void 0 ? minFilter : NearestFilter;
    this.flipY = false;
    this.generateMipmaps = false;
  }
}
class WebXRManager extends EventDispatcher {
  constructor(renderer, gl2) {
    super();
    const scope = this;
    let session = null;
    let framebufferScaleFactor = 1;
    let referenceSpace = null;
    let referenceSpaceType = "local-floor";
    let foveation = 1;
    let customReferenceSpace = null;
    let pose = null;
    let glBinding = null;
    let glProjLayer = null;
    let glBaseLayer = null;
    let xrFrame = null;
    const attributes = gl2.getContextAttributes();
    let initialRenderTarget = null;
    let newRenderTarget = null;
    const controllers = [];
    const controllerInputSources = [];
    const planes = /* @__PURE__ */ new Set();
    const planesLastChangedTimes = /* @__PURE__ */ new Map();
    const cameraL = new PerspectiveCamera();
    cameraL.layers.enable(1);
    cameraL.viewport = new Vector4();
    const cameraR = new PerspectiveCamera();
    cameraR.layers.enable(2);
    cameraR.viewport = new Vector4();
    const cameras = [cameraL, cameraR];
    const cameraVR = new ArrayCamera();
    cameraVR.layers.enable(1);
    cameraVR.layers.enable(2);
    let _currentDepthNear = null;
    let _currentDepthFar = null;
    this.cameraAutoUpdate = true;
    this.enabled = false;
    this.isPresenting = false;
    this.getController = function(index) {
      let controller = controllers[index];
      if (controller === void 0) {
        controller = new WebXRController();
        controllers[index] = controller;
      }
      return controller.getTargetRaySpace();
    };
    this.getControllerGrip = function(index) {
      let controller = controllers[index];
      if (controller === void 0) {
        controller = new WebXRController();
        controllers[index] = controller;
      }
      return controller.getGripSpace();
    };
    this.getHand = function(index) {
      let controller = controllers[index];
      if (controller === void 0) {
        controller = new WebXRController();
        controllers[index] = controller;
      }
      return controller.getHandSpace();
    };
    function onSessionEvent(event) {
      const controllerIndex = controllerInputSources.indexOf(event.inputSource);
      if (controllerIndex === -1) {
        return;
      }
      const controller = controllers[controllerIndex];
      if (controller !== void 0) {
        controller.dispatchEvent({ type: event.type, data: event.inputSource });
      }
    }
    function onSessionEnd() {
      session.removeEventListener("select", onSessionEvent);
      session.removeEventListener("selectstart", onSessionEvent);
      session.removeEventListener("selectend", onSessionEvent);
      session.removeEventListener("squeeze", onSessionEvent);
      session.removeEventListener("squeezestart", onSessionEvent);
      session.removeEventListener("squeezeend", onSessionEvent);
      session.removeEventListener("end", onSessionEnd);
      session.removeEventListener("inputsourceschange", onInputSourcesChange);
      for (let i = 0; i < controllers.length; i++) {
        const inputSource = controllerInputSources[i];
        if (inputSource === null) continue;
        controllerInputSources[i] = null;
        controllers[i].disconnect(inputSource);
      }
      _currentDepthNear = null;
      _currentDepthFar = null;
      renderer.setRenderTarget(initialRenderTarget);
      glBaseLayer = null;
      glProjLayer = null;
      glBinding = null;
      session = null;
      newRenderTarget = null;
      animation.stop();
      scope.isPresenting = false;
      scope.dispatchEvent({ type: "sessionend" });
    }
    this.setFramebufferScaleFactor = function(value) {
      framebufferScaleFactor = value;
      if (scope.isPresenting === true) {
        console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
      }
    };
    this.setReferenceSpaceType = function(value) {
      referenceSpaceType = value;
      if (scope.isPresenting === true) {
        console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
      }
    };
    this.getReferenceSpace = function() {
      return customReferenceSpace || referenceSpace;
    };
    this.setReferenceSpace = function(space) {
      customReferenceSpace = space;
    };
    this.getBaseLayer = function() {
      return glProjLayer !== null ? glProjLayer : glBaseLayer;
    };
    this.getBinding = function() {
      return glBinding;
    };
    this.getFrame = function() {
      return xrFrame;
    };
    this.getSession = function() {
      return session;
    };
    this.setSession = async function(value) {
      session = value;
      if (session !== null) {
        initialRenderTarget = renderer.getRenderTarget();
        session.addEventListener("select", onSessionEvent);
        session.addEventListener("selectstart", onSessionEvent);
        session.addEventListener("selectend", onSessionEvent);
        session.addEventListener("squeeze", onSessionEvent);
        session.addEventListener("squeezestart", onSessionEvent);
        session.addEventListener("squeezeend", onSessionEvent);
        session.addEventListener("end", onSessionEnd);
        session.addEventListener("inputsourceschange", onInputSourcesChange);
        if (attributes.xrCompatible !== true) {
          await gl2.makeXRCompatible();
        }
        if (session.renderState.layers === void 0 || renderer.capabilities.isWebGL2 === false) {
          const layerInit = {
            antialias: session.renderState.layers === void 0 ? attributes.antialias : true,
            alpha: attributes.alpha,
            depth: attributes.depth,
            stencil: attributes.stencil,
            framebufferScaleFactor
          };
          glBaseLayer = new XRWebGLLayer(session, gl2, layerInit);
          session.updateRenderState({ baseLayer: glBaseLayer });
          newRenderTarget = new WebGLRenderTarget(
            glBaseLayer.framebufferWidth,
            glBaseLayer.framebufferHeight,
            {
              format: RGBAFormat,
              type: UnsignedByteType,
              encoding: renderer.outputEncoding,
              stencilBuffer: attributes.stencil
            }
          );
        } else {
          let depthFormat = null;
          let depthType = null;
          let glDepthFormat = null;
          if (attributes.depth) {
            glDepthFormat = attributes.stencil ? 35056 : 33190;
            depthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;
            depthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;
          }
          const projectionlayerInit = {
            colorFormat: 32856,
            depthFormat: glDepthFormat,
            scaleFactor: framebufferScaleFactor
          };
          glBinding = new XRWebGLBinding(session, gl2);
          glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);
          session.updateRenderState({ layers: [glProjLayer] });
          newRenderTarget = new WebGLRenderTarget(
            glProjLayer.textureWidth,
            glProjLayer.textureHeight,
            {
              format: RGBAFormat,
              type: UnsignedByteType,
              depthTexture: new DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, void 0, void 0, void 0, void 0, void 0, void 0, depthFormat),
              stencilBuffer: attributes.stencil,
              encoding: renderer.outputEncoding,
              samples: attributes.antialias ? 4 : 0
            }
          );
          const renderTargetProperties = renderer.properties.get(newRenderTarget);
          renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;
        }
        newRenderTarget.isXRRenderTarget = true;
        this.setFoveation(foveation);
        customReferenceSpace = null;
        referenceSpace = await session.requestReferenceSpace(referenceSpaceType);
        animation.setContext(session);
        animation.start();
        scope.isPresenting = true;
        scope.dispatchEvent({ type: "sessionstart" });
      }
    };
    function onInputSourcesChange(event) {
      for (let i = 0; i < event.removed.length; i++) {
        const inputSource = event.removed[i];
        const index = controllerInputSources.indexOf(inputSource);
        if (index >= 0) {
          controllerInputSources[index] = null;
          controllers[index].disconnect(inputSource);
        }
      }
      for (let i = 0; i < event.added.length; i++) {
        const inputSource = event.added[i];
        let controllerIndex = controllerInputSources.indexOf(inputSource);
        if (controllerIndex === -1) {
          for (let i2 = 0; i2 < controllers.length; i2++) {
            if (i2 >= controllerInputSources.length) {
              controllerInputSources.push(inputSource);
              controllerIndex = i2;
              break;
            } else if (controllerInputSources[i2] === null) {
              controllerInputSources[i2] = inputSource;
              controllerIndex = i2;
              break;
            }
          }
          if (controllerIndex === -1) break;
        }
        const controller = controllers[controllerIndex];
        if (controller) {
          controller.connect(inputSource);
        }
      }
    }
    const cameraLPos = new Vector3();
    const cameraRPos = new Vector3();
    function setProjectionFromUnion(camera, cameraL2, cameraR2) {
      cameraLPos.setFromMatrixPosition(cameraL2.matrixWorld);
      cameraRPos.setFromMatrixPosition(cameraR2.matrixWorld);
      const ipd = cameraLPos.distanceTo(cameraRPos);
      const projL = cameraL2.projectionMatrix.elements;
      const projR = cameraR2.projectionMatrix.elements;
      const near = projL[14] / (projL[10] - 1);
      const far = projL[14] / (projL[10] + 1);
      const topFov = (projL[9] + 1) / projL[5];
      const bottomFov = (projL[9] - 1) / projL[5];
      const leftFov = (projL[8] - 1) / projL[0];
      const rightFov = (projR[8] + 1) / projR[0];
      const left = near * leftFov;
      const right = near * rightFov;
      const zOffset = ipd / (-leftFov + rightFov);
      const xOffset = zOffset * -leftFov;
      cameraL2.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);
      camera.translateX(xOffset);
      camera.translateZ(zOffset);
      camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);
      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();
      const near2 = near + zOffset;
      const far2 = far + zOffset;
      const left2 = left - xOffset;
      const right2 = right + (ipd - xOffset);
      const top2 = topFov * far / far2 * near2;
      const bottom2 = bottomFov * far / far2 * near2;
      camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);
    }
    function updateCamera(camera, parent) {
      if (parent === null) {
        camera.matrixWorld.copy(camera.matrix);
      } else {
        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);
      }
      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();
    }
    this.updateCamera = function(camera) {
      if (session === null) return;
      cameraVR.near = cameraR.near = cameraL.near = camera.near;
      cameraVR.far = cameraR.far = cameraL.far = camera.far;
      if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {
        session.updateRenderState({
          depthNear: cameraVR.near,
          depthFar: cameraVR.far
        });
        _currentDepthNear = cameraVR.near;
        _currentDepthFar = cameraVR.far;
      }
      const parent = camera.parent;
      const cameras2 = cameraVR.cameras;
      updateCamera(cameraVR, parent);
      for (let i = 0; i < cameras2.length; i++) {
        updateCamera(cameras2[i], parent);
      }
      cameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale);
      camera.matrix.copy(cameraVR.matrix);
      camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);
      const children = camera.children;
      for (let i = 0, l2 = children.length; i < l2; i++) {
        children[i].updateMatrixWorld(true);
      }
      if (cameras2.length === 2) {
        setProjectionFromUnion(cameraVR, cameraL, cameraR);
      } else {
        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);
      }
    };
    this.getCamera = function() {
      return cameraVR;
    };
    this.getFoveation = function() {
      if (glProjLayer === null && glBaseLayer === null) {
        return void 0;
      }
      return foveation;
    };
    this.setFoveation = function(value) {
      foveation = value;
      if (glProjLayer !== null) {
        glProjLayer.fixedFoveation = value;
      }
      if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== void 0) {
        glBaseLayer.fixedFoveation = value;
      }
    };
    this.getPlanes = function() {
      return planes;
    };
    let onAnimationFrameCallback = null;
    function onAnimationFrame(time, frame) {
      pose = frame.getViewerPose(customReferenceSpace || referenceSpace);
      xrFrame = frame;
      if (pose !== null) {
        const views = pose.views;
        if (glBaseLayer !== null) {
          renderer.setRenderTargetFramebuffer(newRenderTarget, glBaseLayer.framebuffer);
          renderer.setRenderTarget(newRenderTarget);
        }
        let cameraVRNeedsUpdate = false;
        if (views.length !== cameraVR.cameras.length) {
          cameraVR.cameras.length = 0;
          cameraVRNeedsUpdate = true;
        }
        for (let i = 0; i < views.length; i++) {
          const view = views[i];
          let viewport = null;
          if (glBaseLayer !== null) {
            viewport = glBaseLayer.getViewport(view);
          } else {
            const glSubImage = glBinding.getViewSubImage(glProjLayer, view);
            viewport = glSubImage.viewport;
            if (i === 0) {
              renderer.setRenderTargetTextures(
                newRenderTarget,
                glSubImage.colorTexture,
                glProjLayer.ignoreDepthValues ? void 0 : glSubImage.depthStencilTexture
              );
              renderer.setRenderTarget(newRenderTarget);
            }
          }
          let camera = cameras[i];
          if (camera === void 0) {
            camera = new PerspectiveCamera();
            camera.layers.enable(i);
            camera.viewport = new Vector4();
            cameras[i] = camera;
          }
          camera.matrix.fromArray(view.transform.matrix);
          camera.projectionMatrix.fromArray(view.projectionMatrix);
          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);
          if (i === 0) {
            cameraVR.matrix.copy(camera.matrix);
          }
          if (cameraVRNeedsUpdate === true) {
            cameraVR.cameras.push(camera);
          }
        }
      }
      for (let i = 0; i < controllers.length; i++) {
        const inputSource = controllerInputSources[i];
        const controller = controllers[i];
        if (inputSource !== null && controller !== void 0) {
          controller.update(inputSource, frame, customReferenceSpace || referenceSpace);
        }
      }
      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);
      if (frame.detectedPlanes) {
        scope.dispatchEvent({ type: "planesdetected", data: frame.detectedPlanes });
        let planesToRemove = null;
        for (const plane of planes) {
          if (!frame.detectedPlanes.has(plane)) {
            if (planesToRemove === null) {
              planesToRemove = [];
            }
            planesToRemove.push(plane);
          }
        }
        if (planesToRemove !== null) {
          for (const plane of planesToRemove) {
            planes.delete(plane);
            planesLastChangedTimes.delete(plane);
            scope.dispatchEvent({ type: "planeremoved", data: plane });
          }
        }
        for (const plane of frame.detectedPlanes) {
          if (!planes.has(plane)) {
            planes.add(plane);
            planesLastChangedTimes.set(plane, frame.lastChangedTime);
            scope.dispatchEvent({ type: "planeadded", data: plane });
          } else {
            const lastKnownTime = planesLastChangedTimes.get(plane);
            if (plane.lastChangedTime > lastKnownTime) {
              planesLastChangedTimes.set(plane, plane.lastChangedTime);
              scope.dispatchEvent({ type: "planechanged", data: plane });
            }
          }
        }
      }
      xrFrame = null;
    }
    const animation = new WebGLAnimation();
    animation.setAnimationLoop(onAnimationFrame);
    this.setAnimationLoop = function(callback) {
      onAnimationFrameCallback = callback;
    };
    this.dispose = function() {
    };
  }
}
function WebGLMaterials(renderer, properties) {
  function refreshFogUniforms(uniforms, fog) {
    fog.color.getRGB(uniforms.fogColor.value, getUnlitUniformColorSpace(renderer));
    if (fog.isFog) {
      uniforms.fogNear.value = fog.near;
      uniforms.fogFar.value = fog.far;
    } else if (fog.isFogExp2) {
      uniforms.fogDensity.value = fog.density;
    }
  }
  function refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {
    if (material.isMeshBasicMaterial) {
      refreshUniformsCommon(uniforms, material);
    } else if (material.isMeshLambertMaterial) {
      refreshUniformsCommon(uniforms, material);
    } else if (material.isMeshToonMaterial) {
      refreshUniformsCommon(uniforms, material);
      refreshUniformsToon(uniforms, material);
    } else if (material.isMeshPhongMaterial) {
      refreshUniformsCommon(uniforms, material);
      refreshUniformsPhong(uniforms, material);
    } else if (material.isMeshStandardMaterial) {
      refreshUniformsCommon(uniforms, material);
      refreshUniformsStandard(uniforms, material);
      if (material.isMeshPhysicalMaterial) {
        refreshUniformsPhysical(uniforms, material, transmissionRenderTarget);
      }
    } else if (material.isMeshMatcapMaterial) {
      refreshUniformsCommon(uniforms, material);
      refreshUniformsMatcap(uniforms, material);
    } else if (material.isMeshDepthMaterial) {
      refreshUniformsCommon(uniforms, material);
    } else if (material.isMeshDistanceMaterial) {
      refreshUniformsCommon(uniforms, material);
      refreshUniformsDistance(uniforms, material);
    } else if (material.isMeshNormalMaterial) {
      refreshUniformsCommon(uniforms, material);
    } else if (material.isLineBasicMaterial) {
      refreshUniformsLine(uniforms, material);
      if (material.isLineDashedMaterial) {
        refreshUniformsDash(uniforms, material);
      }
    } else if (material.isPointsMaterial) {
      refreshUniformsPoints(uniforms, material, pixelRatio, height);
    } else if (material.isSpriteMaterial) {
      refreshUniformsSprites(uniforms, material);
    } else if (material.isShadowMaterial) {
      uniforms.color.value.copy(material.color);
      uniforms.opacity.value = material.opacity;
    } else if (material.isShaderMaterial) {
      material.uniformsNeedUpdate = false;
    }
  }
  function refreshUniformsCommon(uniforms, material) {
    uniforms.opacity.value = material.opacity;
    if (material.color) {
      uniforms.diffuse.value.copy(material.color);
    }
    if (material.emissive) {
      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);
    }
    if (material.map) {
      uniforms.map.value = material.map;
    }
    if (material.alphaMap) {
      uniforms.alphaMap.value = material.alphaMap;
    }
    if (material.bumpMap) {
      uniforms.bumpMap.value = material.bumpMap;
      uniforms.bumpScale.value = material.bumpScale;
      if (material.side === BackSide) uniforms.bumpScale.value *= -1;
    }
    if (material.displacementMap) {
      uniforms.displacementMap.value = material.displacementMap;
      uniforms.displacementScale.value = material.displacementScale;
      uniforms.displacementBias.value = material.displacementBias;
    }
    if (material.emissiveMap) {
      uniforms.emissiveMap.value = material.emissiveMap;
    }
    if (material.normalMap) {
      uniforms.normalMap.value = material.normalMap;
      uniforms.normalScale.value.copy(material.normalScale);
      if (material.side === BackSide) uniforms.normalScale.value.negate();
    }
    if (material.specularMap) {
      uniforms.specularMap.value = material.specularMap;
    }
    if (material.alphaTest > 0) {
      uniforms.alphaTest.value = material.alphaTest;
    }
    const envMap = properties.get(material).envMap;
    if (envMap) {
      uniforms.envMap.value = envMap;
      uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;
      uniforms.reflectivity.value = material.reflectivity;
      uniforms.ior.value = material.ior;
      uniforms.refractionRatio.value = material.refractionRatio;
    }
    if (material.lightMap) {
      uniforms.lightMap.value = material.lightMap;
      const scaleFactor = renderer.useLegacyLights === true ? Math.PI : 1;
      uniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;
    }
    if (material.aoMap) {
      uniforms.aoMap.value = material.aoMap;
      uniforms.aoMapIntensity.value = material.aoMapIntensity;
    }
    let uvScaleMap;
    if (material.map) {
      uvScaleMap = material.map;
    } else if (material.specularMap) {
      uvScaleMap = material.specularMap;
    } else if (material.displacementMap) {
      uvScaleMap = material.displacementMap;
    } else if (material.normalMap) {
      uvScaleMap = material.normalMap;
    } else if (material.bumpMap) {
      uvScaleMap = material.bumpMap;
    } else if (material.roughnessMap) {
      uvScaleMap = material.roughnessMap;
    } else if (material.metalnessMap) {
      uvScaleMap = material.metalnessMap;
    } else if (material.alphaMap) {
      uvScaleMap = material.alphaMap;
    } else if (material.emissiveMap) {
      uvScaleMap = material.emissiveMap;
    } else if (material.clearcoatMap) {
      uvScaleMap = material.clearcoatMap;
    } else if (material.clearcoatNormalMap) {
      uvScaleMap = material.clearcoatNormalMap;
    } else if (material.clearcoatRoughnessMap) {
      uvScaleMap = material.clearcoatRoughnessMap;
    } else if (material.iridescenceMap) {
      uvScaleMap = material.iridescenceMap;
    } else if (material.iridescenceThicknessMap) {
      uvScaleMap = material.iridescenceThicknessMap;
    } else if (material.specularIntensityMap) {
      uvScaleMap = material.specularIntensityMap;
    } else if (material.specularColorMap) {
      uvScaleMap = material.specularColorMap;
    } else if (material.transmissionMap) {
      uvScaleMap = material.transmissionMap;
    } else if (material.thicknessMap) {
      uvScaleMap = material.thicknessMap;
    } else if (material.sheenColorMap) {
      uvScaleMap = material.sheenColorMap;
    } else if (material.sheenRoughnessMap) {
      uvScaleMap = material.sheenRoughnessMap;
    }
    if (uvScaleMap !== void 0) {
      if (uvScaleMap.isWebGLRenderTarget) {
        uvScaleMap = uvScaleMap.texture;
      }
      if (uvScaleMap.matrixAutoUpdate === true) {
        uvScaleMap.updateMatrix();
      }
      uniforms.uvTransform.value.copy(uvScaleMap.matrix);
    }
    let uv2ScaleMap;
    if (material.aoMap) {
      uv2ScaleMap = material.aoMap;
    } else if (material.lightMap) {
      uv2ScaleMap = material.lightMap;
    }
    if (uv2ScaleMap !== void 0) {
      if (uv2ScaleMap.isWebGLRenderTarget) {
        uv2ScaleMap = uv2ScaleMap.texture;
      }
      if (uv2ScaleMap.matrixAutoUpdate === true) {
        uv2ScaleMap.updateMatrix();
      }
      uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);
    }
  }
  function refreshUniformsLine(uniforms, material) {
    uniforms.diffuse.value.copy(material.color);
    uniforms.opacity.value = material.opacity;
  }
  function refreshUniformsDash(uniforms, material) {
    uniforms.dashSize.value = material.dashSize;
    uniforms.totalSize.value = material.dashSize + material.gapSize;
    uniforms.scale.value = material.scale;
  }
  function refreshUniformsPoints(uniforms, material, pixelRatio, height) {
    uniforms.diffuse.value.copy(material.color);
    uniforms.opacity.value = material.opacity;
    uniforms.size.value = material.size * pixelRatio;
    uniforms.scale.value = height * 0.5;
    if (material.map) {
      uniforms.map.value = material.map;
    }
    if (material.alphaMap) {
      uniforms.alphaMap.value = material.alphaMap;
    }
    if (material.alphaTest > 0) {
      uniforms.alphaTest.value = material.alphaTest;
    }
    let uvScaleMap;
    if (material.map) {
      uvScaleMap = material.map;
    } else if (material.alphaMap) {
      uvScaleMap = material.alphaMap;
    }
    if (uvScaleMap !== void 0) {
      if (uvScaleMap.matrixAutoUpdate === true) {
        uvScaleMap.updateMatrix();
      }
      uniforms.uvTransform.value.copy(uvScaleMap.matrix);
    }
  }
  function refreshUniformsSprites(uniforms, material) {
    uniforms.diffuse.value.copy(material.color);
    uniforms.opacity.value = material.opacity;
    uniforms.rotation.value = material.rotation;
    if (material.map) {
      uniforms.map.value = material.map;
    }
    if (material.alphaMap) {
      uniforms.alphaMap.value = material.alphaMap;
    }
    if (material.alphaTest > 0) {
      uniforms.alphaTest.value = material.alphaTest;
    }
    let uvScaleMap;
    if (material.map) {
      uvScaleMap = material.map;
    } else if (material.alphaMap) {
      uvScaleMap = material.alphaMap;
    }
    if (uvScaleMap !== void 0) {
      if (uvScaleMap.matrixAutoUpdate === true) {
        uvScaleMap.updateMatrix();
      }
      uniforms.uvTransform.value.copy(uvScaleMap.matrix);
    }
  }
  function refreshUniformsPhong(uniforms, material) {
    uniforms.specular.value.copy(material.specular);
    uniforms.shininess.value = Math.max(material.shininess, 1e-4);
  }
  function refreshUniformsToon(uniforms, material) {
    if (material.gradientMap) {
      uniforms.gradientMap.value = material.gradientMap;
    }
  }
  function refreshUniformsStandard(uniforms, material) {
    uniforms.roughness.value = material.roughness;
    uniforms.metalness.value = material.metalness;
    if (material.roughnessMap) {
      uniforms.roughnessMap.value = material.roughnessMap;
    }
    if (material.metalnessMap) {
      uniforms.metalnessMap.value = material.metalnessMap;
    }
    const envMap = properties.get(material).envMap;
    if (envMap) {
      uniforms.envMapIntensity.value = material.envMapIntensity;
    }
  }
  function refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {
    uniforms.ior.value = material.ior;
    if (material.sheen > 0) {
      uniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen);
      uniforms.sheenRoughness.value = material.sheenRoughness;
      if (material.sheenColorMap) {
        uniforms.sheenColorMap.value = material.sheenColorMap;
      }
      if (material.sheenRoughnessMap) {
        uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;
      }
    }
    if (material.clearcoat > 0) {
      uniforms.clearcoat.value = material.clearcoat;
      uniforms.clearcoatRoughness.value = material.clearcoatRoughness;
      if (material.clearcoatMap) {
        uniforms.clearcoatMap.value = material.clearcoatMap;
      }
      if (material.clearcoatRoughnessMap) {
        uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;
      }
      if (material.clearcoatNormalMap) {
        uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);
        uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;
        if (material.side === BackSide) {
          uniforms.clearcoatNormalScale.value.negate();
        }
      }
    }
    if (material.iridescence > 0) {
      uniforms.iridescence.value = material.iridescence;
      uniforms.iridescenceIOR.value = material.iridescenceIOR;
      uniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[0];
      uniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[1];
      if (material.iridescenceMap) {
        uniforms.iridescenceMap.value = material.iridescenceMap;
      }
      if (material.iridescenceThicknessMap) {
        uniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;
      }
    }
    if (material.transmission > 0) {
      uniforms.transmission.value = material.transmission;
      uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;
      uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);
      if (material.transmissionMap) {
        uniforms.transmissionMap.value = material.transmissionMap;
      }
      uniforms.thickness.value = material.thickness;
      if (material.thicknessMap) {
        uniforms.thicknessMap.value = material.thicknessMap;
      }
      uniforms.attenuationDistance.value = material.attenuationDistance;
      uniforms.attenuationColor.value.copy(material.attenuationColor);
    }
    uniforms.specularIntensity.value = material.specularIntensity;
    uniforms.specularColor.value.copy(material.specularColor);
    if (material.specularIntensityMap) {
      uniforms.specularIntensityMap.value = material.specularIntensityMap;
    }
    if (material.specularColorMap) {
      uniforms.specularColorMap.value = material.specularColorMap;
    }
  }
  function refreshUniformsMatcap(uniforms, material) {
    if (material.matcap) {
      uniforms.matcap.value = material.matcap;
    }
  }
  function refreshUniformsDistance(uniforms, material) {
    uniforms.referencePosition.value.copy(material.referencePosition);
    uniforms.nearDistance.value = material.nearDistance;
    uniforms.farDistance.value = material.farDistance;
  }
  return {
    refreshFogUniforms,
    refreshMaterialUniforms
  };
}
function WebGLUniformsGroups(gl2, info, capabilities, state) {
  let buffers = {};
  let updateList = {};
  let allocatedBindingPoints = [];
  const maxBindingPoints = capabilities.isWebGL2 ? gl2.getParameter(35375) : 0;
  function bind2(uniformsGroup, program) {
    const webglProgram = program.program;
    state.uniformBlockBinding(uniformsGroup, webglProgram);
  }
  function update(uniformsGroup, program) {
    let buffer = buffers[uniformsGroup.id];
    if (buffer === void 0) {
      prepareUniformsGroup(uniformsGroup);
      buffer = createBuffer(uniformsGroup);
      buffers[uniformsGroup.id] = buffer;
      uniformsGroup.addEventListener("dispose", onUniformsGroupsDispose);
    }
    const webglProgram = program.program;
    state.updateUBOMapping(uniformsGroup, webglProgram);
    const frame = info.render.frame;
    if (updateList[uniformsGroup.id] !== frame) {
      updateBufferData(uniformsGroup);
      updateList[uniformsGroup.id] = frame;
    }
  }
  function createBuffer(uniformsGroup) {
    const bindingPointIndex = allocateBindingPointIndex();
    uniformsGroup.__bindingPointIndex = bindingPointIndex;
    const buffer = gl2.createBuffer();
    const size = uniformsGroup.__size;
    const usage = uniformsGroup.usage;
    gl2.bindBuffer(35345, buffer);
    gl2.bufferData(35345, size, usage);
    gl2.bindBuffer(35345, null);
    gl2.bindBufferBase(35345, bindingPointIndex, buffer);
    return buffer;
  }
  function allocateBindingPointIndex() {
    for (let i = 0; i < maxBindingPoints; i++) {
      if (allocatedBindingPoints.indexOf(i) === -1) {
        allocatedBindingPoints.push(i);
        return i;
      }
    }
    console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.");
    return 0;
  }
  function updateBufferData(uniformsGroup) {
    const buffer = buffers[uniformsGroup.id];
    const uniforms = uniformsGroup.uniforms;
    const cache = uniformsGroup.__cache;
    gl2.bindBuffer(35345, buffer);
    for (let i = 0, il2 = uniforms.length; i < il2; i++) {
      const uniform = uniforms[i];
      if (hasUniformChanged(uniform, i, cache) === true) {
        const offset2 = uniform.__offset;
        const values = Array.isArray(uniform.value) ? uniform.value : [uniform.value];
        let arrayOffset = 0;
        for (let i2 = 0; i2 < values.length; i2++) {
          const value = values[i2];
          const info2 = getUniformSize(value);
          if (typeof value === "number") {
            uniform.__data[0] = value;
            gl2.bufferSubData(35345, offset2 + arrayOffset, uniform.__data);
          } else if (value.isMatrix3) {
            uniform.__data[0] = value.elements[0];
            uniform.__data[1] = value.elements[1];
            uniform.__data[2] = value.elements[2];
            uniform.__data[3] = value.elements[0];
            uniform.__data[4] = value.elements[3];
            uniform.__data[5] = value.elements[4];
            uniform.__data[6] = value.elements[5];
            uniform.__data[7] = value.elements[0];
            uniform.__data[8] = value.elements[6];
            uniform.__data[9] = value.elements[7];
            uniform.__data[10] = value.elements[8];
            uniform.__data[11] = value.elements[0];
          } else {
            value.toArray(uniform.__data, arrayOffset);
            arrayOffset += info2.storage / Float32Array.BYTES_PER_ELEMENT;
          }
        }
        gl2.bufferSubData(35345, offset2, uniform.__data);
      }
    }
    gl2.bindBuffer(35345, null);
  }
  function hasUniformChanged(uniform, index, cache) {
    const value = uniform.value;
    if (cache[index] === void 0) {
      if (typeof value === "number") {
        cache[index] = value;
      } else {
        const values = Array.isArray(value) ? value : [value];
        const tempValues = [];
        for (let i = 0; i < values.length; i++) {
          tempValues.push(values[i].clone());
        }
        cache[index] = tempValues;
      }
      return true;
    } else {
      if (typeof value === "number") {
        if (cache[index] !== value) {
          cache[index] = value;
          return true;
        }
      } else {
        const cachedObjects = Array.isArray(cache[index]) ? cache[index] : [cache[index]];
        const values = Array.isArray(value) ? value : [value];
        for (let i = 0; i < cachedObjects.length; i++) {
          const cachedObject = cachedObjects[i];
          if (cachedObject.equals(values[i]) === false) {
            cachedObject.copy(values[i]);
            return true;
          }
        }
      }
    }
    return false;
  }
  function prepareUniformsGroup(uniformsGroup) {
    const uniforms = uniformsGroup.uniforms;
    let offset2 = 0;
    const chunkSize = 16;
    let chunkOffset2 = 0;
    for (let i = 0, l2 = uniforms.length; i < l2; i++) {
      const uniform = uniforms[i];
      const infos = {
        boundary: 0,
        // bytes
        storage: 0
        // bytes
      };
      const values = Array.isArray(uniform.value) ? uniform.value : [uniform.value];
      for (let j2 = 0, jl2 = values.length; j2 < jl2; j2++) {
        const value = values[j2];
        const info2 = getUniformSize(value);
        infos.boundary += info2.boundary;
        infos.storage += info2.storage;
      }
      uniform.__data = new Float32Array(infos.storage / Float32Array.BYTES_PER_ELEMENT);
      uniform.__offset = offset2;
      if (i > 0) {
        chunkOffset2 = offset2 % chunkSize;
        const remainingSizeInChunk = chunkSize - chunkOffset2;
        if (chunkOffset2 !== 0 && remainingSizeInChunk - infos.boundary < 0) {
          offset2 += chunkSize - chunkOffset2;
          uniform.__offset = offset2;
        }
      }
      offset2 += infos.storage;
    }
    chunkOffset2 = offset2 % chunkSize;
    if (chunkOffset2 > 0) offset2 += chunkSize - chunkOffset2;
    uniformsGroup.__size = offset2;
    uniformsGroup.__cache = {};
    return this;
  }
  function getUniformSize(value) {
    const info2 = {
      boundary: 0,
      // bytes
      storage: 0
      // bytes
    };
    if (typeof value === "number") {
      info2.boundary = 4;
      info2.storage = 4;
    } else if (value.isVector2) {
      info2.boundary = 8;
      info2.storage = 8;
    } else if (value.isVector3 || value.isColor) {
      info2.boundary = 16;
      info2.storage = 12;
    } else if (value.isVector4) {
      info2.boundary = 16;
      info2.storage = 16;
    } else if (value.isMatrix3) {
      info2.boundary = 48;
      info2.storage = 48;
    } else if (value.isMatrix4) {
      info2.boundary = 64;
      info2.storage = 64;
    } else if (value.isTexture) {
      console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.");
    } else {
      console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", value);
    }
    return info2;
  }
  function onUniformsGroupsDispose(event) {
    const uniformsGroup = event.target;
    uniformsGroup.removeEventListener("dispose", onUniformsGroupsDispose);
    const index = allocatedBindingPoints.indexOf(uniformsGroup.__bindingPointIndex);
    allocatedBindingPoints.splice(index, 1);
    gl2.deleteBuffer(buffers[uniformsGroup.id]);
    delete buffers[uniformsGroup.id];
    delete updateList[uniformsGroup.id];
  }
  function dispose() {
    for (const id2 in buffers) {
      gl2.deleteBuffer(buffers[id2]);
    }
    allocatedBindingPoints = [];
    buffers = {};
    updateList = {};
  }
  return {
    bind: bind2,
    update,
    dispose
  };
}
function createCanvasElement() {
  const canvas = createElementNS("canvas");
  canvas.style.display = "block";
  return canvas;
}
function WebGLRenderer(parameters = {}) {
  this.isWebGLRenderer = true;
  const _canvas2 = parameters.canvas !== void 0 ? parameters.canvas : createCanvasElement(), _context = parameters.context !== void 0 ? parameters.context : null, _depth = parameters.depth !== void 0 ? parameters.depth : true, _stencil = parameters.stencil !== void 0 ? parameters.stencil : true, _antialias = parameters.antialias !== void 0 ? parameters.antialias : false, _premultipliedAlpha = parameters.premultipliedAlpha !== void 0 ? parameters.premultipliedAlpha : true, _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== void 0 ? parameters.preserveDrawingBuffer : false, _powerPreference = parameters.powerPreference !== void 0 ? parameters.powerPreference : "default", _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== void 0 ? parameters.failIfMajorPerformanceCaveat : false;
  let _alpha;
  if (_context !== null) {
    _alpha = _context.getContextAttributes().alpha;
  } else {
    _alpha = parameters.alpha !== void 0 ? parameters.alpha : false;
  }
  let currentRenderList = null;
  let currentRenderState = null;
  const renderListStack = [];
  const renderStateStack = [];
  this.domElement = _canvas2;
  this.debug = {
    /**
     * Enables error checking and reporting when shader programs are being compiled
     * @type {boolean}
     */
    checkShaderErrors: true
  };
  this.autoClear = true;
  this.autoClearColor = true;
  this.autoClearDepth = true;
  this.autoClearStencil = true;
  this.sortObjects = true;
  this.clippingPlanes = [];
  this.localClippingEnabled = false;
  this.outputEncoding = LinearEncoding;
  this.useLegacyLights = true;
  this.toneMapping = NoToneMapping;
  this.toneMappingExposure = 1;
  const _this = this;
  let _isContextLost = false;
  let _currentActiveCubeFace = 0;
  let _currentActiveMipmapLevel = 0;
  let _currentRenderTarget = null;
  let _currentMaterialId = -1;
  let _currentCamera = null;
  const _currentViewport = new Vector4();
  const _currentScissor = new Vector4();
  let _currentScissorTest = null;
  let _width = _canvas2.width;
  let _height = _canvas2.height;
  let _pixelRatio = 1;
  let _opaqueSort = null;
  let _transparentSort = null;
  const _viewport = new Vector4(0, 0, _width, _height);
  const _scissor = new Vector4(0, 0, _width, _height);
  let _scissorTest = false;
  const _frustum = new Frustum();
  let _clippingEnabled = false;
  let _localClippingEnabled = false;
  let _transmissionRenderTarget = null;
  const _projScreenMatrix = new Matrix4();
  const _vector3 = new Vector3();
  const _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };
  function getTargetPixelRatio() {
    return _currentRenderTarget === null ? _pixelRatio : 1;
  }
  let _gl = _context;
  function getContext(contextNames, contextAttributes) {
    for (let i = 0; i < contextNames.length; i++) {
      const contextName = contextNames[i];
      const context = _canvas2.getContext(contextName, contextAttributes);
      if (context !== null) return context;
    }
    return null;
  }
  try {
    const contextAttributes = {
      alpha: true,
      depth: _depth,
      stencil: _stencil,
      antialias: _antialias,
      premultipliedAlpha: _premultipliedAlpha,
      preserveDrawingBuffer: _preserveDrawingBuffer,
      powerPreference: _powerPreference,
      failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat
    };
    if ("setAttribute" in _canvas2) _canvas2.setAttribute("data-engine", `three.js r${REVISION}`);
    _canvas2.addEventListener("webglcontextlost", onContextLost, false);
    _canvas2.addEventListener("webglcontextrestored", onContextRestore, false);
    _canvas2.addEventListener("webglcontextcreationerror", onContextCreationError, false);
    if (_gl === null) {
      const contextNames = ["webgl2", "webgl", "experimental-webgl"];
      if (_this.isWebGL1Renderer === true) {
        contextNames.shift();
      }
      _gl = getContext(contextNames, contextAttributes);
      if (_gl === null) {
        if (getContext(contextNames)) {
          throw new Error("Error creating WebGL context with your selected attributes.");
        } else {
          throw new Error("Error creating WebGL context.");
        }
      }
    }
    if (_gl.getShaderPrecisionFormat === void 0) {
      _gl.getShaderPrecisionFormat = function() {
        return { "rangeMin": 1, "rangeMax": 1, "precision": 1 };
      };
    }
  } catch (error) {
    console.error("THREE.WebGLRenderer: " + error.message);
    throw error;
  }
  let extensions, capabilities, state, info;
  let properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;
  let programCache, materials, renderLists, renderStates, clipping, shadowMap;
  let background, morphtargets, bufferRenderer, indexedBufferRenderer;
  let utils2, bindingStates, uniformsGroups;
  function initGLContext() {
    extensions = new WebGLExtensions(_gl);
    capabilities = new WebGLCapabilities(_gl, extensions, parameters);
    extensions.init(capabilities);
    utils2 = new WebGLUtils(_gl, extensions, capabilities);
    state = new WebGLState(_gl, extensions, capabilities);
    info = new WebGLInfo();
    properties = new WebGLProperties();
    textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils2, info);
    cubemaps = new WebGLCubeMaps(_this);
    cubeuvmaps = new WebGLCubeUVMaps(_this);
    attributes = new WebGLAttributes(_gl, capabilities);
    bindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);
    geometries = new WebGLGeometries(_gl, attributes, info, bindingStates);
    objects = new WebGLObjects(_gl, geometries, attributes, info);
    morphtargets = new WebGLMorphtargets(_gl, capabilities, textures);
    clipping = new WebGLClipping(properties);
    programCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);
    materials = new WebGLMaterials(_this, properties);
    renderLists = new WebGLRenderLists();
    renderStates = new WebGLRenderStates(extensions, capabilities);
    background = new WebGLBackground(_this, cubemaps, cubeuvmaps, state, objects, _alpha, _premultipliedAlpha);
    shadowMap = new WebGLShadowMap(_this, objects, capabilities);
    uniformsGroups = new WebGLUniformsGroups(_gl, info, capabilities, state);
    bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);
    indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);
    info.programs = programCache.programs;
    _this.capabilities = capabilities;
    _this.extensions = extensions;
    _this.properties = properties;
    _this.renderLists = renderLists;
    _this.shadowMap = shadowMap;
    _this.state = state;
    _this.info = info;
  }
  initGLContext();
  const xr = new WebXRManager(_this, _gl);
  this.xr = xr;
  this.getContext = function() {
    return _gl;
  };
  this.getContextAttributes = function() {
    return _gl.getContextAttributes();
  };
  this.forceContextLoss = function() {
    const extension = extensions.get("WEBGL_lose_context");
    if (extension) extension.loseContext();
  };
  this.forceContextRestore = function() {
    const extension = extensions.get("WEBGL_lose_context");
    if (extension) extension.restoreContext();
  };
  this.getPixelRatio = function() {
    return _pixelRatio;
  };
  this.setPixelRatio = function(value) {
    if (value === void 0) return;
    _pixelRatio = value;
    this.setSize(_width, _height, false);
  };
  this.getSize = function(target) {
    return target.set(_width, _height);
  };
  this.setSize = function(width, height, updateStyle = true) {
    if (xr.isPresenting) {
      console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
      return;
    }
    _width = width;
    _height = height;
    _canvas2.width = Math.floor(width * _pixelRatio);
    _canvas2.height = Math.floor(height * _pixelRatio);
    if (updateStyle === true) {
      _canvas2.style.width = width + "px";
      _canvas2.style.height = height + "px";
    }
    this.setViewport(0, 0, width, height);
  };
  this.getDrawingBufferSize = function(target) {
    return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();
  };
  this.setDrawingBufferSize = function(width, height, pixelRatio) {
    _width = width;
    _height = height;
    _pixelRatio = pixelRatio;
    _canvas2.width = Math.floor(width * pixelRatio);
    _canvas2.height = Math.floor(height * pixelRatio);
    this.setViewport(0, 0, width, height);
  };
  this.getCurrentViewport = function(target) {
    return target.copy(_currentViewport);
  };
  this.getViewport = function(target) {
    return target.copy(_viewport);
  };
  this.setViewport = function(x2, y2, width, height) {
    if (x2.isVector4) {
      _viewport.set(x2.x, x2.y, x2.z, x2.w);
    } else {
      _viewport.set(x2, y2, width, height);
    }
    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());
  };
  this.getScissor = function(target) {
    return target.copy(_scissor);
  };
  this.setScissor = function(x2, y2, width, height) {
    if (x2.isVector4) {
      _scissor.set(x2.x, x2.y, x2.z, x2.w);
    } else {
      _scissor.set(x2, y2, width, height);
    }
    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());
  };
  this.getScissorTest = function() {
    return _scissorTest;
  };
  this.setScissorTest = function(boolean) {
    state.setScissorTest(_scissorTest = boolean);
  };
  this.setOpaqueSort = function(method) {
    _opaqueSort = method;
  };
  this.setTransparentSort = function(method) {
    _transparentSort = method;
  };
  this.getClearColor = function(target) {
    return target.copy(background.getClearColor());
  };
  this.setClearColor = function() {
    background.setClearColor.apply(background, arguments);
  };
  this.getClearAlpha = function() {
    return background.getClearAlpha();
  };
  this.setClearAlpha = function() {
    background.setClearAlpha.apply(background, arguments);
  };
  this.clear = function(color = true, depth = true, stencil = true) {
    let bits = 0;
    if (color) bits |= 16384;
    if (depth) bits |= 256;
    if (stencil) bits |= 1024;
    _gl.clear(bits);
  };
  this.clearColor = function() {
    this.clear(true, false, false);
  };
  this.clearDepth = function() {
    this.clear(false, true, false);
  };
  this.clearStencil = function() {
    this.clear(false, false, true);
  };
  this.dispose = function() {
    _canvas2.removeEventListener("webglcontextlost", onContextLost, false);
    _canvas2.removeEventListener("webglcontextrestored", onContextRestore, false);
    _canvas2.removeEventListener("webglcontextcreationerror", onContextCreationError, false);
    renderLists.dispose();
    renderStates.dispose();
    properties.dispose();
    cubemaps.dispose();
    cubeuvmaps.dispose();
    objects.dispose();
    bindingStates.dispose();
    uniformsGroups.dispose();
    programCache.dispose();
    xr.dispose();
    xr.removeEventListener("sessionstart", onXRSessionStart);
    xr.removeEventListener("sessionend", onXRSessionEnd);
    if (_transmissionRenderTarget) {
      _transmissionRenderTarget.dispose();
      _transmissionRenderTarget = null;
    }
    animation.stop();
  };
  function onContextLost(event) {
    event.preventDefault();
    console.log("THREE.WebGLRenderer: Context Lost.");
    _isContextLost = true;
  }
  function onContextRestore() {
    console.log("THREE.WebGLRenderer: Context Restored.");
    _isContextLost = false;
    const infoAutoReset = info.autoReset;
    const shadowMapEnabled = shadowMap.enabled;
    const shadowMapAutoUpdate = shadowMap.autoUpdate;
    const shadowMapNeedsUpdate = shadowMap.needsUpdate;
    const shadowMapType = shadowMap.type;
    initGLContext();
    info.autoReset = infoAutoReset;
    shadowMap.enabled = shadowMapEnabled;
    shadowMap.autoUpdate = shadowMapAutoUpdate;
    shadowMap.needsUpdate = shadowMapNeedsUpdate;
    shadowMap.type = shadowMapType;
  }
  function onContextCreationError(event) {
    console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", event.statusMessage);
  }
  function onMaterialDispose(event) {
    const material = event.target;
    material.removeEventListener("dispose", onMaterialDispose);
    deallocateMaterial(material);
  }
  function deallocateMaterial(material) {
    releaseMaterialProgramReferences(material);
    properties.remove(material);
  }
  function releaseMaterialProgramReferences(material) {
    const programs = properties.get(material).programs;
    if (programs !== void 0) {
      programs.forEach(function(program) {
        programCache.releaseProgram(program);
      });
      if (material.isShaderMaterial) {
        programCache.releaseShaderCache(material);
      }
    }
  }
  this.renderBufferDirect = function(camera, scene, geometry, material, object2, group) {
    if (scene === null) scene = _emptyScene;
    const frontFaceCW = object2.isMesh && object2.matrixWorld.determinant() < 0;
    const program = setProgram(camera, scene, geometry, material, object2);
    state.setMaterial(material, frontFaceCW);
    let index = geometry.index;
    let rangeFactor = 1;
    if (material.wireframe === true) {
      index = geometries.getWireframeAttribute(geometry);
      rangeFactor = 2;
    }
    const drawRange = geometry.drawRange;
    const position = geometry.attributes.position;
    let drawStart = drawRange.start * rangeFactor;
    let drawEnd = (drawRange.start + drawRange.count) * rangeFactor;
    if (group !== null) {
      drawStart = Math.max(drawStart, group.start * rangeFactor);
      drawEnd = Math.min(drawEnd, (group.start + group.count) * rangeFactor);
    }
    if (index !== null) {
      drawStart = Math.max(drawStart, 0);
      drawEnd = Math.min(drawEnd, index.count);
    } else if (position !== void 0 && position !== null) {
      drawStart = Math.max(drawStart, 0);
      drawEnd = Math.min(drawEnd, position.count);
    }
    const drawCount = drawEnd - drawStart;
    if (drawCount < 0 || drawCount === Infinity) return;
    bindingStates.setup(object2, material, program, geometry, index);
    let attribute;
    let renderer = bufferRenderer;
    if (index !== null) {
      attribute = attributes.get(index);
      renderer = indexedBufferRenderer;
      renderer.setIndex(attribute);
    }
    if (object2.isMesh) {
      if (material.wireframe === true) {
        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());
        renderer.setMode(1);
      } else {
        renderer.setMode(4);
      }
    } else if (object2.isLine) {
      let lineWidth = material.linewidth;
      if (lineWidth === void 0) lineWidth = 1;
      state.setLineWidth(lineWidth * getTargetPixelRatio());
      if (object2.isLineSegments) {
        renderer.setMode(1);
      } else if (object2.isLineLoop) {
        renderer.setMode(2);
      } else {
        renderer.setMode(3);
      }
    } else if (object2.isPoints) {
      renderer.setMode(0);
    } else if (object2.isSprite) {
      renderer.setMode(4);
    }
    if (object2.isInstancedMesh) {
      renderer.renderInstances(drawStart, drawCount, object2.count);
    } else if (geometry.isInstancedBufferGeometry) {
      const maxInstanceCount = geometry._maxInstanceCount !== void 0 ? geometry._maxInstanceCount : Infinity;
      const instanceCount = Math.min(geometry.instanceCount, maxInstanceCount);
      renderer.renderInstances(drawStart, drawCount, instanceCount);
    } else {
      renderer.render(drawStart, drawCount);
    }
  };
  this.compile = function(scene, camera) {
    function prepare(material, scene2, object2) {
      if (material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false) {
        material.side = BackSide;
        material.needsUpdate = true;
        getProgram(material, scene2, object2);
        material.side = FrontSide;
        material.needsUpdate = true;
        getProgram(material, scene2, object2);
        material.side = DoubleSide;
      } else {
        getProgram(material, scene2, object2);
      }
    }
    currentRenderState = renderStates.get(scene);
    currentRenderState.init();
    renderStateStack.push(currentRenderState);
    scene.traverseVisible(function(object2) {
      if (object2.isLight && object2.layers.test(camera.layers)) {
        currentRenderState.pushLight(object2);
        if (object2.castShadow) {
          currentRenderState.pushShadow(object2);
        }
      }
    });
    currentRenderState.setupLights(_this.useLegacyLights);
    scene.traverse(function(object2) {
      const material = object2.material;
      if (material) {
        if (Array.isArray(material)) {
          for (let i = 0; i < material.length; i++) {
            const material2 = material[i];
            prepare(material2, scene, object2);
          }
        } else {
          prepare(material, scene, object2);
        }
      }
    });
    renderStateStack.pop();
    currentRenderState = null;
  };
  let onAnimationFrameCallback = null;
  function onAnimationFrame(time) {
    if (onAnimationFrameCallback) onAnimationFrameCallback(time);
  }
  function onXRSessionStart() {
    animation.stop();
  }
  function onXRSessionEnd() {
    animation.start();
  }
  const animation = new WebGLAnimation();
  animation.setAnimationLoop(onAnimationFrame);
  if (typeof self !== "undefined") animation.setContext(self);
  this.setAnimationLoop = function(callback) {
    onAnimationFrameCallback = callback;
    xr.setAnimationLoop(callback);
    callback === null ? animation.stop() : animation.start();
  };
  xr.addEventListener("sessionstart", onXRSessionStart);
  xr.addEventListener("sessionend", onXRSessionEnd);
  this.render = function(scene, camera) {
    if (camera !== void 0 && camera.isCamera !== true) {
      console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
      return;
    }
    if (_isContextLost === true) return;
    if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();
    if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();
    if (xr.enabled === true && xr.isPresenting === true) {
      if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);
      camera = xr.getCamera();
    }
    if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);
    currentRenderState = renderStates.get(scene, renderStateStack.length);
    currentRenderState.init();
    renderStateStack.push(currentRenderState);
    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);
    _frustum.setFromProjectionMatrix(_projScreenMatrix);
    _localClippingEnabled = this.localClippingEnabled;
    _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled);
    currentRenderList = renderLists.get(scene, renderListStack.length);
    currentRenderList.init();
    renderListStack.push(currentRenderList);
    projectObject(scene, camera, 0, _this.sortObjects);
    currentRenderList.finish();
    if (_this.sortObjects === true) {
      currentRenderList.sort(_opaqueSort, _transparentSort);
    }
    if (_clippingEnabled === true) clipping.beginShadows();
    const shadowsArray = currentRenderState.state.shadowsArray;
    shadowMap.render(shadowsArray, scene, camera);
    if (_clippingEnabled === true) clipping.endShadows();
    if (this.info.autoReset === true) this.info.reset();
    background.render(currentRenderList, scene);
    currentRenderState.setupLights(_this.useLegacyLights);
    if (camera.isArrayCamera) {
      const cameras = camera.cameras;
      for (let i = 0, l2 = cameras.length; i < l2; i++) {
        const camera2 = cameras[i];
        renderScene(currentRenderList, scene, camera2, camera2.viewport);
      }
    } else {
      renderScene(currentRenderList, scene, camera);
    }
    if (_currentRenderTarget !== null) {
      textures.updateMultisampleRenderTarget(_currentRenderTarget);
      textures.updateRenderTargetMipmap(_currentRenderTarget);
    }
    if (scene.isScene === true) scene.onAfterRender(_this, scene, camera);
    bindingStates.resetDefaultState();
    _currentMaterialId = -1;
    _currentCamera = null;
    renderStateStack.pop();
    if (renderStateStack.length > 0) {
      currentRenderState = renderStateStack[renderStateStack.length - 1];
    } else {
      currentRenderState = null;
    }
    renderListStack.pop();
    if (renderListStack.length > 0) {
      currentRenderList = renderListStack[renderListStack.length - 1];
    } else {
      currentRenderList = null;
    }
  };
  function projectObject(object2, camera, groupOrder, sortObjects) {
    if (object2.visible === false) return;
    const visible = object2.layers.test(camera.layers);
    if (visible) {
      if (object2.isGroup) {
        groupOrder = object2.renderOrder;
      } else if (object2.isLOD) {
        if (object2.autoUpdate === true) object2.update(camera);
      } else if (object2.isLight) {
        currentRenderState.pushLight(object2);
        if (object2.castShadow) {
          currentRenderState.pushShadow(object2);
        }
      } else if (object2.isSprite) {
        if (!object2.frustumCulled || _frustum.intersectsSprite(object2)) {
          if (sortObjects) {
            _vector3.setFromMatrixPosition(object2.matrixWorld).applyMatrix4(_projScreenMatrix);
          }
          const geometry = objects.update(object2);
          const material = object2.material;
          if (material.visible) {
            currentRenderList.push(object2, geometry, material, groupOrder, _vector3.z, null);
          }
        }
      } else if (object2.isMesh || object2.isLine || object2.isPoints) {
        if (object2.isSkinnedMesh) {
          if (object2.skeleton.frame !== info.render.frame) {
            object2.skeleton.update();
            object2.skeleton.frame = info.render.frame;
          }
        }
        if (!object2.frustumCulled || _frustum.intersectsObject(object2)) {
          if (sortObjects) {
            _vector3.setFromMatrixPosition(object2.matrixWorld).applyMatrix4(_projScreenMatrix);
          }
          const geometry = objects.update(object2);
          const material = object2.material;
          if (Array.isArray(material)) {
            const groups = geometry.groups;
            for (let i = 0, l2 = groups.length; i < l2; i++) {
              const group = groups[i];
              const groupMaterial = material[group.materialIndex];
              if (groupMaterial && groupMaterial.visible) {
                currentRenderList.push(object2, geometry, groupMaterial, groupOrder, _vector3.z, group);
              }
            }
          } else if (material.visible) {
            currentRenderList.push(object2, geometry, material, groupOrder, _vector3.z, null);
          }
        }
      }
    }
    const children = object2.children;
    for (let i = 0, l2 = children.length; i < l2; i++) {
      projectObject(children[i], camera, groupOrder, sortObjects);
    }
  }
  function renderScene(currentRenderList2, scene, camera, viewport) {
    const opaqueObjects = currentRenderList2.opaque;
    const transmissiveObjects = currentRenderList2.transmissive;
    const transparentObjects = currentRenderList2.transparent;
    currentRenderState.setupLightsView(camera);
    if (_clippingEnabled === true) clipping.setGlobalState(_this.clippingPlanes, camera);
    if (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);
    if (viewport) state.viewport(_currentViewport.copy(viewport));
    if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);
    if (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);
    if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);
    state.buffers.depth.setTest(true);
    state.buffers.depth.setMask(true);
    state.buffers.color.setMask(true);
    state.setPolygonOffset(false);
  }
  function renderTransmissionPass(opaqueObjects, scene, camera) {
    const isWebGL2 = capabilities.isWebGL2;
    if (_transmissionRenderTarget === null) {
      _transmissionRenderTarget = new WebGLRenderTarget(1024, 1024, {
        generateMipmaps: true,
        type: extensions.has("EXT_color_buffer_half_float") ? HalfFloatType : UnsignedByteType,
        minFilter: LinearMipmapLinearFilter,
        samples: isWebGL2 && _antialias === true ? 4 : 0
      });
    }
    const currentRenderTarget = _this.getRenderTarget();
    _this.setRenderTarget(_transmissionRenderTarget);
    _this.clear();
    const currentToneMapping = _this.toneMapping;
    _this.toneMapping = NoToneMapping;
    renderObjects(opaqueObjects, scene, camera);
    _this.toneMapping = currentToneMapping;
    textures.updateMultisampleRenderTarget(_transmissionRenderTarget);
    textures.updateRenderTargetMipmap(_transmissionRenderTarget);
    _this.setRenderTarget(currentRenderTarget);
  }
  function renderObjects(renderList, scene, camera) {
    const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;
    for (let i = 0, l2 = renderList.length; i < l2; i++) {
      const renderItem = renderList[i];
      const object2 = renderItem.object;
      const geometry = renderItem.geometry;
      const material = overrideMaterial === null ? renderItem.material : overrideMaterial;
      const group = renderItem.group;
      if (object2.layers.test(camera.layers)) {
        renderObject(object2, scene, camera, geometry, material, group);
      }
    }
  }
  function renderObject(object2, scene, camera, geometry, material, group) {
    object2.onBeforeRender(_this, scene, camera, geometry, material, group);
    object2.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object2.matrixWorld);
    object2.normalMatrix.getNormalMatrix(object2.modelViewMatrix);
    material.onBeforeRender(_this, scene, camera, geometry, object2, group);
    if (material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false) {
      material.side = BackSide;
      material.needsUpdate = true;
      _this.renderBufferDirect(camera, scene, geometry, material, object2, group);
      material.side = FrontSide;
      material.needsUpdate = true;
      _this.renderBufferDirect(camera, scene, geometry, material, object2, group);
      material.side = DoubleSide;
    } else {
      _this.renderBufferDirect(camera, scene, geometry, material, object2, group);
    }
    object2.onAfterRender(_this, scene, camera, geometry, material, group);
  }
  function getProgram(material, scene, object2) {
    if (scene.isScene !== true) scene = _emptyScene;
    const materialProperties = properties.get(material);
    const lights = currentRenderState.state.lights;
    const shadowsArray = currentRenderState.state.shadowsArray;
    const lightsStateVersion = lights.state.version;
    const parameters2 = programCache.getParameters(material, lights.state, shadowsArray, scene, object2);
    const programCacheKey = programCache.getProgramCacheKey(parameters2);
    let programs = materialProperties.programs;
    materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;
    materialProperties.fog = scene.fog;
    materialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);
    if (programs === void 0) {
      material.addEventListener("dispose", onMaterialDispose);
      programs = /* @__PURE__ */ new Map();
      materialProperties.programs = programs;
    }
    let program = programs.get(programCacheKey);
    if (program !== void 0) {
      if (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {
        updateCommonMaterialProperties(material, parameters2);
        return program;
      }
    } else {
      parameters2.uniforms = programCache.getUniforms(material);
      material.onBuild(object2, parameters2, _this);
      material.onBeforeCompile(parameters2, _this);
      program = programCache.acquireProgram(parameters2, programCacheKey);
      programs.set(programCacheKey, program);
      materialProperties.uniforms = parameters2.uniforms;
    }
    const uniforms = materialProperties.uniforms;
    if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {
      uniforms.clippingPlanes = clipping.uniform;
    }
    updateCommonMaterialProperties(material, parameters2);
    materialProperties.needsLights = materialNeedsLights(material);
    materialProperties.lightsStateVersion = lightsStateVersion;
    if (materialProperties.needsLights) {
      uniforms.ambientLightColor.value = lights.state.ambient;
      uniforms.lightProbe.value = lights.state.probe;
      uniforms.directionalLights.value = lights.state.directional;
      uniforms.directionalLightShadows.value = lights.state.directionalShadow;
      uniforms.spotLights.value = lights.state.spot;
      uniforms.spotLightShadows.value = lights.state.spotShadow;
      uniforms.rectAreaLights.value = lights.state.rectArea;
      uniforms.ltc_1.value = lights.state.rectAreaLTC1;
      uniforms.ltc_2.value = lights.state.rectAreaLTC2;
      uniforms.pointLights.value = lights.state.point;
      uniforms.pointLightShadows.value = lights.state.pointShadow;
      uniforms.hemisphereLights.value = lights.state.hemi;
      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;
      uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;
      uniforms.spotShadowMap.value = lights.state.spotShadowMap;
      uniforms.spotLightMatrix.value = lights.state.spotLightMatrix;
      uniforms.spotLightMap.value = lights.state.spotLightMap;
      uniforms.pointShadowMap.value = lights.state.pointShadowMap;
      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;
    }
    const progUniforms = program.getUniforms();
    const uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);
    materialProperties.currentProgram = program;
    materialProperties.uniformsList = uniformsList;
    return program;
  }
  function updateCommonMaterialProperties(material, parameters2) {
    const materialProperties = properties.get(material);
    materialProperties.outputEncoding = parameters2.outputEncoding;
    materialProperties.instancing = parameters2.instancing;
    materialProperties.skinning = parameters2.skinning;
    materialProperties.morphTargets = parameters2.morphTargets;
    materialProperties.morphNormals = parameters2.morphNormals;
    materialProperties.morphColors = parameters2.morphColors;
    materialProperties.morphTargetsCount = parameters2.morphTargetsCount;
    materialProperties.numClippingPlanes = parameters2.numClippingPlanes;
    materialProperties.numIntersection = parameters2.numClipIntersection;
    materialProperties.vertexAlphas = parameters2.vertexAlphas;
    materialProperties.vertexTangents = parameters2.vertexTangents;
    materialProperties.toneMapping = parameters2.toneMapping;
  }
  function setProgram(camera, scene, geometry, material, object2) {
    if (scene.isScene !== true) scene = _emptyScene;
    textures.resetTextureUnits();
    const fog = scene.fog;
    const environment = material.isMeshStandardMaterial ? scene.environment : null;
    const encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding;
    const envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);
    const vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;
    const vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;
    const morphTargets = !!geometry.morphAttributes.position;
    const morphNormals = !!geometry.morphAttributes.normal;
    const morphColors = !!geometry.morphAttributes.color;
    const toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;
    const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;
    const morphTargetsCount = morphAttribute !== void 0 ? morphAttribute.length : 0;
    const materialProperties = properties.get(material);
    const lights = currentRenderState.state.lights;
    if (_clippingEnabled === true) {
      if (_localClippingEnabled === true || camera !== _currentCamera) {
        const useCache = camera === _currentCamera && material.id === _currentMaterialId;
        clipping.setState(material, camera, useCache);
      }
    }
    let needsProgramChange = false;
    if (material.version === materialProperties.__version) {
      if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {
        needsProgramChange = true;
      } else if (materialProperties.outputEncoding !== encoding) {
        needsProgramChange = true;
      } else if (object2.isInstancedMesh && materialProperties.instancing === false) {
        needsProgramChange = true;
      } else if (!object2.isInstancedMesh && materialProperties.instancing === true) {
        needsProgramChange = true;
      } else if (object2.isSkinnedMesh && materialProperties.skinning === false) {
        needsProgramChange = true;
      } else if (!object2.isSkinnedMesh && materialProperties.skinning === true) {
        needsProgramChange = true;
      } else if (materialProperties.envMap !== envMap) {
        needsProgramChange = true;
      } else if (material.fog === true && materialProperties.fog !== fog) {
        needsProgramChange = true;
      } else if (materialProperties.numClippingPlanes !== void 0 && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {
        needsProgramChange = true;
      } else if (materialProperties.vertexAlphas !== vertexAlphas) {
        needsProgramChange = true;
      } else if (materialProperties.vertexTangents !== vertexTangents) {
        needsProgramChange = true;
      } else if (materialProperties.morphTargets !== morphTargets) {
        needsProgramChange = true;
      } else if (materialProperties.morphNormals !== morphNormals) {
        needsProgramChange = true;
      } else if (materialProperties.morphColors !== morphColors) {
        needsProgramChange = true;
      } else if (materialProperties.toneMapping !== toneMapping) {
        needsProgramChange = true;
      } else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {
        needsProgramChange = true;
      }
    } else {
      needsProgramChange = true;
      materialProperties.__version = material.version;
    }
    let program = materialProperties.currentProgram;
    if (needsProgramChange === true) {
      program = getProgram(material, scene, object2);
    }
    let refreshProgram = false;
    let refreshMaterial = false;
    let refreshLights = false;
    const p_uniforms = program.getUniforms(), m_uniforms = materialProperties.uniforms;
    if (state.useProgram(program.program)) {
      refreshProgram = true;
      refreshMaterial = true;
      refreshLights = true;
    }
    if (material.id !== _currentMaterialId) {
      _currentMaterialId = material.id;
      refreshMaterial = true;
    }
    if (refreshProgram || _currentCamera !== camera) {
      p_uniforms.setValue(_gl, "projectionMatrix", camera.projectionMatrix);
      if (capabilities.logarithmicDepthBuffer) {
        p_uniforms.setValue(
          _gl,
          "logDepthBufFC",
          2 / (Math.log(camera.far + 1) / Math.LN2)
        );
      }
      if (_currentCamera !== camera) {
        _currentCamera = camera;
        refreshMaterial = true;
        refreshLights = true;
      }
      if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {
        const uCamPos = p_uniforms.map.cameraPosition;
        if (uCamPos !== void 0) {
          uCamPos.setValue(
            _gl,
            _vector3.setFromMatrixPosition(camera.matrixWorld)
          );
        }
      }
      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {
        p_uniforms.setValue(_gl, "isOrthographic", camera.isOrthographicCamera === true);
      }
      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object2.isSkinnedMesh) {
        p_uniforms.setValue(_gl, "viewMatrix", camera.matrixWorldInverse);
      }
    }
    if (object2.isSkinnedMesh) {
      p_uniforms.setOptional(_gl, object2, "bindMatrix");
      p_uniforms.setOptional(_gl, object2, "bindMatrixInverse");
      const skeleton = object2.skeleton;
      if (skeleton) {
        if (capabilities.floatVertexTextures) {
          if (skeleton.boneTexture === null) skeleton.computeBoneTexture();
          p_uniforms.setValue(_gl, "boneTexture", skeleton.boneTexture, textures);
          p_uniforms.setValue(_gl, "boneTextureSize", skeleton.boneTextureSize);
        } else {
          console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.");
        }
      }
    }
    const morphAttributes = geometry.morphAttributes;
    if (morphAttributes.position !== void 0 || morphAttributes.normal !== void 0 || morphAttributes.color !== void 0 && capabilities.isWebGL2 === true) {
      morphtargets.update(object2, geometry, program);
    }
    if (refreshMaterial || materialProperties.receiveShadow !== object2.receiveShadow) {
      materialProperties.receiveShadow = object2.receiveShadow;
      p_uniforms.setValue(_gl, "receiveShadow", object2.receiveShadow);
    }
    if (material.isMeshGouraudMaterial && material.envMap !== null) {
      m_uniforms.envMap.value = envMap;
      m_uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;
    }
    if (refreshMaterial) {
      p_uniforms.setValue(_gl, "toneMappingExposure", _this.toneMappingExposure);
      if (materialProperties.needsLights) {
        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);
      }
      if (fog && material.fog === true) {
        materials.refreshFogUniforms(m_uniforms, fog);
      }
      materials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);
      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);
    }
    if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {
      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);
      material.uniformsNeedUpdate = false;
    }
    if (material.isSpriteMaterial) {
      p_uniforms.setValue(_gl, "center", object2.center);
    }
    p_uniforms.setValue(_gl, "modelViewMatrix", object2.modelViewMatrix);
    p_uniforms.setValue(_gl, "normalMatrix", object2.normalMatrix);
    p_uniforms.setValue(_gl, "modelMatrix", object2.matrixWorld);
    if (material.isShaderMaterial || material.isRawShaderMaterial) {
      const groups = material.uniformsGroups;
      for (let i = 0, l2 = groups.length; i < l2; i++) {
        if (capabilities.isWebGL2) {
          const group = groups[i];
          uniformsGroups.update(group, program);
          uniformsGroups.bind(group, program);
        } else {
          console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");
        }
      }
    }
    return program;
  }
  function markUniformsLightsNeedsUpdate(uniforms, value) {
    uniforms.ambientLightColor.needsUpdate = value;
    uniforms.lightProbe.needsUpdate = value;
    uniforms.directionalLights.needsUpdate = value;
    uniforms.directionalLightShadows.needsUpdate = value;
    uniforms.pointLights.needsUpdate = value;
    uniforms.pointLightShadows.needsUpdate = value;
    uniforms.spotLights.needsUpdate = value;
    uniforms.spotLightShadows.needsUpdate = value;
    uniforms.rectAreaLights.needsUpdate = value;
    uniforms.hemisphereLights.needsUpdate = value;
  }
  function materialNeedsLights(material) {
    return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;
  }
  this.getActiveCubeFace = function() {
    return _currentActiveCubeFace;
  };
  this.getActiveMipmapLevel = function() {
    return _currentActiveMipmapLevel;
  };
  this.getRenderTarget = function() {
    return _currentRenderTarget;
  };
  this.setRenderTargetTextures = function(renderTarget, colorTexture, depthTexture) {
    properties.get(renderTarget.texture).__webglTexture = colorTexture;
    properties.get(renderTarget.depthTexture).__webglTexture = depthTexture;
    const renderTargetProperties = properties.get(renderTarget);
    renderTargetProperties.__hasExternalTextures = true;
    if (renderTargetProperties.__hasExternalTextures) {
      renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === void 0;
      if (!renderTargetProperties.__autoAllocateDepthBuffer) {
        if (extensions.has("WEBGL_multisampled_render_to_texture") === true) {
          console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided");
          renderTargetProperties.__useRenderToTexture = false;
        }
      }
    }
  };
  this.setRenderTargetFramebuffer = function(renderTarget, defaultFramebuffer) {
    const renderTargetProperties = properties.get(renderTarget);
    renderTargetProperties.__webglFramebuffer = defaultFramebuffer;
    renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === void 0;
  };
  this.setRenderTarget = function(renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {
    _currentRenderTarget = renderTarget;
    _currentActiveCubeFace = activeCubeFace;
    _currentActiveMipmapLevel = activeMipmapLevel;
    let useDefaultFramebuffer = true;
    let framebuffer = null;
    let isCube = false;
    let isRenderTarget3D = false;
    if (renderTarget) {
      const renderTargetProperties = properties.get(renderTarget);
      if (renderTargetProperties.__useDefaultFramebuffer !== void 0) {
        state.bindFramebuffer(36160, null);
        useDefaultFramebuffer = false;
      } else if (renderTargetProperties.__webglFramebuffer === void 0) {
        textures.setupRenderTarget(renderTarget);
      } else if (renderTargetProperties.__hasExternalTextures) {
        textures.rebindTextures(renderTarget, properties.get(renderTarget.texture).__webglTexture, properties.get(renderTarget.depthTexture).__webglTexture);
      }
      const texture = renderTarget.texture;
      if (texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture) {
        isRenderTarget3D = true;
      }
      const __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;
      if (renderTarget.isWebGLCubeRenderTarget) {
        framebuffer = __webglFramebuffer[activeCubeFace];
        isCube = true;
      } else if (capabilities.isWebGL2 && renderTarget.samples > 0 && textures.useMultisampledRTT(renderTarget) === false) {
        framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;
      } else {
        framebuffer = __webglFramebuffer;
      }
      _currentViewport.copy(renderTarget.viewport);
      _currentScissor.copy(renderTarget.scissor);
      _currentScissorTest = renderTarget.scissorTest;
    } else {
      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();
      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();
      _currentScissorTest = _scissorTest;
    }
    const framebufferBound = state.bindFramebuffer(36160, framebuffer);
    if (framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer) {
      state.drawBuffers(renderTarget, framebuffer);
    }
    state.viewport(_currentViewport);
    state.scissor(_currentScissor);
    state.setScissorTest(_currentScissorTest);
    if (isCube) {
      const textureProperties = properties.get(renderTarget.texture);
      _gl.framebufferTexture2D(36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);
    } else if (isRenderTarget3D) {
      const textureProperties = properties.get(renderTarget.texture);
      const layer = activeCubeFace || 0;
      _gl.framebufferTextureLayer(36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);
    }
    _currentMaterialId = -1;
  };
  this.readRenderTargetPixels = function(renderTarget, x2, y2, width, height, buffer, activeCubeFaceIndex) {
    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {
      console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
      return;
    }
    let framebuffer = properties.get(renderTarget).__webglFramebuffer;
    if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== void 0) {
      framebuffer = framebuffer[activeCubeFaceIndex];
    }
    if (framebuffer) {
      state.bindFramebuffer(36160, framebuffer);
      try {
        const texture = renderTarget.texture;
        const textureFormat = texture.format;
        const textureType = texture.type;
        if (textureFormat !== RGBAFormat && utils2.convert(textureFormat) !== _gl.getParameter(35739)) {
          console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
          return;
        }
        const halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has("EXT_color_buffer_half_float") || capabilities.isWebGL2 && extensions.has("EXT_color_buffer_float"));
        if (textureType !== UnsignedByteType && utils2.convert(textureType) !== _gl.getParameter(35738) && // Edge and Chrome Mac < 52 (#9513)
        !(textureType === FloatType && (capabilities.isWebGL2 || extensions.has("OES_texture_float") || extensions.has("WEBGL_color_buffer_float"))) && // Chrome Mac >= 52 and Firefox
        !halfFloatSupportedByExt) {
          console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
          return;
        }
        if (x2 >= 0 && x2 <= renderTarget.width - width && (y2 >= 0 && y2 <= renderTarget.height - height)) {
          _gl.readPixels(x2, y2, width, height, utils2.convert(textureFormat), utils2.convert(textureType), buffer);
        }
      } finally {
        const framebuffer2 = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;
        state.bindFramebuffer(36160, framebuffer2);
      }
    }
  };
  this.copyFramebufferToTexture = function(position, texture, level = 0) {
    const levelScale = Math.pow(2, -level);
    const width = Math.floor(texture.image.width * levelScale);
    const height = Math.floor(texture.image.height * levelScale);
    textures.setTexture2D(texture, 0);
    _gl.copyTexSubImage2D(3553, level, 0, 0, position.x, position.y, width, height);
    state.unbindTexture();
  };
  this.copyTextureToTexture = function(position, srcTexture, dstTexture, level = 0) {
    const width = srcTexture.image.width;
    const height = srcTexture.image.height;
    const glFormat = utils2.convert(dstTexture.format);
    const glType = utils2.convert(dstTexture.type);
    textures.setTexture2D(dstTexture, 0);
    _gl.pixelStorei(37440, dstTexture.flipY);
    _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);
    _gl.pixelStorei(3317, dstTexture.unpackAlignment);
    if (srcTexture.isDataTexture) {
      _gl.texSubImage2D(3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);
    } else {
      if (srcTexture.isCompressedTexture) {
        _gl.compressedTexSubImage2D(3553, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);
      } else {
        _gl.texSubImage2D(3553, level, position.x, position.y, glFormat, glType, srcTexture.image);
      }
    }
    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(3553);
    state.unbindTexture();
  };
  this.copyTextureToTexture3D = function(sourceBox, position, srcTexture, dstTexture, level = 0) {
    if (_this.isWebGL1Renderer) {
      console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
      return;
    }
    const width = sourceBox.max.x - sourceBox.min.x + 1;
    const height = sourceBox.max.y - sourceBox.min.y + 1;
    const depth = sourceBox.max.z - sourceBox.min.z + 1;
    const glFormat = utils2.convert(dstTexture.format);
    const glType = utils2.convert(dstTexture.type);
    let glTarget;
    if (dstTexture.isData3DTexture) {
      textures.setTexture3D(dstTexture, 0);
      glTarget = 32879;
    } else if (dstTexture.isDataArrayTexture) {
      textures.setTexture2DArray(dstTexture, 0);
      glTarget = 35866;
    } else {
      console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
      return;
    }
    _gl.pixelStorei(37440, dstTexture.flipY);
    _gl.pixelStorei(37441, dstTexture.premultiplyAlpha);
    _gl.pixelStorei(3317, dstTexture.unpackAlignment);
    const unpackRowLen = _gl.getParameter(3314);
    const unpackImageHeight = _gl.getParameter(32878);
    const unpackSkipPixels = _gl.getParameter(3316);
    const unpackSkipRows = _gl.getParameter(3315);
    const unpackSkipImages = _gl.getParameter(32877);
    const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;
    _gl.pixelStorei(3314, image.width);
    _gl.pixelStorei(32878, image.height);
    _gl.pixelStorei(3316, sourceBox.min.x);
    _gl.pixelStorei(3315, sourceBox.min.y);
    _gl.pixelStorei(32877, sourceBox.min.z);
    if (srcTexture.isDataTexture || srcTexture.isData3DTexture) {
      _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);
    } else {
      if (srcTexture.isCompressedArrayTexture) {
        console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.");
        _gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);
      } else {
        _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);
      }
    }
    _gl.pixelStorei(3314, unpackRowLen);
    _gl.pixelStorei(32878, unpackImageHeight);
    _gl.pixelStorei(3316, unpackSkipPixels);
    _gl.pixelStorei(3315, unpackSkipRows);
    _gl.pixelStorei(32877, unpackSkipImages);
    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);
    state.unbindTexture();
  };
  this.initTexture = function(texture) {
    if (texture.isCubeTexture) {
      textures.setTextureCube(texture, 0);
    } else if (texture.isData3DTexture) {
      textures.setTexture3D(texture, 0);
    } else if (texture.isDataArrayTexture || texture.isCompressedArrayTexture) {
      textures.setTexture2DArray(texture, 0);
    } else {
      textures.setTexture2D(texture, 0);
    }
    state.unbindTexture();
  };
  this.resetState = function() {
    _currentActiveCubeFace = 0;
    _currentActiveMipmapLevel = 0;
    _currentRenderTarget = null;
    state.reset();
    bindingStates.reset();
  };
  if (typeof __THREE_DEVTOOLS__ !== "undefined") {
    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
  }
}
Object.defineProperties(WebGLRenderer.prototype, {
  // @deprecated since r150
  physicallyCorrectLights: {
    get: function() {
      console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.");
      return !this.useLegacyLights;
    },
    set: function(value) {
      console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.");
      this.useLegacyLights = !value;
    }
  }
});
class WebGL1Renderer extends WebGLRenderer {
}
WebGL1Renderer.prototype.isWebGL1Renderer = true;
class Scene extends Object3D {
  constructor() {
    super();
    this.isScene = true;
    this.type = "Scene";
    this.background = null;
    this.environment = null;
    this.fog = null;
    this.backgroundBlurriness = 0;
    this.backgroundIntensity = 1;
    this.overrideMaterial = null;
    if (typeof __THREE_DEVTOOLS__ !== "undefined") {
      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
    }
  }
  copy(source, recursive) {
    super.copy(source, recursive);
    if (source.background !== null) this.background = source.background.clone();
    if (source.environment !== null) this.environment = source.environment.clone();
    if (source.fog !== null) this.fog = source.fog.clone();
    this.backgroundBlurriness = source.backgroundBlurriness;
    this.backgroundIntensity = source.backgroundIntensity;
    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();
    this.matrixAutoUpdate = source.matrixAutoUpdate;
    return this;
  }
  toJSON(meta) {
    const data = super.toJSON(meta);
    if (this.fog !== null) data.object.fog = this.fog.toJSON();
    if (this.backgroundBlurriness > 0) data.object.backgroundBlurriness = this.backgroundBlurriness;
    if (this.backgroundIntensity !== 1) data.object.backgroundIntensity = this.backgroundIntensity;
    return data;
  }
  // @deprecated
  get autoUpdate() {
    console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.");
    return this.matrixWorldAutoUpdate;
  }
  set autoUpdate(value) {
    console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.");
    this.matrixWorldAutoUpdate = value;
  }
}
class MeshStandardMaterial extends Material {
  constructor(parameters) {
    super();
    this.isMeshStandardMaterial = true;
    this.defines = { "STANDARD": "" };
    this.type = "MeshStandardMaterial";
    this.color = new Color(16777215);
    this.roughness = 1;
    this.metalness = 0;
    this.map = null;
    this.lightMap = null;
    this.lightMapIntensity = 1;
    this.aoMap = null;
    this.aoMapIntensity = 1;
    this.emissive = new Color(0);
    this.emissiveIntensity = 1;
    this.emissiveMap = null;
    this.bumpMap = null;
    this.bumpScale = 1;
    this.normalMap = null;
    this.normalMapType = TangentSpaceNormalMap;
    this.normalScale = new Vector2(1, 1);
    this.displacementMap = null;
    this.displacementScale = 1;
    this.displacementBias = 0;
    this.roughnessMap = null;
    this.metalnessMap = null;
    this.alphaMap = null;
    this.envMap = null;
    this.envMapIntensity = 1;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.wireframeLinecap = "round";
    this.wireframeLinejoin = "round";
    this.flatShading = false;
    this.fog = true;
    this.setValues(parameters);
  }
  copy(source) {
    super.copy(source);
    this.defines = { "STANDARD": "" };
    this.color.copy(source.color);
    this.roughness = source.roughness;
    this.metalness = source.metalness;
    this.map = source.map;
    this.lightMap = source.lightMap;
    this.lightMapIntensity = source.lightMapIntensity;
    this.aoMap = source.aoMap;
    this.aoMapIntensity = source.aoMapIntensity;
    this.emissive.copy(source.emissive);
    this.emissiveMap = source.emissiveMap;
    this.emissiveIntensity = source.emissiveIntensity;
    this.bumpMap = source.bumpMap;
    this.bumpScale = source.bumpScale;
    this.normalMap = source.normalMap;
    this.normalMapType = source.normalMapType;
    this.normalScale.copy(source.normalScale);
    this.displacementMap = source.displacementMap;
    this.displacementScale = source.displacementScale;
    this.displacementBias = source.displacementBias;
    this.roughnessMap = source.roughnessMap;
    this.metalnessMap = source.metalnessMap;
    this.alphaMap = source.alphaMap;
    this.envMap = source.envMap;
    this.envMapIntensity = source.envMapIntensity;
    this.wireframe = source.wireframe;
    this.wireframeLinewidth = source.wireframeLinewidth;
    this.wireframeLinecap = source.wireframeLinecap;
    this.wireframeLinejoin = source.wireframeLinejoin;
    this.flatShading = source.flatShading;
    this.fog = source.fog;
    return this;
  }
}
if (typeof __THREE_DEVTOOLS__ !== "undefined") {
  __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: {
    revision: REVISION
  } }));
}
if (typeof window !== "undefined") {
  if (window.__THREE__) {
    console.warn("WARNING: Multiple instances of Three.js being imported.");
  } else {
    window.__THREE__ = REVISION;
  }
}
const _position = new Vector3();
const _quaternion = new Quaternion();
const _scale = new Vector3();
const _matrix = new Matrix4();
const _matrix2 = new Matrix4();
class CSS3DRenderer {
  constructor(parameters = {}) {
    const _this = this;
    let _width, _height;
    let _widthHalf, _heightHalf;
    const cache = {
      camera: { fov: 0, style: "" },
      objects: /* @__PURE__ */ new WeakMap()
    };
    const domElement = parameters.element !== void 0 ? parameters.element : document.createElement("div");
    domElement.style.overflow = "hidden";
    this.domElement = domElement;
    const viewElement = document.createElement("div");
    viewElement.style.transformOrigin = "0 0";
    viewElement.style.pointerEvents = "none";
    domElement.appendChild(viewElement);
    const cameraElement = document.createElement("div");
    cameraElement.style.transformStyle = "preserve-3d";
    viewElement.appendChild(cameraElement);
    this.getSize = function() {
      return {
        width: _width,
        height: _height
      };
    };
    this.render = function(scene, camera) {
      const fov2 = camera.projectionMatrix.elements[5] * _heightHalf;
      if (cache.camera.fov !== fov2) {
        viewElement.style.perspective = camera.isPerspectiveCamera ? fov2 + "px" : "";
        cache.camera.fov = fov2;
      }
      if (camera.view && camera.view.enabled) {
        viewElement.style.transform = `translate( ${-camera.view.offsetX * (_width / camera.view.width)}px, ${-camera.view.offsetY * (_height / camera.view.height)}px )`;
        viewElement.style.transform += `scale( ${camera.view.fullWidth / camera.view.width}, ${camera.view.fullHeight / camera.view.height} )`;
      } else {
        viewElement.style.transform = "";
      }
      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();
      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();
      let tx, ty;
      if (camera.isOrthographicCamera) {
        tx = -(camera.right + camera.left) / 2;
        ty = (camera.top + camera.bottom) / 2;
      }
      const scaleByViewOffset = camera.view && camera.view.enabled ? camera.view.height / camera.view.fullHeight : 1;
      const cameraCSSMatrix = camera.isOrthographicCamera ? `scale( ${scaleByViewOffset} )scale(` + fov2 + ")translate(" + epsilon(tx) + "px," + epsilon(ty) + "px)" + getCameraCSSMatrix(camera.matrixWorldInverse) : `scale( ${scaleByViewOffset} )translateZ(` + fov2 + "px)" + getCameraCSSMatrix(camera.matrixWorldInverse);
      const style = cameraCSSMatrix + "translate(" + _widthHalf + "px," + _heightHalf + "px)";
      if (cache.camera.style !== style) {
        cameraElement.style.transform = style;
        cache.camera.style = style;
      }
      renderObject(scene, scene, camera);
    };
    this.setSize = function(width, height) {
      _width = width;
      _height = height;
      _widthHalf = _width / 2;
      _heightHalf = _height / 2;
      domElement.style.width = width + "px";
      domElement.style.height = height + "px";
      viewElement.style.width = width + "px";
      viewElement.style.height = height + "px";
      cameraElement.style.width = width + "px";
      cameraElement.style.height = height + "px";
    };
    function epsilon(value) {
      return Math.abs(value) < 1e-10 ? 0 : value;
    }
    function getCameraCSSMatrix(matrix) {
      const elements = matrix.elements;
      return "matrix3d(" + epsilon(elements[0]) + "," + epsilon(-elements[1]) + "," + epsilon(elements[2]) + "," + epsilon(elements[3]) + "," + epsilon(elements[4]) + "," + epsilon(-elements[5]) + "," + epsilon(elements[6]) + "," + epsilon(elements[7]) + "," + epsilon(elements[8]) + "," + epsilon(-elements[9]) + "," + epsilon(elements[10]) + "," + epsilon(elements[11]) + "," + epsilon(elements[12]) + "," + epsilon(-elements[13]) + "," + epsilon(elements[14]) + "," + epsilon(elements[15]) + ")";
    }
    function getObjectCSSMatrix(matrix) {
      const elements = matrix.elements;
      const matrix3d = "matrix3d(" + epsilon(elements[0]) + "," + epsilon(elements[1]) + "," + epsilon(elements[2]) + "," + epsilon(elements[3]) + "," + epsilon(-elements[4]) + "," + epsilon(-elements[5]) + "," + epsilon(-elements[6]) + "," + epsilon(-elements[7]) + "," + epsilon(elements[8]) + "," + epsilon(elements[9]) + "," + epsilon(elements[10]) + "," + epsilon(elements[11]) + "," + epsilon(elements[12]) + "," + epsilon(elements[13]) + "," + epsilon(elements[14]) + "," + epsilon(elements[15]) + ")";
      return "translate(-50%,-50%)" + matrix3d;
    }
    function renderObject(object2, scene, camera, cameraCSSMatrix) {
      if (object2.isCSS3DObject) {
        const visible = object2.visible === true && object2.layers.test(camera.layers) === true;
        object2.element.style.display = visible === true ? "" : "none";
        if (visible === true) {
          object2.onBeforeRender(_this, scene, camera);
          let style;
          if (object2.isCSS3DSprite) {
            _matrix.copy(camera.matrixWorldInverse);
            _matrix.transpose();
            if (object2.rotation2D !== 0) _matrix.multiply(_matrix2.makeRotationZ(object2.rotation2D));
            object2.matrixWorld.decompose(_position, _quaternion, _scale);
            _matrix.setPosition(_position);
            _matrix.scale(_scale);
            _matrix.elements[3] = 0;
            _matrix.elements[7] = 0;
            _matrix.elements[11] = 0;
            _matrix.elements[15] = 1;
            style = getObjectCSSMatrix(_matrix);
          } else {
            style = getObjectCSSMatrix(object2.matrixWorld);
          }
          const element = object2.element;
          const cachedObject = cache.objects.get(object2);
          if (cachedObject === void 0 || cachedObject.style !== style) {
            element.style.transform = style;
            const objectData = { style };
            cache.objects.set(object2, objectData);
          }
          if (element.parentNode !== cameraElement) {
            cameraElement.appendChild(element);
          }
          object2.onAfterRender(_this, scene, camera);
        }
      }
      for (let i = 0, l2 = object2.children.length; i < l2; i++) {
        renderObject(object2.children[i], scene, camera);
      }
    }
  }
}
const c = (a, t2) => {
  const i = 2 * Math.PI * t2 * a;
  return i / (i + 1);
}, h = (a, t2, i) => a * t2 + (1 - a) * i;
class y {
  constructor({ minCutOff: t2, beta: i }) {
    this.minCutOff = t2, this.beta = i, this.dCutOff = 1e-3, this.xPrev = null, this.dxPrev = null, this.tPrev = null, this.initialized = false;
  }
  reset() {
    this.initialized = false;
  }
  filter(t2, i) {
    if (!this.initialized)
      return this.initialized = true, this.xPrev = i, this.dxPrev = i.map(() => 0), this.tPrev = t2, i;
    const { xPrev: e, tPrev: s, dxPrev: p2 } = this, o = t2 - s, m2 = c(o, this.dCutOff), l2 = [], r2 = [], d = [];
    for (let n2 = 0; n2 < i.length; n2++) {
      l2[n2] = (i[n2] - e[n2]) / o, r2[n2] = h(m2, l2[n2], p2[n2]);
      const g = this.minCutOff + this.beta * Math.abs(r2[n2]), u2 = c(o, g);
      d[n2] = h(u2, i[n2], e[n2]);
    }
    return this.xPrev = d, this.dxPrev = r2, this.tPrev = t2, d;
  }
}
const v = `<div class="mindar-ui-overlay mindar-ui-loading">
  <div class="loader"/>
</div>
`, f = `<div class="mindar-ui-overlay mindar-ui-compatibility">
  <div class="content">
    <h1>Failed to launch :(</h1>
    <p>
      Looks like your device/browser is not compatible.
    </p>

    <br/>
    <br/>
    <p>
      Please try the following recommended browsers:
    </p>
    <p>
      For Android device - Chrome
    </p>
    <p>
      For iOS device - Safari
    </p>
  </div>
</div>
`, x$1 = `<div class="mindar-ui-overlay mindar-ui-scanning">
  <div class="scanning">
    <div class="inner">
      <div class="scanline"/>
    </div>
  </div>
</div>
`, b$1 = ".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}";
class M {
  constructor({ uiLoading: t2, uiScanning: i, uiError: e }) {
    const s = document.createElement("style");
    s.innerText = b$1, document.head.appendChild(s), t2 === "yes" ? this.loadingModal = this._loadHTML(v) : t2 !== "no" && (this.loadingModal = document.querySelector(t2)), e === "yes" ? this.compatibilityModal = this._loadHTML(f) : e !== "no" && (this.compatibilityModal = document.querySelector(e)), i === "yes" ? this.scanningMask = this._loadHTML(x$1) : i !== "no" && (this.scanningMask = document.querySelector(i)), this.hideLoading(), this.hideCompatibility(), this.hideScanning();
  }
  showLoading() {
    this.loadingModal && this.loadingModal.classList.remove("hidden");
  }
  hideLoading() {
    this.loadingModal && this.loadingModal.classList.add("hidden");
  }
  showCompatibility() {
    this.compatibilityModal && this.compatibilityModal.classList.remove("hidden");
  }
  hideCompatibility() {
    this.compatibilityModal && this.compatibilityModal.classList.add("hidden");
  }
  showScanning() {
    this.scanningMask && this.scanningMask.classList.remove("hidden");
  }
  hideScanning() {
    this.scanningMask && this.scanningMask.classList.add("hidden");
  }
  _loadHTML(t2) {
    const i = document.createElement("template");
    i.innerHTML = t2.trim();
    const e = i.content.firstChild;
    return document.getElementsByTagName("body")[0].appendChild(e), e;
  }
}
var tQ = typeof self < "u" ? self : {};
function zi(A2, I2) {
  A: {
    for (var g = ["CLOSURE_FLAGS"], E2 = tQ, D2 = 0; D2 < g.length; D2++)
      if ((E2 = E2[g[D2]]) == null) {
        g = null;
        break A;
      }
    g = E2;
  }
  return (A2 = g && g[A2]) != null ? A2 : I2;
}
function Qg() {
  throw Error("Invalid UTF8");
}
function Ai(A2, I2) {
  return I2 = String.fromCharCode.apply(null, I2), A2 == null ? I2 : A2 + I2;
}
let ZC, jB;
const J0 = typeof TextDecoder < "u";
let c0;
const Y0 = typeof TextEncoder < "u";
function vi(A2) {
  if (Y0)
    A2 = (c0 || (c0 = new TextEncoder())).encode(A2);
  else {
    let g = 0;
    const E2 = new Uint8Array(3 * A2.length);
    for (let D2 = 0; D2 < A2.length; D2++) {
      var I2 = A2.charCodeAt(D2);
      if (128 > I2)
        E2[g++] = I2;
      else {
        if (2048 > I2)
          E2[g++] = I2 >> 6 | 192;
        else {
          if (55296 <= I2 && 57343 >= I2) {
            if (56319 >= I2 && D2 < A2.length) {
              const o = A2.charCodeAt(++D2);
              if (56320 <= o && 57343 >= o) {
                I2 = 1024 * (I2 - 55296) + o - 56320 + 65536, E2[g++] = I2 >> 18 | 240, E2[g++] = I2 >> 12 & 63 | 128, E2[g++] = I2 >> 6 & 63 | 128, E2[g++] = 63 & I2 | 128;
                continue;
              }
              D2--;
            }
            I2 = 65533;
          }
          E2[g++] = I2 >> 12 | 224, E2[g++] = I2 >> 6 & 63 | 128;
        }
        E2[g++] = 63 & I2 | 128;
      }
    }
    A2 = g === E2.length ? E2 : E2.subarray(0, g);
  }
  return A2;
}
var AC, _i = zi(610401301, false), HQ = zi(572417392, true);
const Ii = tQ.navigator;
function CQ(A2) {
  return !!_i && !!AC && AC.brands.some(({ brand: I2 }) => I2 && I2.indexOf(A2) != -1);
}
function CI(A2) {
  var I2;
  return (I2 = tQ.navigator) && (I2 = I2.userAgent) || (I2 = ""), I2.indexOf(A2) != -1;
}
function mI() {
  return !!_i && !!AC && 0 < AC.brands.length;
}
function PB() {
  return mI() ? CQ("Chromium") : (CI("Chrome") || CI("CriOS")) && !(!mI() && CI("Edge")) || CI("Silk");
}
AC = Ii && Ii.userAgentData || null;
var L0 = !mI() && (CI("Trident") || CI("MSIE"));
!CI("Android") || PB(), PB(), CI("Safari") && (PB() || !mI() && CI("Coast") || !mI() && CI("Opera") || !mI() && CI("Edge") || (mI() ? CQ("Microsoft Edge") : CI("Edg/")) || mI() && CQ("Opera"));
var $i = {}, Og = null;
function t0(A2) {
  var I2 = A2.length, g = 3 * I2 / 4;
  g % 3 ? g = Math.floor(g) : "=.".indexOf(A2[I2 - 1]) != -1 && (g = "=.".indexOf(A2[I2 - 2]) != -1 ? g - 2 : g - 1);
  var E2 = new Uint8Array(g), D2 = 0;
  return function(o, s) {
    function N2(AA) {
      for (; y2 < o.length; ) {
        var T2 = o.charAt(y2++), aA = Og[T2];
        if (aA != null)
          return aA;
        if (!/^[\s\xa0]*$/.test(T2))
          throw Error("Unknown base64 encoding at char: " + T2);
      }
      return AA;
    }
    AD();
    for (var y2 = 0; ; ) {
      var U2 = N2(-1), L2 = N2(0), d = N2(64), e = N2(64);
      if (e === 64 && U2 === -1)
        break;
      s(U2 << 2 | L2 >> 4), d != 64 && (s(L2 << 4 & 240 | d >> 2), e != 64 && s(d << 6 & 192 | e));
    }
  }(A2, function(o) {
    E2[D2++] = o;
  }), D2 !== g ? E2.subarray(0, D2) : E2;
}
function AD() {
  if (!Og) {
    Og = {};
    for (var A2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), I2 = ["+/=", "+/", "-_=", "-_.", "-_"], g = 0; 5 > g; g++) {
      var E2 = A2.concat(I2[g].split(""));
      $i[g] = E2;
      for (var D2 = 0; D2 < E2.length; D2++) {
        var o = E2[D2];
        Og[o] === void 0 && (Og[o] = D2);
      }
    }
  }
}
var ID = typeof Uint8Array < "u", gD = !L0 && typeof btoa == "function";
function gi(A2) {
  if (!gD) {
    var I2;
    I2 === void 0 && (I2 = 0), AD(), I2 = $i[I2];
    var g = Array(Math.floor(A2.length / 3)), E2 = I2[64] || "";
    let y2 = 0, U2 = 0;
    for (; y2 < A2.length - 2; y2 += 3) {
      var D2 = A2[y2], o = A2[y2 + 1], s = A2[y2 + 2], N2 = I2[D2 >> 2];
      D2 = I2[(3 & D2) << 4 | o >> 4], o = I2[(15 & o) << 2 | s >> 6], s = I2[63 & s], g[U2++] = N2 + D2 + o + s;
    }
    switch (N2 = 0, s = E2, A2.length - y2) {
      case 2:
        s = I2[(15 & (N2 = A2[y2 + 1])) << 2] || E2;
      case 1:
        A2 = A2[y2], g[U2] = I2[A2 >> 2] + I2[(3 & A2) << 4 | N2 >> 4] + s + E2;
    }
    return g.join("");
  }
  for (I2 = "", g = 0, E2 = A2.length - 10240; g < E2; )
    I2 += String.fromCharCode.apply(null, A2.subarray(g, g += 10240));
  return I2 += String.fromCharCode.apply(null, g ? A2.subarray(g) : A2), btoa(I2);
}
const Ci = /[-_.]/g, H0 = { "-": "+", _: "/", ".": "=" };
function r0(A2) {
  return H0[A2] || "";
}
function CD(A2) {
  if (!gD)
    return t0(A2);
  Ci.test(A2) && (A2 = A2.replace(Ci, r0)), A2 = atob(A2);
  const I2 = new Uint8Array(A2.length);
  for (let g = 0; g < A2.length; g++)
    I2[g] = A2.charCodeAt(g);
  return I2;
}
function aB(A2) {
  return ID && A2 != null && A2 instanceof Uint8Array;
}
let q0;
function RB() {
  return q0 || (q0 = new Uint8Array(0));
}
var Mg = {};
let e0;
function BD(A2) {
  if (A2 !== Mg)
    throw Error("illegal external caller");
}
function Sg() {
  return e0 || (e0 = new TI(null, Mg));
}
function rQ(A2) {
  BD(Mg);
  var I2 = A2.Z;
  return (I2 = I2 == null || aB(I2) ? I2 : typeof I2 == "string" ? CD(I2) : null) == null ? I2 : A2.Z = I2;
}
var TI = class {
  constructor(A2, I2) {
    if (BD(I2), this.Z = A2, A2 != null && A2.length === 0)
      throw Error("ByteString should be constructed with non-empty values");
  }
  wa() {
    const A2 = rQ(this);
    return A2 ? new Uint8Array(A2) : RB();
  }
};
function QD(A2, I2) {
  return Error(`Invalid wire type: ${A2} (at position ${I2})`);
}
function qQ() {
  return Error("Failed to read varint, encoding is invalid.");
}
function ED(A2, I2) {
  return Error(`Tried to read past the end of the data ${I2} > ${A2}`);
}
function iD(A2) {
  return A2.length == 0 ? Sg() : new TI(A2, Mg);
}
function eQ(A2) {
  if (typeof A2 == "string")
    return { buffer: CD(A2), L: false };
  if (Array.isArray(A2))
    return { buffer: new Uint8Array(A2), L: false };
  if (A2.constructor === Uint8Array)
    return { buffer: A2, L: false };
  if (A2.constructor === ArrayBuffer)
    return { buffer: new Uint8Array(A2), L: false };
  if (A2.constructor === TI)
    return { buffer: rQ(A2) || RB(), L: true };
  if (A2 instanceof Uint8Array)
    return { buffer: new Uint8Array(A2.buffer, A2.byteOffset, A2.byteLength), L: false };
  throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers");
}
function nQ() {
  return typeof BigInt == "function";
}
var BQ = !HQ;
let Bi = !HQ;
const n0 = typeof Uint8Array.prototype.slice == "function";
let DD, BA = 0, MA = 0;
function Dg(A2) {
  const I2 = 0 > A2;
  let g = (A2 = Math.abs(A2)) >>> 0;
  if (A2 = Math.floor((A2 - g) / 4294967296), I2) {
    const [E2, D2] = fQ(g, A2);
    A2 = D2, g = E2;
  }
  BA = g >>> 0, MA = A2 >>> 0;
}
function dQ(A2) {
  const I2 = DD || (DD = new DataView(new ArrayBuffer(8)));
  I2.setFloat32(0, +A2, true), MA = 0, BA = I2.getUint32(0, true);
}
function QQ(A2, I2) {
  return 4294967296 * I2 + (A2 >>> 0);
}
function lQ(A2, I2) {
  const g = 2147483648 & I2;
  return g && (I2 = ~I2 >>> 0, (A2 = 1 + ~A2 >>> 0) == 0 && (I2 = I2 + 1 >>> 0)), A2 = QQ(A2, I2), g ? -A2 : A2;
}
function gB(A2, I2) {
  if (A2 >>>= 0, 2097151 >= (I2 >>>= 0))
    var g = "" + (4294967296 * I2 + A2);
  else
    nQ() ? g = "" + (BigInt(I2) << BigInt(32) | BigInt(A2)) : (A2 = (16777215 & A2) + 6777216 * (g = 16777215 & (A2 >>> 24 | I2 << 8)) + 6710656 * (I2 = I2 >> 16 & 65535), g += 8147497 * I2, I2 *= 2, 1e7 <= A2 && (g += Math.floor(A2 / 1e7), A2 %= 1e7), 1e7 <= g && (I2 += Math.floor(g / 1e7), g %= 1e7), g = I2 + Qi(g) + Qi(A2));
  return g;
}
function Qi(A2) {
  return A2 = String(A2), "0000000".slice(A2.length) + A2;
}
function oD() {
  var A2 = BA, I2 = MA;
  if (2147483648 & I2)
    if (nQ())
      A2 = "" + (BigInt(0 | I2) << BigInt(32) | BigInt(A2 >>> 0));
    else {
      const [g, E2] = fQ(A2, I2);
      A2 = "-" + gB(g, E2);
    }
  else
    A2 = gB(A2, I2);
  return A2;
}
function hB(A2) {
  if (16 > A2.length)
    Dg(Number(A2));
  else if (nQ())
    A2 = BigInt(A2), BA = Number(A2 & BigInt(4294967295)) >>> 0, MA = Number(A2 >> BigInt(32) & BigInt(4294967295));
  else {
    const I2 = +(A2[0] === "-");
    MA = BA = 0;
    const g = A2.length;
    for (let E2 = I2, D2 = (g - I2) % 6 + I2; D2 <= g; E2 = D2, D2 += 6) {
      const o = Number(A2.slice(E2, D2));
      MA *= 1e6, BA = 1e6 * BA + o, 4294967296 <= BA && (MA += Math.trunc(BA / 4294967296), MA >>>= 0, BA >>>= 0);
    }
    if (I2) {
      const [E2, D2] = fQ(BA, MA);
      BA = E2, MA = D2;
    }
  }
}
function fQ(A2, I2) {
  return I2 = ~I2, A2 ? A2 = 1 + ~A2 : I2 += 1, [A2, I2];
}
function bQ(A2, I2) {
  let g, E2 = 0, D2 = 0, o = 0;
  const s = A2.h;
  let N2 = A2.g;
  do
    g = s[N2++], E2 |= (127 & g) << o, o += 7;
  while (32 > o && 128 & g);
  for (32 < o && (D2 |= (127 & g) >> 4), o = 3; 32 > o && 128 & g; o += 7)
    g = s[N2++], D2 |= (127 & g) << o;
  if (og(A2, N2), 128 > g)
    return I2(E2 >>> 0, D2 >>> 0);
  throw qQ();
}
function VQ(A2) {
  let I2 = 0, g = A2.g;
  const E2 = g + 10, D2 = A2.h;
  for (; g < E2; ) {
    const o = D2[g++];
    if (I2 |= o, (128 & o) == 0)
      return og(A2, g), !!(127 & I2);
  }
  throw qQ();
}
function pI(A2) {
  const I2 = A2.h;
  let g = A2.g, E2 = I2[g++], D2 = 127 & E2;
  if (128 & E2 && (E2 = I2[g++], D2 |= (127 & E2) << 7, 128 & E2 && (E2 = I2[g++], D2 |= (127 & E2) << 14, 128 & E2 && (E2 = I2[g++], D2 |= (127 & E2) << 21, 128 & E2 && (E2 = I2[g++], D2 |= E2 << 28, 128 & E2 && 128 & I2[g++] && 128 & I2[g++] && 128 & I2[g++] && 128 & I2[g++] && 128 & I2[g++])))))
    throw qQ();
  return og(A2, g), D2;
}
function XI(A2) {
  return pI(A2) >>> 0;
}
function EQ(A2) {
  var I2 = A2.h;
  const g = A2.g, E2 = I2[g], D2 = I2[g + 1], o = I2[g + 2];
  return I2 = I2[g + 3], og(A2, A2.g + 4), (E2 << 0 | D2 << 8 | o << 16 | I2 << 24) >>> 0;
}
function iQ(A2) {
  var I2 = EQ(A2);
  A2 = 2 * (I2 >> 31) + 1;
  const g = I2 >>> 23 & 255;
  return I2 &= 8388607, g == 255 ? I2 ? NaN : 1 / 0 * A2 : g == 0 ? A2 * Math.pow(2, -149) * I2 : A2 * Math.pow(2, g - 150) * (I2 + Math.pow(2, 23));
}
function d0(A2) {
  return pI(A2);
}
function zB(A2, I2, { aa: g = false } = {}) {
  A2.aa = g, I2 && (I2 = eQ(I2), A2.h = I2.buffer, A2.m = I2.L, A2.j = 0, A2.l = A2.h.length, A2.g = A2.j);
}
function og(A2, I2) {
  if (A2.g = I2, I2 > A2.l)
    throw ED(A2.l, I2);
}
function GD(A2, I2) {
  if (0 > I2)
    throw Error(`Tried to read a negative byte length: ${I2}`);
  const g = A2.g, E2 = g + I2;
  if (E2 > A2.l)
    throw ED(I2, A2.l - g);
  return A2.g = E2, g;
}
function wD(A2, I2) {
  if (I2 == 0)
    return Sg();
  var g = GD(A2, I2);
  return A2.aa && A2.m ? g = A2.h.subarray(g, g + I2) : (A2 = A2.h, g = g === (I2 = g + I2) ? RB() : n0 ? A2.slice(g, I2) : new Uint8Array(A2.subarray(g, I2))), iD(g);
}
var Ei = [];
function sD(A2) {
  var I2 = A2.g;
  if (I2.g == I2.l)
    return false;
  A2.l = A2.g.g;
  var g = XI(A2.g);
  if (I2 = g >>> 3, !(0 <= (g &= 7) && 5 >= g))
    throw QD(g, A2.l);
  if (1 > I2)
    throw Error(`Invalid field number: ${I2} (at position ${A2.l})`);
  return A2.m = I2, A2.h = g, true;
}
function OC(A2) {
  switch (A2.h) {
    case 0:
      A2.h != 0 ? OC(A2) : VQ(A2.g);
      break;
    case 1:
      og(A2 = A2.g, A2.g + 8);
      break;
    case 2:
      if (A2.h != 2)
        OC(A2);
      else {
        var I2 = XI(A2.g);
        og(A2 = A2.g, A2.g + I2);
      }
      break;
    case 5:
      og(A2 = A2.g, A2.g + 4);
      break;
    case 3:
      for (I2 = A2.m; ; ) {
        if (!sD(A2))
          throw Error("Unmatched start-group tag: stream EOF");
        if (A2.h == 4) {
          if (A2.m != I2)
            throw Error("Unmatched end-group tag");
          break;
        }
        OC(A2);
      }
      break;
    default:
      throw QD(A2.h, A2.l);
  }
}
function iC(A2, I2, g) {
  const E2 = A2.g.l, D2 = XI(A2.g), o = A2.g.g + D2;
  let s = o - E2;
  if (0 >= s && (A2.g.l = o, g(I2, A2, void 0, void 0, void 0), s = o - A2.g.g), s)
    throw Error(`Message parsing ended unexpectedly. Expected to read ${D2} bytes, instead read ${D2 - s} bytes, either the data ended unexpectedly or the message misreported its own length`);
  return A2.g.g = o, A2.g.l = E2, I2;
}
function xQ(A2) {
  var I2 = XI(A2.g), g = GD(A2 = A2.g, I2);
  if (A2 = A2.h, J0) {
    var E2, D2 = A2;
    (E2 = jB) || (E2 = jB = new TextDecoder("utf-8", { fatal: true })), I2 = g + I2, D2 = g === 0 && I2 === D2.length ? D2 : D2.subarray(g, I2);
    try {
      var o = E2.decode(D2);
    } catch (N2) {
      if (ZC === void 0) {
        try {
          E2.decode(new Uint8Array([128]));
        } catch {
        }
        try {
          E2.decode(new Uint8Array([97])), ZC = true;
        } catch {
          ZC = false;
        }
      }
      throw !ZC && (jB = void 0), N2;
    }
  } else {
    I2 = (o = g) + I2, g = [];
    let N2, y2 = null;
    for (; o < I2; ) {
      var s = A2[o++];
      128 > s ? g.push(s) : 224 > s ? o >= I2 ? Qg() : (N2 = A2[o++], 194 > s || (192 & N2) != 128 ? (o--, Qg()) : g.push((31 & s) << 6 | 63 & N2)) : 240 > s ? o >= I2 - 1 ? Qg() : (N2 = A2[o++], (192 & N2) != 128 || s === 224 && 160 > N2 || s === 237 && 160 <= N2 || (192 & (E2 = A2[o++])) != 128 ? (o--, Qg()) : g.push((15 & s) << 12 | (63 & N2) << 6 | 63 & E2)) : 244 >= s ? o >= I2 - 2 ? Qg() : (N2 = A2[o++], (192 & N2) != 128 || N2 - 144 + (s << 28) >> 30 || (192 & (E2 = A2[o++])) != 128 || (192 & (D2 = A2[o++])) != 128 ? (o--, Qg()) : (s = (7 & s) << 18 | (63 & N2) << 12 | (63 & E2) << 6 | 63 & D2, s -= 65536, g.push(55296 + (s >> 10 & 1023), 56320 + (1023 & s)))) : Qg(), 8192 <= g.length && (y2 = Ai(y2, g), g.length = 0);
    }
    o = Ai(y2, g);
  }
  return o;
}
function FD(A2) {
  const I2 = XI(A2.g);
  return wD(A2.g, I2);
}
function NB(A2, I2, g) {
  var E2 = XI(A2.g);
  for (E2 = A2.g.g + E2; A2.g.g < E2; )
    g.push(I2(A2.g));
}
var mC = [];
function ii(A2) {
  return A2 ? /^\d+$/.test(A2) ? (hB(A2), new Di(BA, MA)) : null : l0 || (l0 = new Di(0, 0));
}
var Di = class {
  constructor(A2, I2) {
    this.h = A2 >>> 0, this.g = I2 >>> 0;
  }
};
let l0;
function oi(A2) {
  return A2 ? /^-?\d+$/.test(A2) ? (hB(A2), new Gi(BA, MA)) : null : f0 || (f0 = new Gi(0, 0));
}
var Gi = class {
  constructor(A2, I2) {
    this.h = A2 >>> 0, this.g = I2 >>> 0;
  }
};
let f0;
function CB(A2, I2, g) {
  for (; 0 < g || 127 < I2; )
    A2.g.push(127 & I2 | 128), I2 = (I2 >>> 7 | g << 25) >>> 0, g >>>= 7;
  A2.g.push(I2);
}
function DC(A2, I2) {
  for (; 127 < I2; )
    A2.g.push(127 & I2 | 128), I2 >>>= 7;
  A2.g.push(I2);
}
function yB(A2, I2) {
  if (0 <= I2)
    DC(A2, I2);
  else {
    for (let g = 0; 9 > g; g++)
      A2.g.push(127 & I2 | 128), I2 >>= 7;
    A2.g.push(1);
  }
}
function IC(A2, I2) {
  A2.g.push(I2 >>> 0 & 255), A2.g.push(I2 >>> 8 & 255), A2.g.push(I2 >>> 16 & 255), A2.g.push(I2 >>> 24 & 255);
}
function Jg(A2, I2) {
  I2.length !== 0 && (A2.l.push(I2), A2.h += I2.length);
}
function DI(A2, I2, g) {
  DC(A2.g, 8 * I2 + g);
}
function WQ(A2, I2) {
  return DI(A2, I2, 2), I2 = A2.g.end(), Jg(A2, I2), I2.push(A2.h), I2;
}
function ZQ(A2, I2) {
  var g = I2.pop();
  for (g = A2.h + A2.g.length() - g; 127 < g; )
    I2.push(127 & g | 128), g >>>= 7, A2.h++;
  I2.push(g), A2.h++;
}
function KB(A2, I2, g) {
  DI(A2, I2, 2), DC(A2.g, g.length), Jg(A2, A2.g.end()), Jg(A2, g);
}
function DQ(A2, I2, g, E2) {
  g != null && (I2 = WQ(A2, I2), E2(g, A2), ZQ(A2, I2));
}
class rg {
  constructor(I2, g, E2, D2) {
    this.g = I2, this.h = g, this.l = E2, this.qa = D2;
  }
}
function WA(A2) {
  return Array.prototype.slice.call(A2);
}
function aD(A2) {
  return typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol() : A2;
}
var JI = aD(), wi = aD("0di"), UB = JI ? (A2, I2) => {
  A2[JI] |= I2;
} : (A2, I2) => {
  A2.D !== void 0 ? A2.D |= I2 : Object.defineProperties(A2, { D: { value: I2, configurable: true, writable: true, enumerable: false } });
};
function si(A2) {
  const I2 = FA(A2);
  (1 & I2) != 1 && (Object.isFrozen(A2) && (A2 = WA(A2)), NA(A2, 1 | I2));
}
var BB = JI ? (A2, I2) => {
  A2[JI] &= ~I2;
} : (A2, I2) => {
  A2.D !== void 0 && (A2.D &= ~I2);
};
function lA(A2, I2, g) {
  return g ? A2 | I2 : A2 & ~I2;
}
var FA = JI ? (A2) => 0 | A2[JI] : (A2) => 0 | A2.D, _ = JI ? (A2) => A2[JI] : (A2) => A2.D, NA = JI ? (A2, I2) => {
  A2[JI] = I2;
} : (A2, I2) => {
  A2.D !== void 0 ? A2.D = I2 : Object.defineProperties(A2, { D: { value: I2, configurable: true, writable: true, enumerable: false } });
};
function Fi() {
  var A2 = [];
  return UB(A2, 1), A2;
}
function qg(A2) {
  return UB(A2, 34), A2;
}
function b0(A2, I2) {
  NA(I2, -14591 & (0 | A2));
}
function oQ(A2, I2) {
  NA(I2, -14557 & (34 | A2));
}
function QB(A2) {
  return (A2 = A2 >> 14 & 1023) === 0 ? 536870912 : A2;
}
var oC = {}, RD = {};
function ai(A2) {
  return !(!A2 || typeof A2 != "object" || A2.Na !== RD);
}
function zg(A2) {
  return A2 !== null && typeof A2 == "object" && !Array.isArray(A2) && A2.constructor === Object;
}
let hD = !HQ;
function ND(A2, I2, g) {
  if (A2 != null) {
    if (typeof A2 == "string")
      A2 = A2 ? new TI(A2, Mg) : Sg();
    else if (A2.constructor !== TI)
      if (aB(A2))
        A2 = g ? iD(A2) : A2.length ? new TI(new Uint8Array(A2), Mg) : Sg();
      else {
        if (!I2)
          throw Error();
        A2 = void 0;
      }
  }
  return A2;
}
function GQ(A2, I2, g) {
  if (!Array.isArray(A2) || A2.length)
    return false;
  const E2 = FA(A2);
  return !!(1 & E2) || !(!I2 || !(Array.isArray(I2) ? I2.includes(g) : I2.has(g))) && (NA(A2, 1 | E2), true);
}
var ig;
const Ri = [];
function tI(A2) {
  if (2 & A2)
    throw Error();
}
NA(Ri, 55), ig = Object.freeze(Ri);
class EB {
  constructor(I2, g, E2) {
    this.l = 0, this.g = I2, this.h = g, this.m = E2;
  }
  next() {
    if (this.l < this.g.length) {
      const I2 = this.g[this.l++];
      return { done: false, value: this.h ? this.h.call(this.m, I2) : I2 };
    }
    return { done: true, value: void 0 };
  }
  [Symbol.iterator]() {
    return new EB(this.g, this.h, this.m);
  }
}
var V0 = {};
let uI, gC;
function yD(A2, I2) {
  (I2 = uI ? I2[uI] : void 0) && (A2[uI] = WA(I2));
}
function wQ(A2) {
  return (A2 = Error(A2)).__closure__error__context__984382 || (A2.__closure__error__context__984382 = {}), A2.__closure__error__context__984382.severity = "warning", A2;
}
function PI(A2) {
  return A2 == null || typeof A2 == "number" ? A2 : A2 === "NaN" || A2 === "Infinity" || A2 === "-Infinity" ? Number(A2) : void 0;
}
function KD(A2) {
  return A2 == null || typeof A2 == "boolean" ? A2 : typeof A2 == "number" ? !!A2 : void 0;
}
Object.freeze(new class {
}()), Object.freeze(new class {
}());
const x0 = /^-?([1-9][0-9]*|0)(\.[0-9]+)?$/;
function kB(A2) {
  const I2 = typeof A2;
  return I2 === "number" ? Number.isFinite(A2) : I2 === "string" && x0.test(A2);
}
function eg(A2) {
  if (A2 == null)
    return A2;
  if (typeof A2 == "string") {
    if (!A2)
      return;
    A2 = +A2;
  }
  return typeof A2 == "number" && Number.isFinite(A2) ? 0 | A2 : void 0;
}
function W0(A2) {
  if (A2 == null)
    return A2;
  if (typeof A2 == "string") {
    if (!A2)
      return;
    A2 = +A2;
  }
  return typeof A2 == "number" && Number.isFinite(A2) ? A2 >>> 0 : void 0;
}
function hi(A2) {
  return A2[0] !== "-" && (20 > A2.length || A2.length === 20 && 184467 > Number(A2.substring(0, 6)));
}
function UD(A2) {
  return A2[0] === "-" ? 20 > A2.length || A2.length === 20 && -922337 < Number(A2.substring(0, 7)) : 19 > A2.length || A2.length === 19 && 922337 > Number(A2.substring(0, 6));
}
function mQ(A2) {
  return A2 = Math.trunc(A2), Number.isSafeInteger(A2) || (Dg(A2), A2 = lQ(BA, MA)), A2;
}
function TQ(A2) {
  var I2 = Math.trunc(Number(A2));
  return Number.isSafeInteger(I2) ? String(I2) : ((I2 = A2.indexOf(".")) !== -1 && (A2 = A2.substring(0, I2)), UD(A2) || (hB(A2), A2 = oD()), A2);
}
function iB(A2) {
  return A2 == null ? A2 : kB(A2) ? typeof A2 == "number" ? mQ(A2) : TQ(A2) : void 0;
}
function GC(A2) {
  if (typeof A2 != "string")
    throw Error();
  return A2;
}
function wC(A2) {
  if (A2 != null && typeof A2 != "string")
    throw Error();
  return A2;
}
function CC(A2) {
  return A2 == null || typeof A2 == "string" ? A2 : void 0;
}
function uQ(A2, I2, g, E2) {
  if (A2 != null && typeof A2 == "object" && A2.W === oC)
    return A2;
  if (!Array.isArray(A2))
    return g ? 2 & E2 ? (A2 = I2[wi]) ? I2 = A2 : (qg((A2 = new I2()).s), I2 = I2[wi] = A2) : I2 = new I2() : I2 = void 0, I2;
  let D2 = g = FA(A2);
  return D2 === 0 && (D2 |= 32 & E2), D2 |= 2 & E2, D2 !== g && NA(A2, D2), new I2(A2);
}
function Z0(A2, I2, g) {
  if (I2) {
    var E2 = !!E2;
    if (!kB(I2 = A2))
      throw wQ("int64");
    typeof I2 == "string" ? E2 = TQ(I2) : E2 ? (E2 = Math.trunc(I2), Number.isSafeInteger(E2) ? E2 = String(E2) : UD(I2 = String(E2)) ? E2 = I2 : (Dg(E2), E2 = oD())) : E2 = mQ(I2);
  } else
    E2 = iB(A2);
  return typeof (g = (A2 = E2) == null ? g ? 0 : void 0 : A2) == "string" && (E2 = +g, Number.isSafeInteger(E2)) ? E2 : g;
}
let DB, pQ, m0;
function oB(A2) {
  switch (typeof A2) {
    case "boolean":
      return pQ || (pQ = [0, void 0, true]);
    case "number":
      return 0 < A2 ? void 0 : A2 === 0 ? m0 || (m0 = [0, void 0]) : [-A2, void 0];
    case "string":
      return [0, A2];
    case "object":
      return A2;
  }
}
function Gg(A2, I2) {
  return kD(A2, I2[0], I2[1]);
}
function kD(A2, I2, g) {
  if (A2 == null && (A2 = DB), DB = void 0, A2 == null) {
    var E2 = 96;
    g ? (A2 = [g], E2 |= 512) : A2 = [], I2 && (E2 = -16760833 & E2 | (1023 & I2) << 14);
  } else {
    if (!Array.isArray(A2))
      throw Error();
    if (64 & (E2 = FA(A2)))
      return gC && delete A2[gC], A2;
    if (E2 |= 64, g && (E2 |= 512, g !== A2[0]))
      throw Error();
    A: {
      const D2 = (g = A2).length;
      if (D2) {
        const o = D2 - 1;
        if (zg(g[o])) {
          if (1024 <= (I2 = o - (+!!(512 & (E2 |= 256)) - 1)))
            throw Error();
          E2 = -16760833 & E2 | (1023 & I2) << 14;
          break A;
        }
      }
      if (I2) {
        if (1024 < (I2 = Math.max(I2, D2 - (+!!(512 & E2) - 1))))
          throw Error();
        E2 = -16760833 & E2 | (1023 & I2) << 14;
      }
    }
  }
  return NA(A2, E2), A2;
}
let T0 = function() {
  try {
    return new class extends Map {
      constructor() {
        super();
      }
    }(), false;
  } catch {
    return true;
  }
}();
class vB {
  constructor() {
    this.g = /* @__PURE__ */ new Map();
  }
  get(I2) {
    return this.g.get(I2);
  }
  set(I2, g) {
    return this.g.set(I2, g), this.size = this.g.size, this;
  }
  delete(I2) {
    return I2 = this.g.delete(I2), this.size = this.g.size, I2;
  }
  clear() {
    this.g.clear(), this.size = this.g.size;
  }
  has(I2) {
    return this.g.has(I2);
  }
  entries() {
    return this.g.entries();
  }
  keys() {
    return this.g.keys();
  }
  values() {
    return this.g.values();
  }
  forEach(I2, g) {
    return this.g.forEach(I2, g);
  }
  [Symbol.iterator]() {
    return this.entries();
  }
}
const u0 = T0 ? (Object.setPrototypeOf(vB.prototype, Map.prototype), Object.defineProperties(vB.prototype, { size: { value: 0, configurable: true, enumerable: true, writable: true } }), vB) : class extends Map {
  constructor() {
    super();
  }
};
function TC(A2) {
  return A2;
}
function _B(A2) {
  if (2 & A2.O)
    throw Error("Cannot mutate an immutable Map");
}
var QI = class extends u0 {
  constructor(A2, I2, g = TC, E2 = TC) {
    super();
    let D2 = FA(A2);
    D2 |= 64, NA(A2, D2), this.O = D2, this.V = I2, this.R = g || TC, this.Y = this.V ? p0 : E2 || TC;
    for (let o = 0; o < A2.length; o++) {
      const s = A2[o], N2 = g(s[0], false, true);
      let y2 = s[1];
      I2 ? y2 === void 0 && (y2 = null) : y2 = E2(s[1], false, true, void 0, void 0, D2), super.set(N2, y2);
    }
  }
  pa(A2 = Ni) {
    return this.X(A2);
  }
  X(A2 = Ni) {
    const I2 = [], g = super.entries();
    for (var E2; !(E2 = g.next()).done; )
      (E2 = E2.value)[0] = A2(E2[0]), E2[1] = A2(E2[1]), I2.push(E2);
    return I2;
  }
  clear() {
    _B(this), super.clear();
  }
  delete(A2) {
    return _B(this), super.delete(this.R(A2, true, false));
  }
  entries() {
    var A2 = this.ma();
    return new EB(A2, X0, this);
  }
  keys() {
    return this.Ma();
  }
  values() {
    var A2 = this.ma();
    return new EB(A2, QI.prototype.get, this);
  }
  forEach(A2, I2) {
    super.forEach((g, E2) => {
      A2.call(I2, this.get(E2), E2, this);
    });
  }
  set(A2, I2) {
    return _B(this), (A2 = this.R(A2, true, false)) == null ? this : I2 == null ? (super.delete(A2), this) : super.set(A2, this.Y(I2, true, true, this.V, false, this.O));
  }
  Ta(A2) {
    const I2 = this.R(A2[0], false, true);
    A2 = A2[1], A2 = this.V ? A2 === void 0 ? null : A2 : this.Y(A2, false, true, void 0, false, this.O), super.set(I2, A2);
  }
  has(A2) {
    return super.has(this.R(A2, false, false));
  }
  get(A2) {
    A2 = this.R(A2, false, false);
    const I2 = super.get(A2);
    if (I2 !== void 0) {
      var g = this.V;
      return g ? ((g = this.Y(I2, false, true, g, this.xa, this.O)) !== I2 && super.set(A2, g), g) : I2;
    }
  }
  ma() {
    return Array.from(super.keys());
  }
  Ma() {
    return super.keys();
  }
  [Symbol.iterator]() {
    return this.entries();
  }
};
function p0(A2, I2, g, E2, D2, o) {
  return A2 = uQ(A2, E2, g, o), D2 && (A2 = MB(A2)), A2;
}
function Ni(A2) {
  return A2;
}
function X0(A2) {
  return [A2, this.get(A2)];
}
function XQ(A2, I2, g, E2, D2, o) {
  if (A2 != null) {
    if (Array.isArray(A2))
      A2 = o && 2 & FA(A2) ? A2 : OQ(A2, I2, g, E2 !== void 0, D2, o);
    else if (zg(A2)) {
      const s = {};
      for (let N2 in A2)
        s[N2] = XQ(A2[N2], I2, g, E2, D2, o);
      A2 = s;
    } else
      A2 = I2(A2, E2);
    return A2;
  }
}
function OQ(A2, I2, g, E2, D2, o) {
  const s = E2 || g ? FA(A2) : 0;
  E2 = E2 ? !!(32 & s) : void 0;
  const N2 = WA(A2);
  for (let y2 = 0; y2 < N2.length; y2++)
    N2[y2] = XQ(N2[y2], I2, g, E2, D2, o);
  return g && (yD(N2, A2), g(s, N2)), N2;
}
function O0(A2) {
  return XQ(A2, MD, void 0, void 0, false, false);
}
function MD(A2) {
  return A2.W === oC ? A2.toJSON() : A2 instanceof QI ? A2.pa(O0) : function(I2) {
    switch (typeof I2) {
      case "number":
        return isFinite(I2) ? I2 : String(I2);
      case "boolean":
        return I2 ? 1 : 0;
      case "object":
        if (I2) {
          if (Array.isArray(I2))
            return hD || !GQ(I2, void 0, 9999) ? I2 : void 0;
          if (aB(I2))
            return gi(I2);
          if (I2 instanceof TI) {
            const g = I2.Z;
            return g == null ? "" : typeof g == "string" ? g : I2.Z = gi(g);
          }
          if (I2 instanceof QI)
            return I2 = I2.pa(), BQ || I2.length !== 0 ? I2 : void 0;
        }
    }
    return I2;
  }(A2);
}
function sQ(A2, I2, g = oQ) {
  if (A2 != null) {
    if (ID && A2 instanceof Uint8Array)
      return I2 ? A2 : new Uint8Array(A2);
    if (Array.isArray(A2)) {
      var E2 = FA(A2);
      return 2 & E2 ? A2 : (I2 && (I2 = E2 === 0 || !!(32 & E2) && !(64 & E2 || !(16 & E2))), I2 ? (NA(A2, -12293 & (34 | E2)), A2) : OQ(A2, sQ, 4 & E2 ? oQ : g, true, false, true));
    }
    return A2.W === oC ? (g = A2.s, A2 = 2 & (E2 = _(g)) ? A2 : jQ(A2, g, E2, true)) : A2 instanceof QI && (g = qg(A2.X(sQ)), A2 = new QI(g, A2.V, A2.R, A2.Y)), A2;
  }
}
function jQ(A2, I2, g, E2) {
  return A2 = A2.constructor, DB = I2 = SD(I2, g, E2), I2 = new A2(I2), DB = void 0, I2;
}
function SD(A2, I2, g) {
  const E2 = g || 2 & I2 ? oQ : b0, D2 = !!(32 & I2);
  return A2 = function(o, s, N2) {
    const y2 = WA(o);
    var U2 = y2.length;
    const L2 = 256 & s ? y2[U2 - 1] : void 0;
    for (U2 += L2 ? -1 : 0, s = 512 & s ? 1 : 0; s < U2; s++)
      y2[s] = N2(y2[s]);
    if (L2) {
      s = y2[s] = {};
      for (const d in L2)
        s[d] = N2(L2[d]);
    }
    return yD(y2, o), y2;
  }(A2, I2, (o) => sQ(o, D2, E2)), UB(A2, 32 | (g ? 2 : 0)), A2;
}
function MB(A2) {
  const I2 = A2.s, g = _(I2);
  return 2 & g ? jQ(A2, I2, g, false) : A2;
}
function cg(A2, I2) {
  return HI(A2 = A2.s, _(A2), I2);
}
function HI(A2, I2, g, E2) {
  if (g === -1)
    return null;
  if (g >= QB(I2)) {
    if (256 & I2)
      return A2[A2.length - 1][g];
  } else {
    var D2 = A2.length;
    if (E2 && 256 & I2 && (E2 = A2[D2 - 1][g]) != null)
      return E2;
    if ((I2 = g + (+!!(512 & I2) - 1)) < D2)
      return A2[I2];
  }
}
function QA(A2, I2, g, E2) {
  const D2 = A2.s;
  let o = _(D2);
  return tI(o), EA(D2, o, I2, g, E2), A2;
}
function EA(A2, I2, g, E2, D2) {
  var o = QB(I2);
  if (g >= o || D2) {
    if (D2 = I2, 256 & I2)
      o = A2[A2.length - 1];
    else {
      if (E2 == null)
        return D2;
      o = A2[o + (+!!(512 & I2) - 1)] = {}, D2 |= 256;
    }
    return o[g] = E2, D2 !== I2 && NA(A2, D2), D2;
  }
  return A2[g + (+!!(512 & I2) - 1)] = E2, 256 & I2 && g in (A2 = A2[A2.length - 1]) && delete A2[g], I2;
}
function ng(A2, I2, g, E2, D2) {
  var o = 2 & I2;
  let s = HI(A2, I2, g, D2);
  Array.isArray(s) || (s = ig);
  const N2 = !(2 & E2);
  E2 = !(1 & E2);
  const y2 = !!(32 & I2);
  let U2 = FA(s);
  return U2 !== 0 || !y2 || o || N2 ? 1 & U2 || (U2 |= 1, NA(s, U2)) : (U2 |= 33, NA(s, U2)), o ? (A2 = false, 2 & U2 || (qg(s), A2 = !!(4 & U2)), (E2 || A2) && Object.freeze(s)) : (o = !!(2 & U2) || !!(2048 & U2), E2 && o ? (s = WA(s), E2 = 1, y2 && !N2 && (E2 |= 32), NA(s, E2), EA(A2, I2, g, s, D2)) : N2 && 32 & U2 && !o && BB(s, 32)), s;
}
function jC(A2, I2) {
  A2 = A2.s;
  let g = _(A2);
  const E2 = HI(A2, g, I2), D2 = PI(E2);
  return D2 != null && D2 !== E2 && EA(A2, g, I2, D2), D2;
}
function JD(A2) {
  A2 = A2.s;
  let I2 = _(A2);
  const g = HI(A2, I2, 1), E2 = ND(g, true, !!(34 & I2));
  return E2 != null && E2 !== g && EA(A2, I2, 1, E2), E2;
}
function kg(A2, I2, g) {
  A2 = A2.s;
  let E2 = _(A2);
  const D2 = 2 & E2 ? 1 : 2;
  let o = cD(A2, E2, I2);
  var s = FA(o);
  if (!(4 & s)) {
    (4 & s || Object.isFrozen(o)) && (o = WA(o), s = wg(s, E2, false), E2 = EA(A2, E2, I2, o));
    var N2 = 0;
    let y2 = 0;
    for (; N2 < o.length; N2++) {
      const U2 = g(o[N2]);
      U2 != null && (o[y2++] = U2);
    }
    y2 < N2 && (o.length = y2), s = lA(s = YD(s, E2, false), 20, true), s = lA(s, 4096, false), s = lA(s, 8192, false), NA(o, s), 2 & s && Object.freeze(o);
  }
  return vg(s) || (g = s, (s = (N2 = D2 === 1) ? lA(s, 2, true) : lA(s, 32, false)) !== g && NA(o, s), N2 && Object.freeze(o)), D2 === 2 && vg(s) && (o = WA(o), s = wg(s, E2, false), NA(o, s), EA(A2, E2, I2, o)), o;
}
function cD(A2, I2, g) {
  return A2 = HI(A2, I2, g), Array.isArray(A2) ? A2 : ig;
}
function YD(A2, I2, g) {
  return A2 === 0 && (A2 = wg(A2, I2, g)), lA(A2, 1, true);
}
function vg(A2) {
  return !!(2 & A2) && !!(4 & A2) || !!(2048 & A2);
}
let j0;
function yi() {
  return j0 ?? (j0 = new QI(qg([]), void 0, void 0, void 0, V0));
}
function LD(A2) {
  A2 = WA(A2);
  for (let I2 = 0; I2 < A2.length; I2++) {
    const g = A2[I2] = WA(A2[I2]);
    Array.isArray(g[1]) && (g[1] = qg(g[1]));
  }
  return A2;
}
function GB(A2, I2, g) {
  {
    const s = A2.s;
    let N2 = _(s);
    if (tI(N2), g == null)
      EA(s, N2, I2);
    else {
      var E2, D2 = A2 = FA(g), o = !!(2 & A2) || Object.isFrozen(g);
      if ((E2 = !o) && (E2 = false), !(4 & A2))
        for (A2 = 21, o && (g = WA(g), D2 = 0, A2 = wg(A2, N2, true)), o = 0; o < g.length; o++)
          g[o] = GC(g[o]);
      E2 && (g = WA(g), D2 = 0, A2 = wg(A2, N2, true)), A2 !== D2 && NA(g, A2), EA(s, N2, I2, g);
    }
  }
}
function sC(A2, I2, g, E2) {
  const D2 = _(A2);
  tI(D2), A2 = ng(A2, D2, I2, 2), E2 = g(E2, !!(4 & (I2 = FA(A2))) && !!(4096 & I2)), A2.push(E2);
}
function P0(A2) {
  return A2;
}
function $B(A2, I2) {
  return PQ(A2 = A2.s, _(A2), wo) === I2 ? I2 : -1;
}
function PQ(A2, I2, g) {
  let E2 = 0;
  for (let D2 = 0; D2 < g.length; D2++) {
    const o = g[D2];
    HI(A2, I2, o) != null && (E2 !== 0 && (I2 = EA(A2, I2, E2)), E2 = o);
  }
  return E2;
}
function zQ(A2, I2, g, E2) {
  let D2 = _(A2);
  tI(D2);
  const o = HI(A2, D2, g, E2);
  let s;
  if (o != null && o.W === oC)
    return (I2 = MB(o)) !== o && EA(A2, D2, g, I2, E2), I2.s;
  if (Array.isArray(o)) {
    const N2 = FA(o);
    s = 2 & N2 ? SD(o, N2, false) : o, s = Gg(s, I2);
  } else
    s = Gg(void 0, I2);
  return s !== o && EA(A2, D2, g, s, E2), s;
}
function tD(A2, I2, g, E2) {
  A2 = A2.s;
  let D2 = _(A2);
  const o = HI(A2, D2, g, E2);
  return (I2 = uQ(o, I2, false, D2)) !== o && I2 != null && EA(A2, D2, g, I2, E2), I2;
}
function P(A2, I2, g, E2 = false) {
  if ((I2 = tD(A2, I2, g, E2)) == null)
    return I2;
  A2 = A2.s;
  let D2 = _(A2);
  if (!(2 & D2)) {
    const o = MB(I2);
    o !== I2 && EA(A2, D2, g, I2 = o, E2);
  }
  return I2;
}
function HD(A2, I2, g, E2, D2, o) {
  var s = !!(2 & I2), N2 = s ? 1 : 2;
  const y2 = N2 === 1;
  N2 = N2 === 2, D2 = !!D2, o && (o = !s), s = cD(A2, I2, E2);
  var U2 = FA(s);
  const L2 = !!(4 & U2);
  if (!L2) {
    var d = s, e = I2;
    const AA = !!(2 & (U2 = YD(U2, I2, D2)));
    AA && (e = lA(e, 2, true));
    let T2 = !AA, aA = true, CA = 0, wI = 0;
    for (; CA < d.length; CA++) {
      const t2 = uQ(d[CA], g, false, e);
      if (t2 instanceof g) {
        if (!AA) {
          const f2 = !!(2 & FA(t2.s));
          T2 && (T2 = !f2), aA && (aA = f2);
        }
        d[wI++] = t2;
      }
    }
    wI < CA && (d.length = wI), U2 = lA(U2, 4, true), U2 = lA(U2, 16, aA), U2 = lA(U2, 8, T2), NA(d, U2), AA && Object.freeze(d);
  }
  if (g = !!(8 & U2) || y2 && !s.length, o && !g) {
    for (vg(U2) && (s = WA(s), U2 = wg(U2, I2, D2), I2 = EA(A2, I2, E2, s)), o = s, g = U2, d = 0; d < o.length; d++)
      (U2 = o[d]) !== (e = MB(U2)) && (o[d] = e);
    g = lA(g, 8, true), g = lA(g, 16, !o.length), NA(o, g), U2 = g;
  }
  return vg(U2) || (o = U2, y2 ? U2 = lA(U2, !s.length || 16 & U2 && (!L2 || 32 & U2) ? 2 : 2048, true) : D2 || (U2 = lA(U2, 32, false)), U2 !== o && NA(s, U2), y2 && Object.freeze(s)), N2 && vg(U2) && (s = WA(s), U2 = wg(U2, I2, D2), NA(s, U2), EA(A2, I2, E2, s)), s;
}
function xI(A2, I2, g) {
  A2 = A2.s;
  const E2 = _(A2);
  return HD(A2, E2, I2, g, false, !(2 & E2));
}
function V(A2, I2, g, E2, D2) {
  return E2 == null && (E2 = void 0), QA(A2, g, E2, D2);
}
function _g(A2, I2, g, E2) {
  E2 == null && (E2 = void 0), A2 = A2.s;
  let D2 = _(A2);
  tI(D2), (g = PQ(A2, D2, g)) && g !== I2 && E2 != null && (D2 = EA(A2, D2, g)), EA(A2, D2, I2, E2);
}
function wg(A2, I2, g) {
  return A2 = lA(A2, 2, !!(2 & I2)), A2 = lA(A2, 32, !!(32 & I2) && g), lA(A2, 2048, false);
}
function FQ(A2, I2, g) {
  A2 = A2.s;
  const E2 = _(A2);
  tI(E2), A2 = HD(A2, E2, I2, 1, true), I2 = g ?? new I2(), A2.push(I2), 2 & FA(I2.s) ? BB(A2, 8) : BB(A2, 16);
}
function BI(A2, I2) {
  return eg(cg(A2, I2));
}
function EI(A2, I2) {
  return CC(cg(A2, I2));
}
function cI(A2) {
  return A2 ?? 0;
}
function fA(A2, I2) {
  return cI(jC(A2, I2));
}
function BC(A2, I2, g) {
  if (g != null && typeof g != "boolean")
    throw A2 = typeof g, Error(`Expected boolean but got ${A2 != "object" ? A2 : g ? Array.isArray(g) ? "array" : A2 : "null"}: ${g}`);
  QA(A2, I2, g);
}
function YI(A2, I2, g) {
  if (g != null) {
    if (typeof g != "number" || !Number.isFinite(g))
      throw wQ("int32");
    g |= 0;
  }
  QA(A2, I2, g);
}
function x(A2, I2, g) {
  if (g != null && typeof g != "number")
    throw Error(`Value of float/double field must be a number, found ${typeof g}: ${g}`);
  QA(A2, I2, g);
}
function RI(A2, I2, g) {
  I2.g ? I2.m(A2, I2.g, I2.h, g, true) : I2.m(A2, I2.h, g, true);
}
QI.prototype.toJSON = void 0, QI.prototype.Na = RD;
var n = class {
  constructor(A2, I2) {
    this.s = kD(A2, I2);
  }
  toJSON() {
    return rD(this, OQ(this.s, MD, void 0, void 0, false, false), true);
  }
  l() {
    var A2 = AF;
    return A2.g ? A2.l(this, A2.g, A2.h, true) : A2.l(this, A2.h, A2.defaultValue, true);
  }
  clone() {
    const A2 = this.s;
    return jQ(this, A2, _(A2), false);
  }
  L() {
    return !!(2 & FA(this.s));
  }
};
function rD(A2, I2, g) {
  const E2 = A2.constructor.A;
  var D2 = _(g ? A2.s : I2), o = QB(D2), s = false;
  if (E2 && hD) {
    if (!g) {
      var N2;
      if ((I2 = WA(I2)).length && zg(N2 = I2[I2.length - 1])) {
        for (s = 0; s < E2.length; s++)
          if (E2[s] >= o) {
            Object.assign(I2[I2.length - 1] = {}, N2);
            break;
          }
      }
      s = true;
    }
    var y2;
    o = I2, g = !g, A2 = QB(N2 = _(A2.s)), N2 = +!!(512 & N2) - 1;
    for (let CA = 0; CA < E2.length; CA++) {
      var U2 = E2[CA];
      if (U2 < A2) {
        var L2 = o[U2 += N2];
        L2 == null ? o[U2] = g ? ig : Fi() : g && L2 !== ig && si(L2);
      } else {
        if (!y2) {
          var d = void 0;
          o.length && zg(d = o[o.length - 1]) ? y2 = d : o.push(y2 = {});
        }
        L2 = y2[U2], y2[U2] == null ? y2[U2] = g ? ig : Fi() : g && L2 !== ig && si(L2);
      }
    }
  }
  if (!(y2 = I2.length))
    return I2;
  let e, AA;
  if (zg(d = I2[y2 - 1])) {
    A: {
      var T2 = d;
      for (var aA in o = {}, g = false, T2)
        A2 = T2[aA], Array.isArray(A2) && (N2 = A2, (!Bi && GQ(A2, E2, +aA) || !BQ && ai(A2) && A2.size === 0) && (A2 = null), A2 != N2 && (g = true)), A2 != null ? o[aA] = A2 : g = true;
      if (g) {
        for (let CA in o) {
          T2 = o;
          break A;
        }
        T2 = null;
      }
    }
    T2 != d && (e = true), y2--;
  }
  for (D2 = +!!(512 & D2) - 1; 0 < y2 && ((d = I2[aA = y2 - 1]) == null || !Bi && GQ(d, E2, aA - D2) || !BQ && ai(d) && d.size === 0); y2--)
    AA = true;
  return (e || AA) && (I2 = s ? I2 : Array.prototype.slice.call(I2, 0, y2), s && (I2.length = y2), T2 && I2.push(T2)), I2;
}
function qD(A2) {
  return Array.isArray(A2) ? A2[0] instanceof rg ? A2 : [Es, A2] : [A2, void 0];
}
function dg(A2, I2) {
  if (Array.isArray(I2)) {
    var g = FA(I2);
    if (4 & g)
      return I2;
    for (var E2 = 0, D2 = 0; E2 < I2.length; E2++) {
      const o = A2(I2[E2]);
      o != null && (I2[D2++] = o);
    }
    return D2 < E2 && (I2.length = D2), NA(I2, -12289 & (5 | g)), 2 & g && Object.freeze(I2), I2;
  }
}
n.prototype.W = oC, n.prototype.toString = function() {
  return rD(this, this.s, false).toString();
};
const Ki = Symbol();
function vQ(A2) {
  let I2 = A2[Ki];
  if (!I2) {
    const g = dD(A2), E2 = $Q(A2), D2 = E2.g;
    I2 = D2 ? (o, s) => D2(o, s, E2) : (o, s) => {
      for (; sD(s) && s.h != 4; ) {
        var N2 = s.m, y2 = E2[N2];
        if (!y2) {
          var U2 = E2.ha;
          U2 && (U2 = U2[N2]) && (y2 = E2[N2] = z0(U2));
        }
        y2 && y2(s, o, N2) || (N2 = (y2 = s).l, OC(y2), y2.ga ? y2 = void 0 : (U2 = y2.g.g - N2, y2.g.g = N2, y2 = wD(y2.g, U2)), N2 = o, y2 && (uI || (uI = Symbol()), (U2 = N2[uI]) ? U2.push(y2) : N2[uI] = [y2]));
      }
      g === eD || g === nD || g.Oa || (o[gC || (gC = Symbol())] = g);
    }, A2[Ki] = I2;
  }
  return I2;
}
function z0(A2) {
  const I2 = (A2 = qD(A2))[0].g;
  if (A2 = A2[1]) {
    const g = vQ(A2), E2 = $Q(A2).S;
    return (D2, o, s) => I2(D2, o, s, E2, g);
  }
  return I2;
}
let eD, nD;
const PC = Symbol();
function v0(A2, I2, g) {
  const E2 = g[1];
  let D2;
  if (E2) {
    const o = E2[PC];
    D2 = o ? o.S : oB(E2[0]), A2[I2] = o ?? E2;
  }
  D2 && D2 === pQ ? (A2.na || (A2.na = [])).push(I2) : g[0] && (A2.oa || (A2.oa = [])).push(I2);
}
function Ui(A2, I2) {
  return [A2.l, !I2 || 0 < I2[0] ? void 0 : I2];
}
function dD(A2) {
  var I2 = A2[PC];
  if (I2)
    return I2;
  if (!(I2 = _Q(A2, A2[PC] = {}, Ui, Ui, v0)).oa && !I2.na) {
    let g = true;
    for (let E2 in I2) {
      isNaN(E2) || (g = false);
      break;
    }
    g ? (I2 = oB(A2[0]) === pQ, I2 = A2[PC] = I2 ? nD || (nD = { S: oB(true) }) : eD || (eD = {})) : I2.Oa = true;
  }
  return I2;
}
function _0(A2, I2, g) {
  A2[I2] = g;
}
function _Q(A2, I2, g, E2, D2 = _0) {
  I2.S = oB(A2[0]);
  let o = 0;
  var s = A2[++o];
  s && s.constructor === Object && (I2.ha = s, typeof (s = A2[++o]) == "function" && (I2.g = s, I2.h = A2[++o], s = A2[++o]));
  const N2 = {};
  for (; Array.isArray(s) && typeof s[0] == "number" && 0 < s[0]; ) {
    for (var y2 = 0; y2 < s.length; y2++)
      N2[s[y2]] = s;
    s = A2[++o];
  }
  for (y2 = 1; s !== void 0; ) {
    let d;
    typeof s == "number" && (y2 += s, s = A2[++o]);
    var U2 = void 0;
    if (s instanceof rg ? d = s : (d = is, o--), d.qa) {
      s = A2[++o], U2 = A2;
      var L2 = o;
      typeof s == "function" && (s = s(), U2[L2] = s), U2 = s;
    }
    for (L2 = y2 + 1, typeof (s = A2[++o]) == "number" && 0 > s && (L2 -= s, s = A2[++o]); y2 < L2; y2++) {
      const e = N2[y2];
      D2(I2, y2, U2 ? E2(d, U2, e) : g(d, e));
    }
  }
  return I2;
}
const ki = Symbol();
function lD(A2) {
  let I2 = A2[ki];
  if (!I2) {
    const g = SB(A2);
    I2 = (E2, D2) => fD(E2, D2, g), A2[ki] = I2;
  }
  return I2;
}
const zC = Symbol();
function $0(A2) {
  return A2.h;
}
function As(A2, I2) {
  let g, E2;
  const D2 = A2.h;
  return (o, s, N2) => D2(o, s, N2, E2 || (E2 = SB(I2).S), g || (g = lD(I2)));
}
function SB(A2) {
  let I2 = A2[zC];
  return I2 || (I2 = _Q(A2, A2[zC] = {}, $0, As), vC in A2 && zC in A2 && (A2.length = 0), I2);
}
const vC = Symbol();
function Is(A2, I2) {
  const g = A2.g;
  return I2 ? (E2, D2, o) => g(E2, D2, o, I2) : g;
}
function gs(A2, I2, g) {
  const E2 = A2.g;
  let D2, o;
  return (s, N2, y2) => E2(s, N2, y2, o || (o = $Q(I2).S), D2 || (D2 = vQ(I2)), g);
}
function $Q(A2) {
  let I2 = A2[vC];
  return I2 || (dD(A2), I2 = _Q(A2, A2[vC] = {}, Is, gs), vC in A2 && zC in A2 && (A2.length = 0), I2);
}
function Mi(A2, I2) {
  var g = A2[I2];
  if (g)
    return g;
  if ((g = A2.ha) && (g = g[I2])) {
    var E2 = (g = qD(g))[0].h;
    if (g = g[1]) {
      const D2 = lD(g), o = SB(g).S;
      g = (g = A2.h) ? g(o, D2) : (s, N2, y2) => E2(s, N2, y2, o, D2);
    } else
      g = E2;
    return A2[I2] = g;
  }
}
function fD(A2, I2, g) {
  for (var E2 = _(A2), D2 = +!!(512 & E2) - 1, o = A2.length, s = 512 & E2 ? 1 : 0, N2 = o + (256 & E2 ? -1 : 0); s < N2; s++) {
    const y2 = A2[s];
    if (y2 == null)
      continue;
    const U2 = s - D2, L2 = Mi(g, U2);
    L2 && L2(I2, y2, U2);
  }
  if (256 & E2) {
    E2 = A2[o - 1];
    for (let y2 in E2)
      D2 = +y2, Number.isNaN(D2) || (o = E2[y2]) != null && (N2 = Mi(g, D2)) && N2(I2, o, D2);
  }
  if (A2 = uI ? A2[uI] : void 0)
    for (Jg(I2, I2.g.end()), g = 0; g < A2.length; g++)
      Jg(I2, rQ(A2[g]) || RB());
}
function uA(A2, I2) {
  return new rg(A2, I2, false, false);
}
function lg(A2, I2) {
  return new rg(A2, I2, true, false);
}
function JB(A2, I2) {
  return new rg(A2, I2, false, true);
}
function pA(A2, I2, g) {
  EA(A2, _(A2), I2, g);
}
var Cs = JB(function(A2, I2, g, E2, D2) {
  return A2.h === 2 && (A2 = iC(A2, Gg([void 0, void 0], E2), D2), tI(E2 = _(I2)), (D2 = HI(I2, E2, g)) instanceof QI ? 2 & D2.O ? ((D2 = D2.X()).push(A2), EA(I2, E2, g, D2)) : D2.Ta(A2) : Array.isArray(D2) ? (2 & FA(D2) && EA(I2, E2, g, D2 = LD(D2)), D2.push(A2)) : EA(I2, E2, g, [A2]), true);
}, function(A2, I2, g, E2, D2) {
  if (I2 instanceof QI)
    I2.forEach((o, s) => {
      DQ(A2, g, Gg([s, o], E2), D2);
    });
  else if (Array.isArray(I2))
    for (let o = 0; o < I2.length; o++) {
      const s = I2[o];
      Array.isArray(s) && DQ(A2, g, Gg(s, E2), D2);
    }
});
function bD(A2, I2, g) {
  A:
    if (I2 != null) {
      if (kB(I2)) {
        if (typeof I2 == "string") {
          I2 = TQ(I2);
          break A;
        }
        if (typeof I2 == "number") {
          I2 = mQ(I2);
          break A;
        }
      }
      I2 = void 0;
    }
  I2 != null && (typeof I2 == "string" && oi(I2), I2 != null && (DI(A2, g, 0), typeof I2 == "number" ? (A2 = A2.g, Dg(I2), CB(A2, BA, MA)) : (g = oi(I2), CB(A2.g, g.h, g.g))));
}
function VD(A2, I2, g) {
  (I2 = eg(I2)) != null && I2 != null && (DI(A2, g, 0), yB(A2.g, I2));
}
function xD(A2, I2, g) {
  (I2 = KD(I2)) != null && (DI(A2, g, 0), A2.g.g.push(I2 ? 1 : 0));
}
function WD(A2, I2, g) {
  (I2 = CC(I2)) != null && KB(A2, g, vi(I2));
}
function cB(A2, I2, g, E2, D2) {
  DQ(A2, g, I2 instanceof n ? I2.s : Array.isArray(I2) ? Gg(I2, E2) : void 0, D2);
}
function ZD(A2, I2, g) {
  (I2 = I2 == null || typeof I2 == "string" || aB(I2) || I2 instanceof TI ? I2 : void 0) != null && KB(A2, g, eQ(I2).buffer);
}
function mD(A2, I2, g) {
  return (A2.h === 5 || A2.h === 2) && (I2 = ng(I2, _(I2), g, 2, false), A2.h == 2 ? NB(A2, iQ, I2) : I2.push(iQ(A2.g)), true);
}
var JA, bI = uA(function(A2, I2, g) {
  if (A2.h !== 1)
    return false;
  var E2 = A2.g;
  A2 = EQ(E2);
  const D2 = EQ(E2);
  E2 = 2 * (D2 >> 31) + 1;
  const o = D2 >>> 20 & 2047;
  return A2 = 4294967296 * (1048575 & D2) + A2, pA(I2, g, o == 2047 ? A2 ? NaN : 1 / 0 * E2 : o == 0 ? E2 * Math.pow(2, -1074) * A2 : E2 * Math.pow(2, o - 1075) * (A2 + 4503599627370496)), true;
}, function(A2, I2, g) {
  (I2 = PI(I2)) != null && (DI(A2, g, 1), A2 = A2.g, (g = DD || (DD = new DataView(new ArrayBuffer(8)))).setFloat64(0, +I2, true), BA = g.getUint32(0, true), MA = g.getUint32(4, true), IC(A2, BA), IC(A2, MA));
}), cA = uA(function(A2, I2, g) {
  return A2.h === 5 && (pA(I2, g, iQ(A2.g)), true);
}, function(A2, I2, g) {
  (I2 = PI(I2)) != null && (DI(A2, g, 5), A2 = A2.g, dQ(I2), IC(A2, BA));
}), Bs = lg(mD, function(A2, I2, g) {
  if ((I2 = dg(PI, I2)) != null)
    for (let s = 0; s < I2.length; s++) {
      var E2 = A2, D2 = g, o = I2[s];
      o != null && (DI(E2, D2, 5), E2 = E2.g, dQ(o), IC(E2, BA));
    }
}), AE = lg(mD, function(A2, I2, g) {
  if ((I2 = dg(PI, I2)) != null && I2.length) {
    DI(A2, g, 2), DC(A2.g, 4 * I2.length);
    for (let E2 = 0; E2 < I2.length; E2++)
      g = A2.g, dQ(I2[E2]), IC(g, BA);
  }
}), OI = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, bQ(A2.g, lQ)), true);
}, bD), AQ = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, (A2 = bQ(A2.g, lQ)) === 0 ? void 0 : A2), true);
}, bD), Qs = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, bQ(A2.g, QQ)), true);
}, function(A2, I2, g) {
  A:
    if (I2 != null) {
      if (kB(I2)) {
        if (typeof I2 == "string") {
          var E2 = Math.trunc(Number(I2));
          Number.isSafeInteger(E2) && 0 <= E2 ? I2 = String(E2) : ((E2 = I2.indexOf(".")) !== -1 && (I2 = I2.substring(0, E2)), hi(I2) || (hB(I2), I2 = gB(BA, MA)));
          break A;
        }
        if (typeof I2 == "number") {
          I2 = 0 <= (I2 = Math.trunc(I2)) && Number.isSafeInteger(I2) ? I2 : function(D2) {
            if (0 > D2) {
              Dg(D2);
              const o = gB(BA, MA);
              return D2 = Number(o), Number.isSafeInteger(D2) ? D2 : o;
            }
            return hi(String(D2)) ? D2 : (Dg(D2), QQ(BA, MA));
          }(I2);
          break A;
        }
      }
      I2 = void 0;
    }
  I2 != null && (typeof I2 == "string" && ii(I2), I2 != null && (DI(A2, g, 0), typeof I2 == "number" ? (A2 = A2.g, Dg(I2), CB(A2, BA, MA)) : (g = ii(I2), CB(A2.g, g.h, g.g))));
}), KA = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, pI(A2.g)), true);
}, VD), IE = lg(function(A2, I2, g) {
  return (A2.h === 0 || A2.h === 2) && (I2 = ng(I2, _(I2), g, 2, false), A2.h == 2 ? NB(A2, pI, I2) : I2.push(pI(A2.g)), true);
}, function(A2, I2, g) {
  if ((I2 = dg(eg, I2)) != null && I2.length) {
    g = WQ(A2, g);
    for (let E2 = 0; E2 < I2.length; E2++)
      yB(A2.g, I2[E2]);
    ZQ(A2, g);
  }
}), Yg = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, (A2 = pI(A2.g)) === 0 ? void 0 : A2), true);
}, VD), SA = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, VQ(A2.g)), true);
}, xD), $g = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, (A2 = VQ(A2.g)) === false ? void 0 : A2), true);
}, xD), xA = lg(function(A2, I2, g) {
  return A2.h === 2 && (sC(I2, g, P0, A2 = xQ(A2)), true);
}, function(A2, I2, g) {
  if ((I2 = dg(CC, I2)) != null)
    for (let s = 0; s < I2.length; s++) {
      var E2 = A2, D2 = g, o = I2[s];
      o != null && KB(E2, D2, vi(o));
    }
}), jI = uA(function(A2, I2, g) {
  return A2.h === 2 && (pA(I2, g, (A2 = xQ(A2)) === "" ? void 0 : A2), true);
}, WD), DA = uA(function(A2, I2, g) {
  return A2.h === 2 && (pA(I2, g, xQ(A2)), true);
}, WD), Es = JB(function(A2, I2, g, E2, D2) {
  return A2.h === 2 && (iC(A2, zQ(I2, E2, g, true), D2), true);
}, cB), is = JB(function(A2, I2, g, E2, D2) {
  return A2.h === 2 && (iC(A2, zQ(I2, E2, g), D2), true);
}, cB);
JA = new rg(function(A2, I2, g, E2, D2) {
  if (A2.h !== 2)
    return false;
  E2 = Gg(void 0, E2);
  let o = _(I2);
  tI(o);
  let s = ng(I2, o, g, 3);
  return o = _(I2), 4 & FA(s) && (s = WA(s), NA(s, -2079 & (1 | FA(s))), EA(I2, o, g, s)), s.push(E2), iC(A2, E2, D2), true;
}, function(A2, I2, g, E2, D2) {
  if (Array.isArray(I2))
    for (let o = 0; o < I2.length; o++)
      cB(A2, I2[o], g, E2, D2);
}, true, true);
var oA = JB(function(A2, I2, g, E2, D2, o) {
  if (A2.h !== 2)
    return false;
  let s = _(I2);
  return tI(s), (o = PQ(I2, s, o)) && g !== o && EA(I2, s, o), iC(A2, I2 = zQ(I2, E2, g), D2), true;
}, cB), TD = uA(function(A2, I2, g) {
  return A2.h === 2 && (pA(I2, g, FD(A2)), true);
}, ZD), Ds = lg(function(A2, I2, g) {
  return (A2.h === 0 || A2.h === 2) && (I2 = ng(I2, _(I2), g, 2, false), A2.h == 2 ? NB(A2, XI, I2) : I2.push(XI(A2.g)), true);
}, function(A2, I2, g) {
  if ((I2 = dg(W0, I2)) != null)
    for (let s = 0; s < I2.length; s++) {
      var E2 = A2, D2 = g, o = I2[s];
      o != null && (DI(E2, D2, 0), DC(E2.g, o));
    }
}), LI = uA(function(A2, I2, g) {
  return A2.h === 0 && (pA(I2, g, pI(A2.g)), true);
}, function(A2, I2, g) {
  (I2 = eg(I2)) != null && (I2 = parseInt(I2, 10), DI(A2, g, 0), yB(A2.g, I2));
}), os = lg(function(A2, I2, g) {
  return (A2.h === 0 || A2.h === 2) && (I2 = ng(I2, _(I2), g, 2, false), A2.h == 2 ? NB(A2, d0, I2) : I2.push(pI(A2.g)), true);
}, function(A2, I2, g) {
  if ((I2 = dg(eg, I2)) != null && I2.length) {
    g = WQ(A2, g);
    for (let E2 = 0; E2 < I2.length; E2++)
      yB(A2.g, I2[E2]);
    ZQ(A2, g);
  }
});
class Gs {
  constructor(I2, g) {
    this.h = I2, this.g = g, this.l = P, this.m = V, this.defaultValue = void 0;
  }
}
function hI(A2, I2) {
  return new Gs(A2, I2);
}
function zI(A2, I2) {
  return (g, E2) => {
    A: {
      if (mC.length) {
        const o = mC.pop();
        o.o(E2), zB(o.g, g, E2), g = o;
      } else
        g = new class {
          constructor(o, s) {
            if (Ei.length) {
              const N2 = Ei.pop();
              zB(N2, o, s), o = N2;
            } else
              o = new class {
                constructor(N2, y2) {
                  this.h = null, this.m = false, this.g = this.l = this.j = 0, zB(this, N2, y2);
                }
                clear() {
                  this.h = null, this.m = false, this.g = this.l = this.j = 0, this.aa = false;
                }
              }(o, s);
            this.g = o, this.l = this.g.g, this.h = this.m = -1, this.o(s);
          }
          o({ ga: o = false } = {}) {
            this.ga = o;
          }
        }(g, E2);
      try {
        const o = new A2(), s = o.s;
        vQ(I2)(s, g), gC && delete s[gC];
        var D2 = o;
        break A;
      } finally {
        g.g.clear(), g.m = -1, g.h = -1, 100 > mC.length && mC.push(g);
      }
      D2 = void 0;
    }
    return D2;
  };
}
function gE(A2) {
  return function() {
    const I2 = new class {
      constructor() {
        this.l = [], this.h = 0, this.g = new class {
          constructor() {
            this.g = [];
          }
          length() {
            return this.g.length;
          }
          end() {
            const s = this.g;
            return this.g = [], s;
          }
        }();
      }
    }();
    fD(this.s, I2, SB(A2)), Jg(I2, I2.g.end());
    const g = new Uint8Array(I2.h), E2 = I2.l, D2 = E2.length;
    let o = 0;
    for (let s = 0; s < D2; s++) {
      const N2 = E2[s];
      g.set(N2, o), o += N2.length;
    }
    return I2.l = [g], g;
  };
}
var uD = [0, jI, uA(function(A2, I2, g) {
  return A2.h === 2 && (pA(I2, g, (A2 = FD(A2)) === Sg() ? void 0 : A2), true);
}, function(A2, I2, g) {
  if (I2 != null) {
    if (I2 instanceof n) {
      const E2 = I2.Va;
      return void (E2 && (I2 = E2(I2), I2 != null && KB(A2, g, eQ(I2).buffer)));
    }
    if (Array.isArray(I2))
      return;
  }
  ZD(A2, I2, g);
})], ws = [0, DA], pD = [0, KA, LI, SA, -1, IE, LI, -1], ss = [0, SA, -1], XD = class extends n {
  constructor() {
    super();
  }
};
XD.A = [6];
var OD = [0, SA, DA, SA, LI, -1, os, DA, -1, ss, LI], jD = [0, DA, -2], Si = class extends n {
  constructor() {
    super();
  }
}, PD = [0], zD = [0, KA, SA, -2], iI = class extends n {
  constructor(A2) {
    super(A2, 2);
  }
}, wA = {}, Fs = [-2, wA, SA];
wA[336783863] = [0, DA, SA, -1, KA, [0, [1, 2, 3, 4, 5], oA, PD, oA, OD, oA, jD, oA, zD, oA, pD], ws];
var as = [0, jI, $g], vD = [0, AQ, -1, $g, -3, AQ, IE, jI, Yg, AQ, -1, $g, Yg, $g, -2, jI], FC = [-1, {}], _D = [0, DA, 1, FC], $D = [0, DA, xA, FC];
function oI(A2, I2) {
  I2 = wC(I2), A2 = A2.s;
  let g = _(A2);
  tI(g), EA(A2, g, 2, I2 === "" ? void 0 : I2);
}
function iA(A2, I2) {
  sC(A2.s, 3, GC, I2);
}
function gA(A2, I2) {
  sC(A2.s, 4, GC, I2);
}
var ZA = class extends n {
  constructor(A2) {
    super(A2, 500);
  }
  o(A2) {
    return V(this, 0, 7, A2);
  }
};
ZA.A = [3, 4, 5, 6, 8, 13, 17, 1005];
var Rs = [-500, jI, -1, xA, -3, Fs, JA, uD, Yg, -1, _D, $D, JA, as, jI, vD, Yg, xA, 987, xA], hs = [0, jI, -1, FC], Ns = [-500, DA, -1, [-1, {}], 998, DA], ys = [-500, DA, xA, -1, [-2, {}, SA], 997, xA, -1], Ks = [-500, DA, xA, FC, 998, xA];
function GI(A2, I2) {
  FQ(A2, ZA, I2);
}
function sA(A2, I2) {
  sC(A2.s, 10, GC, I2);
}
function GA(A2, I2) {
  sC(A2.s, 15, GC, I2);
}
var XA = class extends n {
  constructor(A2) {
    super(A2, 500);
  }
  o(A2) {
    return V(this, 0, 1001, A2);
  }
};
XA.A = [1, 6, 7, 9, 10, 15, 16, 17, 14, 1002];
var Ao = [-500, JA, Rs, 4, JA, Ns, JA, ys, Yg, JA, Ks, xA, Yg, _D, $D, JA, hs, xA, -2, vD, jI, -1, $g, 979, FC, JA, uD], Us = zI(XA, Ao);
XA.prototype.g = gE(Ao);
var ks = [0, JA, [0, KA, -2]], Ms = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Ss = [0, KA, cA, DA, -1], CE = class extends n {
  constructor(A2) {
    super(A2);
  }
  g() {
    return xI(this, Ms, 1);
  }
};
CE.A = [1];
var Io = [0, JA, Ss], BE = zI(CE, Io), Js = [0, KA, cA], cs = [0, KA, -1, ks], Ys = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Ls = [0, KA, -3], ts = [0, cA, -3], Hs = class extends n {
  constructor(A2) {
    super(A2);
  }
}, rs = [0, cA, -1, DA, cA], _C = class extends n {
  constructor(A2) {
    super(A2);
  }
  h() {
    return P(this, Ys, 2);
  }
  g() {
    return xI(this, Hs, 5);
  }
};
_C.A = [5];
var qs = [0, LI, Ls, ts, cs, JA, rs], go = class extends n {
  constructor(A2) {
    super(A2);
  }
};
go.A = [1, 2, 3, 8, 9];
var Co = zI(go, [0, xA, IE, AE, qs, DA, -1, OI, JA, Js, xA, OI]), Bo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, es = [0, cA, -4], Qo = class extends n {
  constructor(A2) {
    super(A2);
  }
};
Qo.A = [1];
var QE = zI(Qo, [0, JA, es]), Eo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, ns = [0, cA, -4], io = class extends n {
  constructor(A2) {
    super(A2);
  }
};
io.A = [1];
var YB = zI(io, [0, JA, ns]), Do = class extends n {
  constructor(A2) {
    super(A2);
  }
};
Do.A = [3];
var ds = [0, KA, -1, AE, LI], oo = class extends n {
  constructor() {
    super();
  }
};
oo.prototype.g = gE([0, cA, -4, OI]);
var ls = class extends n {
  constructor(A2) {
    super(A2);
  }
}, fs = [0, 1, KA, DA, Io], Go = class extends n {
  constructor(A2) {
    super(A2);
  }
};
Go.A = [1];
var bs = zI(Go, [0, JA, fs, OI]), aQ = class extends n {
  constructor(A2) {
    super(A2);
  }
};
aQ.A = [1];
var Vs = class extends n {
  constructor(A2) {
    super(A2);
  }
  ua() {
    const A2 = JD(this);
    return A2 ?? Sg();
  }
}, xs = class extends n {
  constructor(A2) {
    super(A2);
  }
}, wo = [1, 2], Ws = [0, wo, oA, [0, AE], oA, [0, TD], KA, DA], so = class extends n {
  constructor(A2) {
    super(A2);
  }
};
so.A = [1];
var Zs = zI(so, [0, JA, Ws, OI]), LB = class extends n {
  constructor(A2) {
    super(A2);
  }
};
LB.A = [4, 5];
var Fo = [0, DA, KA, cA, xA, -1], Ji = class extends n {
  constructor(A2) {
    super(A2);
  }
}, ms = [0, SA, -1], ci = class extends n {
  constructor(A2) {
    super(A2);
  }
}, $C = [1, 2, 3, 4, 5], wB = class extends n {
  constructor(A2) {
    super(A2);
  }
  g() {
    return JD(this) != null;
  }
  h() {
    return EI(this, 2) != null;
  }
}, ao = [0, TD, DA, [0, KA, OI, -1], [0, Qs, OI]], yA = class extends n {
  constructor(A2) {
    super(A2);
  }
  g() {
    return KD(cg(this, 2)) ?? false;
  }
}, YA = [0, ao, SA, [0, $C, oA, zD, oA, OD, oA, pD, oA, PD, oA, jD], LI], EE = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Ro = [0, YA, cA, -1, KA], Ts = hI(502141897, EE);
wA[502141897] = Ro;
var ho = [0, ao];
wA[512499200] = ho;
var No = [0, ho];
wA[515723506] = No;
var us = zI(class extends n {
  constructor(A2) {
    super(A2);
  }
}, [0, [0, LI, -1, Bs, Ds], ds]), yo = [0, YA];
wA[508981768] = yo;
var ps = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Ko = [0, YA, cA, yo, SA], Uo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, ko = [0, YA, Ro, Ko, cA, No];
wA[508968149] = Ko;
var Xs = hI(508968150, Uo);
wA[508968150] = ko;
var Mo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Os = hI(513916220, Mo);
wA[513916220] = [0, YA, ko, KA];
var Ug = class extends n {
  constructor(A2) {
    super(A2);
  }
  h() {
    return P(this, LB, 2);
  }
  g() {
    QA(this, 2);
  }
}, So = [0, YA, Fo];
wA[478825465] = So;
var Jo = [0, YA];
wA[478825422] = Jo;
var js = class extends n {
  constructor(A2) {
    super(A2);
  }
}, co = [0, YA, Jo, So, -1], Yo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Lo = [0, YA, cA, KA], to = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Ho = [0, YA, cA], iE = class extends n {
  constructor(A2) {
    super(A2);
  }
}, ro = [0, YA, Lo, Ho, cA], qo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Ps = [0, YA, ro, co];
wA[463370452] = co, wA[464864288] = Lo, wA[474472470] = Ho;
var zs = hI(462713202, iE);
wA[462713202] = ro;
var vs = hI(479097054, qo);
wA[479097054] = Ps;
var eo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, _s = hI(456383383, eo);
wA[456383383] = [0, YA, Fo];
var no = class extends n {
  constructor(A2) {
    super(A2);
  }
}, $s = hI(476348187, no);
wA[476348187] = [0, YA, ms];
var lo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, fo = [0, LI, -1], RQ = class extends n {
  constructor(A2) {
    super(A2);
  }
};
RQ.A = [3];
var AF = hI(458105876, class extends n {
  constructor(A2) {
    super(A2);
  }
  g() {
    var A2 = this.s;
    const I2 = _(A2);
    var g = 2 & I2;
    return A2 = function(E2, D2, o) {
      var s = RQ;
      const N2 = 2 & D2;
      let y2 = false;
      if (o == null) {
        if (N2)
          return yi();
        o = [];
      } else if (o.constructor === QI) {
        if (!(2 & o.O) || N2)
          return o;
        o = o.X();
      } else
        Array.isArray(o) ? y2 = !!(2 & FA(o)) : o = [];
      if (N2) {
        if (!o.length)
          return yi();
        y2 || (y2 = true, qg(o));
      } else
        y2 && (y2 = false, o = LD(o));
      return y2 || (64 & FA(o) ? BB(o, 32) : 32 & D2 && UB(o, 32)), EA(E2, D2, 2, s = new QI(o, s, Z0, void 0), false), s;
    }(A2, I2, HI(A2, I2, 2)), A2 == null || !g && RQ && (A2.xa = true), g = A2;
  }
});
wA[458105876] = [0, fo, Cs, [true, OI, [0, DA, -1, xA]]];
var DE = class extends n {
  constructor(A2) {
    super(A2);
  }
}, bo = hI(458105758, DE);
wA[458105758] = [0, YA, DA, fo];
var oE = class extends n {
  constructor(A2) {
    super(A2);
  }
};
oE.A = [5, 6];
var IF = hI(443442058, oE);
wA[443442058] = [0, YA, DA, KA, cA, xA, -1];
var gF = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Vo = [0, YA, cA, -1, KA];
wA[514774813] = Vo;
var CF = class extends n {
  constructor(A2) {
    super(A2);
  }
}, xo = [0, YA, cA, SA], Wo = class extends n {
  constructor(A2) {
    super(A2);
  }
}, BF = [0, YA, Vo, xo, cA];
wA[518928384] = xo;
var QF = hI(516587230, Wo);
function hQ(A2, I2) {
  return I2 = I2 ? I2.clone() : new LB(), A2.displayNamesLocale !== void 0 ? QA(I2, 1, wC(A2.displayNamesLocale)) : A2.displayNamesLocale === void 0 && QA(I2, 1), A2.maxResults !== void 0 ? YI(I2, 2, A2.maxResults) : "maxResults" in A2 && QA(I2, 2), A2.scoreThreshold !== void 0 ? x(I2, 3, A2.scoreThreshold) : "scoreThreshold" in A2 && QA(I2, 3), A2.categoryAllowlist !== void 0 ? GB(I2, 4, A2.categoryAllowlist) : "categoryAllowlist" in A2 && QA(I2, 4), A2.categoryDenylist !== void 0 ? GB(I2, 5, A2.categoryDenylist) : "categoryDenylist" in A2 && QA(I2, 5), I2;
}
function Zo(A2, I2 = -1, g = "") {
  return { categories: A2.map((E2) => ({ index: cI(BI(E2, 1)) ?? -1, score: fA(E2, 2) ?? 0, categoryName: EI(E2, 3) ?? "" ?? "", displayName: EI(E2, 4) ?? "" ?? "" })), headIndex: I2, headName: g };
}
function mo(A2) {
  var s, N2;
  var I2 = kg(A2, 3, PI), g = kg(A2, 2, eg), E2 = kg(A2, 1, CC), D2 = kg(A2, 9, CC);
  const o = { categories: [], keypoints: [] };
  for (let y2 = 0; y2 < I2.length; y2++)
    o.categories.push({ score: I2[y2], index: g[y2] ?? -1, categoryName: E2[y2] ?? "", displayName: D2[y2] ?? "" });
  if ((I2 = (s = P(A2, _C, 4)) == null ? void 0 : s.h()) && (o.boundingBox = { originX: BI(I2, 1) ?? 0, originY: BI(I2, 2) ?? 0, width: BI(I2, 3) ?? 0, height: BI(I2, 4) ?? 0, angle: 0 }), (N2 = P(A2, _C, 4)) == null ? void 0 : N2.g().length)
    for (const y2 of P(A2, _C, 4).g())
      o.keypoints.push({ x: jC(y2, 1) ?? 0, y: jC(y2, 2) ?? 0, score: jC(y2, 4) ?? 0, label: EI(y2, 3) ?? "" });
  return o;
}
function GE(A2) {
  const I2 = [];
  for (const g of xI(A2, Eo, 1))
    I2.push({ x: fA(g, 1) ?? 0, y: fA(g, 2) ?? 0, z: fA(g, 3) ?? 0 });
  return I2;
}
function To(A2) {
  const I2 = [];
  for (const g of xI(A2, Bo, 1))
    I2.push({ x: fA(g, 1) ?? 0, y: fA(g, 2) ?? 0, z: fA(g, 3) ?? 0 });
  return I2;
}
function Yi(A2) {
  return Array.from(A2, (I2) => 127 < I2 ? I2 - 256 : I2);
}
function Li(A2, I2) {
  if (A2.length !== I2.length)
    throw Error(`Cannot compute cosine similarity between embeddings of different sizes (${A2.length} vs. ${I2.length}).`);
  let g = 0, E2 = 0, D2 = 0;
  for (let o = 0; o < A2.length; o++)
    g += A2[o] * I2[o], E2 += A2[o] * A2[o], D2 += I2[o] * I2[o];
  if (0 >= E2 || 0 >= D2)
    throw Error("Cannot compute cosine similarity on embedding with 0 norm.");
  return g / Math.sqrt(E2 * D2);
}
let uC;
wA[516587230] = BF;
const EF = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11]);
async function uo() {
  if (uC === void 0)
    try {
      await WebAssembly.instantiate(EF), uC = true;
    } catch {
      uC = false;
    }
  return uC;
}
async function IQ(A2, I2 = "") {
  const g = await uo() ? "wasm_internal" : "wasm_nosimd_internal";
  return { wasmLoaderPath: `${I2}/${A2}_${g}.js`, wasmBinaryPath: `${I2}/${A2}_${g}.wasm` };
}
var jg = class {
};
function po() {
  const A2 = navigator.userAgent;
  return A2.includes("Safari") && !A2.includes("Chrome");
}
async function ti(A2) {
  if (typeof importScripts != "function") {
    const I2 = document.createElement("script");
    return I2.src = A2.toString(), I2.crossOrigin = "anonymous", new Promise((g, E2) => {
      I2.addEventListener("load", () => {
        g();
      }, false), I2.addEventListener("error", (D2) => {
        E2(D2);
      }, false), document.body.appendChild(I2);
    });
  }
  importScripts(A2.toString());
}
function l(A2, I2, g) {
  A2.m || console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target"), g(I2 = A2.i.stringToNewUTF8(I2)), A2.i._free(I2);
}
function Hi(A2, I2, g) {
  if (!A2.i.canvas)
    throw Error("No OpenGL canvas configured.");
  if (g ? A2.i._bindTextureToStream(g) : A2.i._bindTextureToCanvas(), !(g = A2.i.canvas.getContext("webgl2") || A2.i.canvas.getContext("webgl")))
    throw Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");
  return A2.i.gpuOriginForWebTexturesIsBottomLeft && g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL, true), g.texImage2D(g.TEXTURE_2D, 0, g.RGBA, g.RGBA, g.UNSIGNED_BYTE, I2), A2.i.gpuOriginForWebTexturesIsBottomLeft && g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL, false), I2.videoWidth ? (g = I2.videoWidth, I2 = I2.videoHeight) : I2.naturalWidth ? (g = I2.naturalWidth, I2 = I2.naturalHeight) : (g = I2.width, I2 = I2.height), !A2.l || g === A2.i.canvas.width && I2 === A2.i.canvas.height || (A2.i.canvas.width = g, A2.i.canvas.height = I2), [g, I2];
}
function ri(A2, I2, g) {
  A2.m || console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");
  const E2 = new Uint32Array(I2.length);
  for (let D2 = 0; D2 < I2.length; D2++)
    E2[D2] = A2.i.stringToNewUTF8(I2[D2]);
  I2 = A2.i._malloc(4 * E2.length), A2.i.HEAPU32.set(E2, I2 >> 2), g(I2);
  for (const D2 of E2)
    A2.i._free(D2);
  A2.i._free(I2);
}
function lI(A2, I2, g) {
  A2.i.simpleListeners = A2.i.simpleListeners || {}, A2.i.simpleListeners[I2] = g;
}
function Eg(A2, I2, g) {
  let E2 = [];
  A2.i.simpleListeners = A2.i.simpleListeners || {}, A2.i.simpleListeners[I2] = (D2, o, s) => {
    o ? (g(E2, s), E2 = []) : E2.push(D2);
  };
}
jg.forVisionTasks = function(A2) {
  return IQ("vision", A2);
}, jg.forTextTasks = function(A2) {
  return IQ("text", A2);
}, jg.forAudioTasks = function(A2) {
  return IQ("audio", A2);
}, jg.isSimdSupported = function() {
  return uo();
};
async function iF(A2, I2, g, E2) {
  return A2 = await (async (D2, o, s, N2, y2) => {
    if (o && await ti(o), !self.ModuleFactory || s && (await ti(s), !self.ModuleFactory))
      throw Error("ModuleFactory not set.");
    return self.Module && y2 && ((o = self.Module).locateFile = y2.locateFile, y2.mainScriptUrlOrBlob && (o.mainScriptUrlOrBlob = y2.mainScriptUrlOrBlob)), y2 = await self.ModuleFactory(self.Module || y2), self.ModuleFactory = self.Module = void 0, new D2(y2, N2);
  })(A2, g.wasmLoaderPath, g.assetLoaderPath, I2, { locateFile: (D2) => D2.endsWith(".wasm") ? g.wasmBinaryPath.toString() : g.assetBinaryPath && D2.endsWith(".data") ? g.assetBinaryPath.toString() : D2 }), await A2.o(E2), A2;
}
function qi(A2, I2) {
  const g = P(A2.baseOptions, wB, 1) || new wB();
  typeof I2 == "string" ? (QA(g, 2, wC(I2)), QA(g, 1)) : I2 instanceof Uint8Array && (QA(g, 1, ND(I2, false, false)), QA(g, 2)), V(A2.baseOptions, 0, 1, g);
}
function ei(A2) {
  try {
    const I2 = A2.F.length;
    if (I2 === 1)
      throw Error(A2.F[0].message);
    if (1 < I2)
      throw Error("Encountered multiple errors: " + A2.F.map((g) => g.message).join(", "));
  } finally {
    A2.F = [];
  }
}
function b(A2, I2) {
  A2.I = Math.max(A2.I, I2);
}
function wE(A2, I2) {
  A2.C = new ZA(), oI(A2.C, "PassThroughCalculator"), iA(A2.C, "free_memory"), gA(A2.C, "free_memory_unused_out"), sA(I2, "free_memory"), GI(I2, A2.C);
}
function QC(A2, I2) {
  iA(A2.C, I2), gA(A2.C, I2 + "_unused_out");
}
function sE(A2) {
  A2.g.addBoolToStream(true, "free_memory", A2.I);
}
var NQ = class {
  constructor(A2) {
    this.g = A2, this.F = [], this.I = 0, this.g.setAutoRenderToScreen(false);
  }
  l(A2, I2 = true) {
    var g, E2, D2, o, s, N2;
    if (I2) {
      const y2 = A2.baseOptions || {};
      if ((g = A2.baseOptions) != null && g.modelAssetBuffer && ((E2 = A2.baseOptions) != null && E2.modelAssetPath))
        throw Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");
      if (!((D2 = P(this.baseOptions, wB, 1)) != null && D2.g() || (o = P(this.baseOptions, wB, 1)) != null && o.h() || (s = A2.baseOptions) != null && s.modelAssetBuffer || (N2 = A2.baseOptions) != null && N2.modelAssetPath))
        throw Error("Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set");
      if (function(U2, L2) {
        let d = P(U2.baseOptions, ci, 3);
        if (!d) {
          var e = d = new ci(), AA = new Si();
          _g(e, 4, $C, AA);
        }
        "delegate" in L2 && (L2.delegate === "GPU" ? (L2 = d, e = new XD(), _g(L2, 2, $C, e)) : (L2 = d, e = new Si(), _g(L2, 4, $C, e))), V(U2.baseOptions, 0, 3, d);
      }(this, y2), y2.modelAssetPath)
        return fetch(y2.modelAssetPath.toString()).then((U2) => {
          if (U2.ok)
            return U2.arrayBuffer();
          throw Error(`Failed to fetch model: ${y2.modelAssetPath} (${U2.status})`);
        }).then((U2) => {
          try {
            this.g.i.FS_unlink("/model.dat");
          } catch {
          }
          this.g.i.FS_createDataFile("/", "model.dat", new Uint8Array(U2), true, false, false), qi(this, "/model.dat"), this.m(), this.N();
        });
      qi(this, y2.modelAssetBuffer);
    }
    return this.m(), this.N(), Promise.resolve();
  }
  N() {
  }
  da() {
    let A2;
    if (this.g.da((I2) => {
      A2 = Us(I2);
    }), !A2)
      throw Error("Failed to retrieve CalculatorGraphConfig");
    return A2;
  }
  setGraph(A2, I2) {
    this.g.attachErrorListener((g, E2) => {
      this.F.push(Error(E2));
    }), this.g.Ra(), this.g.setGraph(A2, I2), this.C = void 0, ei(this);
  }
  finishProcessing() {
    this.g.finishProcessing(), ei(this);
  }
  close() {
    this.C = void 0, this.g.closeGraph();
  }
};
function VI(A2, I2) {
  if (A2 === null)
    throw Error(`Unable to obtain required WebGL resource: ${I2}`);
  return A2;
}
NQ.prototype.close = NQ.prototype.close;
class DF {
  constructor(I2, g, E2, D2) {
    this.g = I2, this.h = g, this.m = E2, this.l = D2;
  }
  bind() {
    this.g.bindVertexArray(this.h);
  }
  close() {
    this.g.deleteVertexArray(this.h), this.g.deleteBuffer(this.m), this.g.deleteBuffer(this.l);
  }
}
function ni(A2, I2, g) {
  const E2 = A2.g;
  if (g = VI(E2.createShader(g), "Failed to create WebGL shader"), E2.shaderSource(g, I2), E2.compileShader(g), !E2.getShaderParameter(g, E2.COMPILE_STATUS))
    throw Error(`Could not compile WebGL shader: ${E2.getShaderInfoLog(g)}`);
  return E2.attachShader(A2.h, g), g;
}
function di(A2, I2) {
  const g = A2.g, E2 = VI(g.createVertexArray(), "Failed to create vertex array");
  g.bindVertexArray(E2);
  const D2 = VI(g.createBuffer(), "Failed to create buffer");
  g.bindBuffer(g.ARRAY_BUFFER, D2), g.enableVertexAttribArray(A2.N), g.vertexAttribPointer(A2.N, 2, g.FLOAT, false, 0, 0), g.bufferData(g.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), g.STATIC_DRAW);
  const o = VI(g.createBuffer(), "Failed to create buffer");
  return g.bindBuffer(g.ARRAY_BUFFER, o), g.enableVertexAttribArray(A2.M), g.vertexAttribPointer(A2.M, 2, g.FLOAT, false, 0, 0), g.bufferData(g.ARRAY_BUFFER, new Float32Array(I2 ? [0, 1, 0, 0, 1, 0, 1, 1] : [0, 0, 0, 1, 1, 1, 1, 0]), g.STATIC_DRAW), g.bindBuffer(g.ARRAY_BUFFER, null), g.bindVertexArray(null), new DF(g, E2, D2, o);
}
function FE(A2, I2) {
  if (A2.g) {
    if (I2 !== A2.g)
      throw Error("Cannot change GL context once initialized");
  } else
    A2.g = I2;
}
function aE(A2, I2, g, E2) {
  return FE(A2, I2), A2.h || (A2.m(), A2.F()), g ? (A2.u || (A2.u = di(A2, true)), g = A2.u) : (A2.v || (A2.v = di(A2, false)), g = A2.v), I2.useProgram(A2.h), g.bind(), A2.l(), A2 = E2(), g.g.bindVertexArray(null), A2;
}
function tB(A2, I2, g) {
  return FE(A2, I2), A2 = VI(I2.createTexture(), "Failed to create texture"), I2.bindTexture(I2.TEXTURE_2D, A2), I2.texParameteri(I2.TEXTURE_2D, I2.TEXTURE_WRAP_S, I2.CLAMP_TO_EDGE), I2.texParameteri(I2.TEXTURE_2D, I2.TEXTURE_WRAP_T, I2.CLAMP_TO_EDGE), I2.texParameteri(I2.TEXTURE_2D, I2.TEXTURE_MIN_FILTER, g ?? I2.LINEAR), I2.texParameteri(I2.TEXTURE_2D, I2.TEXTURE_MAG_FILTER, g ?? I2.LINEAR), I2.bindTexture(I2.TEXTURE_2D, null), A2;
}
function HB(A2, I2, g) {
  FE(A2, I2), A2.C || (A2.C = VI(I2.createFramebuffer(), "Failed to create framebuffe.")), I2.bindFramebuffer(I2.FRAMEBUFFER, A2.C), I2.framebufferTexture2D(I2.FRAMEBUFFER, I2.COLOR_ATTACHMENT0, I2.TEXTURE_2D, g, 0);
}
function RE(A2) {
  var I2;
  (I2 = A2.g) == null || I2.bindFramebuffer(A2.g.FRAMEBUFFER, null);
}
var hE = class {
  I() {
    return `
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D inputTexture;
  void main() {
    gl_FragColor = texture2D(inputTexture, vTex);
  }
 `;
  }
  m() {
    const A2 = this.g;
    if (this.h = VI(A2.createProgram(), "Failed to create WebGL program"), this.ta = ni(this, `
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`, A2.VERTEX_SHADER), this.sa = ni(this, this.I(), A2.FRAGMENT_SHADER), A2.linkProgram(this.h), !A2.getProgramParameter(this.h, A2.LINK_STATUS))
      throw Error(`Error during program linking: ${A2.getProgramInfoLog(this.h)}`);
    this.N = A2.getAttribLocation(this.h, "aVertex"), this.M = A2.getAttribLocation(this.h, "aTex");
  }
  F() {
  }
  l() {
  }
  close() {
    if (this.h) {
      const A2 = this.g;
      A2.deleteProgram(this.h), A2.deleteShader(this.ta), A2.deleteShader(this.sa);
    }
    this.C && this.g.deleteFramebuffer(this.C), this.v && this.v.close(), this.u && this.u.close();
  }
};
function fI(A2, I2) {
  switch (I2) {
    case 0:
      return A2.g.find((g) => g instanceof Uint8Array);
    case 1:
      return A2.g.find((g) => g instanceof Float32Array);
    case 2:
      return A2.g.find((g) => typeof WebGLTexture < "u" && g instanceof WebGLTexture);
    default:
      throw Error(`Type is not supported: ${I2}`);
  }
}
function yQ(A2) {
  var I2 = fI(A2, 1);
  if (!I2) {
    if (I2 = fI(A2, 0))
      I2 = new Float32Array(I2).map((E2) => E2 / 255);
    else {
      I2 = new Float32Array(A2.width * A2.height);
      const E2 = Lg(A2);
      var g = NE(A2);
      if (HB(g, E2, Xo(A2)), "iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in self.document) {
        g = new Float32Array(A2.width * A2.height * 4), E2.readPixels(0, 0, A2.width, A2.height, E2.RGBA, E2.FLOAT, g);
        for (let D2 = 0, o = 0; D2 < I2.length; ++D2, o += 4)
          I2[D2] = g[o];
      } else
        E2.readPixels(0, 0, A2.width, A2.height, E2.RED, E2.FLOAT, I2);
    }
    A2.g.push(I2);
  }
  return I2;
}
function Xo(A2) {
  let I2 = fI(A2, 2);
  if (!I2) {
    const g = Lg(A2);
    I2 = jo(A2);
    const E2 = yQ(A2), D2 = Oo(A2);
    g.texImage2D(g.TEXTURE_2D, 0, D2, A2.width, A2.height, 0, g.RED, g.FLOAT, E2), KQ(A2);
  }
  return I2;
}
function Lg(A2) {
  if (!A2.canvas)
    throw Error("Conversion to different image formats require that a canvas is passed when initializing the image.");
  return A2.h || (A2.h = VI(A2.canvas.getContext("webgl2"), "You cannot use a canvas that is already bound to a different type of rendering context.")), A2.h;
}
function Oo(A2) {
  if (A2 = Lg(A2), !pC)
    if (A2.getExtension("EXT_color_buffer_float") && A2.getExtension("OES_texture_float_linear") && A2.getExtension("EXT_float_blend"))
      pC = A2.R32F;
    else {
      if (!A2.getExtension("EXT_color_buffer_half_float"))
        throw Error("GPU does not fully support 4-channel float32 or float16 formats");
      pC = A2.R16F;
    }
  return pC;
}
function NE(A2) {
  return A2.l || (A2.l = new hE()), A2.l;
}
function jo(A2) {
  const I2 = Lg(A2);
  I2.viewport(0, 0, A2.width, A2.height), I2.activeTexture(I2.TEXTURE0);
  let g = fI(A2, 2);
  return g || (g = tB(NE(A2), I2, A2.m ? I2.LINEAR : I2.NEAREST), A2.g.push(g), A2.j = true), I2.bindTexture(I2.TEXTURE_2D, g), g;
}
function KQ(A2) {
  A2.h.bindTexture(A2.h.TEXTURE_2D, null);
}
var pC, qA = class {
  constructor(A2, I2, g, E2, D2, o, s) {
    this.g = A2, this.m = I2, this.j = g, this.canvas = E2, this.l = D2, this.width = o, this.height = s, this.j && --li === 0 && console.error("You seem to be creating MPMask instances without invoking .close(). This leaks resources.");
  }
  La() {
    return !!fI(this, 0);
  }
  ka() {
    return !!fI(this, 1);
  }
  P() {
    return !!fI(this, 2);
  }
  ja() {
    return (I2 = fI(A2 = this, 0)) || (I2 = yQ(A2), I2 = new Uint8Array(I2.map((g) => 255 * g)), A2.g.push(I2)), I2;
    var A2, I2;
  }
  ia() {
    return yQ(this);
  }
  K() {
    return Xo(this);
  }
  clone() {
    const A2 = [];
    for (const I2 of this.g) {
      let g;
      if (I2 instanceof Uint8Array)
        g = new Uint8Array(I2);
      else if (I2 instanceof Float32Array)
        g = new Float32Array(I2);
      else {
        if (!(I2 instanceof WebGLTexture))
          throw Error(`Type is not supported: ${I2}`);
        {
          const E2 = Lg(this), D2 = NE(this);
          E2.activeTexture(E2.TEXTURE1), g = tB(D2, E2, this.m ? E2.LINEAR : E2.NEAREST), E2.bindTexture(E2.TEXTURE_2D, g);
          const o = Oo(this);
          E2.texImage2D(E2.TEXTURE_2D, 0, o, this.width, this.height, 0, E2.RED, E2.FLOAT, null), E2.bindTexture(E2.TEXTURE_2D, null), HB(D2, E2, g), aE(D2, E2, false, () => {
            jo(this), E2.clearColor(0, 0, 0, 0), E2.clear(E2.COLOR_BUFFER_BIT), E2.drawArrays(E2.TRIANGLE_FAN, 0, 4), KQ(this);
          }), RE(D2), KQ(this);
        }
      }
      A2.push(g);
    }
    return new qA(A2, this.m, this.P(), this.canvas, this.l, this.width, this.height);
  }
  close() {
    this.j && Lg(this).deleteTexture(fI(this, 2)), li = -1;
  }
};
qA.prototype.close = qA.prototype.close, qA.prototype.clone = qA.prototype.clone, qA.prototype.getAsWebGLTexture = qA.prototype.K, qA.prototype.getAsFloat32Array = qA.prototype.ia, qA.prototype.getAsUint8Array = qA.prototype.ja, qA.prototype.hasWebGLTexture = qA.prototype.P, qA.prototype.hasFloat32Array = qA.prototype.ka, qA.prototype.hasUint8Array = qA.prototype.La;
var li = 250;
function MI(A2, I2) {
  switch (I2) {
    case 0:
      return A2.g.find((g) => g instanceof ImageData);
    case 1:
      return A2.g.find((g) => typeof ImageBitmap < "u" && g instanceof ImageBitmap);
    case 2:
      return A2.g.find((g) => typeof WebGLTexture < "u" && g instanceof WebGLTexture);
    default:
      throw Error(`Type is not supported: ${I2}`);
  }
}
function Po(A2) {
  var I2 = MI(A2, 0);
  if (!I2) {
    I2 = tg(A2);
    const g = rB(A2), E2 = new Uint8Array(A2.width * A2.height * 4);
    HB(g, I2, AB(A2)), I2.readPixels(0, 0, A2.width, A2.height, I2.RGBA, I2.UNSIGNED_BYTE, E2), RE(g), I2 = new ImageData(new Uint8ClampedArray(E2.buffer), A2.width, A2.height), A2.g.push(I2);
  }
  return I2;
}
function AB(A2) {
  let I2 = MI(A2, 2);
  if (!I2) {
    const g = tg(A2);
    I2 = IB(A2);
    const E2 = MI(A2, 1) || Po(A2);
    g.texImage2D(g.TEXTURE_2D, 0, g.RGBA, g.RGBA, g.UNSIGNED_BYTE, E2), Pg(A2);
  }
  return I2;
}
function tg(A2) {
  if (!A2.canvas)
    throw Error("Conversion to different image formats require that a canvas is passed when iniitializing the image.");
  return A2.h || (A2.h = VI(A2.canvas.getContext("webgl2"), "You cannot use a canvas that is already bound to a different type of rendering context.")), A2.h;
}
function rB(A2) {
  return A2.l || (A2.l = new hE()), A2.l;
}
function IB(A2) {
  const I2 = tg(A2);
  I2.viewport(0, 0, A2.width, A2.height), I2.activeTexture(I2.TEXTURE0);
  let g = MI(A2, 2);
  return g || (g = tB(rB(A2), I2), A2.g.push(g), A2.m = true), I2.bindTexture(I2.TEXTURE_2D, g), g;
}
function Pg(A2) {
  A2.h.bindTexture(A2.h.TEXTURE_2D, null);
}
function fi(A2) {
  const I2 = tg(A2);
  return aE(rB(A2), I2, true, () => function(g, E2) {
    const D2 = g.canvas;
    if (D2.width === g.width && D2.height === g.height)
      return E2();
    const o = D2.width, s = D2.height;
    return D2.width = g.width, D2.height = g.height, g = E2(), D2.width = o, D2.height = s, g;
  }(A2, () => {
    if (I2.bindFramebuffer(I2.FRAMEBUFFER, null), I2.clearColor(0, 0, 0, 0), I2.clear(I2.COLOR_BUFFER_BIT), I2.drawArrays(I2.TRIANGLE_FAN, 0, 4), !(A2.canvas instanceof OffscreenCanvas))
      throw Error("Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas");
    return A2.canvas.transferToImageBitmap();
  }));
}
var eA = class {
  constructor(A2, I2, g, E2, D2, o, s) {
    this.g = A2, this.j = I2, this.m = g, this.canvas = E2, this.l = D2, this.width = o, this.height = s, (this.j || this.m) && --bi === 0 && console.error("You seem to be creating MPImage instances without invoking .close(). This leaks resources.");
  }
  Ka() {
    return !!MI(this, 0);
  }
  la() {
    return !!MI(this, 1);
  }
  P() {
    return !!MI(this, 2);
  }
  Ia() {
    return Po(this);
  }
  Ha() {
    var A2 = MI(this, 1);
    return A2 || (AB(this), IB(this), A2 = fi(this), Pg(this), this.g.push(A2), this.j = true), A2;
  }
  K() {
    return AB(this);
  }
  clone() {
    const A2 = [];
    for (const I2 of this.g) {
      let g;
      if (I2 instanceof ImageData)
        g = new ImageData(I2.data, this.width, this.height);
      else if (I2 instanceof WebGLTexture) {
        const E2 = tg(this), D2 = rB(this);
        E2.activeTexture(E2.TEXTURE1), g = tB(D2, E2), E2.bindTexture(E2.TEXTURE_2D, g), E2.texImage2D(E2.TEXTURE_2D, 0, E2.RGBA, this.width, this.height, 0, E2.RGBA, E2.UNSIGNED_BYTE, null), E2.bindTexture(E2.TEXTURE_2D, null), HB(D2, E2, g), aE(D2, E2, false, () => {
          IB(this), E2.clearColor(0, 0, 0, 0), E2.clear(E2.COLOR_BUFFER_BIT), E2.drawArrays(E2.TRIANGLE_FAN, 0, 4), Pg(this);
        }), RE(D2), Pg(this);
      } else {
        if (!(I2 instanceof ImageBitmap))
          throw Error(`Type is not supported: ${I2}`);
        AB(this), IB(this), g = fi(this), Pg(this);
      }
      A2.push(g);
    }
    return new eA(A2, this.la(), this.P(), this.canvas, this.l, this.width, this.height);
  }
  close() {
    this.j && MI(this, 1).close(), this.m && tg(this).deleteTexture(MI(this, 2)), bi = -1;
  }
};
eA.prototype.close = eA.prototype.close, eA.prototype.clone = eA.prototype.clone, eA.prototype.getAsWebGLTexture = eA.prototype.K, eA.prototype.getAsImageBitmap = eA.prototype.Ha, eA.prototype.getAsImageData = eA.prototype.Ia, eA.prototype.hasWebGLTexture = eA.prototype.P, eA.prototype.hasImageBitmap = eA.prototype.la, eA.prototype.hasImageData = eA.prototype.Ka;
var bi = 250;
function NI(...A2) {
  return A2.map(([I2, g]) => ({ start: I2, end: g }));
}
const oF = /* @__PURE__ */ function(A2) {
  return class extends A2 {
    Ra() {
      this.i._registerModelResourcesGraphService();
    }
  };
}((Vi = class {
  constructor(A2, I2) {
    this.l = true, this.i = A2, this.g = null, this.h = 0, this.m = typeof this.i._addIntToInputStream == "function", I2 !== void 0 ? this.i.canvas = I2 : typeof OffscreenCanvas > "u" || po() ? (console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."), this.i.canvas = document.createElement("canvas")) : this.i.canvas = new OffscreenCanvas(1, 1);
  }
  async initializeGraph(A2) {
    const I2 = await (await fetch(A2)).arrayBuffer();
    A2 = !(A2.endsWith(".pbtxt") || A2.endsWith(".textproto")), this.setGraph(new Uint8Array(I2), A2);
  }
  setGraphFromString(A2) {
    this.setGraph(new TextEncoder().encode(A2), false);
  }
  setGraph(A2, I2) {
    const g = A2.length, E2 = this.i._malloc(g);
    this.i.HEAPU8.set(A2, E2), I2 ? this.i._changeBinaryGraph(g, E2) : this.i._changeTextGraph(g, E2), this.i._free(E2);
  }
  configureAudio(A2, I2, g, E2, D2) {
    this.i._configureAudio || console.warn('Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?'), l(this, E2 || "input_audio", (o) => {
      l(this, D2 = D2 || "audio_header", (s) => {
        this.i._configureAudio(o, s, A2, I2, g);
      });
    });
  }
  setAutoResizeCanvas(A2) {
    this.l = A2;
  }
  setAutoRenderToScreen(A2) {
    this.i._setAutoRenderToScreen(A2);
  }
  setGpuBufferVerticalFlip(A2) {
    this.i.gpuOriginForWebTexturesIsBottomLeft = A2;
  }
  da(A2) {
    lI(this, "__graph_config__", (I2) => {
      A2(I2);
    }), l(this, "__graph_config__", (I2) => {
      this.i._getGraphConfig(I2, void 0);
    }), delete this.i.simpleListeners.__graph_config__;
  }
  attachErrorListener(A2) {
    this.i.errorListener = A2;
  }
  attachEmptyPacketListener(A2, I2) {
    this.i.emptyPacketListeners = this.i.emptyPacketListeners || {}, this.i.emptyPacketListeners[A2] = I2;
  }
  addAudioToStream(A2, I2, g) {
    this.addAudioToStreamWithShape(A2, 0, 0, I2, g);
  }
  addAudioToStreamWithShape(A2, I2, g, E2, D2) {
    const o = 4 * A2.length;
    this.h !== o && (this.g && this.i._free(this.g), this.g = this.i._malloc(o), this.h = o), this.i.HEAPF32.set(A2, this.g / 4), l(this, E2, (s) => {
      this.i._addAudioToInputStream(this.g, I2, g, s, D2);
    });
  }
  addGpuBufferToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      const [D2, o] = Hi(this, A2, E2);
      this.i._addBoundTextureToStream(E2, D2, o, g);
    });
  }
  addBoolToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      this.i._addBoolToInputStream(A2, E2, g);
    });
  }
  addDoubleToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      this.i._addDoubleToInputStream(A2, E2, g);
    });
  }
  addFloatToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      this.i._addFloatToInputStream(A2, E2, g);
    });
  }
  addIntToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      this.i._addIntToInputStream(A2, E2, g);
    });
  }
  addStringToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      l(this, A2, (D2) => {
        this.i._addStringToInputStream(D2, E2, g);
      });
    });
  }
  addStringRecordToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      ri(this, Object.keys(A2), (D2) => {
        ri(this, Object.values(A2), (o) => {
          this.i._addFlatHashMapToInputStream(D2, o, Object.keys(A2).length, E2, g);
        });
      });
    });
  }
  addProtoToStream(A2, I2, g, E2) {
    l(this, g, (D2) => {
      l(this, I2, (o) => {
        const s = this.i._malloc(A2.length);
        this.i.HEAPU8.set(A2, s), this.i._addProtoToInputStream(s, A2.length, o, D2, E2), this.i._free(s);
      });
    });
  }
  addEmptyPacketToStream(A2, I2) {
    l(this, A2, (g) => {
      this.i._addEmptyPacketToInputStream(g, I2);
    });
  }
  addBoolVectorToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      const D2 = this.i._allocateBoolVector(A2.length);
      if (!D2)
        throw Error("Unable to allocate new bool vector on heap.");
      for (const o of A2)
        this.i._addBoolVectorEntry(D2, o);
      this.i._addBoolVectorToInputStream(D2, E2, g);
    });
  }
  addDoubleVectorToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      const D2 = this.i._allocateDoubleVector(A2.length);
      if (!D2)
        throw Error("Unable to allocate new double vector on heap.");
      for (const o of A2)
        this.i._addDoubleVectorEntry(D2, o);
      this.i._addDoubleVectorToInputStream(D2, E2, g);
    });
  }
  addFloatVectorToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      const D2 = this.i._allocateFloatVector(A2.length);
      if (!D2)
        throw Error("Unable to allocate new float vector on heap.");
      for (const o of A2)
        this.i._addFloatVectorEntry(D2, o);
      this.i._addFloatVectorToInputStream(D2, E2, g);
    });
  }
  addIntVectorToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      const D2 = this.i._allocateIntVector(A2.length);
      if (!D2)
        throw Error("Unable to allocate new int vector on heap.");
      for (const o of A2)
        this.i._addIntVectorEntry(D2, o);
      this.i._addIntVectorToInputStream(D2, E2, g);
    });
  }
  addStringVectorToStream(A2, I2, g) {
    l(this, I2, (E2) => {
      const D2 = this.i._allocateStringVector(A2.length);
      if (!D2)
        throw Error("Unable to allocate new string vector on heap.");
      for (const o of A2)
        l(this, o, (s) => {
          this.i._addStringVectorEntry(D2, s);
        });
      this.i._addStringVectorToInputStream(D2, E2, g);
    });
  }
  addBoolToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      this.i._addBoolToInputSidePacket(A2, g);
    });
  }
  addDoubleToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      this.i._addDoubleToInputSidePacket(A2, g);
    });
  }
  addFloatToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      this.i._addFloatToInputSidePacket(A2, g);
    });
  }
  addIntToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      this.i._addIntToInputSidePacket(A2, g);
    });
  }
  addStringToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      l(this, A2, (E2) => {
        this.i._addStringToInputSidePacket(E2, g);
      });
    });
  }
  addProtoToInputSidePacket(A2, I2, g) {
    l(this, g, (E2) => {
      l(this, I2, (D2) => {
        const o = this.i._malloc(A2.length);
        this.i.HEAPU8.set(A2, o), this.i._addProtoToInputSidePacket(o, A2.length, D2, E2), this.i._free(o);
      });
    });
  }
  addBoolVectorToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      const E2 = this.i._allocateBoolVector(A2.length);
      if (!E2)
        throw Error("Unable to allocate new bool vector on heap.");
      for (const D2 of A2)
        this.i._addBoolVectorEntry(E2, D2);
      this.i._addBoolVectorToInputSidePacket(E2, g);
    });
  }
  addDoubleVectorToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      const E2 = this.i._allocateDoubleVector(A2.length);
      if (!E2)
        throw Error("Unable to allocate new double vector on heap.");
      for (const D2 of A2)
        this.i._addDoubleVectorEntry(E2, D2);
      this.i._addDoubleVectorToInputSidePacket(E2, g);
    });
  }
  addFloatVectorToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      const E2 = this.i._allocateFloatVector(A2.length);
      if (!E2)
        throw Error("Unable to allocate new float vector on heap.");
      for (const D2 of A2)
        this.i._addFloatVectorEntry(E2, D2);
      this.i._addFloatVectorToInputSidePacket(E2, g);
    });
  }
  addIntVectorToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      const E2 = this.i._allocateIntVector(A2.length);
      if (!E2)
        throw Error("Unable to allocate new int vector on heap.");
      for (const D2 of A2)
        this.i._addIntVectorEntry(E2, D2);
      this.i._addIntVectorToInputSidePacket(E2, g);
    });
  }
  addStringVectorToInputSidePacket(A2, I2) {
    l(this, I2, (g) => {
      const E2 = this.i._allocateStringVector(A2.length);
      if (!E2)
        throw Error("Unable to allocate new string vector on heap.");
      for (const D2 of A2)
        l(this, D2, (o) => {
          this.i._addStringVectorEntry(E2, o);
        });
      this.i._addStringVectorToInputSidePacket(E2, g);
    });
  }
  attachBoolListener(A2, I2) {
    lI(this, A2, I2), l(this, A2, (g) => {
      this.i._attachBoolListener(g);
    });
  }
  attachBoolVectorListener(A2, I2) {
    Eg(this, A2, I2), l(this, A2, (g) => {
      this.i._attachBoolVectorListener(g);
    });
  }
  attachIntListener(A2, I2) {
    lI(this, A2, I2), l(this, A2, (g) => {
      this.i._attachIntListener(g);
    });
  }
  attachIntVectorListener(A2, I2) {
    Eg(this, A2, I2), l(this, A2, (g) => {
      this.i._attachIntVectorListener(g);
    });
  }
  attachDoubleListener(A2, I2) {
    lI(this, A2, I2), l(this, A2, (g) => {
      this.i._attachDoubleListener(g);
    });
  }
  attachDoubleVectorListener(A2, I2) {
    Eg(this, A2, I2), l(this, A2, (g) => {
      this.i._attachDoubleVectorListener(g);
    });
  }
  attachFloatListener(A2, I2) {
    lI(this, A2, I2), l(this, A2, (g) => {
      this.i._attachFloatListener(g);
    });
  }
  attachFloatVectorListener(A2, I2) {
    Eg(this, A2, I2), l(this, A2, (g) => {
      this.i._attachFloatVectorListener(g);
    });
  }
  attachStringListener(A2, I2) {
    lI(this, A2, I2), l(this, A2, (g) => {
      this.i._attachStringListener(g);
    });
  }
  attachStringVectorListener(A2, I2) {
    Eg(this, A2, I2), l(this, A2, (g) => {
      this.i._attachStringVectorListener(g);
    });
  }
  attachProtoListener(A2, I2, g) {
    lI(this, A2, I2), l(this, A2, (E2) => {
      this.i._attachProtoListener(E2, g || false);
    });
  }
  attachProtoVectorListener(A2, I2, g) {
    Eg(this, A2, I2), l(this, A2, (E2) => {
      this.i._attachProtoVectorListener(E2, g || false);
    });
  }
  attachAudioListener(A2, I2, g) {
    this.i._attachAudioListener || console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?'), lI(this, A2, (E2, D2) => {
      E2 = new Float32Array(E2.buffer, E2.byteOffset, E2.length / 4), I2(E2, D2);
    }), l(this, A2, (E2) => {
      this.i._attachAudioListener(E2, g || false);
    });
  }
  finishProcessing() {
    this.i._waitUntilIdle();
  }
  closeGraph() {
    this.i._closeGraph(), this.i.simpleListeners = void 0, this.i.emptyPacketListeners = void 0;
  }
}, class extends Vi {
  get fa() {
    return this.i;
  }
  va(A2, I2, g) {
    l(this, I2, (E2) => {
      const [D2, o] = Hi(this, A2, E2);
      this.fa._addBoundTextureAsImageToStream(E2, D2, o, g);
    });
  }
  ba(A2, I2) {
    lI(this, A2, I2), l(this, A2, (g) => {
      this.fa._attachImageListener(g);
    });
  }
  ca(A2, I2) {
    Eg(this, A2, I2), l(this, A2, (g) => {
      this.fa._attachImageVectorListener(g);
    });
  }
}));
var Vi, yI = class extends oF {
};
async function j(A2, I2, g) {
  return async function(E2, D2, o, s) {
    return iF(E2, D2, o, s);
  }(A2, g.canvas ?? (typeof OffscreenCanvas > "u" || po() ? document.createElement("canvas") : void 0), I2, g);
}
function zo(A2, I2, g, E2) {
  if (A2.J) {
    const o = new oo();
    if (g != null && g.regionOfInterest) {
      if (!A2.U)
        throw Error("This task doesn't support region-of-interest.");
      var D2 = g.regionOfInterest;
      if (D2.left >= D2.right || D2.top >= D2.bottom)
        throw Error("Expected RectF with left < right and top < bottom.");
      if (0 > D2.left || 0 > D2.top || 1 < D2.right || 1 < D2.bottom)
        throw Error("Expected RectF values to be in [0,1].");
      x(o, 1, (D2.left + D2.right) / 2), x(o, 2, (D2.top + D2.bottom) / 2), x(o, 4, D2.right - D2.left), x(o, 3, D2.bottom - D2.top);
    } else
      x(o, 1, 0.5), x(o, 2, 0.5), x(o, 4, 1), x(o, 3, 1);
    if (g != null && g.rotationDegrees) {
      if ((g == null ? void 0 : g.rotationDegrees) % 90 != 0)
        throw Error("Expected rotation to be a multiple of 90°.");
      if (x(o, 5, -Math.PI * g.rotationDegrees / 180), (g == null ? void 0 : g.rotationDegrees) % 180 != 0) {
        const [s, N2] = I2.videoWidth !== void 0 ? [I2.videoWidth, I2.videoHeight] : I2.naturalWidth !== void 0 ? [I2.naturalWidth, I2.naturalHeight] : [I2.width, I2.height];
        g = fA(o, 3) * N2 / s, D2 = fA(o, 4) * s / N2, x(o, 4, g), x(o, 3, D2);
      }
    }
    A2.g.addProtoToStream(o.g(), "mediapipe.NormalizedRect", A2.J, E2);
  }
  A2.g.va(I2, A2.T, E2 ?? performance.now()), A2.finishProcessing();
}
function KI(A2, I2, g) {
  var E2;
  if ((E2 = A2.baseOptions) != null && E2.g())
    throw Error("Task is not initialized with image mode. 'runningMode' must be set to 'IMAGE'.");
  zo(A2, I2, g, A2.I + 1);
}
function WI(A2, I2, g, E2) {
  var D2;
  if (!((D2 = A2.baseOptions) != null && D2.g()))
    throw Error("Task is not initialized with video mode. 'runningMode' must be set to 'VIDEO'.");
  zo(A2, I2, g, E2);
}
function EC(A2, I2, g, E2) {
  var D2 = I2.data;
  const o = I2.width, s = o * (I2 = I2.height);
  if ((D2 instanceof Uint8Array || D2 instanceof Float32Array) && D2.length !== s)
    throw Error("Unsupported channel count: " + D2.length / s);
  return A2 = new qA([D2], g, false, A2.g.i.canvas, A2.M, o, I2), E2 ? A2.clone() : A2;
}
var _A = class extends NQ {
  constructor(A2, I2, g, E2) {
    super(A2), this.g = A2, this.T = I2, this.J = g, this.U = E2, this.M = new hE();
  }
  l(A2, I2 = true) {
    if ("runningMode" in A2 && BC(this.baseOptions, 2, !!A2.runningMode && A2.runningMode !== "IMAGE"), A2.canvas !== void 0 && this.g.i.canvas !== A2.canvas)
      throw Error("You must create a new task to reset the canvas.");
    return super.l(A2, I2);
  }
  close() {
    this.M.close(), super.close();
  }
};
_A.prototype.close = _A.prototype.close;
var AI = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect_in", false), this.j = { detections: [] }, V(A2 = this.h = new EE(), 0, 1, I2 = new yA()), x(this.h, 2, 0.5), x(this.h, 3, 0.3);
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return "minDetectionConfidence" in A2 && x(this.h, 2, A2.minDetectionConfidence ?? 0.5), "minSuppressionThreshold" in A2 && x(this.h, 3, A2.minSuppressionThreshold ?? 0.3), this.l(A2);
  }
  G(A2, I2) {
    return this.j = { detections: [] }, KI(this, A2, I2), this.j;
  }
  H(A2, I2, g) {
    return this.j = { detections: [] }, WI(this, A2, g, I2), this.j;
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect_in"), GA(A2, "detections");
    const I2 = new iI();
    RI(I2, Ts, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.face_detector.FaceDetectorGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect_in"), gA(g, "DETECTIONS:detections"), g.o(I2), GI(A2, g), this.g.attachProtoVectorListener("detections", (E2, D2) => {
      for (const o of E2)
        E2 = Co(o), this.j.detections.push(mo(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("detections", (E2) => {
      b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
AI.prototype.detectForVideo = AI.prototype.H, AI.prototype.detect = AI.prototype.G, AI.prototype.setOptions = AI.prototype.o, AI.createFromModelPath = async function(A2, I2) {
  return j(AI, A2, { baseOptions: { modelAssetPath: I2 } });
}, AI.createFromModelBuffer = function(A2, I2) {
  return j(AI, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, AI.createFromOptions = function(A2, I2) {
  return j(AI, A2, I2);
};
var vo = NI([61, 146], [146, 91], [91, 181], [181, 84], [84, 17], [17, 314], [314, 405], [405, 321], [321, 375], [375, 291], [61, 185], [185, 40], [40, 39], [39, 37], [37, 0], [0, 267], [267, 269], [269, 270], [270, 409], [409, 291], [78, 95], [95, 88], [88, 178], [178, 87], [87, 14], [14, 317], [317, 402], [402, 318], [318, 324], [324, 308], [78, 191], [191, 80], [80, 81], [81, 82], [82, 13], [13, 312], [312, 311], [311, 310], [310, 415], [415, 308]), _o = NI([263, 249], [249, 390], [390, 373], [373, 374], [374, 380], [380, 381], [381, 382], [382, 362], [263, 466], [466, 388], [388, 387], [387, 386], [386, 385], [385, 384], [384, 398], [398, 362]), $o = NI([276, 283], [283, 282], [282, 295], [295, 285], [300, 293], [293, 334], [334, 296], [296, 336]), GF = NI([474, 475], [475, 476], [476, 477], [477, 474]), AG = NI([33, 7], [7, 163], [163, 144], [144, 145], [145, 153], [153, 154], [154, 155], [155, 133], [33, 246], [246, 161], [161, 160], [160, 159], [159, 158], [158, 157], [157, 173], [173, 133]), IG = NI([46, 53], [53, 52], [52, 65], [65, 55], [70, 63], [63, 105], [105, 66], [66, 107]), wF = NI([469, 470], [470, 471], [471, 472], [472, 469]), gG = NI([10, 338], [338, 297], [297, 332], [332, 284], [284, 251], [251, 389], [389, 356], [356, 454], [454, 323], [323, 361], [361, 288], [288, 397], [397, 365], [365, 379], [379, 378], [378, 400], [400, 377], [377, 152], [152, 148], [148, 176], [176, 149], [149, 150], [150, 136], [136, 172], [172, 58], [58, 132], [132, 93], [93, 234], [234, 127], [127, 162], [162, 21], [21, 54], [54, 103], [103, 67], [67, 109], [109, 10]), sF = [...vo, ..._o, ...$o, ...AG, ...IG, ...gG], FF = NI([127, 34], [34, 139], [139, 127], [11, 0], [0, 37], [37, 11], [232, 231], [231, 120], [120, 232], [72, 37], [37, 39], [39, 72], [128, 121], [121, 47], [47, 128], [232, 121], [121, 128], [128, 232], [104, 69], [69, 67], [67, 104], [175, 171], [171, 148], [148, 175], [118, 50], [50, 101], [101, 118], [73, 39], [39, 40], [40, 73], [9, 151], [151, 108], [108, 9], [48, 115], [115, 131], [131, 48], [194, 204], [204, 211], [211, 194], [74, 40], [40, 185], [185, 74], [80, 42], [42, 183], [183, 80], [40, 92], [92, 186], [186, 40], [230, 229], [229, 118], [118, 230], [202, 212], [212, 214], [214, 202], [83, 18], [18, 17], [17, 83], [76, 61], [61, 146], [146, 76], [160, 29], [29, 30], [30, 160], [56, 157], [157, 173], [173, 56], [106, 204], [204, 194], [194, 106], [135, 214], [214, 192], [192, 135], [203, 165], [165, 98], [98, 203], [21, 71], [71, 68], [68, 21], [51, 45], [45, 4], [4, 51], [144, 24], [24, 23], [23, 144], [77, 146], [146, 91], [91, 77], [205, 50], [50, 187], [187, 205], [201, 200], [200, 18], [18, 201], [91, 106], [106, 182], [182, 91], [90, 91], [91, 181], [181, 90], [85, 84], [84, 17], [17, 85], [206, 203], [203, 36], [36, 206], [148, 171], [171, 140], [140, 148], [92, 40], [40, 39], [39, 92], [193, 189], [189, 244], [244, 193], [159, 158], [158, 28], [28, 159], [247, 246], [246, 161], [161, 247], [236, 3], [3, 196], [196, 236], [54, 68], [68, 104], [104, 54], [193, 168], [168, 8], [8, 193], [117, 228], [228, 31], [31, 117], [189, 193], [193, 55], [55, 189], [98, 97], [97, 99], [99, 98], [126, 47], [47, 100], [100, 126], [166, 79], [79, 218], [218, 166], [155, 154], [154, 26], [26, 155], [209, 49], [49, 131], [131, 209], [135, 136], [136, 150], [150, 135], [47, 126], [126, 217], [217, 47], [223, 52], [52, 53], [53, 223], [45, 51], [51, 134], [134, 45], [211, 170], [170, 140], [140, 211], [67, 69], [69, 108], [108, 67], [43, 106], [106, 91], [91, 43], [230, 119], [119, 120], [120, 230], [226, 130], [130, 247], [247, 226], [63, 53], [53, 52], [52, 63], [238, 20], [20, 242], [242, 238], [46, 70], [70, 156], [156, 46], [78, 62], [62, 96], [96, 78], [46, 53], [53, 63], [63, 46], [143, 34], [34, 227], [227, 143], [123, 117], [117, 111], [111, 123], [44, 125], [125, 19], [19, 44], [236, 134], [134, 51], [51, 236], [216, 206], [206, 205], [205, 216], [154, 153], [153, 22], [22, 154], [39, 37], [37, 167], [167, 39], [200, 201], [201, 208], [208, 200], [36, 142], [142, 100], [100, 36], [57, 212], [212, 202], [202, 57], [20, 60], [60, 99], [99, 20], [28, 158], [158, 157], [157, 28], [35, 226], [226, 113], [113, 35], [160, 159], [159, 27], [27, 160], [204, 202], [202, 210], [210, 204], [113, 225], [225, 46], [46, 113], [43, 202], [202, 204], [204, 43], [62, 76], [76, 77], [77, 62], [137, 123], [123, 116], [116, 137], [41, 38], [38, 72], [72, 41], [203, 129], [129, 142], [142, 203], [64, 98], [98, 240], [240, 64], [49, 102], [102, 64], [64, 49], [41, 73], [73, 74], [74, 41], [212, 216], [216, 207], [207, 212], [42, 74], [74, 184], [184, 42], [169, 170], [170, 211], [211, 169], [170, 149], [149, 176], [176, 170], [105, 66], [66, 69], [69, 105], [122, 6], [6, 168], [168, 122], [123, 147], [147, 187], [187, 123], [96, 77], [77, 90], [90, 96], [65, 55], [55, 107], [107, 65], [89, 90], [90, 180], [180, 89], [101, 100], [100, 120], [120, 101], [63, 105], [105, 104], [104, 63], [93, 137], [137, 227], [227, 93], [15, 86], [86, 85], [85, 15], [129, 102], [102, 49], [49, 129], [14, 87], [87, 86], [86, 14], [55, 8], [8, 9], [9, 55], [100, 47], [47, 121], [121, 100], [145, 23], [23, 22], [22, 145], [88, 89], [89, 179], [179, 88], [6, 122], [122, 196], [196, 6], [88, 95], [95, 96], [96, 88], [138, 172], [172, 136], [136, 138], [215, 58], [58, 172], [172, 215], [115, 48], [48, 219], [219, 115], [42, 80], [80, 81], [81, 42], [195, 3], [3, 51], [51, 195], [43, 146], [146, 61], [61, 43], [171, 175], [175, 199], [199, 171], [81, 82], [82, 38], [38, 81], [53, 46], [46, 225], [225, 53], [144, 163], [163, 110], [110, 144], [52, 65], [65, 66], [66, 52], [229, 228], [228, 117], [117, 229], [34, 127], [127, 234], [234, 34], [107, 108], [108, 69], [69, 107], [109, 108], [108, 151], [151, 109], [48, 64], [64, 235], [235, 48], [62, 78], [78, 191], [191, 62], [129, 209], [209, 126], [126, 129], [111, 35], [35, 143], [143, 111], [117, 123], [123, 50], [50, 117], [222, 65], [65, 52], [52, 222], [19, 125], [125, 141], [141, 19], [221, 55], [55, 65], [65, 221], [3, 195], [195, 197], [197, 3], [25, 7], [7, 33], [33, 25], [220, 237], [237, 44], [44, 220], [70, 71], [71, 139], [139, 70], [122, 193], [193, 245], [245, 122], [247, 130], [130, 33], [33, 247], [71, 21], [21, 162], [162, 71], [170, 169], [169, 150], [150, 170], [188, 174], [174, 196], [196, 188], [216, 186], [186, 92], [92, 216], [2, 97], [97, 167], [167, 2], [141, 125], [125, 241], [241, 141], [164, 167], [167, 37], [37, 164], [72, 38], [38, 12], [12, 72], [38, 82], [82, 13], [13, 38], [63, 68], [68, 71], [71, 63], [226, 35], [35, 111], [111, 226], [101, 50], [50, 205], [205, 101], [206, 92], [92, 165], [165, 206], [209, 198], [198, 217], [217, 209], [165, 167], [167, 97], [97, 165], [220, 115], [115, 218], [218, 220], [133, 112], [112, 243], [243, 133], [239, 238], [238, 241], [241, 239], [214, 135], [135, 169], [169, 214], [190, 173], [173, 133], [133, 190], [171, 208], [208, 32], [32, 171], [125, 44], [44, 237], [237, 125], [86, 87], [87, 178], [178, 86], [85, 86], [86, 179], [179, 85], [84, 85], [85, 180], [180, 84], [83, 84], [84, 181], [181, 83], [201, 83], [83, 182], [182, 201], [137, 93], [93, 132], [132, 137], [76, 62], [62, 183], [183, 76], [61, 76], [76, 184], [184, 61], [57, 61], [61, 185], [185, 57], [212, 57], [57, 186], [186, 212], [214, 207], [207, 187], [187, 214], [34, 143], [143, 156], [156, 34], [79, 239], [239, 237], [237, 79], [123, 137], [137, 177], [177, 123], [44, 1], [1, 4], [4, 44], [201, 194], [194, 32], [32, 201], [64, 102], [102, 129], [129, 64], [213, 215], [215, 138], [138, 213], [59, 166], [166, 219], [219, 59], [242, 99], [99, 97], [97, 242], [2, 94], [94, 141], [141, 2], [75, 59], [59, 235], [235, 75], [24, 110], [110, 228], [228, 24], [25, 130], [130, 226], [226, 25], [23, 24], [24, 229], [229, 23], [22, 23], [23, 230], [230, 22], [26, 22], [22, 231], [231, 26], [112, 26], [26, 232], [232, 112], [189, 190], [190, 243], [243, 189], [221, 56], [56, 190], [190, 221], [28, 56], [56, 221], [221, 28], [27, 28], [28, 222], [222, 27], [29, 27], [27, 223], [223, 29], [30, 29], [29, 224], [224, 30], [247, 30], [30, 225], [225, 247], [238, 79], [79, 20], [20, 238], [166, 59], [59, 75], [75, 166], [60, 75], [75, 240], [240, 60], [147, 177], [177, 215], [215, 147], [20, 79], [79, 166], [166, 20], [187, 147], [147, 213], [213, 187], [112, 233], [233, 244], [244, 112], [233, 128], [128, 245], [245, 233], [128, 114], [114, 188], [188, 128], [114, 217], [217, 174], [174, 114], [131, 115], [115, 220], [220, 131], [217, 198], [198, 236], [236, 217], [198, 131], [131, 134], [134, 198], [177, 132], [132, 58], [58, 177], [143, 35], [35, 124], [124, 143], [110, 163], [163, 7], [7, 110], [228, 110], [110, 25], [25, 228], [356, 389], [389, 368], [368, 356], [11, 302], [302, 267], [267, 11], [452, 350], [350, 349], [349, 452], [302, 303], [303, 269], [269, 302], [357, 343], [343, 277], [277, 357], [452, 453], [453, 357], [357, 452], [333, 332], [332, 297], [297, 333], [175, 152], [152, 377], [377, 175], [347, 348], [348, 330], [330, 347], [303, 304], [304, 270], [270, 303], [9, 336], [336, 337], [337, 9], [278, 279], [279, 360], [360, 278], [418, 262], [262, 431], [431, 418], [304, 408], [408, 409], [409, 304], [310, 415], [415, 407], [407, 310], [270, 409], [409, 410], [410, 270], [450, 348], [348, 347], [347, 450], [422, 430], [430, 434], [434, 422], [313, 314], [314, 17], [17, 313], [306, 307], [307, 375], [375, 306], [387, 388], [388, 260], [260, 387], [286, 414], [414, 398], [398, 286], [335, 406], [406, 418], [418, 335], [364, 367], [367, 416], [416, 364], [423, 358], [358, 327], [327, 423], [251, 284], [284, 298], [298, 251], [281, 5], [5, 4], [4, 281], [373, 374], [374, 253], [253, 373], [307, 320], [320, 321], [321, 307], [425, 427], [427, 411], [411, 425], [421, 313], [313, 18], [18, 421], [321, 405], [405, 406], [406, 321], [320, 404], [404, 405], [405, 320], [315, 16], [16, 17], [17, 315], [426, 425], [425, 266], [266, 426], [377, 400], [400, 369], [369, 377], [322, 391], [391, 269], [269, 322], [417, 465], [465, 464], [464, 417], [386, 257], [257, 258], [258, 386], [466, 260], [260, 388], [388, 466], [456, 399], [399, 419], [419, 456], [284, 332], [332, 333], [333, 284], [417, 285], [285, 8], [8, 417], [346, 340], [340, 261], [261, 346], [413, 441], [441, 285], [285, 413], [327, 460], [460, 328], [328, 327], [355, 371], [371, 329], [329, 355], [392, 439], [439, 438], [438, 392], [382, 341], [341, 256], [256, 382], [429, 420], [420, 360], [360, 429], [364, 394], [394, 379], [379, 364], [277, 343], [343, 437], [437, 277], [443, 444], [444, 283], [283, 443], [275, 440], [440, 363], [363, 275], [431, 262], [262, 369], [369, 431], [297, 338], [338, 337], [337, 297], [273, 375], [375, 321], [321, 273], [450, 451], [451, 349], [349, 450], [446, 342], [342, 467], [467, 446], [293, 334], [334, 282], [282, 293], [458, 461], [461, 462], [462, 458], [276, 353], [353, 383], [383, 276], [308, 324], [324, 325], [325, 308], [276, 300], [300, 293], [293, 276], [372, 345], [345, 447], [447, 372], [352, 345], [345, 340], [340, 352], [274, 1], [1, 19], [19, 274], [456, 248], [248, 281], [281, 456], [436, 427], [427, 425], [425, 436], [381, 256], [256, 252], [252, 381], [269, 391], [391, 393], [393, 269], [200, 199], [199, 428], [428, 200], [266, 330], [330, 329], [329, 266], [287, 273], [273, 422], [422, 287], [250, 462], [462, 328], [328, 250], [258, 286], [286, 384], [384, 258], [265, 353], [353, 342], [342, 265], [387, 259], [259, 257], [257, 387], [424, 431], [431, 430], [430, 424], [342, 353], [353, 276], [276, 342], [273, 335], [335, 424], [424, 273], [292, 325], [325, 307], [307, 292], [366, 447], [447, 345], [345, 366], [271, 303], [303, 302], [302, 271], [423, 266], [266, 371], [371, 423], [294, 455], [455, 460], [460, 294], [279, 278], [278, 294], [294, 279], [271, 272], [272, 304], [304, 271], [432, 434], [434, 427], [427, 432], [272, 407], [407, 408], [408, 272], [394, 430], [430, 431], [431, 394], [395, 369], [369, 400], [400, 395], [334, 333], [333, 299], [299, 334], [351, 417], [417, 168], [168, 351], [352, 280], [280, 411], [411, 352], [325, 319], [319, 320], [320, 325], [295, 296], [296, 336], [336, 295], [319, 403], [403, 404], [404, 319], [330, 348], [348, 349], [349, 330], [293, 298], [298, 333], [333, 293], [323, 454], [454, 447], [447, 323], [15, 16], [16, 315], [315, 15], [358, 429], [429, 279], [279, 358], [14, 15], [15, 316], [316, 14], [285, 336], [336, 9], [9, 285], [329, 349], [349, 350], [350, 329], [374, 380], [380, 252], [252, 374], [318, 402], [402, 403], [403, 318], [6, 197], [197, 419], [419, 6], [318, 319], [319, 325], [325, 318], [367, 364], [364, 365], [365, 367], [435, 367], [367, 397], [397, 435], [344, 438], [438, 439], [439, 344], [272, 271], [271, 311], [311, 272], [195, 5], [5, 281], [281, 195], [273, 287], [287, 291], [291, 273], [396, 428], [428, 199], [199, 396], [311, 271], [271, 268], [268, 311], [283, 444], [444, 445], [445, 283], [373, 254], [254, 339], [339, 373], [282, 334], [334, 296], [296, 282], [449, 347], [347, 346], [346, 449], [264, 447], [447, 454], [454, 264], [336, 296], [296, 299], [299, 336], [338, 10], [10, 151], [151, 338], [278, 439], [439, 455], [455, 278], [292, 407], [407, 415], [415, 292], [358, 371], [371, 355], [355, 358], [340, 345], [345, 372], [372, 340], [346, 347], [347, 280], [280, 346], [442, 443], [443, 282], [282, 442], [19, 94], [94, 370], [370, 19], [441, 442], [442, 295], [295, 441], [248, 419], [419, 197], [197, 248], [263, 255], [255, 359], [359, 263], [440, 275], [275, 274], [274, 440], [300, 383], [383, 368], [368, 300], [351, 412], [412, 465], [465, 351], [263, 467], [467, 466], [466, 263], [301, 368], [368, 389], [389, 301], [395, 378], [378, 379], [379, 395], [412, 351], [351, 419], [419, 412], [436, 426], [426, 322], [322, 436], [2, 164], [164, 393], [393, 2], [370, 462], [462, 461], [461, 370], [164, 0], [0, 267], [267, 164], [302, 11], [11, 12], [12, 302], [268, 12], [12, 13], [13, 268], [293, 300], [300, 301], [301, 293], [446, 261], [261, 340], [340, 446], [330, 266], [266, 425], [425, 330], [426, 423], [423, 391], [391, 426], [429, 355], [355, 437], [437, 429], [391, 327], [327, 326], [326, 391], [440, 457], [457, 438], [438, 440], [341, 382], [382, 362], [362, 341], [459, 457], [457, 461], [461, 459], [434, 430], [430, 394], [394, 434], [414, 463], [463, 362], [362, 414], [396, 369], [369, 262], [262, 396], [354, 461], [461, 457], [457, 354], [316, 403], [403, 402], [402, 316], [315, 404], [404, 403], [403, 315], [314, 405], [405, 404], [404, 314], [313, 406], [406, 405], [405, 313], [421, 418], [418, 406], [406, 421], [366, 401], [401, 361], [361, 366], [306, 408], [408, 407], [407, 306], [291, 409], [409, 408], [408, 291], [287, 410], [410, 409], [409, 287], [432, 436], [436, 410], [410, 432], [434, 416], [416, 411], [411, 434], [264, 368], [368, 383], [383, 264], [309, 438], [438, 457], [457, 309], [352, 376], [376, 401], [401, 352], [274, 275], [275, 4], [4, 274], [421, 428], [428, 262], [262, 421], [294, 327], [327, 358], [358, 294], [433, 416], [416, 367], [367, 433], [289, 455], [455, 439], [439, 289], [462, 370], [370, 326], [326, 462], [2, 326], [326, 370], [370, 2], [305, 460], [460, 455], [455, 305], [254, 449], [449, 448], [448, 254], [255, 261], [261, 446], [446, 255], [253, 450], [450, 449], [449, 253], [252, 451], [451, 450], [450, 252], [256, 452], [452, 451], [451, 256], [341, 453], [453, 452], [452, 341], [413, 464], [464, 463], [463, 413], [441, 413], [413, 414], [414, 441], [258, 442], [442, 441], [441, 258], [257, 443], [443, 442], [442, 257], [259, 444], [444, 443], [443, 259], [260, 445], [445, 444], [444, 260], [467, 342], [342, 445], [445, 467], [459, 458], [458, 250], [250, 459], [289, 392], [392, 290], [290, 289], [290, 328], [328, 460], [460, 290], [376, 433], [433, 435], [435, 376], [250, 290], [290, 392], [392, 250], [411, 416], [416, 433], [433, 411], [341, 463], [463, 464], [464, 341], [453, 464], [464, 465], [465, 453], [357, 465], [465, 412], [412, 357], [343, 412], [412, 399], [399, 343], [360, 363], [363, 440], [440, 360], [437, 399], [399, 456], [456, 437], [420, 456], [456, 363], [363, 420], [401, 435], [435, 288], [288, 401], [372, 383], [383, 353], [353, 372], [339, 255], [255, 249], [249, 339], [448, 261], [261, 255], [255, 448], [133, 243], [243, 190], [190, 133], [133, 155], [155, 112], [112, 133], [33, 246], [246, 247], [247, 33], [33, 130], [130, 25], [25, 33], [398, 384], [384, 286], [286, 398], [362, 398], [398, 414], [414, 362], [362, 463], [463, 341], [341, 362], [263, 359], [359, 467], [467, 263], [263, 249], [249, 255], [255, 263], [466, 467], [467, 260], [260, 466], [75, 60], [60, 166], [166, 75], [238, 239], [239, 79], [79, 238], [162, 127], [127, 139], [139, 162], [72, 11], [11, 37], [37, 72], [121, 232], [232, 120], [120, 121], [73, 72], [72, 39], [39, 73], [114, 128], [128, 47], [47, 114], [233, 232], [232, 128], [128, 233], [103, 104], [104, 67], [67, 103], [152, 175], [175, 148], [148, 152], [119, 118], [118, 101], [101, 119], [74, 73], [73, 40], [40, 74], [107, 9], [9, 108], [108, 107], [49, 48], [48, 131], [131, 49], [32, 194], [194, 211], [211, 32], [184, 74], [74, 185], [185, 184], [191, 80], [80, 183], [183, 191], [185, 40], [40, 186], [186, 185], [119, 230], [230, 118], [118, 119], [210, 202], [202, 214], [214, 210], [84, 83], [83, 17], [17, 84], [77, 76], [76, 146], [146, 77], [161, 160], [160, 30], [30, 161], [190, 56], [56, 173], [173, 190], [182, 106], [106, 194], [194, 182], [138, 135], [135, 192], [192, 138], [129, 203], [203, 98], [98, 129], [54, 21], [21, 68], [68, 54], [5, 51], [51, 4], [4, 5], [145, 144], [144, 23], [23, 145], [90, 77], [77, 91], [91, 90], [207, 205], [205, 187], [187, 207], [83, 201], [201, 18], [18, 83], [181, 91], [91, 182], [182, 181], [180, 90], [90, 181], [181, 180], [16, 85], [85, 17], [17, 16], [205, 206], [206, 36], [36, 205], [176, 148], [148, 140], [140, 176], [165, 92], [92, 39], [39, 165], [245, 193], [193, 244], [244, 245], [27, 159], [159, 28], [28, 27], [30, 247], [247, 161], [161, 30], [174, 236], [236, 196], [196, 174], [103, 54], [54, 104], [104, 103], [55, 193], [193, 8], [8, 55], [111, 117], [117, 31], [31, 111], [221, 189], [189, 55], [55, 221], [240, 98], [98, 99], [99, 240], [142, 126], [126, 100], [100, 142], [219, 166], [166, 218], [218, 219], [112, 155], [155, 26], [26, 112], [198, 209], [209, 131], [131, 198], [169, 135], [135, 150], [150, 169], [114, 47], [47, 217], [217, 114], [224, 223], [223, 53], [53, 224], [220, 45], [45, 134], [134, 220], [32, 211], [211, 140], [140, 32], [109, 67], [67, 108], [108, 109], [146, 43], [43, 91], [91, 146], [231, 230], [230, 120], [120, 231], [113, 226], [226, 247], [247, 113], [105, 63], [63, 52], [52, 105], [241, 238], [238, 242], [242, 241], [124, 46], [46, 156], [156, 124], [95, 78], [78, 96], [96, 95], [70, 46], [46, 63], [63, 70], [116, 143], [143, 227], [227, 116], [116, 123], [123, 111], [111, 116], [1, 44], [44, 19], [19, 1], [3, 236], [236, 51], [51, 3], [207, 216], [216, 205], [205, 207], [26, 154], [154, 22], [22, 26], [165, 39], [39, 167], [167, 165], [199, 200], [200, 208], [208, 199], [101, 36], [36, 100], [100, 101], [43, 57], [57, 202], [202, 43], [242, 20], [20, 99], [99, 242], [56, 28], [28, 157], [157, 56], [124, 35], [35, 113], [113, 124], [29, 160], [160, 27], [27, 29], [211, 204], [204, 210], [210, 211], [124, 113], [113, 46], [46, 124], [106, 43], [43, 204], [204, 106], [96, 62], [62, 77], [77, 96], [227, 137], [137, 116], [116, 227], [73, 41], [41, 72], [72, 73], [36, 203], [203, 142], [142, 36], [235, 64], [64, 240], [240, 235], [48, 49], [49, 64], [64, 48], [42, 41], [41, 74], [74, 42], [214, 212], [212, 207], [207, 214], [183, 42], [42, 184], [184, 183], [210, 169], [169, 211], [211, 210], [140, 170], [170, 176], [176, 140], [104, 105], [105, 69], [69, 104], [193, 122], [122, 168], [168, 193], [50, 123], [123, 187], [187, 50], [89, 96], [96, 90], [90, 89], [66, 65], [65, 107], [107, 66], [179, 89], [89, 180], [180, 179], [119, 101], [101, 120], [120, 119], [68, 63], [63, 104], [104, 68], [234, 93], [93, 227], [227, 234], [16, 15], [15, 85], [85, 16], [209, 129], [129, 49], [49, 209], [15, 14], [14, 86], [86, 15], [107, 55], [55, 9], [9, 107], [120, 100], [100, 121], [121, 120], [153, 145], [145, 22], [22, 153], [178, 88], [88, 179], [179, 178], [197, 6], [6, 196], [196, 197], [89, 88], [88, 96], [96, 89], [135, 138], [138, 136], [136, 135], [138, 215], [215, 172], [172, 138], [218, 115], [115, 219], [219, 218], [41, 42], [42, 81], [81, 41], [5, 195], [195, 51], [51, 5], [57, 43], [43, 61], [61, 57], [208, 171], [171, 199], [199, 208], [41, 81], [81, 38], [38, 41], [224, 53], [53, 225], [225, 224], [24, 144], [144, 110], [110, 24], [105, 52], [52, 66], [66, 105], [118, 229], [229, 117], [117, 118], [227, 34], [34, 234], [234, 227], [66, 107], [107, 69], [69, 66], [10, 109], [109, 151], [151, 10], [219, 48], [48, 235], [235, 219], [183, 62], [62, 191], [191, 183], [142, 129], [129, 126], [126, 142], [116, 111], [111, 143], [143, 116], [118, 117], [117, 50], [50, 118], [223, 222], [222, 52], [52, 223], [94, 19], [19, 141], [141, 94], [222, 221], [221, 65], [65, 222], [196, 3], [3, 197], [197, 196], [45, 220], [220, 44], [44, 45], [156, 70], [70, 139], [139, 156], [188, 122], [122, 245], [245, 188], [139, 71], [71, 162], [162, 139], [149, 170], [170, 150], [150, 149], [122, 188], [188, 196], [196, 122], [206, 216], [216, 92], [92, 206], [164, 2], [2, 167], [167, 164], [242, 141], [141, 241], [241, 242], [0, 164], [164, 37], [37, 0], [11, 72], [72, 12], [12, 11], [12, 38], [38, 13], [13, 12], [70, 63], [63, 71], [71, 70], [31, 226], [226, 111], [111, 31], [36, 101], [101, 205], [205, 36], [203, 206], [206, 165], [165, 203], [126, 209], [209, 217], [217, 126], [98, 165], [165, 97], [97, 98], [237, 220], [220, 218], [218, 237], [237, 239], [239, 241], [241, 237], [210, 214], [214, 169], [169, 210], [140, 171], [171, 32], [32, 140], [241, 125], [125, 237], [237, 241], [179, 86], [86, 178], [178, 179], [180, 85], [85, 179], [179, 180], [181, 84], [84, 180], [180, 181], [182, 83], [83, 181], [181, 182], [194, 201], [201, 182], [182, 194], [177, 137], [137, 132], [132, 177], [184, 76], [76, 183], [183, 184], [185, 61], [61, 184], [184, 185], [186, 57], [57, 185], [185, 186], [216, 212], [212, 186], [186, 216], [192, 214], [214, 187], [187, 192], [139, 34], [34, 156], [156, 139], [218, 79], [79, 237], [237, 218], [147, 123], [123, 177], [177, 147], [45, 44], [44, 4], [4, 45], [208, 201], [201, 32], [32, 208], [98, 64], [64, 129], [129, 98], [192, 213], [213, 138], [138, 192], [235, 59], [59, 219], [219, 235], [141, 242], [242, 97], [97, 141], [97, 2], [2, 141], [141, 97], [240, 75], [75, 235], [235, 240], [229, 24], [24, 228], [228, 229], [31, 25], [25, 226], [226, 31], [230, 23], [23, 229], [229, 230], [231, 22], [22, 230], [230, 231], [232, 26], [26, 231], [231, 232], [233, 112], [112, 232], [232, 233], [244, 189], [189, 243], [243, 244], [189, 221], [221, 190], [190, 189], [222, 28], [28, 221], [221, 222], [223, 27], [27, 222], [222, 223], [224, 29], [29, 223], [223, 224], [225, 30], [30, 224], [224, 225], [113, 247], [247, 225], [225, 113], [99, 60], [60, 240], [240, 99], [213, 147], [147, 215], [215, 213], [60, 20], [20, 166], [166, 60], [192, 187], [187, 213], [213, 192], [243, 112], [112, 244], [244, 243], [244, 233], [233, 245], [245, 244], [245, 128], [128, 188], [188, 245], [188, 114], [114, 174], [174, 188], [134, 131], [131, 220], [220, 134], [174, 217], [217, 236], [236, 174], [236, 198], [198, 134], [134, 236], [215, 177], [177, 58], [58, 215], [156, 143], [143, 124], [124, 156], [25, 110], [110, 7], [7, 25], [31, 228], [228, 25], [25, 31], [264, 356], [356, 368], [368, 264], [0, 11], [11, 267], [267, 0], [451, 452], [452, 349], [349, 451], [267, 302], [302, 269], [269, 267], [350, 357], [357, 277], [277, 350], [350, 452], [452, 357], [357, 350], [299, 333], [333, 297], [297, 299], [396, 175], [175, 377], [377, 396], [280, 347], [347, 330], [330, 280], [269, 303], [303, 270], [270, 269], [151, 9], [9, 337], [337, 151], [344, 278], [278, 360], [360, 344], [424, 418], [418, 431], [431, 424], [270, 304], [304, 409], [409, 270], [272, 310], [310, 407], [407, 272], [322, 270], [270, 410], [410, 322], [449, 450], [450, 347], [347, 449], [432, 422], [422, 434], [434, 432], [18, 313], [313, 17], [17, 18], [291, 306], [306, 375], [375, 291], [259, 387], [387, 260], [260, 259], [424, 335], [335, 418], [418, 424], [434, 364], [364, 416], [416, 434], [391, 423], [423, 327], [327, 391], [301, 251], [251, 298], [298, 301], [275, 281], [281, 4], [4, 275], [254, 373], [373, 253], [253, 254], [375, 307], [307, 321], [321, 375], [280, 425], [425, 411], [411, 280], [200, 421], [421, 18], [18, 200], [335, 321], [321, 406], [406, 335], [321, 320], [320, 405], [405, 321], [314, 315], [315, 17], [17, 314], [423, 426], [426, 266], [266, 423], [396, 377], [377, 369], [369, 396], [270, 322], [322, 269], [269, 270], [413, 417], [417, 464], [464, 413], [385, 386], [386, 258], [258, 385], [248, 456], [456, 419], [419, 248], [298, 284], [284, 333], [333, 298], [168, 417], [417, 8], [8, 168], [448, 346], [346, 261], [261, 448], [417, 413], [413, 285], [285, 417], [326, 327], [327, 328], [328, 326], [277, 355], [355, 329], [329, 277], [309, 392], [392, 438], [438, 309], [381, 382], [382, 256], [256, 381], [279, 429], [429, 360], [360, 279], [365, 364], [364, 379], [379, 365], [355, 277], [277, 437], [437, 355], [282, 443], [443, 283], [283, 282], [281, 275], [275, 363], [363, 281], [395, 431], [431, 369], [369, 395], [299, 297], [297, 337], [337, 299], [335, 273], [273, 321], [321, 335], [348, 450], [450, 349], [349, 348], [359, 446], [446, 467], [467, 359], [283, 293], [293, 282], [282, 283], [250, 458], [458, 462], [462, 250], [300, 276], [276, 383], [383, 300], [292, 308], [308, 325], [325, 292], [283, 276], [276, 293], [293, 283], [264, 372], [372, 447], [447, 264], [346, 352], [352, 340], [340, 346], [354, 274], [274, 19], [19, 354], [363, 456], [456, 281], [281, 363], [426, 436], [436, 425], [425, 426], [380, 381], [381, 252], [252, 380], [267, 269], [269, 393], [393, 267], [421, 200], [200, 428], [428, 421], [371, 266], [266, 329], [329, 371], [432, 287], [287, 422], [422, 432], [290, 250], [250, 328], [328, 290], [385, 258], [258, 384], [384, 385], [446, 265], [265, 342], [342, 446], [386, 387], [387, 257], [257, 386], [422, 424], [424, 430], [430, 422], [445, 342], [342, 276], [276, 445], [422, 273], [273, 424], [424, 422], [306, 292], [292, 307], [307, 306], [352, 366], [366, 345], [345, 352], [268, 271], [271, 302], [302, 268], [358, 423], [423, 371], [371, 358], [327, 294], [294, 460], [460, 327], [331, 279], [279, 294], [294, 331], [303, 271], [271, 304], [304, 303], [436, 432], [432, 427], [427, 436], [304, 272], [272, 408], [408, 304], [395, 394], [394, 431], [431, 395], [378, 395], [395, 400], [400, 378], [296, 334], [334, 299], [299, 296], [6, 351], [351, 168], [168, 6], [376, 352], [352, 411], [411, 376], [307, 325], [325, 320], [320, 307], [285, 295], [295, 336], [336, 285], [320, 319], [319, 404], [404, 320], [329, 330], [330, 349], [349, 329], [334, 293], [293, 333], [333, 334], [366, 323], [323, 447], [447, 366], [316, 15], [15, 315], [315, 316], [331, 358], [358, 279], [279, 331], [317, 14], [14, 316], [316, 317], [8, 285], [285, 9], [9, 8], [277, 329], [329, 350], [350, 277], [253, 374], [374, 252], [252, 253], [319, 318], [318, 403], [403, 319], [351, 6], [6, 419], [419, 351], [324, 318], [318, 325], [325, 324], [397, 367], [367, 365], [365, 397], [288, 435], [435, 397], [397, 288], [278, 344], [344, 439], [439, 278], [310, 272], [272, 311], [311, 310], [248, 195], [195, 281], [281, 248], [375, 273], [273, 291], [291, 375], [175, 396], [396, 199], [199, 175], [312, 311], [311, 268], [268, 312], [276, 283], [283, 445], [445, 276], [390, 373], [373, 339], [339, 390], [295, 282], [282, 296], [296, 295], [448, 449], [449, 346], [346, 448], [356, 264], [264, 454], [454, 356], [337, 336], [336, 299], [299, 337], [337, 338], [338, 151], [151, 337], [294, 278], [278, 455], [455, 294], [308, 292], [292, 415], [415, 308], [429, 358], [358, 355], [355, 429], [265, 340], [340, 372], [372, 265], [352, 346], [346, 280], [280, 352], [295, 442], [442, 282], [282, 295], [354, 19], [19, 370], [370, 354], [285, 441], [441, 295], [295, 285], [195, 248], [248, 197], [197, 195], [457, 440], [440, 274], [274, 457], [301, 300], [300, 368], [368, 301], [417, 351], [351, 465], [465, 417], [251, 301], [301, 389], [389, 251], [394, 395], [395, 379], [379, 394], [399, 412], [412, 419], [419, 399], [410, 436], [436, 322], [322, 410], [326, 2], [2, 393], [393, 326], [354, 370], [370, 461], [461, 354], [393, 164], [164, 267], [267, 393], [268, 302], [302, 12], [12, 268], [312, 268], [268, 13], [13, 312], [298, 293], [293, 301], [301, 298], [265, 446], [446, 340], [340, 265], [280, 330], [330, 425], [425, 280], [322, 426], [426, 391], [391, 322], [420, 429], [429, 437], [437, 420], [393, 391], [391, 326], [326, 393], [344, 440], [440, 438], [438, 344], [458, 459], [459, 461], [461, 458], [364, 434], [434, 394], [394, 364], [428, 396], [396, 262], [262, 428], [274, 354], [354, 457], [457, 274], [317, 316], [316, 402], [402, 317], [316, 315], [315, 403], [403, 316], [315, 314], [314, 404], [404, 315], [314, 313], [313, 405], [405, 314], [313, 421], [421, 406], [406, 313], [323, 366], [366, 361], [361, 323], [292, 306], [306, 407], [407, 292], [306, 291], [291, 408], [408, 306], [291, 287], [287, 409], [409, 291], [287, 432], [432, 410], [410, 287], [427, 434], [434, 411], [411, 427], [372, 264], [264, 383], [383, 372], [459, 309], [309, 457], [457, 459], [366, 352], [352, 401], [401, 366], [1, 274], [274, 4], [4, 1], [418, 421], [421, 262], [262, 418], [331, 294], [294, 358], [358, 331], [435, 433], [433, 367], [367, 435], [392, 289], [289, 439], [439, 392], [328, 462], [462, 326], [326, 328], [94, 2], [2, 370], [370, 94], [289, 305], [305, 455], [455, 289], [339, 254], [254, 448], [448, 339], [359, 255], [255, 446], [446, 359], [254, 253], [253, 449], [449, 254], [253, 252], [252, 450], [450, 253], [252, 256], [256, 451], [451, 252], [256, 341], [341, 452], [452, 256], [414, 413], [413, 463], [463, 414], [286, 441], [441, 414], [414, 286], [286, 258], [258, 441], [441, 286], [258, 257], [257, 442], [442, 258], [257, 259], [259, 443], [443, 257], [259, 260], [260, 444], [444, 259], [260, 467], [467, 445], [445, 260], [309, 459], [459, 250], [250, 309], [305, 289], [289, 290], [290, 305], [305, 290], [290, 460], [460, 305], [401, 376], [376, 435], [435, 401], [309, 250], [250, 392], [392, 309], [376, 411], [411, 433], [433, 376], [453, 341], [341, 464], [464, 453], [357, 453], [453, 465], [465, 357], [343, 357], [357, 412], [412, 343], [437, 343], [343, 399], [399, 437], [344, 360], [360, 440], [440, 344], [420, 437], [437, 456], [456, 420], [360, 420], [420, 363], [363, 360], [361, 401], [401, 288], [288, 361], [265, 372], [372, 353], [353, 265], [390, 339], [339, 249], [249, 390], [339, 448], [448, 255], [255, 339]);
function xi(A2) {
  A2.j = { faceLandmarks: [], faceBlendshapes: [], facialTransformationMatrixes: [] };
}
var hA = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", false), this.j = { faceLandmarks: [], faceBlendshapes: [], facialTransformationMatrixes: [] }, this.outputFacialTransformationMatrixes = this.outputFaceBlendshapes = false, V(A2 = this.h = new Uo(), 0, 1, I2 = new yA()), this.v = new ps(), V(this.h, 0, 3, this.v), this.u = new EE(), V(this.h, 0, 2, this.u), YI(this.u, 4, 1), x(this.u, 2, 0.5), x(this.v, 2, 0.5), x(this.h, 4, 0.5);
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return "numFaces" in A2 && YI(this.u, 4, A2.numFaces ?? 1), "minFaceDetectionConfidence" in A2 && x(this.u, 2, A2.minFaceDetectionConfidence ?? 0.5), "minTrackingConfidence" in A2 && x(this.h, 4, A2.minTrackingConfidence ?? 0.5), "minFacePresenceConfidence" in A2 && x(this.v, 2, A2.minFacePresenceConfidence ?? 0.5), "outputFaceBlendshapes" in A2 && (this.outputFaceBlendshapes = !!A2.outputFaceBlendshapes), "outputFacialTransformationMatrixes" in A2 && (this.outputFacialTransformationMatrixes = !!A2.outputFacialTransformationMatrixes), this.l(A2);
  }
  G(A2, I2) {
    return xi(this), KI(this, A2, I2), this.j;
  }
  H(A2, I2, g) {
    return xi(this), WI(this, A2, g, I2), this.j;
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect"), GA(A2, "face_landmarks");
    const I2 = new iI();
    RI(I2, Xs, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), gA(g, "NORM_LANDMARKS:face_landmarks"), g.o(I2), GI(A2, g), this.g.attachProtoVectorListener("face_landmarks", (E2, D2) => {
      for (const o of E2)
        E2 = YB(o), this.j.faceLandmarks.push(GE(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("face_landmarks", (E2) => {
      b(this, E2);
    }), this.outputFaceBlendshapes && (GA(A2, "blendshapes"), gA(g, "BLENDSHAPES:blendshapes"), this.g.attachProtoVectorListener("blendshapes", (E2, D2) => {
      if (this.outputFaceBlendshapes)
        for (const o of E2)
          E2 = BE(o), this.j.faceBlendshapes.push(Zo(E2.g() ?? []));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("blendshapes", (E2) => {
      b(this, E2);
    })), this.outputFacialTransformationMatrixes && (GA(A2, "face_geometry"), gA(g, "FACE_GEOMETRY:face_geometry"), this.g.attachProtoVectorListener("face_geometry", (E2, D2) => {
      if (this.outputFacialTransformationMatrixes)
        for (const o of E2)
          (E2 = P(us(o), Do, 2)) && this.j.facialTransformationMatrixes.push({ rows: cI(BI(E2, 1)) ?? 0, columns: cI(BI(E2, 2)) ?? 0, data: kg(E2, 3, PI) ?? [] });
      b(this, D2);
    }), this.g.attachEmptyPacketListener("face_geometry", (E2) => {
      b(this, E2);
    })), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
hA.prototype.detectForVideo = hA.prototype.H, hA.prototype.detect = hA.prototype.G, hA.prototype.setOptions = hA.prototype.o, hA.createFromModelPath = function(A2, I2) {
  return j(hA, A2, { baseOptions: { modelAssetPath: I2 } });
}, hA.createFromModelBuffer = function(A2, I2) {
  return j(hA, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, hA.createFromOptions = function(A2, I2) {
  return j(hA, A2, I2);
}, hA.FACE_LANDMARKS_LIPS = vo, hA.FACE_LANDMARKS_LEFT_EYE = _o, hA.FACE_LANDMARKS_LEFT_EYEBROW = $o, hA.FACE_LANDMARKS_LEFT_IRIS = GF, hA.FACE_LANDMARKS_RIGHT_EYE = AG, hA.FACE_LANDMARKS_RIGHT_EYEBROW = IG, hA.FACE_LANDMARKS_RIGHT_IRIS = wF, hA.FACE_LANDMARKS_FACE_OVAL = gG, hA.FACE_LANDMARKS_CONTOURS = sF, hA.FACE_LANDMARKS_TESSELATION = FF;
var UI = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", true), V(A2 = this.j = new Mo(), 0, 1, I2 = new yA());
  }
  get baseOptions() {
    return P(this.j, yA, 1);
  }
  set baseOptions(A2) {
    V(this.j, 0, 1, A2);
  }
  o(A2) {
    return super.l(A2);
  }
  Ua(A2, I2, g) {
    const E2 = typeof I2 != "function" ? I2 : {};
    if (this.h = typeof I2 == "function" ? I2 : g, KI(this, A2, E2 ?? {}), !this.h)
      return this.u;
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect"), GA(A2, "stylized_image");
    const I2 = new iI();
    RI(I2, Os, this.j);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), gA(g, "STYLIZED_IMAGE:stylized_image"), g.o(I2), GI(A2, g), this.g.ba("stylized_image", (E2, D2) => {
      var o = !this.h, s = E2.data, N2 = E2.width;
      const y2 = N2 * (E2 = E2.height);
      if (s instanceof Uint8Array)
        if (s.length === 3 * y2) {
          const U2 = new Uint8ClampedArray(4 * y2);
          for (let L2 = 0; L2 < y2; ++L2)
            U2[4 * L2] = s[3 * L2], U2[4 * L2 + 1] = s[3 * L2 + 1], U2[4 * L2 + 2] = s[3 * L2 + 2], U2[4 * L2 + 3] = 255;
          s = new ImageData(U2, N2, E2);
        } else {
          if (s.length !== 4 * y2)
            throw Error("Unsupported channel count: " + s.length / y2);
          s = new ImageData(new Uint8ClampedArray(s.buffer, s.byteOffset, s.length), N2, E2);
        }
      else if (!(s instanceof WebGLTexture))
        throw Error(`Unsupported format: ${s.constructor.name}`);
      N2 = new eA([s], false, false, this.g.i.canvas, this.M, N2, E2), this.u = o = o ? N2.clone() : N2, this.h && this.h(o), b(this, D2);
    }), this.g.attachEmptyPacketListener("stylized_image", (E2) => {
      this.u = null, this.h && this.h(null), b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
UI.prototype.stylize = UI.prototype.Ua, UI.prototype.setOptions = UI.prototype.o, UI.createFromModelPath = function(A2, I2) {
  return j(UI, A2, { baseOptions: { modelAssetPath: I2 } });
}, UI.createFromModelBuffer = function(A2, I2) {
  return j(UI, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, UI.createFromOptions = function(A2, I2) {
  return j(UI, A2, I2);
};
var CG = NI([0, 1], [1, 2], [2, 3], [3, 4], [0, 5], [5, 6], [6, 7], [7, 8], [5, 9], [9, 10], [10, 11], [11, 12], [9, 13], [13, 14], [14, 15], [15, 16], [13, 17], [0, 17], [17, 18], [18, 19], [19, 20]);
function Wi(A2) {
  A2.gestures = [], A2.landmarks = [], A2.worldLandmarks = [], A2.handedness = [];
}
function Zi(A2) {
  return A2.gestures.length === 0 ? { gestures: [], landmarks: [], worldLandmarks: [], handedness: [], handednesses: [] } : { gestures: A2.gestures, landmarks: A2.landmarks, worldLandmarks: A2.worldLandmarks, handedness: A2.handedness, handednesses: A2.handedness };
}
function mi(A2, I2 = true) {
  const g = [];
  for (const D2 of A2) {
    var E2 = BE(D2);
    A2 = [];
    for (const o of E2.g())
      E2 = I2 && BI(o, 1) != null ? cI(BI(o, 1)) : -1, A2.push({ score: fA(o, 2) ?? 0, index: E2, categoryName: EI(o, 3) ?? "" ?? "", displayName: EI(o, 4) ?? "" ?? "" });
    g.push(A2);
  }
  return g;
}
var jA = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", false), this.gestures = [], this.landmarks = [], this.worldLandmarks = [], this.handedness = [], V(A2 = this.v = new qo(), 0, 1, I2 = new yA()), this.B = new iE(), V(this.v, 0, 2, this.B), this.u = new to(), V(this.B, 0, 3, this.u), this.h = new Yo(), V(this.B, 0, 2, this.h), this.j = new js(), V(this.v, 0, 3, this.j), x(this.h, 2, 0.5), x(this.B, 4, 0.5), x(this.u, 2, 0.5);
  }
  get baseOptions() {
    return P(this.v, yA, 1);
  }
  set baseOptions(A2) {
    V(this.v, 0, 1, A2);
  }
  o(A2) {
    var D2, o, s, N2;
    if (YI(this.h, 3, A2.numHands ?? 1), "minHandDetectionConfidence" in A2 && x(this.h, 2, A2.minHandDetectionConfidence ?? 0.5), "minTrackingConfidence" in A2 && x(this.B, 4, A2.minTrackingConfidence ?? 0.5), "minHandPresenceConfidence" in A2 && x(this.u, 2, A2.minHandPresenceConfidence ?? 0.5), A2.cannedGesturesClassifierOptions) {
      var I2 = new Ug(), g = I2, E2 = hQ(A2.cannedGesturesClassifierOptions, (D2 = P(this.j, Ug, 3)) == null ? void 0 : D2.h());
      V(g, 0, 2, E2), V(this.j, 0, 3, I2);
    } else
      A2.cannedGesturesClassifierOptions === void 0 && ((o = P(this.j, Ug, 3)) == null || o.g());
    return A2.customGesturesClassifierOptions ? (V(g = I2 = new Ug(), 0, 2, E2 = hQ(A2.customGesturesClassifierOptions, (s = P(this.j, Ug, 4)) == null ? void 0 : s.h())), V(this.j, 0, 4, I2)) : A2.customGesturesClassifierOptions === void 0 && ((N2 = P(this.j, Ug, 4)) == null || N2.g()), this.l(A2);
  }
  Pa(A2, I2) {
    return Wi(this), KI(this, A2, I2), Zi(this);
  }
  Qa(A2, I2, g) {
    return Wi(this), WI(this, A2, g, I2), Zi(this);
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect"), GA(A2, "hand_gestures"), GA(A2, "hand_landmarks"), GA(A2, "world_hand_landmarks"), GA(A2, "handedness");
    const I2 = new iI();
    RI(I2, vs, this.v);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), gA(g, "HAND_GESTURES:hand_gestures"), gA(g, "LANDMARKS:hand_landmarks"), gA(g, "WORLD_LANDMARKS:world_hand_landmarks"), gA(g, "HANDEDNESS:handedness"), g.o(I2), GI(A2, g), this.g.attachProtoVectorListener("hand_landmarks", (E2, D2) => {
      for (const o of E2) {
        E2 = YB(o);
        const s = [];
        for (const N2 of xI(E2, Eo, 1))
          s.push({ x: fA(N2, 1) ?? 0, y: fA(N2, 2) ?? 0, z: fA(N2, 3) ?? 0 });
        this.landmarks.push(s);
      }
      b(this, D2);
    }), this.g.attachEmptyPacketListener("hand_landmarks", (E2) => {
      b(this, E2);
    }), this.g.attachProtoVectorListener("world_hand_landmarks", (E2, D2) => {
      for (const o of E2) {
        E2 = QE(o);
        const s = [];
        for (const N2 of xI(E2, Bo, 1))
          s.push({ x: fA(N2, 1) ?? 0, y: fA(N2, 2) ?? 0, z: fA(N2, 3) ?? 0 });
        this.worldLandmarks.push(s);
      }
      b(this, D2);
    }), this.g.attachEmptyPacketListener("world_hand_landmarks", (E2) => {
      b(this, E2);
    }), this.g.attachProtoVectorListener("hand_gestures", (E2, D2) => {
      this.gestures.push(...mi(E2, false)), b(this, D2);
    }), this.g.attachEmptyPacketListener("hand_gestures", (E2) => {
      b(this, E2);
    }), this.g.attachProtoVectorListener("handedness", (E2, D2) => {
      this.handedness.push(...mi(E2)), b(this, D2);
    }), this.g.attachEmptyPacketListener("handedness", (E2) => {
      b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
function Ti(A2) {
  return { landmarks: A2.landmarks, worldLandmarks: A2.worldLandmarks, handednesses: A2.handedness, handedness: A2.handedness };
}
jA.prototype.recognizeForVideo = jA.prototype.Qa, jA.prototype.recognize = jA.prototype.Pa, jA.prototype.setOptions = jA.prototype.o, jA.createFromModelPath = function(A2, I2) {
  return j(jA, A2, { baseOptions: { modelAssetPath: I2 } });
}, jA.createFromModelBuffer = function(A2, I2) {
  return j(jA, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, jA.createFromOptions = function(A2, I2) {
  return j(jA, A2, I2);
}, jA.HAND_CONNECTIONS = CG;
var PA = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", false), this.landmarks = [], this.worldLandmarks = [], this.handedness = [], V(A2 = this.j = new iE(), 0, 1, I2 = new yA()), this.u = new to(), V(this.j, 0, 3, this.u), this.h = new Yo(), V(this.j, 0, 2, this.h), YI(this.h, 3, 1), x(this.h, 2, 0.5), x(this.u, 2, 0.5), x(this.j, 4, 0.5);
  }
  get baseOptions() {
    return P(this.j, yA, 1);
  }
  set baseOptions(A2) {
    V(this.j, 0, 1, A2);
  }
  o(A2) {
    return "numHands" in A2 && YI(this.h, 3, A2.numHands ?? 1), "minHandDetectionConfidence" in A2 && x(this.h, 2, A2.minHandDetectionConfidence ?? 0.5), "minTrackingConfidence" in A2 && x(this.j, 4, A2.minTrackingConfidence ?? 0.5), "minHandPresenceConfidence" in A2 && x(this.u, 2, A2.minHandPresenceConfidence ?? 0.5), this.l(A2);
  }
  G(A2, I2) {
    return this.landmarks = [], this.worldLandmarks = [], this.handedness = [], KI(this, A2, I2), Ti(this);
  }
  H(A2, I2, g) {
    return this.landmarks = [], this.worldLandmarks = [], this.handedness = [], WI(this, A2, g, I2), Ti(this);
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect"), GA(A2, "hand_landmarks"), GA(A2, "world_hand_landmarks"), GA(A2, "handedness");
    const I2 = new iI();
    RI(I2, zs, this.j);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), gA(g, "LANDMARKS:hand_landmarks"), gA(g, "WORLD_LANDMARKS:world_hand_landmarks"), gA(g, "HANDEDNESS:handedness"), g.o(I2), GI(A2, g), this.g.attachProtoVectorListener("hand_landmarks", (E2, D2) => {
      for (const o of E2)
        E2 = YB(o), this.landmarks.push(GE(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("hand_landmarks", (E2) => {
      b(this, E2);
    }), this.g.attachProtoVectorListener("world_hand_landmarks", (E2, D2) => {
      for (const o of E2)
        E2 = QE(o), this.worldLandmarks.push(To(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("world_hand_landmarks", (E2) => {
      b(this, E2);
    }), this.g.attachProtoVectorListener("handedness", (E2, D2) => {
      var o = this.handedness, s = o.push;
      const N2 = [];
      for (const y2 of E2) {
        E2 = BE(y2);
        const U2 = [];
        for (const L2 of E2.g())
          U2.push({ score: fA(L2, 2) ?? 0, index: cI(BI(L2, 1)) ?? -1, categoryName: EI(L2, 3) ?? "" ?? "", displayName: EI(L2, 4) ?? "" ?? "" });
        N2.push(U2);
      }
      s.call(o, ...N2), b(this, D2);
    }), this.g.attachEmptyPacketListener("handedness", (E2) => {
      b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
PA.prototype.detectForVideo = PA.prototype.H, PA.prototype.detect = PA.prototype.G, PA.prototype.setOptions = PA.prototype.o, PA.createFromModelPath = function(A2, I2) {
  return j(PA, A2, { baseOptions: { modelAssetPath: I2 } });
}, PA.createFromModelBuffer = function(A2, I2) {
  return j(PA, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, PA.createFromOptions = function(A2, I2) {
  return j(PA, A2, I2);
}, PA.HAND_CONNECTIONS = CG;
var II = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "input_image", "norm_rect", true), this.j = { classifications: [] }, V(A2 = this.h = new eo(), 0, 1, I2 = new yA());
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return V(this.h, 0, 2, hQ(A2, P(this.h, LB, 2))), this.l(A2);
  }
  ya(A2, I2) {
    return this.j = { classifications: [] }, KI(this, A2, I2), this.j;
  }
  za(A2, I2, g) {
    return this.j = { classifications: [] }, WI(this, A2, g, I2), this.j;
  }
  m() {
    var A2 = new XA();
    sA(A2, "input_image"), sA(A2, "norm_rect"), GA(A2, "classifications");
    const I2 = new iI();
    RI(I2, _s, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.image_classifier.ImageClassifierGraph"), iA(g, "IMAGE:input_image"), iA(g, "NORM_RECT:norm_rect"), gA(g, "CLASSIFICATIONS:classifications"), g.o(I2), GI(A2, g), this.g.attachProtoListener("classifications", (E2, D2) => {
      this.j = function(o) {
        const s = { classifications: xI(o, ls, 1).map((N2) => {
          var y2;
          return Zo(((y2 = P(N2, CE, 4)) == null ? void 0 : y2.g()) ?? [], cI(BI(N2, 2)), EI(N2, 3) ?? "");
        }) };
        return iB(cg(o, 2)) != null && (s.timestampMs = cI(iB(cg(o, 2)))), s;
      }(bs(E2)), b(this, D2);
    }), this.g.attachEmptyPacketListener("classifications", (E2) => {
      b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
II.prototype.classifyForVideo = II.prototype.za, II.prototype.classify = II.prototype.ya, II.prototype.setOptions = II.prototype.o, II.createFromModelPath = function(A2, I2) {
  return j(II, A2, { baseOptions: { modelAssetPath: I2 } });
}, II.createFromModelBuffer = function(A2, I2) {
  return j(II, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, II.createFromOptions = function(A2, I2) {
  return j(II, A2, I2);
};
var zA = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", true), this.h = new no(), this.embeddings = { embeddings: [] }, V(A2 = this.h, 0, 1, I2 = new yA());
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    var I2 = this.h, g = P(this.h, Ji, 2);
    return g = g ? g.clone() : new Ji(), A2.l2Normalize !== void 0 ? BC(g, 1, A2.l2Normalize) : "l2Normalize" in A2 && QA(g, 1), A2.quantize !== void 0 ? BC(g, 2, A2.quantize) : "quantize" in A2 && QA(g, 2), V(I2, 0, 2, g), this.l(A2);
  }
  Fa(A2, I2) {
    return KI(this, A2, I2), this.embeddings;
  }
  Ga(A2, I2, g) {
    return WI(this, A2, g, I2), this.embeddings;
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect"), GA(A2, "embeddings_out");
    const I2 = new iI();
    RI(I2, $s, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), gA(g, "EMBEDDINGS:embeddings_out"), g.o(I2), GI(A2, g), this.g.attachProtoListener("embeddings_out", (E2, D2) => {
      E2 = Zs(E2), this.embeddings = function(o) {
        return { embeddings: xI(o, xs, 1).map((s) => {
          var y2, U2;
          const N2 = { headIndex: cI(BI(s, 3)) ?? -1, headName: EI(s, 4) ?? "" ?? "" };
          if (tD(s, aQ, $B(s, 1)) !== void 0)
            s = kg(s = P(s, aQ, $B(s, 1)), 1, PI), N2.floatEmbedding = s;
          else {
            const L2 = new Uint8Array(0);
            N2.quantizedEmbedding = ((U2 = (y2 = P(s, Vs, $B(s, 2))) == null ? void 0 : y2.ua()) == null ? void 0 : U2.wa()) ?? L2;
          }
          return N2;
        }), timestampMs: cI(iB(cg(o, 2))) };
      }(E2), b(this, D2);
    }), this.g.attachEmptyPacketListener("embeddings_out", (E2) => {
      b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
zA.cosineSimilarity = function(A2, I2) {
  if (A2.floatEmbedding && I2.floatEmbedding)
    A2 = Li(A2.floatEmbedding, I2.floatEmbedding);
  else {
    if (!A2.quantizedEmbedding || !I2.quantizedEmbedding)
      throw Error("Cannot compute cosine similarity between quantized and float embeddings.");
    A2 = Li(Yi(A2.quantizedEmbedding), Yi(I2.quantizedEmbedding));
  }
  return A2;
}, zA.prototype.embedForVideo = zA.prototype.Ga, zA.prototype.embed = zA.prototype.Fa, zA.prototype.setOptions = zA.prototype.o, zA.createFromModelPath = function(A2, I2) {
  return j(zA, A2, { baseOptions: { modelAssetPath: I2 } });
}, zA.createFromModelBuffer = function(A2, I2) {
  return j(zA, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, zA.createFromOptions = function(A2, I2) {
  return j(zA, A2, I2);
};
var UQ = class {
  constructor(A2, I2, g) {
    this.confidenceMasks = A2, this.categoryMask = I2, this.qualityScores = g;
  }
  close() {
    var A2, I2;
    (A2 = this.confidenceMasks) == null || A2.forEach((g) => {
      g.close();
    }), (I2 = this.categoryMask) == null || I2.close();
  }
};
function ui(A2) {
  A2.categoryMask = void 0, A2.confidenceMasks = void 0, A2.qualityScores = void 0;
}
function pi(A2) {
  try {
    const I2 = new UQ(A2.confidenceMasks, A2.categoryMask, A2.qualityScores);
    if (!A2.j)
      return I2;
    A2.j(I2);
  } finally {
    sE(A2);
  }
}
UQ.prototype.close = UQ.prototype.close;
var TA = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", false), this.u = [], this.outputCategoryMask = false, this.outputConfidenceMasks = true, this.h = new DE(), this.v = new lo(), V(this.h, 0, 3, this.v), V(A2 = this.h, 0, 1, I2 = new yA());
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return A2.displayNamesLocale !== void 0 ? QA(this.h, 2, wC(A2.displayNamesLocale)) : "displayNamesLocale" in A2 && QA(this.h, 2), "outputCategoryMask" in A2 && (this.outputCategoryMask = A2.outputCategoryMask ?? false), "outputConfidenceMasks" in A2 && (this.outputConfidenceMasks = A2.outputConfidenceMasks ?? true), super.l(A2);
  }
  N() {
    (function(A2) {
      var g, E2;
      const I2 = xI(A2.da(), ZA, 1).filter((D2) => (EI(D2, 1) ?? "").includes("mediapipe.tasks.TensorsToSegmentationCalculator"));
      if (A2.u = [], 1 < I2.length)
        throw Error("The graph has more than one mediapipe.tasks.TensorsToSegmentationCalculator.");
      I2.length === 1 && (((E2 = (g = P(I2[0], iI, 7)) == null ? void 0 : g.l()) == null ? void 0 : E2.g()) ?? /* @__PURE__ */ new Map()).forEach((D2, o) => {
        A2.u[Number(o)] = EI(D2, 1) ?? "";
      });
    })(this);
  }
  ea(A2, I2, g) {
    const E2 = typeof I2 != "function" ? I2 : {};
    return this.j = typeof I2 == "function" ? I2 : g, ui(this), KI(this, A2, E2), pi(this);
  }
  Sa(A2, I2, g, E2) {
    const D2 = typeof g != "function" ? g : {};
    return this.j = typeof g == "function" ? g : E2, ui(this), WI(this, A2, D2, I2), pi(this);
  }
  Ja() {
    return this.u;
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect");
    const I2 = new iI();
    RI(I2, bo, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), g.o(I2), GI(A2, g), wE(this, A2), this.outputConfidenceMasks && (GA(A2, "confidence_masks"), gA(g, "CONFIDENCE_MASKS:confidence_masks"), QC(this, "confidence_masks"), this.g.ca("confidence_masks", (E2, D2) => {
      this.confidenceMasks = E2.map((o) => EC(this, o, true, !this.j)), b(this, D2);
    }), this.g.attachEmptyPacketListener("confidence_masks", (E2) => {
      this.confidenceMasks = [], b(this, E2);
    })), this.outputCategoryMask && (GA(A2, "category_mask"), gA(g, "CATEGORY_MASK:category_mask"), QC(this, "category_mask"), this.g.ba("category_mask", (E2, D2) => {
      this.categoryMask = EC(this, E2, false, !this.j), b(this, D2);
    }), this.g.attachEmptyPacketListener("category_mask", (E2) => {
      this.categoryMask = void 0, b(this, E2);
    })), GA(A2, "quality_scores"), gA(g, "QUALITY_SCORES:quality_scores"), this.g.attachFloatVectorListener("quality_scores", (E2, D2) => {
      this.qualityScores = E2, b(this, D2);
    }), this.g.attachEmptyPacketListener("quality_scores", (E2) => {
      this.categoryMask = void 0, b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
TA.prototype.getLabels = TA.prototype.Ja, TA.prototype.segmentForVideo = TA.prototype.Sa, TA.prototype.segment = TA.prototype.ea, TA.prototype.setOptions = TA.prototype.o, TA.createFromModelPath = function(A2, I2) {
  return j(TA, A2, { baseOptions: { modelAssetPath: I2 } });
}, TA.createFromModelBuffer = function(A2, I2) {
  return j(TA, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, TA.createFromOptions = function(A2, I2) {
  return j(TA, A2, I2);
};
var kQ = class {
  constructor(A2, I2, g) {
    this.confidenceMasks = A2, this.categoryMask = I2, this.qualityScores = g;
  }
  close() {
    var A2, I2;
    (A2 = this.confidenceMasks) == null || A2.forEach((g) => {
      g.close();
    }), (I2 = this.categoryMask) == null || I2.close();
  }
};
kQ.prototype.close = kQ.prototype.close;
var aF = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Hg = [0, KA, -2], RF = [0, bI, -3, SA], qB = [0, bI, -3, SA, bI, -1], BG = [0, qB], hF = [0, BG, Hg], NF = [0, qB, Hg], QG = [0, qB, KA, -1], yF = [0, QG, Hg], KF = [0, bI, -3, SA, Hg, -1], UF = [0, bI, -3, SA, LI], gQ = class extends n {
  constructor(A2) {
    super(A2);
  }
}, Xi = [0, bI, -1, SA], EG = class extends n {
  constructor() {
    super();
  }
};
EG.A = [1];
var Oi = class extends n {
  constructor(A2) {
    super(A2);
  }
}, MQ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15], kF = [0, MQ, oA, qB, oA, NF, oA, BG, oA, hF, oA, Xi, oA, UF, oA, RF, oA, [0, DA, bI, -2, SA, KA, SA, -1, 2, bI, Hg], oA, QG, oA, yF, bI, Hg, DA, oA, KF, oA, [0, JA, Xi]], MF = [0, DA, KA, -1, SA], SQ = class extends n {
  constructor() {
    super();
  }
};
SQ.A = [1], SQ.prototype.g = gE([0, JA, kF, DA, MF]);
var kI = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect_in", false), this.outputCategoryMask = false, this.outputConfidenceMasks = true, this.h = new DE(), this.v = new lo(), V(this.h, 0, 3, this.v), V(A2 = this.h, 0, 1, I2 = new yA());
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return "outputCategoryMask" in A2 && (this.outputCategoryMask = A2.outputCategoryMask ?? false), "outputConfidenceMasks" in A2 && (this.outputConfidenceMasks = A2.outputConfidenceMasks ?? true), super.l(A2);
  }
  ea(A2, I2, g, E2) {
    const D2 = typeof g != "function" ? g : {};
    this.j = typeof g == "function" ? g : E2, this.qualityScores = this.categoryMask = this.confidenceMasks = void 0, g = this.I + 1, E2 = new SQ();
    const o = new Oi();
    var s = new aF();
    if (YI(s, 1, 255), V(o, 0, 12, s), I2.keypoint && I2.scribble)
      throw Error("Cannot provide both keypoint and scribble.");
    if (I2.keypoint) {
      var N2 = new gQ();
      BC(N2, 3, true), x(N2, 1, I2.keypoint.x), x(N2, 2, I2.keypoint.y), _g(o, 5, MQ, N2);
    } else {
      if (!I2.scribble)
        throw Error("Must provide either a keypoint or a scribble.");
      for (N2 of (s = new EG(), I2.scribble))
        BC(I2 = new gQ(), 3, true), x(I2, 1, N2.x), x(I2, 2, N2.y), FQ(s, gQ, I2);
      _g(o, 15, MQ, s);
    }
    FQ(E2, Oi, o), this.g.addProtoToStream(E2.g(), "drishti.RenderData", "roi_in", g), KI(this, A2, D2);
    A: {
      try {
        const U2 = new kQ(this.confidenceMasks, this.categoryMask, this.qualityScores);
        if (!this.j) {
          var y2 = U2;
          break A;
        }
        this.j(U2);
      } finally {
        sE(this);
      }
      y2 = void 0;
    }
    return y2;
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "roi_in"), sA(A2, "norm_rect_in");
    const I2 = new iI();
    RI(I2, bo, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph"), iA(g, "IMAGE:image_in"), iA(g, "ROI:roi_in"), iA(g, "NORM_RECT:norm_rect_in"), g.o(I2), GI(A2, g), wE(this, A2), this.outputConfidenceMasks && (GA(A2, "confidence_masks"), gA(g, "CONFIDENCE_MASKS:confidence_masks"), QC(this, "confidence_masks"), this.g.ca("confidence_masks", (E2, D2) => {
      this.confidenceMasks = E2.map((o) => EC(this, o, true, !this.j)), b(this, D2);
    }), this.g.attachEmptyPacketListener("confidence_masks", (E2) => {
      this.confidenceMasks = [], b(this, E2);
    })), this.outputCategoryMask && (GA(A2, "category_mask"), gA(g, "CATEGORY_MASK:category_mask"), QC(this, "category_mask"), this.g.ba("category_mask", (E2, D2) => {
      this.categoryMask = EC(this, E2, false, !this.j), b(this, D2);
    }), this.g.attachEmptyPacketListener("category_mask", (E2) => {
      this.categoryMask = void 0, b(this, E2);
    })), GA(A2, "quality_scores"), gA(g, "QUALITY_SCORES:quality_scores"), this.g.attachFloatVectorListener("quality_scores", (E2, D2) => {
      this.qualityScores = E2, b(this, D2);
    }), this.g.attachEmptyPacketListener("quality_scores", (E2) => {
      this.categoryMask = void 0, b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
kI.prototype.segment = kI.prototype.ea, kI.prototype.setOptions = kI.prototype.o, kI.createFromModelPath = function(A2, I2) {
  return j(kI, A2, { baseOptions: { modelAssetPath: I2 } });
}, kI.createFromModelBuffer = function(A2, I2) {
  return j(kI, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, kI.createFromOptions = function(A2, I2) {
  return j(kI, A2, I2);
};
var gI = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "input_frame_gpu", "norm_rect", false), this.j = { detections: [] }, V(A2 = this.h = new oE(), 0, 1, I2 = new yA());
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return A2.displayNamesLocale !== void 0 ? QA(this.h, 2, wC(A2.displayNamesLocale)) : "displayNamesLocale" in A2 && QA(this.h, 2), A2.maxResults !== void 0 ? YI(this.h, 3, A2.maxResults) : "maxResults" in A2 && QA(this.h, 3), A2.scoreThreshold !== void 0 ? x(this.h, 4, A2.scoreThreshold) : "scoreThreshold" in A2 && QA(this.h, 4), A2.categoryAllowlist !== void 0 ? GB(this.h, 5, A2.categoryAllowlist) : "categoryAllowlist" in A2 && QA(this.h, 5), A2.categoryDenylist !== void 0 ? GB(this.h, 6, A2.categoryDenylist) : "categoryDenylist" in A2 && QA(this.h, 6), this.l(A2);
  }
  G(A2, I2) {
    return this.j = { detections: [] }, KI(this, A2, I2), this.j;
  }
  H(A2, I2, g) {
    return this.j = { detections: [] }, WI(this, A2, g, I2), this.j;
  }
  m() {
    var A2 = new XA();
    sA(A2, "input_frame_gpu"), sA(A2, "norm_rect"), GA(A2, "detections");
    const I2 = new iI();
    RI(I2, IF, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.ObjectDetectorGraph"), iA(g, "IMAGE:input_frame_gpu"), iA(g, "NORM_RECT:norm_rect"), gA(g, "DETECTIONS:detections"), g.o(I2), GI(A2, g), this.g.attachProtoVectorListener("detections", (E2, D2) => {
      for (const o of E2)
        E2 = Co(o), this.j.detections.push(mo(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("detections", (E2) => {
      b(this, E2);
    }), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
gI.prototype.detectForVideo = gI.prototype.H, gI.prototype.detect = gI.prototype.G, gI.prototype.setOptions = gI.prototype.o, gI.createFromModelPath = async function(A2, I2) {
  return j(gI, A2, { baseOptions: { modelAssetPath: I2 } });
}, gI.createFromModelBuffer = function(A2, I2) {
  return j(gI, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, gI.createFromOptions = function(A2, I2) {
  return j(gI, A2, I2);
};
function ji(A2) {
  A2.landmarks = [], A2.worldLandmarks = [], A2.v = void 0;
}
function Pi(A2) {
  try {
    const I2 = new class {
      constructor(g, E2, D2) {
        this.landmarks = g, this.worldLandmarks = E2, this.g = D2;
      }
      close() {
        var g;
        (g = this.g) == null || g.forEach((E2) => {
          E2.close();
        });
      }
    }(A2.landmarks, A2.worldLandmarks, A2.v);
    if (!A2.u)
      return I2;
    A2.u(I2);
  } finally {
    sE(A2);
  }
}
var vA = class extends _A {
  constructor(A2, I2) {
    super(new yI(A2, I2), "image_in", "norm_rect", false), this.landmarks = [], this.worldLandmarks = [], this.outputSegmentationMasks = false, V(A2 = this.h = new Wo(), 0, 1, I2 = new yA()), this.B = new CF(), V(this.h, 0, 3, this.B), this.j = new gF(), V(this.h, 0, 2, this.j), YI(this.j, 4, 1), x(this.j, 2, 0.5), x(this.B, 2, 0.5), x(this.h, 4, 0.5);
  }
  get baseOptions() {
    return P(this.h, yA, 1);
  }
  set baseOptions(A2) {
    V(this.h, 0, 1, A2);
  }
  o(A2) {
    return "numPoses" in A2 && YI(this.j, 4, A2.numPoses ?? 1), "minPoseDetectionConfidence" in A2 && x(this.j, 2, A2.minPoseDetectionConfidence ?? 0.5), "minTrackingConfidence" in A2 && x(this.h, 4, A2.minTrackingConfidence ?? 0.5), "minPosePresenceConfidence" in A2 && x(this.B, 2, A2.minPosePresenceConfidence ?? 0.5), "outputSegmentationMasks" in A2 && (this.outputSegmentationMasks = A2.outputSegmentationMasks ?? false), this.l(A2);
  }
  G(A2, I2, g) {
    const E2 = typeof I2 != "function" ? I2 : {};
    return this.u = typeof I2 == "function" ? I2 : g, ji(this), KI(this, A2, E2), Pi(this);
  }
  H(A2, I2, g, E2) {
    const D2 = typeof g != "function" ? g : {};
    return this.u = typeof g == "function" ? g : E2, ji(this), WI(this, A2, D2, I2), Pi(this);
  }
  m() {
    var A2 = new XA();
    sA(A2, "image_in"), sA(A2, "norm_rect"), GA(A2, "normalized_landmarks"), GA(A2, "world_landmarks"), GA(A2, "segmentation_masks");
    const I2 = new iI();
    RI(I2, QF, this.h);
    const g = new ZA();
    oI(g, "mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph"), iA(g, "IMAGE:image_in"), iA(g, "NORM_RECT:norm_rect"), gA(g, "NORM_LANDMARKS:normalized_landmarks"), gA(g, "WORLD_LANDMARKS:world_landmarks"), g.o(I2), GI(A2, g), wE(this, A2), this.g.attachProtoVectorListener("normalized_landmarks", (E2, D2) => {
      this.landmarks = [];
      for (const o of E2)
        E2 = YB(o), this.landmarks.push(GE(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("normalized_landmarks", (E2) => {
      this.landmarks = [], b(this, E2);
    }), this.g.attachProtoVectorListener("world_landmarks", (E2, D2) => {
      this.worldLandmarks = [];
      for (const o of E2)
        E2 = QE(o), this.worldLandmarks.push(To(E2));
      b(this, D2);
    }), this.g.attachEmptyPacketListener("world_landmarks", (E2) => {
      this.worldLandmarks = [], b(this, E2);
    }), this.outputSegmentationMasks && (gA(g, "SEGMENTATION_MASK:segmentation_masks"), QC(this, "segmentation_masks"), this.g.ca("segmentation_masks", (E2, D2) => {
      this.v = E2.map((o) => EC(this, o, true, !this.u)), b(this, D2);
    }), this.g.attachEmptyPacketListener("segmentation_masks", (E2) => {
      this.v = [], b(this, E2);
    })), A2 = A2.g(), this.setGraph(new Uint8Array(A2), true);
  }
};
vA.prototype.detectForVideo = vA.prototype.H, vA.prototype.detect = vA.prototype.G, vA.prototype.setOptions = vA.prototype.o, vA.createFromModelPath = function(A2, I2) {
  return j(vA, A2, { baseOptions: { modelAssetPath: I2 } });
}, vA.createFromModelBuffer = function(A2, I2) {
  return j(vA, A2, { baseOptions: { modelAssetBuffer: I2 } });
}, vA.createFromOptions = function(A2, I2) {
  return j(vA, A2, I2);
}, vA.POSE_CONNECTIONS = NI([0, 1], [1, 2], [2, 3], [3, 7], [0, 4], [4, 5], [5, 6], [6, 8], [9, 10], [11, 12], [11, 13], [13, 15], [15, 17], [15, 19], [15, 21], [17, 19], [12, 14], [14, 16], [16, 18], [16, 20], [16, 22], [18, 20], [11, 23], [12, 24], [23, 24], [23, 25], [24, 26], [25, 27], [26, 28], [27, 29], [28, 30], [29, 31], [30, 32], [27, 31], [28, 32]);
class SF {
  constructor() {
  }
  async init() {
    const I2 = await jg.forVisionTasks(
      "https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.9/wasm"
      //"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm"
    );
    this.faceLandmarker = await hA.createFromOptions(I2, {
      baseOptions: {
        modelAssetPath: "https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task",
        delegate: "GPU"
      },
      outputFaceBlendshapes: true,
      // outputFacialTransformationMatrixes: true,
      runningMode: "IMAGE",
      numFaces: 1
    });
  }
  async detect(I2) {
    return this.faceLandmarker.detect(I2);
  }
}
let JF = {};
var iG = function() {
  var A2 = typeof document < "u" && document.currentScript ? document.currentScript.src : void 0;
  return typeof __filename < "u" && (A2 = A2 || __filename), function(I2) {
    I2 = I2 || {};
    var g = typeof I2 < "u" ? I2 : {}, E2, D2;
    g.ready = new Promise(function(C2, B2) {
      E2 = C2, D2 = B2;
    });
    var o = {}, s;
    for (s in g)
      g.hasOwnProperty(s) && (o[s] = g[s]);
    var N2 = "./this.program", y2 = false, U2 = false, L2 = false, d = false;
    y2 = typeof window == "object", U2 = typeof importScripts == "function", L2 = typeof process == "object" && typeof process.versions == "object" && typeof process.versions.node == "string", d = !y2 && !L2 && !U2;
    var e = "";
    function AA(C2) {
      return g.locateFile ? g.locateFile(C2, e) : e + C2;
    }
    var T2, aA, CA, wI, t2;
    L2 ? (U2 ? e = require("path").dirname(e) + "/" : e = __dirname + "/", T2 = function(B2, Q2) {
      var i = Bg2(B2);
      return i ? Q2 ? i : i.toString() : (wI || (wI = require("fs")), t2 || (t2 = require("path")), B2 = t2.normalize(B2), wI.readFileSync(B2, Q2 ? null : "utf8"));
    }, CA = function(B2) {
      var Q2 = T2(B2, true);
      return Q2.buffer || (Q2 = new Uint8Array(Q2)), LA(Q2.buffer), Q2;
    }, process.argv.length > 1 && (N2 = process.argv[1].replace(/\\/g, "/")), process.argv.slice(2), process.on("uncaughtException", function(C2) {
      if (!(C2 instanceof $E))
        throw C2;
    }), process.on("unhandledRejection", dA), g.inspect = function() {
      return "[Emscripten Module object]";
    }) : d ? (typeof read < "u" && (T2 = function(B2) {
      var Q2 = Bg2(B2);
      return Q2 ? jE(Q2) : read(B2);
    }), CA = function(B2) {
      var Q2;
      return Q2 = Bg2(B2), Q2 || (typeof readbuffer == "function" ? new Uint8Array(readbuffer(B2)) : (Q2 = read(B2, "binary"), LA(typeof Q2 == "object"), Q2));
    }, typeof scriptArgs < "u" && scriptArgs, typeof print < "u" && (typeof console > "u" && (console = {}), console.log = print, console.warn = console.error = typeof printErr < "u" ? printErr : print)) : (y2 || U2) && (U2 ? e = self.location.href : typeof document < "u" && document.currentScript && (e = document.currentScript.src), A2 && (e = A2), e.indexOf("blob:") !== 0 ? e = e.substr(0, e.lastIndexOf("/") + 1) : e = "", T2 = function(B2) {
      try {
        var Q2 = new XMLHttpRequest();
        return Q2.open("GET", B2, false), Q2.send(null), Q2.responseText;
      } catch (G2) {
        var i = Bg2(B2);
        if (i)
          return jE(i);
        throw G2;
      }
    }, U2 && (CA = function(B2) {
      try {
        var Q2 = new XMLHttpRequest();
        return Q2.open("GET", B2, false), Q2.responseType = "arraybuffer", Q2.send(null), new Uint8Array(Q2.response);
      } catch (G2) {
        var i = Bg2(B2);
        if (i)
          return i;
        throw G2;
      }
    }), aA = function(B2, Q2, i) {
      var G2 = new XMLHttpRequest();
      G2.open("GET", B2, true), G2.responseType = "arraybuffer", G2.onload = function() {
        if (G2.status == 200 || G2.status == 0 && G2.response) {
          Q2(G2.response);
          return;
        }
        var a = Bg2(B2);
        if (a) {
          Q2(a.buffer);
          return;
        }
        i();
      }, G2.onerror = i, G2.send(null);
    });
    var f2 = g.print || console.log.bind(console), z2 = g.printErr || console.warn.bind(console);
    for (s in o)
      o.hasOwnProperty(s) && (g[s] = o[s]);
    o = null, g.arguments && g.arguments, g.thisProgram && (N2 = g.thisProgram), g.quit && g.quit;
    function sg2(C2, B2) {
      return Math.ceil(C2 / B2) * B2;
    }
    function bA(C2) {
      bA.shown || (bA.shown = {}), bA.shown[C2] || (bA.shown[C2] = 1, z2(C2));
    }
    var vI;
    g.wasmBinary && (vI = g.wasmBinary), g.noExitRuntime && g.noExitRuntime, typeof WebAssembly != "object" && dA("no native wasm support detected");
    var Fg2, RA = false;
    function LA(C2, B2) {
      C2 || dA("Assertion failed: " + B2);
    }
    var _I = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
    function ag2(C2, B2, Q2) {
      for (var i = B2 + Q2, G2 = B2; C2[G2] && !(G2 >= i); )
        ++G2;
      if (G2 - B2 > 16 && C2.subarray && _I)
        return _I.decode(C2.subarray(B2, G2));
      for (var F2 = ""; B2 < G2; ) {
        var a = C2[B2++];
        if (!(a & 128)) {
          F2 += String.fromCharCode(a);
          continue;
        }
        var R2 = C2[B2++] & 63;
        if ((a & 224) == 192) {
          F2 += String.fromCharCode((a & 31) << 6 | R2);
          continue;
        }
        var h2 = C2[B2++] & 63;
        if ((a & 240) == 224 ? a = (a & 15) << 12 | R2 << 6 | h2 : a = (a & 7) << 18 | R2 << 12 | h2 << 6 | C2[B2++] & 63, a < 65536)
          F2 += String.fromCharCode(a);
        else {
          var K2 = a - 65536;
          F2 += String.fromCharCode(55296 | K2 >> 10, 56320 | K2 & 1023);
        }
      }
      return F2;
    }
    function RC(C2, B2) {
      return C2 ? ag2(mA, C2, B2) : "";
    }
    function eB(C2, B2, Q2, i) {
      if (!(i > 0))
        return 0;
      for (var G2 = Q2, F2 = Q2 + i - 1, a = 0; a < C2.length; ++a) {
        var R2 = C2.charCodeAt(a);
        if (R2 >= 55296 && R2 <= 57343) {
          var h2 = C2.charCodeAt(++a);
          R2 = 65536 + ((R2 & 1023) << 10) | h2 & 1023;
        }
        if (R2 <= 127) {
          if (Q2 >= F2)
            break;
          B2[Q2++] = R2;
        } else if (R2 <= 2047) {
          if (Q2 + 1 >= F2)
            break;
          B2[Q2++] = 192 | R2 >> 6, B2[Q2++] = 128 | R2 & 63;
        } else if (R2 <= 65535) {
          if (Q2 + 2 >= F2)
            break;
          B2[Q2++] = 224 | R2 >> 12, B2[Q2++] = 128 | R2 >> 6 & 63, B2[Q2++] = 128 | R2 & 63;
        } else {
          if (Q2 + 3 >= F2)
            break;
          B2[Q2++] = 240 | R2 >> 18, B2[Q2++] = 128 | R2 >> 12 & 63, B2[Q2++] = 128 | R2 >> 6 & 63, B2[Q2++] = 128 | R2 & 63;
        }
      }
      return B2[Q2] = 0, Q2 - G2;
    }
    function yE(C2, B2, Q2) {
      return eB(C2, mA, B2, Q2);
    }
    function hC(C2) {
      for (var B2 = 0, Q2 = 0; Q2 < C2.length; ++Q2) {
        var i = C2.charCodeAt(Q2);
        i >= 55296 && i <= 57343 && (i = 65536 + ((i & 1023) << 10) | C2.charCodeAt(++Q2) & 1023), i <= 127 ? ++B2 : i <= 2047 ? B2 += 2 : i <= 65535 ? B2 += 3 : B2 += 4;
      }
      return B2;
    }
    var KE = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0;
    function sG(C2, B2) {
      for (var Q2 = C2, i = Q2 >> 1, G2 = i + B2 / 2; !(i >= G2) && yC[i]; )
        ++i;
      if (Q2 = i << 1, Q2 - C2 > 32 && KE)
        return KE.decode(mA.subarray(C2, Q2));
      for (var F2 = "", a = 0; !(a >= B2 / 2); ++a) {
        var R2 = $I[C2 + a * 2 >> 1];
        if (R2 == 0)
          break;
        F2 += String.fromCharCode(R2);
      }
      return F2;
    }
    function FG(C2, B2, Q2) {
      if (Q2 === void 0 && (Q2 = 2147483647), Q2 < 2)
        return 0;
      Q2 -= 2;
      for (var i = B2, G2 = Q2 < C2.length * 2 ? Q2 / 2 : C2.length, F2 = 0; F2 < G2; ++F2) {
        var a = C2.charCodeAt(F2);
        $I[B2 >> 1] = a, B2 += 2;
      }
      return $I[B2 >> 1] = 0, B2 - i;
    }
    function aG(C2) {
      return C2.length * 2;
    }
    function RG(C2, B2) {
      for (var Q2 = 0, i = ""; !(Q2 >= B2 / 4); ) {
        var G2 = q2[C2 + Q2 * 4 >> 2];
        if (G2 == 0)
          break;
        if (++Q2, G2 >= 65536) {
          var F2 = G2 - 65536;
          i += String.fromCharCode(55296 | F2 >> 10, 56320 | F2 & 1023);
        } else
          i += String.fromCharCode(G2);
      }
      return i;
    }
    function hG(C2, B2, Q2) {
      if (Q2 === void 0 && (Q2 = 2147483647), Q2 < 4)
        return 0;
      for (var i = B2, G2 = i + Q2 - 4, F2 = 0; F2 < C2.length; ++F2) {
        var a = C2.charCodeAt(F2);
        if (a >= 55296 && a <= 57343) {
          var R2 = C2.charCodeAt(++F2);
          a = 65536 + ((a & 1023) << 10) | R2 & 1023;
        }
        if (q2[B2 >> 2] = a, B2 += 4, B2 + 4 > G2)
          break;
      }
      return q2[B2 >> 2] = 0, B2 - i;
    }
    function NG(C2) {
      for (var B2 = 0, Q2 = 0; Q2 < C2.length; ++Q2) {
        var i = C2.charCodeAt(Q2);
        i >= 55296 && i <= 57343 && ++Q2, B2 += 4;
      }
      return B2;
    }
    function yG(C2, B2) {
      nA.set(C2, B2);
    }
    function KG(C2, B2, Q2) {
      for (var i = 0; i < C2.length; ++i)
        nA[B2++ >> 0] = C2.charCodeAt(i);
      nA[B2 >> 0] = 0;
    }
    function UG(C2, B2) {
      return C2 % B2 > 0 && (C2 += B2 - C2 % B2), C2;
    }
    var NC, nA, mA, $I, yC, q2, sI, UE, kE;
    function ME(C2) {
      NC = C2, g.HEAP8 = nA = new Int8Array(C2), g.HEAP16 = $I = new Int16Array(C2), g.HEAP32 = q2 = new Int32Array(C2), g.HEAPU8 = mA = new Uint8Array(C2), g.HEAPU16 = yC = new Uint16Array(C2), g.HEAPU32 = sI = new Uint32Array(C2), g.HEAPF32 = UE = new Float32Array(C2), g.HEAPF64 = kE = new Float64Array(C2);
    }
    g.INITIAL_MEMORY;
    var fg2, SE = [], JE = [], kG = [], cE = [];
    function MG() {
      if (g.preRun)
        for (typeof g.preRun == "function" && (g.preRun = [g.preRun]); g.preRun.length; )
          YG(g.preRun.shift());
      UC(SE);
    }
    function SG() {
      !g.noFSInit && !w2.init.initialized && w2.init(), UC(JE);
    }
    function JG() {
      w2.ignorePermissions = false, UC(kG);
    }
    function cG() {
      if (g.postRun)
        for (typeof g.postRun == "function" && (g.postRun = [g.postRun]); g.postRun.length; )
          LG(g.postRun.shift());
      UC(cE);
    }
    function YG(C2) {
      SE.unshift(C2);
    }
    function LG(C2) {
      cE.unshift(C2);
    }
    var Ag2 = 0, bg2 = null;
    function KC(C2) {
      Ag2++, g.monitorRunDependencies && g.monitorRunDependencies(Ag2);
    }
    function Vg2(C2) {
      if (Ag2--, g.monitorRunDependencies && g.monitorRunDependencies(Ag2), Ag2 == 0 && bg2) {
        var B2 = bg2;
        bg2 = null, B2();
      }
    }
    g.preloadedImages = {}, g.preloadedAudios = {};
    function dA(C2) {
      g.onAbort && g.onAbort(C2), C2 += "", z2(C2), RA = true, C2 = "abort(" + C2 + "). Build with -s ASSERTIONS=1 for more info.";
      var B2 = new WebAssembly.RuntimeError(C2);
      throw D2(B2), B2;
    }
    function YE(C2, B2) {
      return String.prototype.startsWith ? C2.startsWith(B2) : C2.indexOf(B2) === 0;
    }
    var LE = "data:application/octet-stream;base64,";
    function nB(C2) {
      return YE(C2, LE);
    }
    var tG = "file://";
    function tE(C2) {
      return YE(C2, tG);
    }
    var FI = "data:application/octet-stream;base64,AGFzbQEAAAAB1Ah7YAF/AX9gAX8AYAJ/fwBgAn9/AX9gA39/fwBgA39/fwF/YAR/f39/AGAIf39/f39/f38AYAV/f39/fwBgBX9/f39/AX9gCX9/f39/f39/fwBgBH9/f38Bf2AGf39/f39/AX9gBn9/f39/fwBgAABgAX8BfGAHf39/f39/fwBgAAF/YAh/f39/f39/fwF/YAR/f398AGADf398AGADf39/AXxgB39/f39/f38Bf2ABfwF9YAN/fX8AYAJ/fwF9YAp/f39/f39/f39/AGABfAF8YAJ/fABgAX8BfmADf35/AX5gDX9/f39/f39/f398fH8AYAV/fn5+fgBgBn9/f399fwF/YAJ/fwF8YAp/f39/f39/fHx/AGAFf39/f3wAYAR/f3x/AGACf34AYAV/f39/fgF/YAR/f398AX9gAnx8AXxgD39/f39/f39/f39/f39/fwBgBX9/f3x8AGAFf39+f38AYAN/f30AYAR/fH9/AGAFf39/f3wBf2AEf39/fwF+YAR/f399AGAHf398f3x/fwBgBH9+fn8AYAl/f39/f39/f38Bf2AKf39/f39/f39/fwF/YAt/f39/f39/f39/fwF/YAd/f39/f35+AX9gBn9/f39+fgF/YAV/f39/fwF9YAZ/f39/fX8AYAd/f39/fX9/AGALf39/f31/f31/f38AYAd/f39/fX99AGAGf39/f319AGAGf39/f3x8AGACf30AYAx/f39/f39/f39/f38Bf2AGf39/f3x/AX9gB39/f398f38Bf2ADf398AX9gBn98f39/fwF/YAJ+fwF/YAF8AX9gAAF+YAJ/fwF+YAR/f39+AX5gA39/fwF9YAh/f39/f39/fwF9YAh/f39/fX9/fwF9YAR/f39/AXxgAnx/AXxgC39/f39/f39/f39/AGANf39/f39/f39/f39/fwBgDH9/f39/f39/fHx8fABgCX9/f39/f3x8fwBgBn9/f39/fABgC39/f39/fH9/f398AGAPf39/f31/f31/f39/f39/AGAPf39/f3x/f3x/f39/f39/AGAKf39/f3x8fHx8fwBgBn9/f31/fwBgA39/fgBgA39+fgBgA398fwBgCn98f398f3x8fHwAYAd/fH98fH9/AGADf3x8AGAMf3x8fHx8fHx8fH9/AGADfH9/AGAFfHx/f38AYAh8fHx8fHx/fwBgB39/f39/f3wBf2AOf39/f399f398f3x/f38Bf2AEf39/fQF/YBh/f398fHx8fHx8fHx8fHx8fHx8fHx8fH8Bf2AEf398fAF/YAN/fn8Bf2AEf35/fwF/YAN/fH8Bf2ADfn9/AX9gAn5+AX9gA35+fgF/YAR+fn5+AX9gAX0Bf2ACfH8Bf2AHfHx8fH9/fwF/YAl8fHx8fH9/f38Bf2ADf39/AX5gBH9/f38BfWACfn4BfWAFf39/f38BfGADf3x8AXxgAn5+AXxgA3x8fwF8AtwKLgNlbnYQX2VtdmFsX25ld19hcnJheQARA2VudhhfZW12YWxfZ2V0X21ldGhvZF9jYWxsZXIAAwNlbnYXX2VtdmFsX2NhbGxfdm9pZF9tZXRob2QABgNlbnYRX2VtdmFsX3Rha2VfdmFsdWUAAwNlbnYSX2VtdmFsX25ld19jc3RyaW5nAAADZW52E19lbXZhbF9zZXRfcHJvcGVydHkABANlbnYNX2VtdmFsX2RlY3JlZgABA2Vudg1fZW12YWxfaW5jcmVmAAEDZW52Fl9lbWJpbmRfcmVnaXN0ZXJfY2xhc3MAUQNlbnYiX2VtYmluZF9yZWdpc3Rlcl9jbGFzc19jb25zdHJ1Y3RvcgANA2VudiVfZW1iaW5kX3JlZ2lzdGVyX2NsYXNzX2NsYXNzX2Z1bmN0aW9uABADZW52H19lbWJpbmRfcmVnaXN0ZXJfY2xhc3NfcHJvcGVydHkAGgNlbnYfX2VtYmluZF9yZWdpc3Rlcl9jbGFzc19mdW5jdGlvbgAHA2Vudh1fZW1iaW5kX3JlZ2lzdGVyX3ZhbHVlX29iamVjdAANA2VudiNfZW1iaW5kX3JlZ2lzdGVyX3ZhbHVlX29iamVjdF9maWVsZAAaA2Vudh1fZW1iaW5kX2ZpbmFsaXplX3ZhbHVlX29iamVjdAABA2VudhlfZW1iaW5kX3JlZ2lzdGVyX2Z1bmN0aW9uAA0DZW52HF9lbWJpbmRfcmVnaXN0ZXJfdmFsdWVfYXJyYXkADQNlbnYkX2VtYmluZF9yZWdpc3Rlcl92YWx1ZV9hcnJheV9lbGVtZW50AAoDZW52HF9lbWJpbmRfZmluYWxpemVfdmFsdWVfYXJyYXkAAQNlbnYZX2VtYmluZF9yZWdpc3Rlcl9jb25zdGFudAAUA2VudhhfX2N4YV9hbGxvY2F0ZV9leGNlcHRpb24AAANlbnYLX19jeGFfdGhyb3cABANlbnYNY2xvY2tfZ2V0dGltZQADA2VudhVfZW1iaW5kX3JlZ2lzdGVyX3ZvaWQAAgNlbnYVX2VtYmluZF9yZWdpc3Rlcl9ib29sAAgDZW52G19lbWJpbmRfcmVnaXN0ZXJfc3RkX3N0cmluZwACA2VudhxfZW1iaW5kX3JlZ2lzdGVyX3N0ZF93c3RyaW5nAAQDZW52Fl9lbWJpbmRfcmVnaXN0ZXJfZW12YWwAAgNlbnYYX2VtYmluZF9yZWdpc3Rlcl9pbnRlZ2VyAAgDZW52Fl9lbWJpbmRfcmVnaXN0ZXJfZmxvYXQABANlbnYcX2VtYmluZF9yZWdpc3Rlcl9tZW1vcnlfdmlldwAEA2VudgpfX3N5c19vcGVuAAUWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQhmZF93cml0ZQALFndhc2lfc25hcHNob3RfcHJldmlldzEHZmRfcmVhZAALFndhc2lfc25hcHNob3RfcHJldmlldzEIZmRfY2xvc2UAAANlbnYNX19zeXNfZmNudGw2NAAFA2VudgtfX3N5c19pb2N0bAAFFndhc2lfc25hcHNob3RfcHJldmlldzERZW52aXJvbl9zaXplc19nZXQAAxZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxC2Vudmlyb25fZ2V0AAMDZW52BWFib3J0AA4DZW52CnN0cmZ0aW1lX2wACQNlbnYWZW1zY3JpcHRlbl9yZXNpemVfaGVhcAAAA2VudhVlbXNjcmlwdGVuX21lbWNweV9iaWcABQNlbnYLc2V0VGVtcFJldDAAARZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxB2ZkX3NlZWsACQP6HfgdDgkrBBMCBgQGBCITAgQCBAQCAgQCAgIABAICEhIWDAkLBgYEBAICAgEODg4ODg4ODg4OAAEAEQMABQMLBQkLDAUECwYDBAIDAgICAgICAgIAAwAAPwYkBAUIBgYLBAQABgQFAwAEFSgFAwQAAwQFBgsEBgQGBAYEBgQGBAYDBQULCwkFCwkDBQULCQULCQMFBQsJS3U5dwMVBU4RAREiFBktEREDBAMDERERIhQREREBAwQDAzQSFgwJBQMAAQsAAAABEQIEBAYA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BpwGnQahBqIGowbeBuEG4AbiBvUD7wOnB4QH5AblBuYG5wboBukG6gbrBuwG7QbuBu8G8AbxBvIG8wb0BvUG9gb4BvkG+wb8Bu8DpweFB4YHhweIB4kHiweKB+8DpweMB40HjgfvA6gHkweUB5UHlgeXB6kH7wOoB5gHmQfvA6gHjweQB5EH7wOoB5oH7wOoB5sHkAe1B7YHtwe4B7kHuge7B7wHvQe+B78HwAfBB8IHwwfEB8UHxgfHB8gH/gf/B4AIgQiCCIMIhAiTCJQIlQiWCJcIjAiYCJkImgicCJ0InwiKCKEIowilCKcIqQirCIgIrQivCLAIsQiyCLMIkgi0CLUItwi5CLsIvQiQCL8IwQjDCMUIxwjJCI4IywjOCPUD7wPQCNgI3QjVCNII1wjrCPAIpQn8CP4I/wiACYEJggmDCY0JjgmPCZAJhAmTCZEJkgmWCZoJngmVCaMJpAmMCYsJoAmhCacJqAmpCaoJqwmuCb0Jvgm/CagH7wPCCcMJxAnvA/UD7wPECe8D9QPvA80JzgnPCdAJ0QnSCdMJ1An1A+8DxAnvA/UD7wPVCdkJ9QPvA8QJ7wPvA98J4QnPCeIJ4wnkCeUJ5gn1A+8DxAnvA+8D5wnrCfUD7wPECe8D7wPuCe8JzwniCfAJ8QnyCfMJ9QPvA8QJ7wPvA/QJ9wn6CfsJ/An9Cf4J/wmACoEKggqDCoYKhwqICokKigqLCowKvwqdCpUKoAq1CpYKlwqmCqcKgxu2CrcKuAq5CroKuwq8Cr0KyQbbCtwK3Qq9Cv0K/gr/Cu8DiAuJC4oLiwuMC5kLmgubC5wLnQueC58LoAv1A+8DyQbvA/UD7wOPC5ELkguTC5QLlQuWC5cL7wOhC6ILowukC/UD7wPJBu8D7wOlC/UD7wPJBu8D7wOmC/UD7wPJBu8D7wOoC/UD7wPJBu8D7wOpC/UD7wPJBu8D7wOrC6wLrQuuC68LsAu5C7oLuwu8C70L9QPvA8sLzAvvA/UD7wPJBu8D9QPvA9oL2wvcC90L3gvfC+8D4AvhC+IL4wvvA8kGyAbIBu0L5AvlC+gL6QvqC+8D6wvsC+4L7wvwC/ML9Av1C/EL9AvyC+8D+Qv6C+8D7wP5C/sL7wOCDIMMjwyRDJIMlAyVDIQM7wP5C5YM7wPoDOkMxAnvA+oM6wzsDO0M7gzvDPAM8QzyDPMM9AzECe8D9Qz2DPcM7QzuDO8M8AzxDPgM+Qz6DMQJ7wP7DPwM9wztDO4M7wzwDPEM/Qz+DP8MxAnvA4ANgQ2CDe0M7gzvDPAM8QyDDYQNhQ3ECe8Dhg2HDYIN7QzuDO8M8AzxDIgNiQ2KDcQJ7wOLDYwNjQ2ODY8NkA2RDZINxAnvA5MNlA2VDZYNlw2YDZkNmg3ECe8Dmw2cDZ0Nng2fDaANoQ2iDcQJ7wOjDaQNpQ2mDacNqA2pDaoNxAnvA6sNrA2tDa4Nrw2wDbENsg3ECe8Dsw20DbUNtg23DbgNuQ26DcQJ7wO7DbwNwA3DDcQNxQ3vA8YNxw3IDckNyg3LDcwNzQ3ODc8N0A3RDcUN7wPSDdMN1A3KDcsNzA3NDc4N1Q3WDdcNxQ3vA9gN2Q3aDdsN3A3LDd0N3g2+Dd8N4A3hDcUN7wPiDeMN5A3KDcsN5Q3NDc4N5g3nDegNxAnvA+kN6g2nB6gHyAbrDe0L7A3tDe4NxQ3vA/EN8g3zDfQN9Q32DfcN+A35DfsN/A3ECe8Duw39Df4N/w2ADoEOgg7ECe8Dgw6EDoUO/g3/DYYOhw6IDsQJ7wO7DYkOig7/DYsOjA6NDsQJ7wO7DY4Oig7/DY8Okg6TDsQJ7wO7DacHlA7GDpYOlw6YDsQJ7wO7DZkOgg+aDpsOnQ7FDe8DnA6fDqAOoQ6jDqQOpQ7ECe8Dpg6nDqgOqQ6qDqsOxAnvA7sNrA6tDooOrg6vDrAOxAnvA7sNsQ6yDv8Nsw60DrUOxAnvA7YOtw64DrIO/w25DroOuw7ECe8Duw28Dr0Ovg6/DsAOwQ7ECe8Duw3CDrIO/w3DDsQOxQ7ECe8Duw3GDooOxw7IDskOyg7ECe8Duw3LDswO/w3NDs4Ozw7ECe8Duw3QDswO/w3RDtIO0w7FDe8Duw3UDooO/g3XDtsO3Q7FDe8D3A7eDt8O4Q7mDugOxQ3vA+cO6Q7qDusO7A7uDsUN7wPtDu8O8A7xDvIO9A7ECe8D8w71DvYO9QP4DvkO+g71A+8D9w77DskG7wP8Dv4O/w6AD4EPxAnvA7sNgw+ED4UPxQ3vA4YPhw+ID4kPig+LD4wPjwmND44Pjw+QD+sNkQ+SD8UN7wOTD5QPlQ+WD5cPmA+ZD5oPjwmbD5wPnQ/wC54Pnw+gD6EPjgmiD6MPpA+lD6YPpw+oD6kPqg+r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QRBqJAALQAEBfyMAQRBrIgQkACAEIAE2AgQgBEGAgIQQNgIAIARCADcDCCAAIAQgAiADRAAAAAAAAAAAEIgDIARBEGokAAsSACAAIAEoAigpAgBCIIk3AgALXAEBfyMAQeABayIEJAAgBCABIAIgAxCfByAAEKcGIQAgBCgCACIBIAQgAEF/IAEoAgAoAgwRBgAgBEH4AGoQsQYaIARBQGsQsQYaIARBCGoQsQYaIARB4AFqJAALdgIBfwF+IwBB8AFrIgMkACADIAEpAgAiBDcDACADIAQ3AwggA0EQaiADIAIQoQcgABCnBiEAIAMoAhAiAiADQRBqIABBfyACKAIAKAIMEQYAIANBiAFqELEGGiADQdAAahCxBhogA0EYahCxBhogA0HwAWokAAtcAQF/IwBB4AFrIgQkACAEIAEgAiADEKIHIAAQpwYhACAEKAIAIgEgBCAAQX8gASgCACgCDBEGACAEQfgAahCxBhogBEFAaxCxBhogBEEIahCxBhogBEHgAWokAAt2AgF/AX4jAEHwAWsiAyQAIAMgASkCACIENwMAIAMgBDcDCCADQRBqIAMgAhCjByAAEKcGIQAgAygCECICIANBEGogAEF/IAIoAgAoAgwRBgAgA0GIAWoQsQYaIANB0ABqELEGGiADQRhqELEGGiADQfABaiQACzkCAX8BfCMAQRBrIgIkACACQgA3AwggAiABNgIEIAJBgICECDYCACAAIAIQhQYhAyACQRBqJAAgAwt7AQF/IwBB8AFrIgQkACAEQgA3AwggBCACNgIEIARBgICECDYCACAEQRBqIAEgBCADEJ4HIAAQpwYhACAEKAIQIgEgBEEQaiAAQX8gASgCACgCDBEGACAEQYgBahCxBhogBEHQAGoQsQYaIARBGGoQsQYaIARB8AFqJAALWAEBfyMAQeABayICJAAgAiABEJwHIAAQpwYhACACKAIAIgEgAiAAQX8gASgCACgCDBEGACACQfgAahCxBhogAkFAaxCxBhogAkEIahCxBhogAkHgAWokAAtaAQF/IwBB4AFrIgMkACADIAEgAhCdByAAEKcGIQAgAygCACIBIAMgAEF/IAEoAgAoAgwRBgAgA0H4AGoQsQYaIANBQGsQsQYaIANBCGoQsQYaIANB4AFqJAALMwEBfyMAQRBrIgIkACACIAE2AgQgAkGA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CCAAQYiyASACQQhqEAM2AgAgAkEQaiQAC2cBA38jAEEQayICJAAgARCvBiEEAn9BACABKAIEIgNBAUgNABogASgCLCADQQJ0akEEaygCAAshAyACIAEoAhA2AgwgAiADIARsQQF2NgIIIABBsLIBIAJBCGoQAzYCACACQRBqJAALZwEDfyMAQRBrIgIkACABEK8GIQQCf0EAIAEoAgQiA0EBSA0AGiABKAIsIANBAnRqQQRrKAIACyEDIAIgASgCEDYCDCACIAMgBGxBAXY2AgggAEHYsgEgAkEIahADNgIAIAJBEGokAAtnAQN/IwBBEGsiAiQAIAEQrwYhBAJ/QQAgASgCBCIDQQFIDQAaIAEoAiwgA0ECdGpBBGsoAgALIQMgAiABKAIQNgIMIAIgAyAEbEECdjYCCCAAQYCzASACQQhqEAM2AgAgAkEQaiQAC2cBA38jAEEQayICJAAgARCvBiEEAn9BACABKAIEIgNBAUgNABogASgCLCADQQJ0akEEaygCAAshAyACIAEoAhA2AgwgAiADIARsQQJ2NgIIIABBqLMBIAJBCGoQAzYCACACQRBqJAALZwEDfyMAQRBrIgIkACABEK8GIQQCf0EAIAEoAgQiA0EBSA0AGiABKAIsIANBAnRqQQRrKAIACyEDIAIgASgCEDYCDCACIAMgBGxBA3Y2AgggAEHQswEgAkEIahADNgIAIAJBEGokAAslAQF/IAAoAgQiAUEBSARAQQAPCyAAKAIsIAFBAnRqQQRrKAIACzUBAX8gASAAKAIEIgJBAXVqIQEgACgCACEAIAEgAkEBcQR/IAEoAgAgAGooAgAFIAALEQAACxcAQZHEkMICIAAoAgBBAnRBHHF2QQ9xCxEAIAAoAgBBA3ZB/wNxQQFqCxQAIAEgAiADIAQgBSAAKAIAESsACxAAIAEgAiADIAAoAgARBAALEgAgASACIAMgBCAAKAIAERMAC0QBAX8jAEEQayIDJAAgAyACNgIIIAMgAkEBajYCDCADQoCAgID4/////wA3AwAgACABIANBCGogAxC6BhogA0EQaiQAC2YBAn8jAEFAaiIDJAAgASAAKAIEIgRBAXVqIQEgACgCACEAIANBCGogASACIARBAXEEfyABKAIAIABqKAIABSAACxEEAEE4ENUaIANBCGoQuAYhACADQQhqELEGGiADQUBrJAAgAAs7AQF/IAEgACgCBCIFQQF1aiEBIAAoAgAhACABIAIgAyAEIAVBAXEEfyABKAIAIABqKAIABSAACxEGAAtfAgJ/AX4jAEEQayIEJAAgASAAKAIEIgVBAXVqIQEgACgCACEAIAVBAXEEQCABKAIAIABqKAIAIQALIAQgAikCACIGNwMAIAQgBjcDCCABIAQgAyAAEQQAIARBEGokAAtBAQF/IwBBEGsiBCQAIAQgAzYCDCAEIAI2AgggBEKAgICA+P////8ANwMAIAAgASAEQQhqIAQQugYaIARBEGokAAtoAQJ/IwBBQGoiBCQAIAEgACgCBCIFQQF1aiEBIAAoAgAhACAEQQhqIAEgAiADIAVBAXEEfyABKAIAIABqKAIABSAACxEGAEE4ENUaIARBCGoQuAYhACAEQQhqELEGGiAEQUBrJAAgAAszAQF/IwBBEGsiAyQAIANCgICAgPj/////ADcDCCAAIAEgAiADQQhqELoGGiADQRBqJAALDgAgASACIAAoAgARAgALCwAgACgCAEH/H3ELQQEBfyMAQRBrIgQkACAEQoCAgID4/////wA3AwggBCADNgIEIAQgAjYCACAAIAEgBEEIaiAEELoGGiAEQRBqJAALMwEBfyMAQRBrIgMkACADQoCAgID4/////wA3AwggACABIANBCGogAhC6BhogA0EQaiQACzcBAX8gASAAKAIEIgNBAXVqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRAwALZAECfyMAQUBqIgIkACABIAAoAgQiA0EBdWohASAAKAIAIQAgAkEIaiABIANBAXEEfyABKAIAIABqKAIABSAACxECAEE4ENUaIAJBCGoQuAYhACACQQhqELEGGiACQUBrJAAgAAsKACAAKAIAQQdxC0QBAX8jAEEQayIDJAAgA0KAgICA+P////8ANwMIIAMgAjYCACADIAJBAWo2AgQgACABIANBCGogAxC6BhogA0EQaiQACw4AIAEgAiAAKAIAESIAC0EBAX8jAEFAaiIEJAAgBEEIaiABIAIgAyAAKAIAERMAQTgQ1RogBEEIahC4BiEBIARBCGoQsQYaIARBQGskACABCz8BAX8jAEFAaiIDJAAgA0EIaiABIAIgACgCABEEAEE4ENUaIANBCGoQuAYhASADQQhqELEGGiADQUBrJAAgAQs9AQF/IwBBQGoiAiQAIAJBCGogASAAKAIAEQIAQTgQ1RogAkEIahC4BiEBIAJBCGoQsQYaIAJBQGskACABCwwAIAAgASACELwGGgsOACAALQABQcAAcUEGdgs0AQF/IwBBEGsiAiQAIAJBCGogASAAKAIAEQIAQQgQ1RoiASACKQMINwMAIAJBEGokACABC1IBA38jAEEQayIDJAAgAUEAELYGIQQgASgCECEFIAEoAiwoAgAhASADIAQ2AgggAyAFIAEgAmxqNgIMIABB4LEBIANBCGoQAzYCACADQRBqJAALNwEBfyMAQRBrIgMkACADQQhqIAEgAiAAKAIAEQQAIAMoAggQByADKAIIIgEQBiADQRBqJAAgAQthAQR/IwBBEGsiBCQAIAFBARC2BiEFIAEoAhAhBiABKAIsIgEoAgAhByABKAIEIQEgBCAFNgIIIAQgBiACIAdsaiABIANsajYCDCAAQeCxASAEQQhqEAM2AgAgBEEQaiQACzkBAX8jAEEQayIEJAAgBEEIaiABIAIgAyAAKAIAEQYAIAQoAggQByAEKAIIIgEQBiAEQRBqJAAgAQtSAQN/IwBBEGsiAyQAIAFBABC2BiEEIAEoAhAhBSABKAIsKAIAIQEgAyAENgIIIAMgBSABIAJsajYCDCAAQYiyASADQQhqEAM2AgAgA0EQaiQAC2EBBH8jAEEQayIEJAAgAUEBELYGIQUgASgCECEGIAEoAiwiASgCACEHIAEoAgQhASAEIAU2AgggBCAGIAIgB2xqIAEgA2xqNgIMIABBiLIBIARBCGoQAzYCACAEQRBqJAALUgEDfyMAQRBrIgMkACABQQAQtgYhBCABKAIQIQUgASgCLCgCACEBIAMgBDYCCCADIAUgASACbGo2AgwgAEHYsgEgA0EIahADNgIAIANBEGokAAthAQR/IwBBEGsiBCQAIAFBARC2BiEFIAEoAhAhBiABKAIsIgEoAgAhByABKAIEIQEgBCAFNgIIIAQgBiACIAdsaiABIANsajYCDCAAQdiyASAEQQhqEAM2AgAgBEEQaiQAC1IBA38jAEEQayIDJAAgAUEAELYGIQQgASgCECEFIAEoAiwoAgAhASADIAQ2AgggAyAFIAEgAmxqNgIMIABBsLIBIANBCGoQAzYCACADQRBqJAALYQEEfyMAQRBrIgQkACABQQEQtgYhBSABKAIQIQYgASgCLCIBKAIAIQcgASgCBCEBIAQgBTYCCCAEIAYgAiAHbGogASADbGo2AgwgAEGwsgEgBEEIahADNgIAIARBEGokAAtSAQN/IwBBEGsiAyQAIAFBABC2BiEEIAEoAhAhBSABKAIsKAIAIQEgAyAENgIIIAMgBSABIAJsajYCDCAAQYCzASADQQhqEAM2AgAgA0EQaiQAC2EBBH8jAEEQayIEJAAgAUEBELYGIQUgASgCECEGIAEoAiwiASgCACEHIAEoAgQhASAEIAU2AgggBCAGIAIgB2xqIAEgA2xqNgIMIABBgLMBIARBCGoQAzYCACAEQRBqJAALUgEDfyMAQRBrIgMkACABQQAQtgYhBCABKAIQIQUgASgCLCgCACEBIAMgBDYCCCADIAUgASACbGo2AgwgAEGoswEgA0EIahADNgIAIANBEGokAAthAQR/IwBBEGsiBCQAIAFBARC2BiEFIAEoAhAhBiABKAIsIgEoAgAhByABKAIEIQEgBCAFNgIIIAQgBiACIAdsaiABIANsajYCDCAAQaizASAEQQhqEAM2AgAgBEEQaiQAC1IBA38jAEEQayIDJAAgAUEAELYGIQQgASgCECEFIAEoAiwoAgAhASADIAQ2AgggAyAFIAEgAmxqNgIMIABB0LMBIANBCGoQAzYCACADQRBqJAALYQEEfyMAQRBrIgQkACABQQEQtgYhBSABKAIQIQYgASgCLCIBKAIAIQcgASgCBCEBIAQgBTYCCCAEIAYgAiAHbGogASADbGo2AgwgAEHQswEgBEEIahADNgIAIARBEGokAAttAQF/AkAgAC0AAUHAAHFFBEAgACgCKCICKAIAQQFHDQELIAAoAhAgAWoPCyACKAIEQQFGBEAgACgCECAAKAIsKAIAIAFsag8LIAAoAhAgACgCLCgCACABIAAoAgwiAG0iAmxqIAEgACACbGtqCzoBAX8gASAAKAIEIgNBAXVqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRAwAsAAALFgAgACgCECAAKAIsKAIAIAFsaiACags8AQF/IAEgACgCBCIEQQF1aiEBIAAoAgAhACABIAIgAyAEQQFxBH8gASgCACAAaigCAAUgAAsRBQAsAAALJwAgACgCECAAKAIsIgAoAgAgAWxqIAAoAgQgAmxqIAAoAgggA2xqCz4BAX8gASAAKAIEIgVBAXVqIQEgACgCACEAIAEgAiADIAQgBUEBcQR/IAEoAgAgAGooAgAFIAALEQsALAAACzoBAX8gASAAKAIEIgNBAXVqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRAwAtAAALPAEBfyABIAAoAgQiBEEBdWohASAAKAIAIQAgASACIAMgBEEBcQR/IAEoAgAgAGooAgAFIAALEQUALQAACz4BAX8gASAAKAIEIgVBAXVqIQEgACgCACEAIAEgAiADIAQgBUEBcQR/IAEoAgAgAGooAgAFIAALEQsALQAAC3MBAX8CQCAALQABQcAAcUUEQCAAKAIoIgIoAgBBAUcNAQsgACgCECABQQF0ag8LIAIoAgRBAUYEQCAAKAIQIAAoAiwoAgAgAWxqDwsgACgCECAAKAIsKAIAIAEgACgCDCIAbSICbGogASAAIAJsa0EBdGoLOgEBfyABIAAoAgQiA0EBdWohASAAKAIAIQAgASACIANBAXEEfyABKAIAIABqKAIABSAACxEDAC4BAAsZACAAKAIQIAAoAiwoAgAgAWxqIAJBAXRqCzwBAX8gASAAKAIEIgRBAXVqIQEgACgCACEAIAEgAiADIARBAXEEfyABKAIAIABqKAIABSAACxEFAC4BAAs+AQF/IAEgACgCBCIFQQF1aiEBIAAoAgAhACABIAIgAyAEIAVBAXEEfyABKAIAIABqKAIABSAACxELAC4BAAs6AQF/IAEgACgCBCIDQQF1aiEBIAAoAgAhACABIAIgA0EBcQR/IAEoAgAgAGooAgAFIAALEQMALwEACzwBAX8gASAAKAIEIgRBAXVqIQEgACgCACEAIAEgAiADIARBAXEEfyABKAIAIABqKAIABSAACxEFAC8BAAs+AQF/IAEgACgCBCIFQQF1aiEBIAAoAgAhACABIAIgAyAEIAVBAXEEfyABKAIAIABqKAIABSAACxELAC8BAAtzAQF/AkAgAC0AAUHAAHFFBEAgACgCKCICKAIAQQFHDQELIAAoAhAgAUECdGoPCyACKAIEQQFGBEAgACgCECAAKAIsKAIAIAFsag8LIAAoAhAgACgCLCgCACABIAAoAgwiAG0iAmxqIAEgACACbGtBAnRqCzoBAX8gASAAKAIEIgNBAXVqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRAwAoAgALGQAgACgCECAAKAIsKAIAIAFsaiACQQJ0ags8AQF/IAEgACgCBCIEQQF1aiEBIAAoAgAhACABIAIgAyAEQQFxBH8gASgCACAAaigCAAUgAAsRBQAoAgALPgEBfyABIAAoAgQiBUEBdWohASAAKAIAIQAgASACIAMgBCAFQQFxBH8gASgCACAAaigCAAUgAAsRCwAoAgALOgEBfyABIAAoAgQiA0EBdWohASAAKAIAIQAgASACIANBAXEEfyABKAIAIABqKAIABSAACxEDACoCAAs8AQF/IAEgACgCBCIEQQF1aiEBIAAoAgAhACABIAIgAyAEQQFxBH8gASgCACAAaigCAAUgAAsRBQAqAgALPgEBfyABIAAoAgQiBUEBdWohASAAKAIAIQAgASACIAMgBCAFQQFxBH8gASgCACAAaigCAAUgAAsRCwAqAgALPgEBfyABIAAoAgQiBUEBdWohASAAKAIAIQAgASACIAMgBCAFQQFxBH8gASgCACAAaigCAAUgAAsRCwArAwALcwEBfwJAIAAtAAFBwABxRQRAIAAoAigiAigCAEEBRw0BCyAAKAIQIAFBA3RqDwsgAigCBEEBRgRAIAAoAhAgACgCLCgCACABbGoPCyAAKAIQIAAoAiwoAgAgASAAKAIMIgBtIgJsaiABIAAgAmxrQQN0ags6AQF/IAEgACgCBCIDQQF1aiEBIAAoAgAhACABIAIgA0EBcQR/IAEoAgAgAGooAgAFIAALEQMAKwMACxkAIAAoAhAgACgCLCgCACABbGogAkEDdGoLPAEBfyABIAAoAgQiBEEBdWohASAAKAIAIQAgASACIAMgBEEBcQR/IAEoAgAgAGooAgAFIAALEQUAKwMACxIBAX9BCBDVGiIAQgA3AgAgAAsMACAABEAgABCiGwsLGQEBf0EQENUaIgBCADcDACAAQgA3AwggAAsNACABIAAoAgBqKwMACw8AIAEgACgCAGogAjkDAAsNACABIAAoAgBqKgIACw8AIAEgACgCAGogAjgCAAsZAQF/QRAQ1RoiAEIANwIAIABCADcCCCAACyABAX9BFBDVGiIAQgA3AgAgAEEANgIQIABCADcCCCAACx8BAX8gACgCACEAQQgQ1RoiAiAAIAFqKQIANwMAIAILEgAgASAAKAIAaiACKQIANwIACzIBAX8jAEEQayICJAAgAkEIaiABIAARAgAgAigCCBAHIAIoAggiABAGIAJBEGokACAACzgBAX8jAEEQayICJAAgAiABIAARAgBBEBDVGiIAIAIpAwg3AgggACACKQMANwIAIAJBEGokACAACzABAX9BHBDVGiIAQX82AhggAEIANwIQIABCgICAgICAgMC/fzcCCCAAQgA3AgAgAAsiAQF/QRAQ1RoiAEL/////////v/8ANwIIIABCfzcCACAACycBAX9BIBDVGiIAQgA3AwAgAEIANwMYIABCADcDECAAQgA3AwggAAsNACABIABBA3RqKwMACw8AIAEgAEEDdGogAjkDAAsZAQF/QQwQ1RoiAEIANwIAIABBADYCCCAACxAAQcABENUaQQBBwAEQrxsLCgBBPBDVGhCQCgsUACAABEAgACAAKAIAKAIEEQEACwuBAQECfyMAQRBrIgIkACACIAEgACgCABECAAJAIAIsAAsiAUEATgRAIAFB/wFxIgBBBGoQoRsiASAANgIAIAFBBGogAiAAEK4bGgwBCyACKAIEIgBBBGoQoRsiASAANgIAIAFBBGogAigCACIDIAAQrhsaIAMQohsLIAJBEGokACABC7EBAQR/IwBBEGsiAyQAIAIoAgAiBEFwSQRAIAAoAgAhBgJAAkAgBEELTwRAIARBEGpBcHEiBRDVGiEAIAMgBUGAgICAeHI2AgggAyAANgIAIAMgBDYCBCADIQUMAQsgAyAEOgALIAMiBSEAIARFDQELIAAgAkEEaiAEEK4bGgsgACAEakEAOgAAIAEgAyAGEQIAIAUsAAtBf0wEQCADKAIAEKIbCyADQRBqJAAPCxDZGgALfwEBfyMAQUBqIgIkACACIAEgABECAEE8ENUaIgBBrLQDNgIAIABBBGogAkEEchDbGhogACACKAIQNgIQIABBFGogAkEUahDbGhogAEEgaiACQSBqENsaGiAAQSxqIAJBLGoQ2xoaIAAgAigCODYCOCACEJUKGiACQUBrJAAgAAs4AQF/IwBBEGsiAiQAIAIgASAAEQIAQQwQ1RoiACACKAIINgIIIAAgAikDADcCACACQRBqJAAgAAvgAQIBfwF8IwBBgAFrIgkkACAJIAMpAgA3A3ggCSAEKwMAOQNYIAkgBCsDCDkDYCAJIAQrAxA5A2ggBCsDGCEKIAkgBTYCUCAJIAo5A3AgCSAGKwMAOQMwIAkgBisDCDkDOCAJIAYrAxA5A0AgCSAGKwMYOQNIIAkgBysDADkDECAJIAcrAwg5AxggCSAHKwMQOQMgIAkgBysDGDkDKCAJIAkpA3g3AwggASACIAlBCGogCUHYAGogCUHQAGogCUEwaiAJQRBqIAggABESACEHIAkoAlAQBiAJQYABaiQAIAcL3gECAX8BfCMAQYABayIIJAAgCCADKQIANwN4IAggBCsDADkDWCAIIAQrAwg5A2AgCCAEKwMQOQNoIAQrAxghCSAIIAU2AlAgCCAJOQNwIAggBisDADkDMCAIIAYrAwg5AzggCCAGKwMQOQNAIAggBisDGDkDSCAIIAcrAwA5AxAgCCAHKwMIOQMYIAggBysDEDkDICAIIAcrAxg5AyggCCAIKQN4NwMIIAEgAiAIQQhqIAhB2ABqIAhB0ABqIAhBMGogCEEQaiAAERYAIQcgCCgCUBAGIAhBgAFqJAAgBwuwAQMBfwF+AXwjAEHgAGsiByQAIAcgAykCACIINwNYIAcgBCsDADkDOCAHIAQrAwg5A0AgByAEKwMQOQNIIAQrAxghCSAHIAU2AjAgByAJOQNQIAcgBisDADkDECAHIAYrAwg5AxggByAGKwMQOQMgIAcgBisDGDkDKCAHIAg3AwggASACIAdBCGogB0E4aiAHQTBqIAdBEGogABEMACEGIAcoAjAQBiAHQeAAaiQAIAYLgQEDAX8BfgF8IwBBQGoiBiQAIAYgAykCACIHNwM4IAYgBCsDADkDGCAGIAQrAwg5AyAgBiAEKwMQOQMoIAQrAxghCCAGIAU2AhAgBiAIOQMwIAYgBzcDCCABIAIgBkEIaiAGQRhqIAZBEGogABEJACEEIAYoAhAQBiAGQUBrJAAgBAtlAgF/AX4jAEEwayIFJAAgBSADKQIAIgY3AyggBSAEKwMAOQMIIAUgBCsDCDkDECAFIAQrAxA5AxggBSAEKwMYOQMgIAUgBjcDACABIAIgBSAFQQhqIAARCwAhBCAFQTBqJAAgBAtOAQF/IwBBIGsiAyQAIAMgASACIAARBABBIBDVGiIAIAMpAxg3AxggACADKQMQNwMQIAAgAykDCDcDCCAAIAMpAwA3AwAgA0EgaiQAIAALTAEBfyMAQSBrIgIkACACIAEgABECAEEgENUaIgAgAikDGDcDGCAAIAIpAxA3AxAgACACKQMINwMIIAAgAikDADcDACACQSBqJAAgAAtKAQF/IwBBIGsiASQAIAEgABEBAEEgENUaIgAgASsDADkDACAAIAErAwg5AwggACABKwMQOQMQIAAgASsDGDkDGCABQSBqJAAgAAtCACAAQv/////////3/wA3AxggAEL/////////9/8ANwMQIABC//////////f/ADcDCCAAQv/////////3/wA3AwALTQEBfyMAQSBrIgQkACAEIAMpAwg3AxAgBCADKQMANwMIIARBGGogASACIARBCGogABEGACAEKAIYEAcgBCgCGCIDEAYgBEEgaiQAIAMLDQAgACgCAEEEaygCAAt8AQN/IwBBEGsiASQAIAEgABEBAAJAIAEsAAsiAEEATgRAIABB/wFxIgJBBGoQoRsiACACNgIAIABBBGogASACEK4bGgwBCyABKAIEIgJBBGoQoRsiACACNgIAIABBBGogASgCACIDIAIQrhsaIAMQohsLIAFBEGokACAACwYAQbiUAQskAQF/IAAEQCAAKAIAIgEEQCAAIAE2AgQgARCiGwsgABCiGwsLGQEBf0EMENUaIgBBADYCCCAAQgA3AgAgAAvqAQEFfyAAKAIEIgIgACgCCEcEQCACIAEoAgA2AgAgACACQQRqNgIEDwsCQCACIAAoAgAiBWsiBkECdSIEQQFqIgJBgICAgARJBEACf0EAIAIgBkEBdSIDIAIgA0sbQf////8DIARB/////wFJGyIDRQ0AGiADQYCAgIAETw0CIANBAnQQ1RoLIgIgBEECdGoiBCABKAIANgIAIAIgA0ECdGohASAEQQRqIQMgBkEBTgRAIAIgBSAGEK4bGgsgACABNgIIIAAgAzYCBCAAIAI2AgAgBQRAIAUQohsLDwsQ/BoAC0HdkgEQvgIAC1IBAn8jAEEQayIDJAAgASAAKAIEIgRBAXVqIQEgACgCACEAIARBAXEEQCABKAIAIABqKAIAIQALIAMgAjYCDCABIANBDGogABECACADQRBqJAALPgECfyABIAAoAgQgACgCACIEa0ECdSIDSwRAIAAgASADayACEL8CDwsgASADSQRAIAAgBCABQQJ0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ACgCBCIDQQF1aiEBIAAoAgAhACABIAIgA0EBcQR/IAEoAgAgAGooAgAFIAALEQIACz4BAn8gASAAKAIEIAAoAgAiBGtBA3UiA0sEQCAAIAEgA2sgAhDCAg8LIAEgA0kEQCAAIAQgAUEDdGo2AgQLCzkBAX8gASAAKAIEIgRBAXVqIQEgACgCACEAIAEgAiADIARBAXEEfyABKAIAIABqKAIABSAACxEEAAtdAQJ/IwBBEGsiAyQAQQEhBCAAIAIgASgCBCABKAIAIgFrQQN1SQR/QQgQ1RoiBCABIAJBA3RqKQIANwMAIAMgBDYCCEHIngEgA0EIahADBSAECzYCACADQRBqJAALFwAgACgCACABQQN0aiACKQIANwIAQQELEAAgASACIAMgACgCABEFAAsGAEGMoAELTwECfyAABEAgACgCACIBBEACfyABIAEgACgCBCICRg0AGgNAIAJBOGsQsQYiAiABRw0ACyAAKAIACyECIAAgATYCBCACEKIbCyAAEKIbCwsrAQF/IAAoAgQiAiAAKAIIRwRAIAAgAiABEK0GQThqNgIEDwsgACABEMMCC1wBA38gASAAKAIEIgMgACgCACIFa0E4bSIESwRAIAAgASAEayACEMQCDwsgASAESQRAIAUgAUE4bGoiASADRwRAA0AgA0E4axCxBiIDIAFHDQALCyAAIAE2AgQLCxAAIAAoAgQgACgCAGtBOG0LWwECfyMAQRBrIgMkAEEBIQQgACACIAEoAgQgASgCACIBa0E4bUkEf0E4ENUaIgQgASACQThsahCtBhogAyAENgIIQcChASADQQhqEAMFIAQLNgIAIANBEGokAAsUACAAKAIAIAFBOGxqIAIQswZBAQsGAEGYowEL/QEBBX8gACgCBCICIAAoAghHBEAgAiABKQIANwIAIAIgASkCCDcCCCAAIAJBEGo2AgQPCwJAIAIgACgCACIFayIGQQR1IgRBAWoiAkGAgICAAUkEQAJ/QQAgAiAGQQN1IgMgAiADSxtB/////wAgBEH///8/SRsiA0UNABogA0GAgICAAU8NAiADQQR0ENUaCyICIARBBHRqIgQgASkCADcCACAEIAEpAgg3AgggAiADQQR0aiEBIARBEGohAyAGQQFOBEAgAiAFIAYQrhsaCyAAIAE2AgggACADNgIEIAAgAjYCACAFBEAg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QczvARCJA0Gk7wFB/+QBQcwNEJgKAAtBqX4gBUEQakHl7wEQiQNBpO8BQf/kAUHXDRCYCgALwQIBB38gBwRAIAZBBGshDCAGQQNKIQ0DQEEAIQggDQRAA0AgAiAIQQFyIglqLQAAIQogACAJai0AACELIAQgCGogAiAIai0AACAAIAhqLQAAQYACcmpBoPwDai0AADoAACAEIAlqIAogC0GAAnJqQaD8A2otAAA6AAAgAiAIQQNyIglqLQAAIQsgACAJai0AACEOIAQgCEECciIKaiACIApqLQAAIAAgCmotAABBgAJyakGg/ANqLQAAOgAAIAQgCWogCyAOQYACcmpBoPwDai0AADoAACAIQQRqIgggDEwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhqIAIgCGotAAAgACAIai0AAEGAAnJqQaD8A2otAAA6AAAgCEEBaiIIIAZHDQALCyAEIAVqIQQgAiADaiECIAAgAWohACAHDQALCwvzAgEIfyAHBEAgBkEEayEKIAZBA0ohCyAFQQF2QQF0IQwgA0EBdkEBdCENIAFBAXZBAXQhDgNAQQAhASALBEADQCACIAFBAXQiA0ECciIFai8BACEIIAAgBWovAQAhCSADIARqIAIgA2ovAQAgACADai8BAGoiD0H//wMgD0H//wNJGzsBACAEIAVqIAggCWoiBUH//wMgBUH//wNJGzsBACACIANBBnIiBWovAQAhCCAAIAVqLwEAIQkgBCADQQRyIgNqIAIgA2ovAQAgACADai8BAGoiA0H//wMgA0H//wNJGzsBACAEIAVqIAggCWoiA0H//wMgA0H//wNJGzsBACABQQRqIgEgCkwNAAsLIAdBAWshByABIAZIBEADQCAEIAFBAXQiA2ogAiADai8BACAAIANqLwEAaiIDQf//AyADQf//A0kbOwEAIAFBAWoiASAGRw0ACwsgBCAMaiEEIAIgDWohAiAAIA5qIQAgBw0ACwsLuQMBCH8gBwRAIAZBBGshCyAGQQNKIQwgBUEBdkEBdCENIANBAXZBAXQhDiABQQF2QQF0IQ8DQEEAIQEgDARAA0AgAiABQQF0IgNBAnIiBWouAQAhCCAAIAVqLgEAIQkgAyAEaiAAIANqLgEAIAIgA2ouAQBqIgpB//8BIApB//8BSBsiCkGAgH4gCkGAgH5KGzsBACAEIAVqIAggCWoiBUH//wEgBUH//wFIGyIFQYCAfiAFQYCAfkobOwEAIAIgA0EGciIFai4BACEIIAAgBWouAQAhCSAEIANBBHIiA2ogACADai4BACACIANqLgEAaiIDQf//ASADQf//AUgbIgNBgIB+IANBgIB+Shs7AQAgBCAFaiAIIAlqIgNB//8BIANB//8BSBsiA0GAgH4gA0GAgH5KGzsBACABQQRqIgEgC0wNAAsLIAdBAWshByABIAZIBEADQCAEIAFBAXQiA2ogACADai4BACACIANqLgEAaiIDQf//ASADQf//AUgbIgNBgIB+IANBgIB+Shs7AQAgAUEBaiIBIAZHDQALCyAEIA1qIQQgAiAOaiECIAAgD2ohACAHDQALCwutAgEHfyAHBEAgBkEEayEKIAZBA0ohCyAFQQJ2QQJ0IQwgA0ECdkECdCENIAFBAnZBAnQhDgNAQQAhASALBEADQCACIAFBAnQiA0EEciIFaigCACEIIAAgBWooAgAhCSADIARqIAIgA2ooAgAgACADaigCAGo2AgAgBCAFaiAIIAlqNgIAIAIgA0EMciIFaigCACEIIAAgBWooAgAhCSAEIANBCHIiA2ogAiADaigCACAAIANqKAIAajYCACAEIAVqIAggCWo2AgAgAUEEaiIBIApMDQALCyAHQQFrIQcgASAGSARAA0AgBCABQQJ0IgNqIAIgA2ooAgAgACADaigCAGo2AgAgAUEBaiIBIAZHDQALCyAEIAxqIQQgAiANaiECIAAgDmohACAHDQALCwuvAgIFfwJ9IAcEQCAGQQRrIQggBkEDSiEJIAVBAnZBAnQhCiADQQJ2QQJ0IQsgAUECdkECdCEMA0BBACEBIAkEQANAIAIgAUECdCIDQQRyIgVqKgIAIQ0gACAFaioCACEOIAMgBGogACADaioCACACIANqKgIAkjgCACAEIAVqIA4gDZI4AgAgAiADQQxyIgVqKgIAIQ0gACAFaioCACEOIAQgA0EIciIDaiAAIANqKgIAIAIgA2oqAgCSOAIAIAQgBWogDiANkjgCACABQQRqIgEgCEwNAAsLIAdBAWshByABIAZIBEADQCAEIAFBAnQiA2ogACADaioCACACIANqKgIAkjgCACABQQFqIgEgBkcNAAsLIAQgCmohBCACIAtqIQIgACAMaiEAIAcNAAsLC68CAgV/AnwgBwRAIAZBBGshCCAGQQNKIQkgBUEDdkEDdCEKIANBA3ZBA3QhCyABQQN2QQN0IQwDQEEAIQEgCQRAA0AgAiABQQN0IgNBCHIiBWorAwAhDSAAIAVqKwMAIQ4gAyAEaiAAIANqKwMAIAIgA2orAwCgOQMAIAQgBWogDiANoDkDACACIANBGHIiBWorAwAhDSAAIAVqKwMAIQ4gBCADQRByIgNqIAAgA2orAwAgAiADaisDAKA5AwAgBCAFaiAOIA2gOQMAIAFBBGoiASAITA0ACwsgB0EBayEHIAEgBkgEQANAIAQgAUEDdCIDaiAAIANqKwMAIAIgA2orAwCgOQMAIAFBAWoiASAGRw0ACwsgBCAKaiEEIAIgC2ohAiAAIAxqIQAgBw0ACwsLwQIBB38gBwRAIAZBBGshDCAGQQNKIQ0DQEEAIQggDQRAA0AgAiAIQQFyIglqLQAAIQogACAJai0AACELIAQgCGogACAIai0AAEGAAnIgAiAIai0AAGtBoPwDai0AADoAACAEIAlqIAtBgAJyIAprQaD8A2otAAA6AAAgAiAIQQNyIglqLQAAIQsgACAJai0AACEOIAQgCEECciIKaiAAIApqLQAAQYACciACIApqLQAAa0Gg/ANqLQAAOgAAIAQgCWogDkGAAnIgC2tBoPwDai0AADoAACAIQQRqIgggDEwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhqIAAgCGotAABBgAJyIAIgCGotAABrQaD8A2otAAA6AAAgCEEBaiIIIAZHDQALCyAEIAVqIQQgAiADaiECIAAgAWohACAHDQALCwulAwEIfyAHBEAgBkEEayELIAZBA0ohDCAFQQF2QQF0IQ0gA0EBdkEBdCEOIAFBAXZBAXQhDwNAQQAhASAMBEADQCACIAFBAXQiA0ECciIFai8BACEIIAAgBWovAQAhCSADIARqIAAgA2ovAQAgAiADai8BAGsiCkEAIApBAEobIgpB//8DIApB//8DSBs7AQAgBCAFaiAJIAhrIgVBACAFQQBKGyIFQf//AyAFQf//A0gbOwEAIAIgA0EGciIFai8BACEIIAAgBWovAQAhCSAEIANBBHIiA2ogACADai8BACACIANqLwEAayIDQQAgA0EAShsiA0H//wMgA0H//wNIGzsBACAEIAVqIAkgCGsiA0EAIANBAEobIgNB//8DIANB//8DSBs7AQAgAUEEaiIBIAtMDQALCyAHQQFrIQcgASAGSARAA0AgBCABQQF0IgNqIAAgA2ovAQAgAiADai8BAGsiA0EAIANBAEobIgNB//8DIANB//8DSBs7AQAgAUEBaiIBIAZHDQALCyAEIA1qIQQgAiAOaiECIAAgD2ohACAHDQALCwu5AwEIfyAHBEAgBkEEayELIAZBA0ohDCAFQQF2QQF0IQ0gA0EBdkEBdCEOIAFBAXZBAXQhDwNAQQAhASAMBEADQCACIAFBAXQiA0ECciIFai4BACEIIAAgBWouAQAhCSADIARqIAAgA2ouAQAgAiADai4BAGsiCkH//wEgCkH//wFIGyIKQYCAfiAKQYCAfkobOwEAIAQgBWogCSAIayIFQf//ASAFQf//AUgbIgVBgIB+IAVBgIB+Shs7AQAgAiADQQZyIgVqLgEAIQggACAFai4BACEJIAQgA0EEciIDaiAAIANqLgEAIAIgA2ouAQBrIgNB//8BIANB//8BSBsiA0GAgH4gA0GAgH5KGzsBACAEIAVqIAkgCGsiA0H//wEgA0H//wFIGyIDQYCAfiADQYCAfkobOwEAIAFBBGoiASALTA0ACwsgB0EBayEHIAEgBkgEQANAIAQgAUEBdCIDaiAAIANqLgEAIAIgA2ouAQBrIgNB//8BIANB//8BSBsiA0GAgH4gA0GAgH5KGzsBACABQQFqIgEgBkcNAAsLIAQgDWohBCACIA5qIQIgACAPaiEAIAcNAAsLC60CAQd/IAcEQCAGQQRrIQogBkEDSiELIAVBAnZBAnQhDCADQQJ2QQJ0IQ0gAUECdkECdCEOA0BBACEBIAsEQANAIAIgAUECdCIDQQRyIgVqKAIAIQggACAFaigCACEJIAMgBGogACADaigCACACIANqKAIAazYCACAEIAVqIAkgCGs2AgAgAiADQQxyIgVqKAIAIQggACAFaigCACEJIAQgA0EIciIDaiAAIANqKAIAIAIgA2ooAgBrNgIAIAQgBWogCSAIazYCACABQQRqIgEgCkwNAAsLIAdBAWshByABIAZIBEADQCAEIAFBAnQiA2ogACADaigCACACIANqKAIAazYCACABQQFqIgEgBkcNAAsLIAQgDGohBCACIA1qIQIgACAOaiEAIAcNAAsLC68C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IgggC0wNAAsLIAdBAWshByAGIAhKBEADQCAEIAhqQX9BACAAIAhBAXQiAWovAQAgASACai8BAEcbOgAAIAhBAWoiCCAGRw0ACwsgBCAFaiEEIAIgDWohAiAAIA5qIQAgBw0ACwsgD0EQaiQADwtBqX4gD0Gx8AEQiQNB0fABQYvwAUH3BRCYCgALywIBB38gBwRAIAZBBGshCyAGQQNKIQwgA0EBdkEBdCENIAFBAXZBAXQhDgNAQQAhASAMBEADQCACIAFBAXIiA0EBdCIIai4BACEKIAAgCGouAQAhCCABIARqQX9BACAAIAFBAXQiCWouAQAgAiAJai4BAEgbOgAAIAMgBGpBf0EAIAggCkgbOgAAIAIgAUEDciIDQQF0IghqLgEAIQogACAIai4BACEIIAQgAUECciIJakF/QQAgACAJQQF0IglqLgEAIAIgCWouAQBIGzoAACADIARqQX9BACAIIApIGzoAACABQQRqIgEgC0wNAAsLIAdBAWshByABIAZIBEADQCABIARqQX9BACAAIAFBAXQiA2ouAQAgAiADai4BAEgbOgAAIAFBAWoiASAGRw0ACwsgBCAFaiEEIAIgDWohAiAAIA5qIQAgBw0ACwsLywIBB38gBwRAIAZBBGshCyAGQQNKIQwgA0EBdkEBdCENIAFBAXZBAXQhDgNAQQAhASAMBEADQCACIAFBAXIiA0EBdCIIai4BACEKIAAgCGouAQAhCCABIARqQX9BACAAIAFBAXQiCWouAQAgAiAJai4BAEwbOgAAIAMgBGpBf0EAIAggCkwbOgAAIAIgAUEDciIDQQF0IghqLgEAIQogACAIai4BACEIIAQgAUECciIJakF/QQAgACAJQQF0IglqLgEAIAIgCWouAQBMGzoAACADIARqQX9BACAIIApMGzoAACABQQRqIgEgC0wNAAsLIAdBAWshByABIAZIBEADQCABIARqQX9BACAAIAFBAXQiA2ouAQAgAiADai4BAEwbOgAAIAFBAWoiASAGRw0ACwsgBCAFaiEEIAIgDWohAiAAIA5qIQAgBw0ACwsLtwYBB38jAEEQayIPJAACQAJAAkACQAJAAkACQAJAIAgOBgQBAwACBQcLIAAgASACIAMgBCAFIAYgBxDoBAwFCyACIAMgACABIAQgBSAGIAcQ6AQMBAsgACABIAIgAyAE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OAIAIAMgBGogDiANlDgCACAIQQRqIgggBUwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhBAnQiAWogACABaioCACABIAJqKgIAlDgCACAIQQFqIgggBkcNAAsLIAQgCkECdGohBCACIAtBAnRqIQIgACAMQQJ0aiEAIAcNAAsMAQsgB0UNACAGQQRrIQUgBkEDSiEJA0BBACEIIAkEQANAIAIgCEECdCIBQQRyIgNqKgIAIQ0gACADaioCACEOIAEgBGogDyAAIAFqKgIAu6IgASACaioCALuitjgCACADIARqIA8gDruiIA27orY4AgAgAiABQQxyIgNqKgIAIQ0gACADaioCACEOIAQgAUEIciIBaiAPIAAgAWoqAgC7oiABIAJqKgIAu6K2OAIAIAMgBGogDyAOu6IgDbuitjgCACAIQQRqIgggBUwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhBAnQiAWogDyAAIAFqKgIAu6IgASACaioCALuitjgCACAIQQFqIgggBkcNAAsLIAQgCkECdGohBCACIAtBAnRqIQIgACAMQQJ0aiEAIAcNAAsLC5MFAgZ/AXwgBUECdiEMIANBAnYhDSABQQJ2IQ4CQCAIKwMAIg9EAAAAAAAA8L+gmUQAAAAAAACAPmVBAXNFBEAgB0UNASAGQQRrIQogBkEDSiELA0BBACEIIAsEQANAIAIgCEECdCIBQQRyIgNqKAIAIQUgACADaigCACEJIAEgBGogASACaigCACAAIAFqKAIAbDYCACADIARqIAUgCWw2AgAgAiABQQxyIgNqKAIAIQUgACADaigCACEJIAQgAUEIciIBaiABIAJqKAIAIAAgAWooAgBsNgIAIAMgBGogBSAJbDYCACAIQQRqIgggCkwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhBAnQiAWogASACaigCACAAIAFqKAIAbDYCACAIQQFqIgggBkcNAAsLIAQgDEECdGohBCACIA1BAnRqIQIgACAOQQJ0aiEAIAcNAAsMAQsgB0UNACAGQQRrIQogBkEDSiELA0BBACEIIAsEQANAIAIgCEECdCIBQQRyIgNqKAIAIQUgACADaigCACEJIAEgBGogDyAAIAFqKAIAt6IgASACaigCALeiEIIVNgIAIAMgBGogDyAJt6IgBbeiEIIVNgIAIAIgAUEM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IQ0gACADaioCACEOIAEgBGogACABaioCACABIAJqKgIAlTgCACADIARqIA4gDZU4AgAgAiABQQxyIgNqKgIAIQ0gACADaioCACEOIAQgAUEIciIBaiAAIAFqKgIAIAEgAmoqAgCVOAIAIAMgBGogDiANlTgCACAIQQRqIgggBUwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhBAnQiAWogACABaioCACABIAJqKgIAlTgCACAIQQFqIgggBkcNAAsLIAQgCkECdGohBCACIAtBAnRqIQIgACAMQQJ0aiEAIAcNAAsMAQsgB0UNACAGQQRrIQUgBkEDSiEJA0BBACEIIAkEQANAIAIgCEECdCIBQQRyIgNqKgIAIQ4gACADaioCACEPIAEgBGogACABaioCACANlCABIAJqKgIAlTgCACADIARqIA8gDZQgDpU4AgAgAiABQQxyIgNqKgIAIQ4gACADaioCACEPIAQgAUEIciIBaiAAIAFqKgIAIA2UIAEgAmoqAgCVOAIAIAMgBGogDyANlCAOlTgCACAIQQRqIgggBUwNAAsLIAdBAWshByAGIAhKBEADQCAEIAhBAnQiAWogACABaioCACANlCABIAJqKgIAlTgCACAIQQFqIgggBkcNAAsLIAQgCkECdGohBCACIAtBAnRqIQIgACAMQQJ0aiEAIAcNAAsLC/YEAgV/A3wgBUEDdiEKIANBA3YhCyABQQN2IQwCQCAIKwMARAAAAAAAAPA/YQRAIAdFDQEgBkEEayEFIAZBA0ohCQNAQQAhASAJBEADQCACIAFBA3QiA0EIciIIaisDACEOIAAgCGorAwAhDyADIARqIAAgA2orAwAgAiADaisDAKM5AwAgBCAIaiAPIA6jOQMAIAIgA0EYciIIaisDACEOIAAgCGorAwAhDyAEIANBEHIiA2ogACADaisDACACIANqKwMAozkDACAEIAhqIA8gDqM5AwAgAUEEaiIBIAVMDQALCyAHQQFrIQcgASAGSARAA0AgBCABQQN0IgNqIAAgA2orAwAgAiADaisDAKM5AwAgAUEBaiIBIAZHDQALCyAEIApBA3RqIQQgAiALQQN0aiECIAAgDEEDdGohACAHDQALDAELIAdFDQAgBkEEayEJIAZBA0ohDQNAQQAhASANBEADQCACIAFBA3QiA0EIciIFaisDACEO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FyAVIAItAAG4oqAhFyAWIBUgAi0AALiioCEWIAIgDGohAiAAQQFqIgAgAUcNAAsLIAogBEECdGoiAiAWIAOitjgCACACIBkgA6K2OAIMIAIgGCADorY4AgggAiAXIAOitjgCBCAEQQRqIgQgBUwNAAsLIAQgCEgEQANAAkAgAUEBSARARAAAAAAAAAAAIRUMAQsgBCANaiECQQAhAEQAAAAAAAAAACEVA0AgFSAHIABBAnRqKgIAuyACLQAAuKKgIRUgAiAMaiECIABBAWoiACABRw0ACwsgCiAEQQJ0aiAVIAOitjgCACAEQQFqIgQgCEcNAAsLIAogEkECdGohCiAGQQFqIgYgCEcNAAsLIAcgEUcEQCAHEKIbCyALQaAIaiQAC68IAxR/AX0BfCMAQaAIayIHJAAgASgCMEECdiESIAAoAjAhDSABKAIQIQogACgCECEOIAAoAigiACgCACELIAAoAgQhBAJAIAIoAhAiCEUEQCALQQFIDQEgBEF8cSEJIARBBGshBkEAIQggBEEDSiEQA0AgDiAIIA1saiEBIAghDANAIA4gDCANbGohAkEAIQBEAAAAAAAAAAAhGQJ/IBAEQANAIBkgACABai0AALggACACai0AALiiIAEgAEEBciIFai0AALggAiAFai0AALiioCABIABBAnIiBWotAAC4IAIgBWotAAC4oqAgASAAQQNyIgVqLQAAuCACIAVqLQAAuKKgoCEZIABBBGoiACAGTA0ACyAJIQALIAAgBEgLBEADQCAZIAAgAWotAAC4IAAgAmotAAC4oqAhGSAAQQFqIgAgBEcNAAsLIAogDEECdGogGSADorY4AgAgDEEBaiIMIAtHDQALIAogEkECdGohCiAIQQFqIgggC0cNAAsMAQsgAigCCCEBIAIoAjAhBiACKAIMIREgByAEQQJ0IgA2AgQgByAHQQhqIhM2AgAgEyEFIABBiQhPBEAgByAAENUaIgU2AgALIAtBAU4EQCAGQQJ2QQAgAUEBShshFCAEQXxxIRUgBEEEayEMIARBAUghFiAEQQNKIRcgBCARRkEEdCEQA0AgDiANIA9saiECIAggDyAUbEECdGohAQJAIAQgEUwEQEEAIQAgBEEATA0BA0AgBSAAQQJ0IgZqIAAgAmotAACzIAEgBmoqAgCTOAIAIABBAWoiACAERw0ACwwB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AANAIAQgAEEDdCICaiACIAZqKwMAIAErAwChOQMAIABBAWoiACAFRw0ACwsgDyEIA0AgEyAIIBVsQQN0aiEAIAggDWxBA3QhAiAFIBFKBEAgByAAKwMAIhg5A6AIIAcgGDkDqAggByAYOQOYCCAHIBg5A5AIIAdBkAhqIQALIAIgDmohAUQAAAAAAAAAACEYQQAhAgJ/IAVBA0oEQANAIBggBCACQQN0IgZqKwMAIAEgBmorAwAgACsDAKGiIAQgBkEIciIMaisDACABIAxqKwMAIAArAwihoqAgBCAGQRByIgxqKwMAIAEgDGorAwAgACsDEKGioCAEIAZBGHIiBmorAwAgASAGaisDACAAKwMYoaKgoCEYIAAgEGohACACQQRqIgIgC0wNAAsgFiECCyACIAVICwRAA0AgGCAEIAJBA3QiBmorAwAgASAGaisDACAAKwMAoaKgIRggAEEIaiEAIAJBAWoiAiAFRw0ACwsgCSAIQQN0aiAYIAOiOQMAIAhBAWoiCCAKRw0ACyAJIBJBA3RqIQkgD0EBaiIPIApHDQALCyAEIBRGDQAgBBCiGwsgB0GwCGokAAvMAQIDfwF8An8gAkEETgRAIAJBBGshBQNAIAYgACADai0AALggASADai0AALiiIAAgA0EBciIEai0AALggASAEai0AALiioCAAIANBAnIiBGotAAC4IAEgBGotAAC4oqAgACADQQNyIgRqLQAAuCABIARqLQAAuKKgoCEGIANBBGoiAyAFTA0ACyACQXxxIQMLIAIgA0oLBEADQCAGIAAgA2otAAC4IAEgA2otAAC4oqAhBiADQQFqIgMgAkcNAAsLIAZEAAAAAAAAAACgC8wBAgN/AXwCfyACQQROBEAgAkEEayEFA0AgBiAAIANqLAAAtyABIANqLAAAt6IgACADQQFyIgRqLAAAtyABIARqLAAAt6KgIAAgA0ECciIEaiwAALcgASAEaiwAALeioCAAIANBA3IiBGosAAC3IAEgBGosAAC3oqCgIQYgA0EEaiIDIAVMDQALIAJBfHEhAwsgAiADSgsEQANAIAYgACADaiwAALcgASADaiwAALeioCEGIANBAWoiAyACRw0ACwsgBkQAAAAAAAAAAKAL1gECBH8BfAJ/IAJBBE4EQCACQQRrIQYDQCAHIAAgA0EBdCIEai8BALggASAEai8BALiiIAAgBEECciIFai8BALggASAFai8BALiioCAAIARBBHIiBWovAQC4IAEgBWovAQC4oqAgACAEQQZyIgRqLwEAuCABIARqLwEAuKKgoCEHIANBBGoiAyAGTA0ACyACQXxxIQMLIAIgA0oLBEADQCAHIAAgA0EBdCIEai8BALggASAEai8BALiioCEHIANBAWoiAyACRw0ACwsgB0QAAAAAAAAAAKAL1gECBH8BfAJ/IAJBBE4EQCACQQRrIQYDQCAHIAAgA0EBdCIEai4BALcgASAEai4BALeiIAAgBEECciIFai4BALcgASAFai4BALeioCAAIARBBHIiBWouAQC3IAEgBWouAQC3oqAgACAEQQZyIgRqLgEAtyABIARqLgEAt6KgoCEHIANBBGoiAyAGTA0ACyACQXxxIQMLIAIgA0oLBEADQCAHIAAgA0EBdCIEai4BALcgASAEai4BALeioCEHIANBAWoiAyACRw0ACwsgB0QAAAAAAAAAAKALzAECBH8BfAJ/IAJBBE4EQCACQQRrIQYDQCAHIAAgA0ECdCIEaigCALcgASAEaigCALeiIAAgBEEEciIFaigCALcgASAFaigCALeioCAAIARBCHIiBWooAgC3IAEgBWooAgC3oqAgACAEQQxyIgRqKAIAtyABIARqKAIAt6KgoCEHIANBBGoiAyAGTA0ACyACQXxxIQMLIAIgA0oLBEADQCAHIAAgA0ECdCIEaigCALcgASAEaigCALeioCEHIANBAWoiAyACRw0ACwsgBwvWAQIEfwF8An8gAkEETgRAIAJBBGshBgNAIAcgACADQQJ0IgRqKgIAuyABIARqKgIAu6IgACAEQQRyIgVqKgIAuyABIAVqKgIAu6KgIAAgBEEIciIFaioCALsgASAFaioCALuioCAAIARBDHIiBGoqAgC7IAEgBGoqAgC7oqCgIQcgA0EEaiIDIAZMDQALIAJBfHEhAwsgAiADSgsEQANAIAcgACADQQJ0IgRqKgIAuyABIARqKgIAu6KgIQcgA0EBaiIDIAJHDQALCyAHRAAAAAAAAAAAoAvqCgEEfyMAQdACayIHJAACQCAAEMwHQYCABEYEQCAHQZgCaiAAKAIEEK0GGgwBCyAHQZgCaiAAEMkHCwJAIAEQzAdBgIAERgRAIAdB4AFqIAEoAgQQrQYaDAEL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QQJ0akEANgIAIAFBAWoiASAAKAI0SA0ACwsgCyAAKAJcIgFHBEAgARDuAwsgAEH4AGohAQJAIAAoAowBIghFDQAgCCAIKAIMIglBAWs2AgwgCUEBRw0AIAAoAowBIglFDQAgAEEANgKMAQJAIAkoAgQiCA0AIAAoAogBIggNABCgBiEICyAIIAkgCCgCACgCGBECAAsgAEEANgKMASABQgA3AgggAUIANwIAIAAoAmxBAU4EQCAAKAKQASEIQQAhAQNAIAggAUECdGpBADYCACABQQFqIgEgACgCbEgNAAsLIAAoApQBIgEgBUYNACABEO4DCyAAQaACaiQADwtBqX4gAEHoAGpBvoMCEIkDQYGEAkHggwJBwAAQmAoAC9cHAQR/IwBBoAJrIgAkAAJAAkAgAUUNACACRQ0AIAIoAhAhCiABKAIQIQsgA0EBTgRAIANBAmshDUEAIQEDQCAEIAFBAnQiAmooAgAiCUF/TA0DIAlFDQIgBQRAQQEhDCALIAEgDUwEfyACIAZqKAIABSAMCyACIAVqKAIAbGohCwsgBwRAQQEhDCAKIAEgDUwEfyACIAhqKAIABSAMCyACIAdqKAIAbGohCgsgAEGgAWogAmogCTYCACABQQFqIgEgA0cNAAsLIABB/ABqIgFCADcCACAAQgA3AnRBACECIABBADYCjAEgAEIANwKEASAAQZgBaiIFQgA3AwAgASALNgIAIABCADcCbCAAQYCA/JcENgJoIAAgBTYClAEgACAAQfAAajYCkAEgACALNgJ4IABB6ABqIAMgAEGgAWogBkEBEJ4GIABB6ABqEJ8GIABBxABqIgFCADcCACAAQgA3AjwgAEEANgJUIABCADcCTCAAQeAAaiIHQgA3AwAgASAKNgIAIABCADcCNCAAIAc2AlwgACAAQThqNgJYIABBgID8lwQ2AjAgACAKNgJAIABBMGogAyAAQaABaiAIQQEQngYgAEEwahCfBiAAIABBMGo2AiwgACAAQegAajYCKCAAIABBKGogAEEgakECEKwHIgEoAhAEQCABKAIUIQkDQCAAKAIkIAAoAiAgCRCuGxogARCtByACQQFqIgIgASgCEEkNAAsLIABBQGshAQJAIAAoAlQiAkUNACACIAIoAgwiCUEBazYCDCAJQQFHDQAgACgCVCIJRQ0AIABBADYCVAJAIAko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BCAFKQOQAzcDsAEgBCAFKwOgAzkDwAEgBCAKKwMAOQPIASAEIAsrAwA5A9ABIAQgDCsDADkD2AEgCBCxBhogBxCxBhogBhCxBhogAxCxBhogAhCxBhogARCxBhogABCxBhoLIAVBwANqJAALgwcDDX8BfgJ8IwBBwANrIgQkAAJAIAAgASAAKAIAKAIIEQMABEAgASkDACERIARBqAFqEKcGIQAgBEHwAGoQpwYhBSAEQThqEKcGIQYgASsDsAEhEiABKwO4ASETIAQgETcD4AEgBEHoAWogABCtBiEHIARBoAJqIAUQrQYhCCAEQdgCaiAGEK0GIQkgBEGYA2oiCiATOQMAIAQgEjkDkAMgBCABKwPAATkDoAMgBEGoA2oiCyABKwPIATkDACAEQbADaiIMIAErA9ABOQMAIARBuANqIg0gASsD2AE5AwAgAyAEKQPgATcDACADQQhqIg4gBxC5BhogA0FAayIPIAgQuQYaIANB+ABqIhAgCRC5BhogAyAKKQMANwO4ASADIAQpA5ADNwOwASADIAQrA6ADOQPAASADIAsrAwA5A8gBIAMgDCsDADkD0AEgAyANKwMAOQPYASAJELEGGiAIELEGGiAHELEGGiAGELEGGiAFELEGGiAAELEGGiABKAIYBEAgBEHgAWogAUEIaiACEL4GIA4gBEHgAWoQuQYaIARB4AFqELEGGgsgASgCUARAIARB4AFqIAFBQGsgAhC+BiAPIARB4AFqELkGGiAEQeABahCxBhoLIAEoAogBRQ0BIARB4AFqIAFB+ABqIAIQvgYgECAEQeABahC5BhogBEHgAWoQsQYaDAELIARBqAFqEKcGIQAgASgCACIFIAEgAEF/IAUoAgAoAgwRBgAgBEHwAGogACACEL4GIARBOGoQpwYhASAEEKcGIQIgBEEANgLkASAEQeTOCjYC4AEgBEHoAWogBEHwAGoQrQYhBSAEQaACaiABEK0GIQYgBEHYAmogAhCtBiEHIARBmANqIghCgICAgICAgPg/NwMAIARBqANqIglCADcDACAEQbADaiIKQgA3AwAgBEG4A2oiC0IANwMAIARCADcDoAMgBEKAgICAgICA+D83A5ADIAMgBCkD4AE3AwAgA0EIaiAFELkGGiADQUBrIAYQuQYaIANB+ABqIAcQuQYaIAMgCCkDADcDuAEgAyAEKQOQAzcDsAEgAyAEKwOgAzkDwAEgAyAJKwMAOQPIASADIAorAwA5A9ABIAMgCysDADkD2AEgBxCxBhogBhCxBhogBRCxBhogAhCxBhogARCxBhogBEHwAGoQsQYaIAAQsQYaCyAEQcADaiQAC58BAQJ/IwBB8ABrIgAkACAAQQhqEKcGIQMgASgCACIEIAEgA0F/IAQoAgAoAgwRBgAgAEIANwNoIAAgAjYCZCAAQYCAhAg2AmAgAEIANwNYIAAgAzYCVCAAQYCAhAg2AlAgACACNgJEIABBgICEkHw2AkAgAEIANwNIIABB4ABqIABB0ABqIABBQGtB1NYKENsFIAMQsQYaIABB8ABqJAALnwEBAn8jAEHwAGsiACQAIABBCGoQpwYhAyABKAIAIgQgASADQX8gBCgCACgCDBEGACAAQgA3A2ggACACNgJkIABBgICECDYCYCAAQgA3A1ggACADNgJUIABBgICECDYCUCAAIAI2AkQgAEGAgISQfDYCQCAAQgA3A0ggAEHgAGogAEHQAGogAEFAa0HU1goQ3QUgAxCxBhogAEHwAGokAAvjAQECfyMAQbABayIAJAAgABCnBiEDIAEoAgAiBCABIANBfyAEKAIAKAIMEQYAIABCADcDqAEgACACNgKkASAAQYCAhAg2AqABIABCADcDmAEgACADNgKUASAAQYCAhAg2ApABIABByABqEKcGIQEgAEIANwOIASAAIAE2AoQBIABBgICECDYCgAEgACACNgI8IABBgICEEDYCOCAAQgA3A0AgAEGgAWogAEGQAWpEAAAAAAAA8D8gAEGAAWpEAAAAAAAAAAAgAEE4akEAEIIGIAEQsQYaIAMQsQYaIABBsAFqJAALpAEBAn8jAEHwAGsiACQAIABBCGoQpwYhAyABKAIAIgQgASADQX8gBCgCACgCDBEGACAAQgA3A2ggACACNgJkIABBgICECDYCYCAAQgA3A1ggACADNgJUIABBgICECDYCUCAAIAI2AkQgAEGAgISQfDYCQCAAQgA3A0ggAEHgAGogAEHQAGogAEFAa0QAAAAAAADwPxDgBSADELEGGiAAQfAAaiQAC58BAQJ/IwBB8ABrIgAkACAAQQhqEKcGIQMgASgCACIEIAEgA0F/IAQoAgAoAgwRBgAgAEIANwNoIAAgAjYCZCAAQYCAhAg2AmAg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IAAQrQYhBiAEQagCaiACEK0GIQcgBEGIA2oiCCAPOQMAIARBgANqIgkgDDkDACAEQfgCaiIKIA05AwAgBEHoAmoiCyAROQMAIAQgDjkD8AIgBCAQOQPgAiADIAQpA7ABNwMAIANBCGogARC5BhogA0FAayAGELkGGiADQfgAaiAHELkGGiADIAspAwA3A7gBIAMgBCkD4AI3A7ABIAMgBCsD8AI5A8ABIAMgCisDADkDyAEgAyAJKwMAOQPQASADIAgrAwA5A9gBIAcQsQYaIAYQsQYaIAEQsQYaIAIQsQYaIAAQsQYaIAUQsQYaDAELIAUgASACIAMgBSgCACgCPBEGAAsgBEGQA2okAAv0AgEJfyMAQZADayIAJAAgAEFAaxCnBiEFIAIoAgAiBCACIAVBfyAEKAIAKAIMEQYAIABBCGoQpwYhAiAAQfgAahCnBiEEIABBADYCtAEgAEHozgo2ArABIABBuAFqIAUQrQYhBiAAQfABaiACEK0GIQcgAEGoAmogBBCtBiEIIABB6AJqIglCADcDACAAQoCAgICAgID4v383A+ACIAAgASsDADkD8AIgAEH4AmoiCiABKwMIOQMAIABBgANqIgsgASsDEDkDACAAQYgDaiIMIAErAxg5AwAgAyAAKQOwATcDACADQQhqIAYQuQYaIANBQGsgBxC5BhogA0H4AGogCBC5BhogAyAJKQMANwO4ASADIAApA+ACNwOwASADIAArA/ACOQPAASADIAorAwA5A8gBIAMgCysDADkD0AEgAyAMKwMAOQPYASAIELEGGiAHELEGGiAGELEGGiAEELEGGiACELEGGiAFELEGGiAAQZADaiQAC6oKAgh/AXwjAEGQA2siBSQAAkAgACACKAIAIgZGBEAgBUFAaxCnBiEAIAVBCGoQpwYhBgJAAkACQAJAIAEoAgAiB0HszgpHDQAgASgCBEEvRw0AIAEoAlAEQCABKwO4AUQAAAAAAAAAAGINAgsCQAJAIAIoAgAiB0HozgpHDQAgAigCUARAIAIrA7gBRAAAAAAAAAAAYg0BCyACKwPAAUQAAAAAAAAAAGINACACKwPIAUQAAAAAAAAAAGINACACKwPQAUQAAAAAAAAAAGINACACKwPYAUQAAAAAAAAAAGINACACKwOwASENIAYgAkEIahCzBiANIASiIQQMAQsgByAC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ADkD0AEgAyALKwMAOQPYASAHELEGGiAFELEGGiABELEGGiACELEGGiAAELEGGiAGELEGGgwBCyAGIAEgAiADIAYoAgAoAlwRBgALIARBkANqJAALRQECfyMAQUBqIgQkACAEQQhqEKcGIQAgASgCACIFIAEgAEF/IAUoAgAoAgwRBgAgAyACIAAQ+gYgABCxBhogBEFAayQAC7wCAQl/IwBB0AJrIgMkACADQThqEKcGIQQgAxCnBiEFIAMgATYCdCADQfTOCjYCcCADQfgAaiACEK0GIQIgA0GwAWogBBCtBiEBIANB6AFqIAUQrQYhBiADQagCaiIHQgA3AwAgA0GwAmoiCEIANwMAIANBuAJqIglCADcDACADQcACaiIKQgA3AwAgA0HIAmoiC0IANwMAIANCgICAgICAgPg/NwOgAiAAIAMpA3A3AwAgAEEIaiACELkGGiAAQUBrIAEQuQYaIABB+ABqIAYQuQYaIAAgBykDADcDuAEgACADKQOgAjcDsAEgACAIKwMAOQPAASAAIAkrAwA5A8gBIAAgCisDADkD0AEgACALKwMAOQPYASAGELEGGiABELEGGiACELEGGiAFELEGGiAEELEGGiADQdACaiQACzsAIAACfyACQTBqIAJBCGoQtwZFDQAaIAJB6ABqIAJBQGsQtwYNABogAkGgAWoLKAIAKQIAQiCJNwIACy8AAkAgAUEIaiIAELcGRQ0AIAFBQGsiABC3Bg0AIAFB+ABqIQALIAAoAgBB/x9xC8QDAQ9/IwBBoAJrIgMkAAJAIAEQtwZFBEAgAhC3BkUNAQtBeyADQUBrQaCpAhCJA0HHqQJB6p0CQSAQmAoACyAAQgA3AwAgAEEIahCnBiEGIABBQGsQpwYhByAAQfgAahCnBiEIIABB2AFqIglCADcDACAAQdABaiIKQgA3AwAgAEHIAWoiC0IANwMAIABBwAFqIgxCADcDACAAQbgBaiINQgA3AwAgAEIANwOwASADQQhqEKcGIQQgA0EANgJEIANB6M4KNgJAIANByABqIAEQrQYhASADQYABaiACEK0GIQIgA0G4AWogBBCtBiEFIANB+AFqIg5CgICAgICAgPi/fzcDACADQYgCaiIPQgA3AwAgA0GQAmoiEEIANwMAIANBmAJqIhFCADcDACADQgA3A4ACIANCgICAgICAgPg/NwPwASAAIAMpA0A3AwAgBiABELkGGiAHIAIQuQYaIAggBRC5BhogDSAOKQMANwMAIAAgAykD8AE3A7ABIAwgAysDgAI5AwAgCyAPKwMAOQMAIAogECsDADkDACAJIBErAwA5AwAgBRCxBhogAhCxBhogARCxBhogBBCxBhogA0GgAmokAAvCAwESfyMAQdACayICJAAgARC3BgRAQXsgAkHwAGpB2qkCEIkDQcepAkHqnQJBGBCYCgALIABCADcDACAAQQhqEKcGIQcgAEFAaxCnBiEIIABB+ABqEKcGIQkgAEHYAWoiCkIANwMAIABB0AFqIgtCADcDACAAQcgBaiIMQgA3AwAgAEHAAWoiDUIANwMAIABBuAFqIg5CADcDACAAQgA3A7ABIAIQpwYhAyACQThqEKcGIQQgAkEANgJ0IAJB6M4KNgJwIAJB+ABqIAEQrQYhASACQbABaiADEK0GIQUgAkHoAWogBBCtBiEGIAJBqAJqIg9CADcDACACQbACaiIQQgA3AwAgAkG4AmoiEUIANwMAIAJBwAJqIhJCADcDACACQcgCaiITQgA3AwAgAkKAgICAgICA+L9/NwOgAiAAIAIpA3A3AwAgByABELkGGiAIIAUQuQYaIAkgBhC5BhogDiAPKQMANwMAIAAgAikDoAI3A7ABIA0gECsDADkDACAMIBErAwA5AwAgCyASKwMAOQMAIAogEysDADkDACAGELEGGiAFELEGGiABELEGGiAEELEGGiADELEGGiACQdACaiQAC8MDAQ9/IwBBoAJrIgMkAAJAIAEQtwZFBEAgAhC3BkUNAQtBeyADQUBrQaCpAhCJA0HHqQJB6p0CQSAQmAoACyAAQgA3AwAgAEEIahCnBiEGIABBQGsQpwYhByAAQfgAahCnBiEIIABB2AFqIglCADcDACAAQdABaiIKQgA3AwAgAEHIAWoiC0IANwMAIABBwAFqIgxCADcDACAAQbgBaiINQgA3AwAgAEIANwOwASADQQhqEKcGIQQgA0EANgJEIANB8M4KNgJAIANByABqIAEQrQYhASADQYABaiACEK0GIQIgA0G4AWogBBCtBiEFIANB+AFqIg5CgICAgICAgPg/NwMAIANBiAJqIg9CADcDACADQZACaiIQQgA3AwAgA0GYAmoiEUIANwMAIANCADcDgAIgA0KAgICAgICA+D83A/ABIAAgAykDQDcDACAGIAEQuQYaIAcgAhC5BhogCCAFELkGGiANIA4pAwA3AwAgACADKQPwATcDsAEgDCADKwOAAjkDACALIA8rAwA5AwAgCiAQKwMAOQMAIAkgESsDADkDACAFELEGGiACELEGGiABELEGGiAEELEGGiADQaACaiQAC7kDARJ/IwBB0AJrIgMkACABELcGBEBBeyADQfAAakHaqQIQiQNBx6kCQeqdAkEYEJgKAAsgAEIANwMAIABBCGoQpwYhCCAAQUBrEKcGIQkgAEH4AGoQpwYhCiAAQdgBaiILQgA3AwAgAEHQAWoiDEIANwMAIABByAFqIg1CADcDACAAQcABaiIOQgA3AwAgAEG4AWoiD0IANwMAIABCADcDsAEgAxCnBiEEIANBOGoQpwYhBSADQQA2AnQgA0Hozgo2AnAgA0H4AGogARCtBiEBIANBsAFqIAQQrQYhBiADQegBaiAFEK0GIQcgA0GoAmoiEEIANwMAIANBsAJqIhFCADcDACADQbgCaiISQgA3AwAgA0HAAmoiE0IANwMAIANByAJqIhRCADcDACADIAI5A6ACIAAgAykDcDcDACAIIAEQuQYaIAkgBhC5BhogCiAHELkGGiAPIBApAwA3AwAgACADKQOgAjcDsAEgDiARKwMAOQMAIA0gEisDADkDACAMIBMrAwA5AwAgCyAUKwMAOQMAIAcQsQYaIAYQsQYaIAEQsQYaIAUQsQYaIAQQsQYaIANB0AJqJAAL/gEBBH8jAEHgAWsiAyQAIABCADcDACAAQQhqEKcGGiAAQUBrEKcGGiAAQfgAahCnBhogAEIANwPYASAAQgA3A9ABIABCADcDyAEgAEIANwPAASAAQgA3A7gBIABCADcDsAEgASgCACEEIANBADYCBCADQeTOCjYCACADQQhqIAIQrQYhAiADQUBrEKcGIQUgA0H4AGoQpwYhBiADQgA3A8ABIANCADcDyAEgA0IANwPQASADQgA3A9gBIANCADcDuAEgA0KAgICAgICA+D83A7ABIAQgASADIAAgBCgCACgCXBEGACAGELEGGiAFELEGGiACELEGGiADQeABaiQAC58CAQR/IwBB4AFrIgMkACABELcGBEBBeyADQdqpAhCJA0HHqQJB6p0CQRgQmAoACyAAQgA3AwAgAEEIahCnBhogAEFAaxCnBhogAEH4AGoQpwYaIABCADcD2AEgAEIANwPQASAAQgA3A8gBIABCADcDwAEgAEIANwO4ASAAQgA3A7ABIAIoAgAhBCADQQA2AgQgA0Hkzgo2AgAgA0EIaiABEK0GIQEgA0FAaxCnBiEFIANB+ABqEKcGIQYgA0IANwPAASADQgA3A8gBIANCADcD0AEgA0IANwPYASADQgA3A7gBIANCgICAgICAgPg/NwOwASAEIAMgAiAAIAQoAgAoAlwRBgAgBhCxBhogBRCxBhogARCxBhogA0HgAWokAAvFAgEJfyMAQdACayIDJAAgA0E4ahCnBiEEIAMQpwYhBSADQeEANgJ0IANB7M4KNgJwIANB+ABqIAEQrQYhASADQbABaiAEEK0GIQYgA0HoAWogBRCtBiEHIANBqAJqIghCADcDACADQoCAgICAgID4PzcDoAIgAyACKwMAOQOwAiADQbgCaiIJIAIrAwg5AwAgA0HAAmoiCiACKwMQOQMAIANByAJqIgsgAisDGDkDACAAIAMpA3A3AwAgAEEIaiABELkGGiAAQUBrIAYQuQYaIABB+ABqIAcQuQYaIAAgCCkDADcDuAEgACADKQOgAjcDsAEgACADKwOwAjkDwAEgACAJKwMAOQPIASAAIAorAwA5A9ABIAAgCysDADkD2AEgBxCxBhogBhCxBhogARCxBhogBRCxBhogBBCxBhogA0HQAmokAAueAQEBfyMAQRBrIgAkAAJAAkACQCADQX9HBEAgASgCCCIEQf8fcSADRw0BCyACIAFBCGoQswYMAQsgAyAEc0H4H3ENASAAIAI2AgQgAEGAgIQQNgIAIABCADcDCCABQQhqIAAgA0QAAAAAAADwP0QAAAAAAAAAABCIAwsgAEEQaiQADwtBqX4gAEHAnQIQiQNB450CQeqdAkGBChCYCgAL5hQCB38DfCMAQfABayIEJAAgBEG4AWoQpwYhCQJ/IANBf0cEQCAJIAEoAghB/x9xIANHDQEaCyACCyEAIAFBwAFqIQUCQAJAIAEoAlAEQCABQUBrIQMgASsDyAEhCwJAAkACQAJAIAErA8ABRAAAAAAAAAAAYg0AIAtEAAAAAAAAAABiDQAgASsD0AFEAAAAAAAAAABiDQAgASsD2AFEAAAAAAAAAABhDQIgC0QAAAAAAAAAAGENAQwCCyALRAAAAAAAAAAAYg0BCyABKwPQAUQAAAAAAAAAAGINACABKwPYAUQAAAAAAAAAAGENAQsgASsDuAEhCwJAIAErA7ABIgxEAAAAAAAA8D9hBEAgC0QAAAAAAADwP2EEQCAEQgA3AxAgBEGAgIQINgIIIAQgAUEIajYCDCAEQgA3A7ABIAQgAzYCrAEgBEGAgIQINgKoASAEIAA2ApwBIARBgICEEDYCmAEgBEIANwOgASAEQQhqIARBqAFqIARBmAFqQdTWChDbBQwCCyALRAAAAAAAAPC/YQRAIARCADcDECAEQYCAhAg2AgggBCABQQhqNgIMIARCADcDsAEgBCADNgKsASAEQYCAhAg2AqgBIAQgADYCnAEgBEGAgIQQNgKYASAEQgA3A6ABIARBCGogBEGoAWogBEGYAWpB1NYKEN0FDAILIARCADcDECAEIAM2AgwgBEGAgIQINgIIIARCADcDsAEgBCABQQhqNgKsASAEQYCAhAg2AqgBIAQgADYCnAEgBEGAgIQQNgKYASAEQgA3A6ABIARBCGogCyAEQagBaiAEQZgBahCDBgwBCyALRAAAAAAAAPA/YQRAIAxEAAAAAAAA8L9hBEAgBEIANwMQIAQgAzYCDCAEQYCAhAg2AgggBEIANwOwASAEIAFBCGo2AqwBIARBgICECDYCqAEgBCAANgKcASAEQYCAhBA2ApgBIARCADcDoAEgBEEIaiAEQagBaiAEQZgBakHU1goQ3QUMAgsgBEIANwMQIARBgICECDYCCCAEIAFBCGo2AgwgBEIANwOwASAEIAM2AqwBIARBgICECDYCqAEgBCAANgKcASAEQYCAhBA2ApgBIARCADcDoAEgBEEIaiAMIARBqAFqIARBmAFqEIMGDAELIARCADcDECAEQYCAhAg2AgggBCABQQhqNgIMIARCADcDsAEgBCADNgKsASAEQYCAhAg2AqgBIAQgADYCnAEgBEGAgIQQNgKYASAEQgA3A6ABIARBCGogDCAEQagBaiALRAAAAAAAAAAAIARBmAFqQX8Q4gULAkAgASsDyAFEAAAAAAAAAABiDQAgASsD0AFEAAAAAAAAAABiDQAgASsD2AFEAAAAAAAAAABhDQMLIARCADcDECAEIAA2AgwgBEGAgIQINgIIIARCgYCAgMAANwOwASAEIAU2AqwBIARBhoCI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ASADIAErA8ABOQPAASADIAErA8gBOQPIASADIAErA9ABOQPQASADIAErA9gBOQPYASADIAMrA7ABIAKiOQOwAQ8LIAMgASACIAMQ8gYL+wICCX8BfCMAQdACayIAJAACQAJAIAIoAgRBL0cNACACKAJQBEAgAisDuAFEAAAAAAAAAABiDQELIAAQpwYhBCACKwOwASENIABBOGoQpwYhBSAAQQA2AnQgAEHozgo2AnAgAEH4AGogAkEIahCtBiECIABBsAFqIAQQrQYhBiAAQegBaiAFEK0GIQcgAEGoAmoiCEIANwMAIABBsAJqIglCADcDACAAQbgCaiIKQgA3AwAgAEHAAmoiC0IANwMAIABByAJqIgxCADcDACAAIAEgDaM5A6ACIAMgACkDcDcDACADQQhqIAIQuQYaIANBQGsgBhC5BhogA0H4AGogBxC5BhogAyAIKQMANwO4ASADIAApA6ACNwOwASADIAkrAwA5A8ABIAMgCisDADkDyAEgAyALKwMAOQPQASADIAwrAwA5A9gBIAcQsQYaIAYQsQYaIAIQsQYaIAUQsQYaIAQQsQYaDAELIAAgASACIAMQ9AYLIABB0AJqJAAL2wECAn8BfCMAQeAAayIEJAAgBEEoahCnBiEFAn8gA0F/RwRAIAUgASgCCEH/H3EgA0cNARoLIAILIQAgBEIANwMgIARBgICECDYCGCAEIAFBCGo2AhwgBEGAgIQQNgIIIARCADcDECAEIAA2AgwgBEEYaiAEQQhqELQHIAAoAhAgAigCEEZBACABKwOwASIGRAAAAAAAAPA/YRtFBEAgBCACNgIcIARBgICEEDYCGCAEQgA3AyAgACAEQRhqIAMgBkQAAAAAAAAAABCIAwsgBRCxBhogBEHgAGokAAuMAQAgAyABKQMANwMAIANBCGogAUEIahCzBiADQUBrIAFBQGsQswYgA0H4AGogAUH4AGoQswYgAyABKQO4ATcDuAEgAyABKQOwATcDsAEgAyABKwPAATkDwAEgAyABKwPIATkDyAEgAyABKwPQATkD0AEgAyABKwPYATkD2AEgAyADKwOwASACojkDsAEL5AICCX8BfCMAQdACayIAJAAgAUEIaiEDAkAgASsDsAFEAAAAAAAA8D9hBEAgAiADEJIHDAELIAAQpwYhBCABKwOwASEMIABBOGoQpwYhASAAQQA2AnQgAEHozgo2AnAgAEH4AGogAxCtBiEDIABBsAFqIAQQrQYhBSAAQegBaiABEK0GIQYgAEGoAmoiB0IANwMAIABBsAJqIghCADcDACAAQbgCaiIJQgA3AwAgAEHAAmoiCkIANwMAIABByAJqIgtCADcDACAAIAw5A6ACIAIgACkDcDcDACACQQhqIAMQuQYaIAJBQGsgBRC5BhogAkH4AGogBhC5BhogAiAHKQMANwO4ASACIAApA6ACNwOwASACIAgrAwA5A8ABIAIgCSsDADkDyAEgAiAKKwMAOQPQASACIAsrAwA5A9gBIAYQsQYaIAUQsQYaIAMQsQYaIAEQsQYaIAQQsQYaCyAAQdACaiQAC7wCAQp/IwBB0AJrIgIkACACQThqEKcGIQMgAhCnBiEEIAJBADYCdCACQeTOCjYCcCACQfgAaiABEK0GIQEgAkGwAWogAxCtBiEFIAJB6AFqIAQQrQYhBiACQagCaiIHQgA3AwAgAkGwAmoiCEIANwMAIAJBuAJqIglCADcDACACQcACaiIKQgA3AwAgAkHIAmoiC0IANwMAIAJCgICAgICAgPg/NwOgAiAAIAIpA3A3AwAgAEEIaiABELkGGiAAQUBrIAUQuQYaIABB+ABqIAYQuQYaIAAgBykDADcDuAEgACACKQOgAjcDsAEgACAIKwMAOQPAASAAIAkrAwA5A8gBIAAgCisDADkD0AEgACALKwMAOQPYASAGELEGGiAFELEGGiABELEGGiAEELEGGiADELEGGiACQdACaiQAC6cCAgJ/AnwjAEGAAWsiBCQAIARByABqEKcGIQUCfyADQX9HBEAgBSABKAIIQf8fcSADRw0BGgsgAgshACAEQgA3A0AgBEGAgIQINgI4IAQgAUEIajYCPCAEQgA3AzAgBCABQUBrNgIsIARBgICECDYCKCABKwOwASEGIARCADcDICAEIAFB+ABqNgIcIARBgICECDYCGCABKwO4ASEHIARBgICEEDYCCCAEQgA3AxAgBCAANgIMIARBOGogBEEoaiAGIARBGGogByAEQQhqIAEoAgQQggYgACgCECACKAIQRwRAIAQgAjYCPCAEQYCAhBA2AjggBEIANwNAIAAgBEE4aiADRAAAAAAAAPA/RAAAAAAAAAAAEIgDCyAFELEGGiAEQYABaiQAC4kIAgV/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BEH4AGogAUEIahCtBiEBIARBuAFqIgYgCjkDACAEQcgBaiIAQgA3AwAgBEHQAWoiB0IANwMAIARB2AFqIghCADcDACAEQgA3A8ABIAQgCZo5A7ABIAMgBCkDADcDACADQQhqIAUQuQYaIANBQGsgAhC5BhogA0H4AGogARC5BhogAyAGKQMANwO4ASADIAQpA7ABNwOwASADIAQrA8ABOQPAASADIAArAwA5A8gBIAMgBysDADkD0AEgAyAIKwMAOQPYASABELEGGiACELEGGiAFELEGGgwBCyAAIAVGBEAgBSABIAIgAxDvBgwBCyAFIAEgAiADIAUoAgAoAjwRBgALIARB4AFqJAALngEAIAMgASkDADcDACADQQhqIAFBCGoQswYgA0FAayABQUBrELMGIANB+ABqIAFB+ABqELMGIANBuAFqIgAgASkDuAE3AwAgAyABKQOwATcDsAEgAyABKwPAATkDwAEgAyABKwPIATkDyAEgAyABKwPQATkD0AEgAyABKwPYATkD2AEgAyADKwOwASACojkDsAEgACAAKwMAIAKiOQMAC64BAQF/IAIgASkDADcDACACQQhqIgAgAUEIahCzBiACQUBrIgMgAUFAaxCzBiACQfgAaiABQfgAahCzBiACIAEpA7gBNwO4ASACIAEpA7ABNwOwASACIAErA8ABOQPAASACIAErA8gBOQPIASACIAErA9ABOQPQASACIAErA9gBOQPYASACIAEoAgQiAUEBdEECcSABQQRxciABQQF2QQFxckEHczYCBCAAIAMQrgcLzwEBAn8jAEHgAGsiBCQAIARBKGoQpwYhBQJ/IANBf0cEQCAFIAEoAghB/x9xIANHDQEaCyACCyEAIARCADcDICAEQYCAhAg2AhggBCABQQhqNgIcIARBgICEEDYCCCAEQgA3AxAgBCAANgIMIARBGGogBEEIaiABKAIEEKsEIAAoAhAgAigCEEcEQCAEIAI2AhwgBEGAgIQQNgIYIARCADcDICAAIARBGGogA0QAAAAAAADwP0QAAAAAAAAAABCIAwsgBRCxBhogBEHgAGokAAuMAwEGfyMAQaACayIEJAAgAigCACEFAkACQCABKAIAQfTOCkcNACAFQeTOCkcNACABKAIEIQAgBEEIahCnBiEFIAQgADYCRCAEQfzOCjYCQCAEQcgAaiABQQhqEK0GIQEgBEGAAWogAkEIahCtBiECIARBuAFqIAUQrQYhACAEQfgBaiIGQoCAgICAgID4PzcDACAEQYgCaiIHQgA3AwAgBEGQAmoiCEIANwMAIARBmAJqIglCADcDACAEQgA3A4ACIARCgICAgICAgPg/NwPwASADIAQpA0A3AwAgA0EIaiABELkGGiADQUBrIAIQuQYaIANB+ABqIAAQuQYaIAMgBikDADcDuAEgAyAEKQPwATcDsAEgAyAEKwOAAjkDwAEgAyAHKwMAOQPIASADIAgrAwA5A9ABIAMgCSsDADkD2AEgABCxBhogAhCxBhogARCxBhogBRCxBhoMAQsgACAFRgRAIAUgASACIAMQ+AYMAQsgBSABIAIgAyAFKAIAKAJcEQYACyAEQaACaiQAC/ABAQJ/IwBB8ABrIgQkACAEQThqEKcGIQUCfyADQX9HBEAgBSABKAIIQf8fcSADRw0BGgsgAgshACAEQgA3AzAgBEGAgIQINgIoIAQgAUEIajYCLCAEQgA3AyAgBCABQUBrNgIcIARBgICECDYCGCAEQYCAhBA2AgggBEIANwMQIAQgADYCDCAEQShqIARBGGogBEEIaiABKAIEELQEGiAAKAIQIAIoAhBHBEAgBCACNgIsIARBgICEEDYCKCAEQgA3AzAgACAEQShqIANEAAAAAAAA8D9EAAAAAAAAAAAQiAMLIAUQsQYaIARB8ABqJAAL3gIDAn8BfgF8IwBBQGoiACQAIAEoAghB/x9xIAMgA0F/RhshAyABKAIwIQQCQCABKAIMIgVBAkwEQCAAIAQpAgBCIIkiBjcDOCAAIAY3AwAgAiAAIAMQtQYMAQsgAiAFIAQgAxCpBgsCQAJAIAEoAgQiA0HJAEcNACABKAIMQQJKDQAgACACNgIsIABBgICEGDYCKCAAQgA3AzAgASsDsAEhByAAQgA3AxggAEIANwMgIABCADcDECAAIAc5AwggAEEoaiAAQQhqELEHDAELAkACQAJAIANBMGsOAgIAAQsgASsDsAEhByAAQgA3AxggAEIANwMgIABCADcDECAAIAc5AwggAiAAQQhqEJgEGgwCC0F+IABBCGpBqp8CEIkDQeOdAkHqnQJBng0QmAoACyAAQgA3AyAgAEIANwMYIABCADcDECAAQgA3AwggAiAAQQhqEJgEGgsgAEFAayQAC5gBAQF/IwBBEGsiAiQAIAEQtwYEQEF7IAJB2qkCEIkDQcepAkHqnQJBGBCYCgALIABCADcDACAAQQhqEKcGGiAAQUBrEKcGGiAAQfgAahCnBhogAEIANwPYASAAQgA3A9ABIABCADcDyAEgAEIANwPAASAAQgA3A7gBIABCADcDsAEgACABRAAAAAAAAPA/EPcGIAJBEGokAAteACAAQgA3AwAgAEEIahCnBhogAEFAaxCnBhogAEH4AGoQpwYaIABCADcD2AEgAEIANwPQASAAQgA3A8gBIABCADcDwAEgAEIANwO4ASAAQgA3A7ABIAAgAiABEPoGC7kDAQt/IwBB0AJrIgQkACAAQgA3AwAgAEEIahCnBiEJIABBQGsQpwYhCiAAQfgAahCnBiELIABCADcD2AEgAEIANwPQASAAQgA3A8gBIABCADcDwAEgAEIANwO4ASAAQgA3A7ABIABBsAFqIQYCQCACEMwHQYCABEYEQCAEIAIoAgQQrQYaDAELIAQgAhDJBwsgBEE4ahCnBiECIARBKjYCdCAEQezOCjYCcCAEKAIQIQUgBEH4AGogARCtBiEBIARBsAFqIAQQrQYhByAEQegBaiACEK0GIQggBEGoAmoiDEQAAAAAAADwP0QAAAAAAAAAACAFGzkDACAEQbgCaiIFQgA3AwAgBEHAAmoiDUIANwMAIARByAJqIg5CADcDACAEQgA3A7ACIAQgAzkDoAIgACAEKQNwNwMAIAkgARC5BhogCiAHELkGGiALIAgQuQYaIAYgDCkDADcDCCAGIAQpA6ACNwMAIAAgBCsDsAI5A8ABIAAgBSsDADkDyAEgACANKwMAOQPQASAAIA4rAwA5A9gBIAgQsQYaIAcQsQYaIAEQsQYaIAIQsQYaIAQQsQYaIARB0AJqJAALigEBAX8jAEEQayIEJAAgAEIANwMAIABBCGoQpwYaIABBQGsQpwYaIABB+ABqEKcGGiAAQgA3A9gBIABCADcD0AEgAEIANwPIASAAQgA3A8ABIABCADcDuAEgAEIANwOwASAEIAE2AgwgBCACNgIIIAQgBCkDCDcDACAAQTAgBCADEKAHIARBEGokAAu2AwIJfwF+IwBBoANrIgQkAAJAQdDWCi0AAEEBcQ0AQdDWChD9GkUNAEEEENUaIgVBjKgCNgIAQczWCiAFNgIAQdDWChCBGwtBzNYKKAIAIQYgBCACKQIAIg03AwggBCANNwOAASAEQYgBaiAEQQhqIANB7t27935BABCwBiECIARByABqEKcGIQMgBEEQahCnBiEFIAQgATYCxAEgBCAGNgLAASAEQcgBaiACEK0GIQEgBEGAAmogAxCtBiEGIARBuAJqIAUQrQYhByAEQfgCaiIIQgA3AwAgBEGAA2oiCUIANwMAIARBiANqIgpCADcDACAEQZADaiILQgA3AwAgBEGYA2oiDEIANwMAIAREAAAAAAAA8D85A/ACIAAgBCkDwAE3AwAgAEEIaiABELkGGiAAQUBrIAYQuQYaIABB+ABqIAcQuQYaIAAgCCkDADcDuAEgACAEKQPwAjcDsAEgACAJKwMAOQPAASAAIAorAwA5A8gBIAAgCysDADkD0AEgACAMKwMAOQPYASAHELEGGiAGELEGGiABELEGGiAFELEGGiADELEGGiACELEGGiAEQaADaiQAC4cBAgF/AX4jAEEQayIDJAAgAEIANwMAIABBCGoQpwYaIABBQGsQpwYaIABB+ABqEKcGGiAAQgA3A9gBIABCADcD0AEgAEIANwPIASAAQgA3A8ABIABCADcDuAEgAEIANwOwASADIAEpAgAiBDcDACADIAQ3AwggAEEwIAMgAhCgByADQRBqJAALigEBAX8jAEEQayIEJAAgAEIANwMAIABBCGoQpwYaIABBQGsQpwYaIABB+ABqEKcGGiAAQgA3A9gBIABCADcD0AEgAEIANwPIASAAQgA3A8ABIABCADcDuAEgAEIANwOwASAEIAE2AgwgBCACNgIIIAQgBCkDCDcDACAAQTEgBCADEKAHIARBEGokAAuHAQIBfwF+IwBBEGsiAyQAIABCADcDACAAQQhqEKcGGiAAQUBrEKcGGiAAQfgAahCnBhogAEIANwPYASAAQgA3A9ABIABCADcDyAEgAEIANwPAASAAQgA3A7gBIABCADcDsAEgAyABKQIAIgQ3AwAgAyAENwMIIABBMSADIAIQoAcgA0EQaiQAC4sBAQF/IwBBEGsiBCQAIABCADcDACAAQQhqEKcGGiAAQUBrEKcGGiAAQfgAahCnBhogAEIANwPYASAAQgA3A9ABIABCADcDyAEgAEIANwPAASAAQgA3A7gBIABCADcDsAEgBCABNgIMIAQgAjYC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AAAAXhu7IRQMCAsgAygCqCEhAgJAAkAgB0EGaw4CAAECCyACIAQQhQq3IRQMCAtBACEBQQAgBEEESA0GGiAEQQRrIQVBACEAA0AgAiAAQQNyai0AAEHg0QJqLQAAIAIgAEECcmotAABB4NECai0AACACIABBAXJqLQAAQeDRAmotAAAgASAAIAJqLQAAQeDRAmotAABqampqIQEgAEEEaiIAIAVMDQALDAULIANB4CBqELcGRQRAIAMvAeAgQf8fcQ0CCyAFQQZGBEAgA0HgIGoQtwZFBEAgA0EIahCnBiEAIANCADcDoCAgA0GAgIQINgKYICADIANBmCFqNgKcICADQgA3A9ggIANBgICECDYC0CAgAyADQeAgajYC1CAgAyAANgLEICADQYCAhBA2AsAgIANCADcDyCAgA0GYIGogA0HQIGogA0HAIGpB1NYKENQFIANCADcDoCAgAyAANgKcICADQYCAhAg2ApggIANBmCBqIAdB1NYKEIcIIRQgABCxBhoMCAtBACEAIANBADYCnCAgAyADQZghajYCmCAgA0EANgLQICADQQhqIANBmCBqIANB0CBqQX8QrAciAigCEEUNB0EBQQIgB0EGRhshBCACKAIUIQVBACEBA0AgAygC0CAgBSAEEIUIIABqIQAgAhCtByABQQFqIgEgAigCEEkNAAsgALchFAwHCyAHQQR0QeAAcUEFIAogCkEHRhtBAnRyQdDbAmooAgAiDUUNAiADQQA2AtggIAMgA0HgIGo2AtQgIAMgA0GYIWo2AtAgIANCADcDwCAgA0IANwO4ICADQZggaiADQdAgaiADQcAgakF/EKwHIggoAhQiAUH/////B08NAwJAAkAgB0ECRiAKQQRJcUUEQCAFQQRGIApBAklxRQ0BCyADKAKcISIAQQFOBEAgAygCxCEgAEECdGpBBGsoAgAhDgsgA0EANgIIQYCAgARBgIACIApBAkkbQYCAAiAHQQJGGyAJbiELIAgoAhBFDQEgCyABIAEgC0obIQJBACEFA0AgDEEBaiEMIAFBAU4EQEEAIQQgAygCxCAhBiADKALAICEPA0AgDyAGIANBCGogAiABIARrIgAgACACShsiACAJIA0RCQAaAkAgCyAAIAVqIgUgAmpKBEAgACAEaiABSA0BIAwgCCgCEEkNAQsgAygCCCEGQQAhBSAD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DAELIAAoAgQhByAAKAIAIQggBSAAKAALNgALIAUgACgCCDYCCCAAQgA3AgQgAC0ADyEJIABBADYCDCAAKAIUIQogACgCECELIABCADcCECAAQQRqIQQgBgRAIAAgAigCADYCACAEIAIoAgw2AgggBCACKQIENwIAIAJBADoADyACQQA6AAQgAigCFCEDIAIoAhAhASACQgA3AhAgACABNgIQIAAoAhQhASAAIAM2AhQCQCABRQ0AIAEgASgCBCIAQQFrNgIEIAANACABIAEoAgAoAggRAQAgARDQGgsgAiAINgIAIAIsAA9Bf0wEQCACKAIEEKIbCyACIAc2AgQgAiAFKAIINgIIIAIgBSgACzYACyACIAs2AhAgAiAJOgAPIAIoAhQhASACIAo2AhQCQCABRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgtBAQwCCyAAIAEoAgA2AgAgBCABKAIMNgIIIAQgASkCBDcCACABQQA6AA8gAUEAOgAEIAEoAhQhBiABKAIQIQQgAUIANwIQIAAgBDYCECAAKAIUIQQgACAGNgIUAkAgBEUNACAEIAQoAgQiAEEBazYCBCAADQAgBCAEKAIAKAIIEQEAIAQQ0BoLIAFBBGohBiABIAg2AgAgASwAD0F/TARAIAYoAgAQohsLIAEgBzYCBCABQQhqIgcgBSgCCDYCACABIAUoAAs2AAsgASALNgIQIAEgCToADyABKAIUIQAgASAKNgIUAkAgAEUNACAAIAAoAgQiBEEBazYCBCAEDQAgACAAKAIAKAIIEQEAIAAQ0BoLQQEgAiABIAMoAgARAwBFDQEaIAEoAgQhAyABKAIAIQQgBSAHKAIANgIIIAUgBygAAzYACyABLQAPIQcgBkIANwIAIAZBCGoiAEEANgIAIAEoAhQhCCABKAIQIQkgAUIANwIQIAEgAigCADYCACAAIAIoAgw2AgAgBiACKQIENwIAIAJBADoADyACQQA6AAQgAigCFCEGIAIoAhAhACACQgA3AhAgASAANgIQIAEoAhQhACABIAY2AhQCQCAARQ0AIAAgACgCBCIBQQFrNgIEIAENACAAIAAoAgAoAggRAQAgABDQGgsgAiAENgIAIAIsAA9Bf0wEQCACKAIEEKIbCyACIAM2AgQgAiAFKAIINgIIIAIgBSgA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QCABKAIIEKIbCyABEKIbIAIiAQ0ACwsgACgCiAIhASAAQQA2AogCIAEEQCABEKIbCyAAKAL4ASIBBEAgACABNgL8ASABEKIbCyAAKALsASIBBEAgACABNgLwASABEKIbCyAAKALgASIEBEACfyAEIAQgACgC5AEiAUYNABoDQCABIgJBCGshAQJAIAJBBGsoAgAiAkUNACACIAIoAgQiA0EBazYCBCADDQAgAiACKAIAKAIIEQEAIAIQ0BoLIAEgBEcNAAsgACgC4AELIQEgACAENgLkASABEKIbCyAAKALUASIBBEAgACABNgLYASABEKIbCyAAKAK4ASIBBEAgACABNgK8ASABEKIbCyAAKAKsASIBBEAgACABNgKwASABEKIbCwJAIAAoAqABIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoApgBIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoApABIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQfQAaiIDEO0IAkAgACgCeCIBIAAoAnwiAkYNAANAIAEoAgAQohsgAUEEaiIBIAJHDQALIAAoAnwiASAAKAJ4IgJGDQAgACABIAEgAmtBBGtBAnZBf3NBAnRqNgJ8CyADKAIAIgEEQCABEKIbCyAAKAJkIgEEQCAAIAE2AmggARCiGwsgAEHMAGoiAxDuCAJAIAAoAlAiASAAKAJUIgJGDQADQCABKAIAEKIbIAFBBGoiASACRw0ACyAAKAJUIgEgACgCUCICRg0AIAAgASABIAJrQQRrQQJ2QX9zQQJ0ajYCVAsgAygCACIBBEAgARCiGwsgACwAE0F/TARAIAAoAggQohsLIAAL0gQBB38jAEEQayIDJAACQAJAIAAtACRFDQACQCABRQ0AIAEsAAtBf0wEQCABKAIAQQA6AAAgAUEANgIEDAELIAFBADoACyABQQA6AAALAkAgAC0AJkUNACAAKAJgQQJPBEADQCAAEO8IIAAoAmBBAUsNAAsLIAAgACgCACgCOBEAABoCQAJAIAAoAihBCGsOEQACAgICAgICAgICAgICAgIBAgsgAEHU6AIgACgCACgCDBECAAwBCyAAQefo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ICADQgA3ABggA0IANwAQIANCADcACCADQgA3AAAgAEEcaiIFQQA2AgAgAEIANwIUIAAgBzYCDCAAQcEAENUaIgQ2AhQgBSAEQcEAaiIFNgIAIARBAEHBABCvGxogACAHNgIoIAAgAzYCICAAIAU2AhggACADNgIkIAEtACYEQCACBEAgASABKAIAKAI4EQAAGgsgBkEQaiQADwtBqX4gBkHBgwMQiQNB3IMDQbyCA0EcEJgKAAuBAgEEfyMAQeAAayIDJAACQCAAKAIgIgEgACgCFCAAKAIkIAFrEMUJRQ0AIAAgACgCIDYCJCAALQAERQRAIAAoAgAiASAAKAIUIAEoAgAoAgwRAgAMAQsgA0EKOwFeIANBICAAKAIAIgEoAlAgASgCYCABKAJcakEBayIEQcwBbiICQQJ0aigCACAEIAJBzAFsa0EUbGooAhAiBBCvGyICIARqQQA6AAAgASACIAEoAgAoAgwRAgAgACgCACIBIAAoAhQgASgCACgCDBECACAAKAIAIgEgAkHeAGogASgCACgCDBECACAAKAIAIgAgACgCACgCOBEAABoLIANB4ABqJAALZwECfyAAKAIAIgEEQCABKAIkIAEoAiBHBEAgARDICQsgASgCFCICBEAgASACNgIYIAIQohsLIAEoAggiAgRAIAEgAjYCDCACEKIbCyABEKIbCyAALAAPQX9MBEAgACgCBBCiGwsgAAvUAgEDfyAAQSBqIgIgARDfGiAAQQA2AiwgACgCMCIBQQhxBEACQCACLAALIgNBf0wEQCAAKAIgIgMgACgCJGohBAwBCyACIANB/wFxaiEEIAIhAwsgACAENgIQIAAgAzYCDCAAIAM2AgggACAENgIsCwJAIAFBEHFFDQAgAgJ/IAIsAAsiAUEATgRAIAAgAiABQf8BcSIBajYCLEEKDAELIAAgACgCJCIBIAAoAiBqNgIsIAAoAihB/////wdxQQFrCxDiGgJ/IAIsAAsiA0F/TARAIAAoAiAhAiAAKAIkDAELIANB/wFxCyEDIAAgAjYCFCAAIAI2AhggACACIANqNgIcIAAtADBBA3FFDQACQCABQX9MBEAgAkECayACQf////8HaiABQf////8HayIBQQBIIgMbIQJBASABIAMbIQEMAQsgAUUNAQsgACABIAJqNgIYCws6AQF/QRQQ1RoiAkIA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EIkDQdSzA0HusQNBuQUQmAoACyAMQRBqJAAL3AEBA38gAkEESAR/QQAFIAJBBGshBQNAIAQgASADai0AACAAIANqLQAAc0HgzwJqLQAAaiABIANBAXIiBGotAAAgACAEai0AAHNB4M8Cai0AAGogASADQQJyIgRqLQAAIAAgBGotAABzQeDPAmotAABqIAEgA0EDciIEai0AACAAIARqLQAAc0HgzwJqLQAAaiEEIANBBGoiAyAFTA0ACyACQXxxCyIDIAJIBEADQCAEIAEgA2otAAAgACADai0AAHNB4M8Cai0AAGohBCADQQFqIgMgAkcNAAsLIAQLqQEBA38gAUEESAR/QQAFIAFBBGshBANAIAAgAkEDcmotAABB4M8Cai0AACAAIAJBAnJqLQAAQeDPAmotAAAgACACQQFyai0AAEHgzwJqLQAAIAMgACACai0AAEHgzwJqLQAAampqaiEDIAJBBGoiAiAETA0ACyABQXxxCyICIAFIBEADQCADIAAgAmotAABB4M8Cai0AAGohAyACQQFqIgIgAUcNAAsLIAML0wgBCn8CQAJAAkAgAUUEQAJAAkACQCAEQQRvIgFBAWsOAwABAgYLIAIoAgAhByADQQRIBEAgACEFDAULIANBBGshCCAEQQJ0IQkgBEEDbCELIARBAXQhCiAAIQUDQCAFIAtqLQAAIAUgCmotAAAgBCAFai0AACAHIAUtAABqampqIQcgBSAJaiEFIAZBBGoiBiAITA0ACwwDCyACKAIEIQcgAigCACEIIANBAU4EQCAAIQUDQCAHIAUtAAFqIQcgCCAFLQAAaiEIIAQgBWohBSAGQQFqIgYgA0cNAAsgAyEGCyACIAc2AgQgAiAINgIADAQLIAIoAgghByACKAIEIQggAigCACEJIANBAU4EQCAAIQUDQCAHIAUtAAJqIQcgCCAFLQABaiEIIAkgBS0AAGohCSAEIAVqIQUgBkEBaiIGIANHDQALIAMhBgsgAiAHNgIIIAIgCDYCBCACIAk2AgAMAwsCQAJAAkACQCAEQQFrDgMBAAIACyADQQFODQJBAA8LIAIoAgAhBiADQQFOBEADQCABIAVqLQAABEAgB0EBaiEHIAYgACAFai0AAGohBgsgBUEBaiIFIANHDQALCyACIAY2AgAgBw8LIAIoAgghBiACKAIEIQcgAigCACEI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KAIAIAFB6ABqIAItAAsiBEEYdEEYdUEASCIFGyACKAIEIAQgBRsQzAMaIAIsAAtBf0wEQCACKAIAEKIbCwJ/IAMsAAsiAkF/TARAIAAoAhghAiAAKAIUDAELIAJB/wFxIQIgAwshBCACIARqQQFrLQAAQQpHBEAgAUHoAGogBiABKAKAAUEMaygCAGoQphYgAUHoAGpBvJgLELkXIgJBCiACKAIAKAIcEQMAIQIgAUHoAGoQtBcgBiACENQWIAYQpRYLIAFB6ABqIAkQ0QMgAywAC0F/TARAIAMoAgAQohsLIAMgASkDaDcCACADIAEoAnA2AgggAUH8yAE2ArgBIAFB1MgBNgJ4IAFBlMsBNgKEASABQejIATYCgAEgASwArwFBf0wEQCABKAKkARCiGwsgChCIFhogAUG4AWoQhBYaCwJAAn8gACwAKyICQX9MBEAgACgCJAwBCyACQf8BcQsEQCAAQSBqIQIgCEF/RwRAIABBLGohBCAALAA3QX9MBEAgBCgCACEECyAAKAI4IQUgACgCECIHEJMKIQYgACwAK0F/TARAIAIoAgAhAgsgASADLAALQX9MBH8gAygCAAUgAws2AlggASACNgJUIAEgBjYCUCABIAc2AkwgASAFNgJIIAEgBDYCRCABQfC0AzYCQCABQfgAakG7tAMgAUFAaxCUCiAAQQRqIQIgACwAD0F/TARAIAIoAgAQohsLIAIgASkDeDcCACACIAEoAoABNgIIDAILIABBLGohBCAALAA3QX9MBEAgBCgCACEECyAAKAI4IQUgACgCECIHEJMKIQYgACwAH0F/TARAIAMoAgAhAwsgASACLAALQX9MBH8gAigCAAUgAgs2AjggASADNgI0IAEgBjYCMCABIAc2AiwgASAFNgIoIAEgBDYCJCABQfC0AzYCICABQfgAakH6tAMgAUEgahCUCiAAQQRqIQIgACwAD0F/TARAIAIoAgAQohsLIAIgASkDeDcCACACIAEoAoABNgIIDAELIABBLGohAiAALAA3QX9MBEAgAigCACECCyAAKAI4IQQgACgCECIFEJMKIQcgASAALAAfQX9MBH8gAygCAAUgAws2AhQgASAHNgIQIAFB17UDQda1AyAIQX9GGzYCGCABIAU2AgwgASAENgIIIAEgAjYCBCABQfC0AzYCACABQfgAakGwtQMg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IAdB24IEEIkDQf2CBEG5ggRB+QMQmAoAC0GpfiAHQYWDBBCJA0H9ggRBuYIEQZQEEJgKAAtBrX4gB0GMgwQQiQNB/YIEQbmCBEGeBBCYCgALsAIBBX8gACABKAIANgIAIAAgASgCBDYCBCAAIAEoAgg2AgggACABKAIMNgIMIAAgASgCEDYCECAAIAEoAhQ2AhQgACABKAIYIgI2AhggASgCHCEDIAAgAEEoaiIENgIkIAAgAEEIajYCICAAIAM2AhwgBEIANwIAIAIEQCACIAIoAghBAWo2AggLIAEoAgRBAkwEQCAAKAIkIgIgASgCJCIBKAIANgIAIAIgASgCBDYCBCAADwtBACECIABBADYCBCAAIAEoAgRBAEEAQQAQzAogACgCBEEBTgRAIAAoAiQhAyABKAIkIQQgACgCICEFIAEoAiAhBgNAIAUgAkECdCIBaiABIAZqKAIANgIAIAEgA2ogASAEaigCADYCACACQQFqIgIgACgCBEgNAAsLIAALuQMBBn8gACABRwRAIAEoAhgiAgRAIAIgAigCCEEBajYCCAsCQCAAKAIYIgJFDQAgAiACKAIIIgNBAWs2AgggA0EBRw0AIAAoAhghAiAAQQA2AhggAigCBCIDIAIgAygCACgCEBECAAsCQAJAAkAgACgCBEEATARAIABBADYCGCAAIAEoAgA2AgAMAQsgACgCICEDQQAhAgNAIAMgAkECdGpBADYCACACQQFqIgIgACgCBCIESA0ACyAAQQA2AhggACABKAIANgIAIARBA0gNACABKAIEIQIMAQsgASgCBCICQQJKDQAgACACNgIEIAAgASgCCDYCCCAAIAEoAgw2AgwgACgCJCICIAEoAiQiAygCADYCACACIAMoAgQ2AgQMAQtBACEDIAAgAkEAQQBBABDMCiAAKAIEQQFIDQAgACgCJCEEIAEoAiQhBSAAKAIgIQYgASgCICEHA0AgBiADQQJ0IgJqIAIgB2ooAgA2AgAgAiAEaiACIAVqKAIANgIAIANBAWoiAyAAKAIESA0ACwsgACABKAIQNgIQIAAgASgCFDYCFCAAIAEoAhg2AhggACABKAIcNgIcCwuFAQECfwJAIAAoAhgiAUUNACABIAEoAggiAkEBazYCCCACQQFHDQAgACgCGCEBIABBADYCGCABKAIEIgIgASACKAIAKAIQ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ASADKAIYNgIYIANBCGogARDwCiABQQxqIQYgASgCDCIFBEACfyAFIAUgASgCECIERg0AGgNAIARBDGshAiAEQQFrLAAAQX9MBEAgAigCABCiGwsgAiEEIAIgBUcNAAsgBigCAAshAiABIAU2AhAgAhCiGwsgASADKAIINgIMIAEgAygCDDYCECABIAMoAhA2AhQgACAGIAFBHGoiAhDxCiADLQAcBEAgACABKAIYIAIQ8goLIAEoAhgiBCAAKAIEIAAoAgAiAmtBDG1JBEAgASACIARBDGxqNgIoIAEtACwEQCAAIAEQ8woLIANBIGokAA8LENoaAAv1AQEBfyAAKAKIASICIAEQ3xogAhDgCiACKAJEIAIoAkhGGgJAIAAoAogBIgEoAkQgASgCSEcNACAAKAKIARDjCiEBIAAoAhwgASgCDDYCBCAAKAKIARDlCiICKAIAIgEgAigCBCICRwRAA0AgACABIAEoAgxBAhDtCiABQRRqIgEgAkcNAAsLIAAoAogBQThqIgIoAgAiASACKAIEIgJHBEADQCAAIAEgASgCDEEDEO0KIAFBFGoiASACRw0ACwsgACgCiAEQ5AoiAigCACIBIAIoAgQiAkYNAANAIAAgASABKAIMEO4KIAFBFGoiASACRw0ACwsL8QEBAn8jAEEwayIEJAAgABDTGiAEQQhqIAEQ2xohASAEQQA2AiggBEIANwMgIARBAToAHCAEQgA3AhQgBCAAQSBqIgUgARD2CiIBNgIUIAEgACgCMCAAKAIsIgBrQQN1SQRAIAQgACABQQN0aiIBNgIYAkACfyAELQAcBEAgBSAEQQhqEPcKIAQoAhghAQsgAyABKAIERgsEQCABKAIAIAJGDQELIAEgAjYCACABIAM2AgQgBEEIahD4CgsgBCgCICIBBEAgBCABNgIkIAEQohsLIAQsABNBf0wEQCAEKAIIEKIbCyAEQTBqJAAPCxDaGgALsQIBAX8jAEFAaiIDJAAgABDTGiADIAEQ2xoaIANBADYCOCADQgA3AhQgA0IANwIcIANCADcCJCADQQA6ACwgA0IANwMwIANCADcCDCAAQSBqIAMQ6woCQCADKAIoIgEoAghBAUYEQCABKAIEIAJGDQELIAEgAjYCBCABQQE2AgggASgCACIBRQ0AIAEgAjYCBAsgAygCMCIBBEAgAyABNgI0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ESAtayIBNgJAIAggCTYCPCAIIAI2AjggCCABNgI0IAhBACAJayILNgIwIBUgEWshGCAgQQFqISkgIyASIB9saiEUQQAhHQNAIBsgCyASaiITIBdsaiEFICMgEyAfbGohCQJAIBwEQCABIAJKDQFBACALayEQA0ACQCABIAVqIgstAAAEQCABIQsMAQsgBiAJIAFBAnRqKAIAIA5rIgxKBEAgASELDAELIAogDEgEQCABIQsMAQsgCyAAOgAAIAEhAwJAIAUgAUEBayILaiIMLQAADQAgCSALQQJ0aigCACAOayIHIAZIDQAgByAKSg0AA0AgDCAAOgAAIAUgCyIDQQFrIgtqIgwtAAANASAJIAtBAnRqKAIAIA5rIgcgBkgNASAHIApMDQALCwJAIAUgAUEBaiILaiIMLQAADQAgCSALQQJ0aigCACAOayIHIAZIDQAgByAKSg0AA0AgDCAAOgAAIAUgCyIBQQFqIgtqIgwtAAANASAJIAtBAnRqKAIAIA5rIgcgBkgNASAHIApMDQALCyANIBA7AQogDSAVOwEIIA0gETsBBiANIAE7AQQgDSADOwECIA0gEzsBACANQQxqIg0gGUcNAAJAIAgoAsQCIgwgCCgCwAIiAWtBDG0iDUEDbEEBdiIHIA1LBEAgCEHAAmogByANaxCGCyAIKALEAiEMIAgoAsACIQEMAQsgByANTw0AIAggASAHQQxsaiIMNgLEAgsgASAZIB5rQQxtQQxsaiENIAwhGSABIR4LIAtBAWohASACIAtKDQALDAELICRFBEAgASACSg0BQQAgC2shGgNAAkAgASAFaiILLQAABEAgASELDAELIAYgCSABQQJ0IgxqKAIAIAwgFGooAgBrIgxKBEAgASELDAELIAogDEgEQCABIQsMAQsgCyAAOgAAIAEhDAJAIAUgAUEBayILaiIHLQAADQADQCAJIAtBAnRqKAIAIAkgDEECdGooAgBrIgMgBkgNASADIApKDQEgByAAOgAAIAshDCAFIAtBAWsiC2oiBy0AAEUNAAsLAkAgBSABQQFqIgtqIgctAAANAANAAkAgBiAJIAtBAnQiEGooAgAiDyAJIAFBAnRqKAIAayIDTEEAIAMgCkwbDQAgBiAPIBAgFGooAgBrIgNKDQIgASAVTg0CIAMgCkwNAAwCCyAHIAA6AAAgBSALIgFB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IgRFDQAgBC0ADA0AIARBDGohBAwCCwJAIAEgAygCAEYEQCADIQQMAQsgAyADKAIEIgQoAgAiATYCBCAEIAEEfyABIAM2AgggAygCCAUgAgs2AgggAygCCCICIAIoAgAgA0dBAnRqIAQ2AgAgBCADNgIAIAMgBDYCCCAEKAIIIQILIARBAToADCACQQA6AAwgAiACKAIAIgMoAgQiBDYCACAEBEAgBCACNgIICyADIAIoAgg2AgggAigCCCIEIAQoAgAgAkdBAnRqIAM2AgAgAyACNgIEIAIgAzYCCA8LAkAgBEUNACAELQAMDQAgBEEMaiEEDAELAkAgASADKAIARwRAIAMhAQwBCyADIAEoAgQiBDYCACABIAQEfyAEIAM2AgggAygCCAUgAgs2AgggAygCCCICIAIoAgAgA0dBAnRqIAE2AgAgASADNgIEIAMgATYCCCABKAIIIQILIAFBAToADCACQQA6AAwgAiACKAIEIgMoAgAiBDYCBCAEBEAgBCACNgIICyADIAIoAgg2AgggAigCCCIEIAQoAgAgAkdBAnRqIAM2AgAgAyACNgIAIAIgAzYCCAwCCyADQQE6AAwgAiAAIAJGOgAMIARBAToAACACIQEgACACRw0ACwsLSgEBf0EgENUaIgFCADcCBCABQpCAgIAQNwIYIAFChICAgIABNwIQIAFB7JIENgIAIAFB4JMENgIMIAAgATYCBCAAIAFBDGo2AgALkwIBBH8jAEHQAGsiAyQAIANBmJgELQAAOgAsIANBlJgEKAAANgIoIAMgA0EoajYCJEEBIQQgAyACKAIIQQFHBH8gASgCEEUFIAQLOgAjIANBADoAIiACKAIAIQVBsAEQ1RoiBEIANwIEIARB0JQENgIAIANBOGoiBiACNgIAIAMgAUEMaiABQQhqIAVBB3FBBkYbIgI2AkggAyACNgIYIAMgA0EkajYCPCADIAYpAwA3AwggAyADQSJqNgJEIANBQGsiAiADQSNqNgIAIAMgAikDADcDECADQcaUBDYCNCADQcSUBDYCMCADIAMpAzA3AwAgBEEMaiICIAMQkAsgACAENgIEIAAgAjYCACADQdAAaiQAC/4CAQV/IwBB4ABrIgIkAAJAIAEoAgAiBRC4GyIDQXBJBEACQAJAIANBC08EQCADQRBqQXBxIgYQ1RohBCACIAZBgICA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CwsgAwu7AQEEfyABQQRIBH9BAAUgAUEEayEFA0AgAyAAIARBA3QiAmorAwBEAAAAAAAAAABiaiAAIAJBCHJqKwMARAAAAAAAAAAAYmogACACQRByaisDAEQAAAAAAAAAAGJqIAAgAkEYcmorAwBEAAAAAAAAAABiaiEDIARBBGoiBCAFTA0ACyABQXxxCyICIAFIBEADQCADIAAgAkEDdGorAwBEAAAAAAAAAABiaiEDIAJBAWoiAiABRw0ACwsgAwuoAgEFfyMAQfAAayIBJAACQAJAIAAQywdB+B9xRQRAAkAgABDMB0GAgARGBEAgAUE4aiAAKAIEEK0GGgwBCyABQThqIAAQyQcLIAEoAjhBB3EiAEEHRg0BIAFBADYCNCABIAFBOGo2AjAgAUEANgIsIAFBCGogAUEwaiABQSxqQX8QrAciAigCEEUEQEEAIQAMAwsgAEECdEHQogRqKAIAIQQgAigCFCEFQQAhAANAIAEoAiwgBSAEEQMAIABqIQAgAhCtByADQQFqIgMgAigCEEkNAAsMAgtBqX4gAUE4akHwogQQiQNB+KIEQYWjBEGAARCYCgALQal+IAFBCGpBt6MEEIkDQfiiBEGFowRBkAEQmAoACyABQThqELEGGiABQfAAaiQAIAALmgcCEn8EfCMAQfAJayIDJAACQCABEMwHQYCABEYEQCADQbgJaiABKAIEEK0GGgwBCyADQbgJaiABEMkHCwJAIAIQzAdBgIAERgRAIANBgAlqIAIoAgQQrQYaDAELIANBgAlqIAIQyQcLAkACQCADQYAJahC3BkUEQCADLwGACUH/H3ENAQsgAygCuAkhASADQfgIakIANwMAIANB8AhqQgA3AwAgA0HoCGpCADcDACADQgA3A+AIIAFBB3EiAkECdEHwswNqKAIAIQ4gAUEDdkH/A3EiCkEDSw0BIA5FDQEgCkEBaiEPIANBADYC3AggAyADQYAJajYC2AggAyADQbgJajYC1AggA0IANwPICCADQagIaiADQdQIaiADQcgIakF/EKwHIggoAhQhBCADQYgCNgIEIAMgA0EIaiIQNgIAIANB4AhqIQUgBCEGIAJBA00EQCADIA82AgQgEEEAIApBAnRBBGoQrxshAUGAgIAEQYCAAiACQQJJGyIRIAQgBCARShshBiADKAK8CSIFQQFOBEAgAygC5AkgBUECdGpBBGsoAgAhEgsgASEFCwJAIAgoAhBFDQAgAkEDSyETA0AgC0EBaiELIARBAU4EQEEAIQkgAygCzAghAiADKALICCEBA0AgASACIAUgBiAEIAlrIgcgBiAHSBsiByAPIA4RCQAiFCAMaiEMAkAgEw0AIBEgBiAMakoEQCAHIAlqIARIDQEgCyAIKAIQSQ0BC0EAIQxBACECA0AgA0HgCGogAkEDdGoiASABKwMAIAUgAkECdGoiASgCALegOQMAIAFBADYCACACIApHIQEgAkEBaiECIAENAAsLIAMgAygCyAggByASbGoiATYCyAgCQCADKALMCCICRQRAQQAhAgwBCyADIAIgB2oiAjYCzAgLIA0gFGohDSAEIAYgCWoiCUoNAAsLIAgQrQcgCyAIKAIQSQ0ACyANRQ0ARAAAAAAAAPA/IA24oyEVCyADKwPgCCEWIAMrA+gIIRcgAysD8AghGCAAIBUgAysD+AiiOQMYIAAgFSAYojkDECAAIBUgF6I5AwggACAVIBaiOQMAAkAgAygCACICIBBGDQAgAkUNACACEKIbCyADQYAJahCxBhogA0G4CWoQsQYaIANB8AlqJAAPC0GpfiADQcGjBBCJA0HmowRB66MEQf4AEJgKAAtBqX4gA0GTpAQQiQNB5qMEQeujBEGHARCYCgAL/gECAX8BfCMAQbABayICJAAgAkH4AGogAUEBEM0GIAJCADcDCCACQYCAhAg2AgAgAiACQfgAajYCBCACQdgAaiACQdTWChC/CwJAAkAgAUUNACABKAIAQfAARw0AIAEoAkRFDQAgARCBBCIBRQ0AIAFBAWsiAUEETw0BIAJB2ABqIAFBA3RqKwMAIQMgAkIANwNoIAJCADcDcCACQgA3A2AgAiADOQNYCyAAIAIrA1g5AwAgACACKwNgOQMIIAAgAisDaDkDECAAIAIrA3A5AxggAkH4AGoQsQYaIAJBsAFqJAAPC0GpfiACQaikBBCJA0HdpARBvKQEQSwQmAoAC6ADAgR/AXwjAEHgAWsiAyQAIANBqAFqEKcGIQQgA0HwAGoQpwYhBiADQThqIAAgASAAGyIFQQEQzQYgBCADQThqELkGGiADQThqELEGGiABQQAgABshAAJAIAVFDQAgBCgCAEH4H3FFDQAgBSgCAEHwAEcNACAFKAJERQ0AIAUQgQRBAUgNACADIAQ2AjwgA0GAgIQQNgI4IANCADcDQCAFIANBOGoQzgYLAkAgAEUEQCADQgA3A0AgAyAENgI8IANBgICECDYCOCADQThqIAJB1NYKEIcIIQcMAQsgA0E4aiAAQQEQzQYCQCADLwE4QfgfcUUNACAAKAIAQfAARw0AIAAoAkRFDQAgABCBBEEBSA0AIANBgICEEDYCKCADQgA3AzAgAyADQThqNgIsIAAgA0EoahDOBgsgA0IANwMwIAMgBDYCLCADQYCAhAg2AiggA0IANwMgIANBgICECDYCGCADIANBOGo2AhwgA0EoaiADQRhqIAJB1NYKEI0IIQcgA0E4ahCxBhoLIAYQsQYaIAQQsQYaIANB4AFqJAAgBwvpLAIMfxV8IwBB4AtrIgMkACADQYAKakEAQdgBEK8bGiADQoaAiZKECTcD4AkgA0KDgICAkAE3AvQJIANCADcD6AkgAyADQYAKajYC8AkCQCAARQRAQWUhBQwBC0F7IQUgACgCACIEQYCAfHFBgICIkgRHDQAgACgCGCILQQFIDQAgACgCFCIJQQFIDQAgACgCECIHRQ0AAkAgAUUEQEFlIQUMAQsgASgCACIKQYCAfHFBgICIkgRHDQAgASgCGCIMQQFIDQAgASgCFCINQQFIDQAgASgCEEUNAAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIARBB3EiBUEFa0ECSQRAIAQgCnNBB3ENAQJAIAJFDQAgAigCACIGQYCAfHFBgICIkgRHDQMgAigCGCIIQQFIDQMgAigCFCIOQQFIDQMgAigCEEUNAyAEIAZzQQdxIAZB+B9xcg0EIAhBA0ZBACAOQQlGGw0AIAhBCUcNBSAOQQNHDQULQZHEkMICIAVBAnR2QQ9xIQhBASEGAkACQAJAIAtBAUcEQCAJQQFGDQEgC0EDRkEAIAlBA0YbDQJBt34gA0GAA2pBtKgEEIkDQbGlBEHjpARB7QMQmAoACyAJQQJIDQAgACgCBCAIbSEGCyAJIAsgBEEDdkH/A3FBAWpsakEERw0HIApB+B9xDQggDEEDRw0IIA1BA0cNCEEBIQACfCAFQQVGBEAgByAGQQJ0aioCALshESAHKgIAuyESIAcgBkEDdGoqAgC7DAELIAcgBkEDdGorAwAhESAHKwMAIRIgByAGQQR0aisDAAsiECAQoiARIBGiIBIgEqKgoJ8iE0QAAAAAAACwPGNBAXNFBEAgA0HICWpCADcDACADQdAJakIANwMAIANB2AlqQgA3AwAgA0IANwMIIANCADcDECADQgA3AxggA0KAgICAgICA+D83A8AJIANCgICAgICAgPg/NwMAIAEgAxDPBiACRQ0PIANBgApqQQBB2AEQrxsaIANCgICAgICAgPi/fzcD+AogA0KAgICAgICA+L9/NwOYCyADQoCAgICAgID4PzcDqAsgA0KAgICAgICA+L9/NwOoCiADQoCAgICAgID4PzcD2AogA0KAgICAgICA+D83A7gKDA0LRAAAAAAAAPA/IRQgAyARRAAAAAAAAPA/IBOjRAAAAAAAAAAAIBNEAAAAAAAAAABiGyIboiIWIBAgG6IiF6IiEDkDeCADIBIgG6IiFSAXoiIROQNwIAMgEDkDaCADIBUgFqIiEjkDWCADIBE5A1AgAyASOQNIIAMgFSAVoiIcOQNAIAMgFiAWoiIdOQNgIAMgFyAXoiIZOQOAASADQgA3A+ACIAMgFTkD2AIgAyAWmjkD0AIgAyAVmjkDyAIgA0IANwPAAiADIBc5A7gCIAMgFjkDsAIgAyAXmjkDqAIgA0IANwOgAiATEI4VIQ8gAyATEJYVIhpEAAAAAAAAAACiIhMgD0QAAAAAAADwPyAPoSIYIBmioKA5A7gJIAMgGiAVoiIfIA9EAAAAAAAAAACiIhkgGCAQoqAiEKA5A7AJIAMgGSAYIBGioCIRIBogFqIiHqE5A6gJIAMgECAfoTkDoAkgAyATIA8gGCAdoqCgOQOYCSADIBogF6IiECAZIBggEqKgIhKgOQOQCSADIB4gEaA5A4gJIAMgEiAQoTkDgAkgAyATIA8gGCAcoqCgOQP4CCADQgA3A+gGIANCADcD8AYgA0GAB2oiAEIANwMAIANCADcD4AYgA0KDgICAMDcD2AYgA0KGgP2XJDcD0AYgAyAANgL8BiADIANB2AZqNgL4BkEAIQAgA0GAA2pBA0EDQQYgA0H4CGpBABCuBiEEIANBgICEEDYCsAggA0IANwO4CCADIANB0AZqNgK0CCAEIANBsAhqEJYEIAQQsQYaIANBgANqIAFBABDNBiADQYCAhJB8NgKwCCADQgA3A7gIIAMgA0GAA2o2ArQIIANB0AZqIANBsAhqIAEoAgBEAAAAAAAA8D9EAAAAAAAAAAAQiAMgA0GAA2oQsQYaIANB0AZqELEGGiACRQ0NIANB6AhqQgA3AwAgA0HgCGpCADcDACADQdgIakIANwMAIANByAhqQgA3AwAgA0HACGpCADcDACADQdAIakKAgICAgICA+D83AwAgA0IANwO4CCADQoCAgICAgID4PzcD8AggA0KAgICAgICA+D83A7AIIANCADcDqAMgA0IANwPAAyADQgA3A8gDIANCADcDkAQgA0IANwOYBCADQgA3A6ADIAMgFjkDmAMgAyAXOQOQAyADIBY5A4gDIAMgFSAVoCISOQOAAyADQgA3A7gDIAMgFzkDsAMgA0IANwOIBCADIBc5A4AEIANCADcD+AMgAyAXOQPwAyADIBYgFqA5A+gDIAMgFTkD4AMgA0IANwPYAyADIBU5A9ADIANCADcDsAQgAyAVOQOgBCADQgA3A6gEIAMgFyAXoDkD0AQgAyAWOQPIBCADIBU5A8AEIAMgFjkDuAQgA0HQBmpBAEHYARCvGxogA0KAgICAgICA+D83A/gHIANCgICAgICAgPi/fzcD6AcgA0KAgICAgICA+L9/NwPIByADQoCAgICAgID4PzcDqAcgA0KAgICAgICA+D83A4gHIANCgICAgICAgPi/fzcD+AYgGCAboiEQIBUgGpoiGaIhEyAPIBogG6IiEaEiHCAVoiEPIBogGyAYIBigoqEiGCAVoiEVA0AgAEEDdCIBIANBgApqaiATIBSiIBUgA0FAayABaisDAKKgIBAgEqKgIA8gA0GgAmogAWorAwCioCARIANB0AZqIAFqKwMAoqA5AwAgAEEBaiIAQQlGDQIgAEEDdCIBIANBgANqaisDACESIANBsAhqIAFqKwMAIRQMAAsACyADQfgIakEAQcgAEK8bGiADQbAIakEAQcgAEK8bGiADQgA3A8gGIANCADcDwAYgA0IANwO4BkEBIQQCQCANQQFMBEAgDCAKQQN2Qf8DcUEBamxBA0YNAQwQCyABKAIEIAhtIQQgCkH4H3ENDyAMQQFHDQ8gDUEDRw0PCyADQYADaiAAQQAQzQYgA0HwBWogA0GAA2oQwwsgA0GAA2oQsQYaIANCg4CAgDA3A4gDIANBhoCIiHw2AoADIAMgA0HwBWo2AoQDIANBgANqQQFEAAAAAAAAWcBEAAAAAAAAWUAQsQsiAEUEQCABEJ0EIAJFDQsgAhCdBAwLCyADQfAFaiADQbgGaiADQfgIaiADQbAIahDECyADKwPgCCEQIAMrA7AIIREgAysDyAghFCADKwOICSESIAMrA/gIIRMgAysDgAkhDyADKwPoCCEVIAMrA7gIIRYgAysD0AghFyADKwOgCSEYIAMrA5AJIRogAysDmAkhGyADIAMrA8AIIhkgAysDqAkiHKJEAAAAAAAAAACgIAMrA9gIIh0gAysDsAkiH6KgIAMrA/AIIh4gAysDuAkiIKKgIiE5A7AGIAMgGSAaokQAAAAAAAAAAKAgHSAboqAgHiAYoqAiIjkDmAYgAyAWIBqiRAAAAAAAAAAAoCAXIBuioCAVIBiioCIjOQOQBiADIBMgGaJEAAAAAAAAAACgIA8gHaKgIBIgHqKgIhk5A4AGIAMgEyAWokQAAAAAAAAAAKAgDyAXoqAgEiAVoqAiHTkD+AUgAyATIBGiRAAAAAAAAAAAoCAPIBSioCASIBCioCIeOQPwBSADIBEgHKJEAAAAAAAAAACgIBQgH6KgIBAgIKKgIhI5A6AGIAMgFiAcokQAAAAAAAAAAKAgFyAfoqAgFSAgoqAiDzkDqAYgAyARIBqiRAAAAAAAAAAAoCAUIBuioCAQIBiioCIQOQOIBkQAAAAAAADwPyAeICOgICGgRAAAAAAAAPC/oEQAAAAAAADgP6IiEUQAAAAAAADwv6UgEUQAAAAAAADwP2QbIhUQiRUhEyAQIB2hIhEgEaIgDyAioSIUIBSiIBkgEqEiEiASoqCgRAAAAAAAANA/op8iD0TxaOOItfjkPmNBAXNFBEAgFUQAAAAAAAAAAGRFBEAgIUQAAAAAAADwP6BEAAAAAAAA4D+iRAAAAAAAAAAApZ8iD5ogDyAZRAAAAAAAAAAAYxshECAjRAAAAAAAAPA/oEQAAAAAAADgP6JEAAAAAAAAAAClnyISmiASIB1EAAAAAAAAAABjGyERAkAgHkQAAAAAAADwP6BEAAAAAAAA4D+iRAAAAAAAAAAApZ8iFJkiFSASmWNBAXMNACAVIA+ZY0EBcw0AIBCaIBAgIkQAAAAAAAAAAGQgESAQokQAAAAAAAAAAGRzGyEQCyAQIBMgFCAUoiARIBGioCAQIBCioJ+jIhKiIRAgESASoiERIBQgEqIhFCACRQ0LIANBgApqQQBB2AEQrxsaDAsLRAAAAAAAAAAAIRAgAkUNCSADQYAKakEAQdgBEK8bGiADQoCAgICAgIDwv383A/gKIANCgICAgICAgPC/fzcDmAsgA0KAgICAgICA8D83A6gLIANCgICAgICAgPC/fzcDqAogA0KAgICAgICA8D83A9gKIANCgICAgICAgPA/NwO4CgwJC0QAAAAAAADwPyAPIA+goyEQIAIEQCADQgA3A6ADIANCADcDmAMgA0IANwOQAyADQgA3A8gDIANCADcD0AMgA0IANwPoAyADQgA3A/ADIANCADcDiAQgA0IANwOQBCADQgA3A4gDIANCADcDgAMgA0IANwPAAyADQoCAgICAgID4v383A7gDIANCADcDsAMgA0KAgICAgICA+D83A6gDIANCADcD4AMgA0KAgICAgICA+L9/NwPYAyADQgA3A4AEIANCgICAgICAgPg/NwP4AyADQgA3A7gEIANCADcDwAQgA0IANwPIBCADQgA3A9AEIANCADcD8AQgA0IANwPoBCADQgA3A5AFIANCADcDiAUgA0KAgICAgICA+L9/NwOoBCADQgA3A6AEIANCgICAgICAgPg/NwOYBCADQgA3A7AEIANCADcD4AQgA0IANwOABSADRAAAAAAAAPC/IA+jIhdEAAAAAAAA4D+iIhY5A6AFIAMgFyAVIBCaoiAPo0QAAAAAAADgP6KiIg85A9gEIAMgDzkD+AQgAyAPOQOYBSADQgA3A7gFIANCADcDsAUgA0IANwOoBSADIBY5A8AFIANCADcD2AUgA0IANwPQBSADQgA3A8gFIAMgFjkD4AUgA0IANwPgBiADQgA3A/gGIANCADcDoAcgA0IANwOoByADQgA3A8gHIANCADcD0AcgA0IANwPYByADQgA3A+AHIANCADcD2AYgAyAQOQPQBiADQgA3A/AGIANCADcDmAcgA0IANwOIByADIBA5A4AHIANCADcDwAcgAyAQOQOwByADIBE5A7gHIAMgFDkD6AYgAyASOQOQByADQoCAgICAgID4PzcD6AcgA0IANwOwAiADQgA3A+gCIANCADcDqAIgAyATOQOgAiADQgA3A+ACIAMgEiAQojkD2AIgA0IANwPQAiADIBM5A8gCIANCADcDwAIgAyAUIBCiOQO4AiADIBEgEKI5A/gCIAMgEzkD8AIgA0KGgImShAk3A4ACIANChYCAgJABNwKUAiADQgA3A4gCIAMgA0GAA2o2ApACIANChoCJkoQFNwPgASADQoSAgIDQADcC9AEgA0IANwPoASADIANB0AZqNgLwASADQoaAiZKEBDcDwAEgA0KDgICAwAA3AtQBIANCADcDyAEgAyADQaACajYC0AEgA0KGgImShAU3AyAgA0KDgICA0AA3AjQgA0IANwMoIAMgA0FAazYCMCADQcABaiADQeABakQAAAAAAADwP0EARAAAAAAAAPA/IANBIGpBABCGBiADQSBqIANBgAJqRAAAAAAAAPA/QQBEAAAAAAAA8D8gA0HgCWpBABCGBiADKwOYCiEPIAMgAysDiAo5A5gKIAMgDzkDiAogAysDkAohDyADIAMrA7AKOQOQCiADIA85A7AKIAMrA6gKIQ8gAyADKwO4CjkDqAogAyAPOQO4CiADKwPQCiEPIAMgAysD4Ao5A9AKIAMgDzkD4AogAysD2AohDyADIAMrA/gKOQPYCiADIA85A/gKIAMrA4ALIQ8gAyADKwPwCjkDgAsgAyAPOQPwCiADKwOoCyEPIAMgAysDmAs5A6gLIAMgDzkDmAsgAysDwAshDyADIAMrA6ALOQPACyADIA85A6ALIAMrA8gLIQ8gAyADKwO4CzkDyAsgAyAPOQO4CwsgESAQIBOiIhOiIRAgEiAToiERIBQgE6IhFAwJCyAcIBaiIRIgGCAWoiETIBYgGaIhD0EAIQBEAAAAAAAA8D8hFANAIABBA3QiAUHIAGoiBCADQYAKamogDyAUoiATIANBQGsgAWorAwCioCAQIANBgANqIARqKwMAoqAgEiADQaACaiABaisDAKKgIBEgA0HQBmogBGorAwCioDkDACAAQQFqIgBBCUZFBEAgA0GwCGogAEEDdGorAwAhFAwBCwsgHCAXoiESIBggF6IhEyAXIBmiIQ9BACEARAAAAAAAAPA/IRQDQCAAQQN0IgFBkAFqIgQgA0GACmpqIA8gFKIgEyADQUBrIAFqKwMAoqAgECADQYADaiAEaisDAKKgIBIgA0GgAmogAWorAwCioCARIANB0AZqIARqKwMAoqA5AwAgAEEBaiIAQQlGDQsgA0GwCGogAEEDdGorAwAhFAwACwALQa5+IANBgANqQe6lBBCJA0GxpQRB46QEQYsC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hAEgAEEBOgCAASAAQgE3A3ggACAIOQNwIAZBQGskAAvHBQECfyAAQQA2AgAgACgCBCEBIABBADYCBAJAIAFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQQA2AgggAEEMaiICKAIAIQEgAkEANgIAAkAgAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIABBADYCECAAQRRqIgIoAgAhASACQQA2AgACQCABRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgAEEANgIYIABBHGoiAigCACEBIAJBADYCAAJAIAFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQQA2AiAgAEEkaiICKAIAIQEgAkEANgIAAkAgAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIABBADYCKCAAQSxqIgIoAgAhASACQQA2AgACQCABRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgAEEANgIwIABBNGoiAigCACEBIAJBADYCAAJAIAFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQQA2AjggAEE8aiICKAIAIQEgAkEANgIAAkAgAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIABBADYCQCAAQcQAaiICKAIAIQEgAkEANgIAAkAgAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIABBADYCSCAAQcwAaiIBKAIAIQAgAUEANgIAAkAgAEUNACAAIAAoAgQiAUEBazYCBCABDQAgACAAKAIAKAIIEQEAIAAQ0BoLC/0DAQJ/IAAQzwsCQCAAKAJMIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoAkQiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLAkAgACgCPCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAg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IARByAFqIARBwAFqELoGIQcgBEIANwNIIAQgBzYCRCAEQYCAhJB8NgJAIAYgBEFAaxCWBCAHELEGGiAGELEGGiACKAIAIQYgAigCBCEHCyAFIAcgBmtIDQALCyAEQgA3A1ggBEGAgIyIeDYCUCAEIAM2AlQgASAEQdAAahC+CyAKQQYQqgYgAygCBCIHIAMoAgAiBmtBAU4EQEEAIQhBACEFA0ACQCAFIAZqLQAARQRAIAVBAWohBQwBCyAEIAU2AgggBCAFQQFqIgU2AgwgBEKAgICA+P////8ANwNAIARB0ABqIAkgBEEIaiAEQUBrELoGIQYgBCAINgLIASAEIAhBAWoiCDYCzAEgBEKAgICA+P////8ANwPAASAEQQhqIAEgBEHIAWogBEHAAWoQugYhByAEQgA3A0ggBCAHNgJEIARBgICEkHw2AkAgBiAEQUBrEJYEIAcQsQYaIAYQsQYaIAMoAgAhBiADKAIEIQcLIAUgByAGa0gNAAsLIAkQsQYaIARB0AFqJAALiQUBAX8jAEGAA2siAyQAIANByAJqIABBABDNBiADQZACaiABQQAQzQYCQCADLwHIAkH4H3ENACADKALQAkF+cUECRw0AIAMoAtQCQQRIDQAgA0IANwPgASADQYCAhAg2AtgBIAMgA0HIAmo2AtwBIANBgICEEDYCoAEgA0IANwOoASADIANByAJqNgKkASADQdgBaiADQaABahC0BwsCQCADLwGQAkH4H3ENACADKAKYAkF+cUECRw0AIAMoApwCQQRIDQAgA0IANwPgASADQYCAhAg2AtgBIAMgA0GQAmo2AtwBIANBgICEEDYCoAEgA0IANwOoASADIANBkAJqNgKkASADQdgBaiADQaABahC0BwsgA0HYAWogAkEAEM0GIANBoAFqQQBBABDNBiADQgA3AyggA0GAgIQINgIgIAMgA0HIAmo2AiQgA0IANwMIIANBgICECDYCACADIANBkAJqNgIEIANCADcDYCADQQA2AlwgA0GAgIAQNgJYIANB6ABqIANBIGogAyADQdgAahDWCwJAIANB6ABqELcGBEAgA0EgaiACQQAQzQYgA0IANwMYIANCADcDECADQgA3AwggA0KBgICAwAA3A2AgA0GGgIiIfDYCWCADQgA3AwAgAyADNgJcIANBIGogA0HYAGpB1NYKEJkEIANBIGoQsQYaDAELIANBgICEkHw2AiAgA0IANwMoIAMoAtgBIQAgAyADQdgBajYCJCADQegAaiADQSBqIABB/x9xRAAAAAAAAPA/RAAAAAAAAAAAEIgDCyADQegAahCxBhogA0GgAWoQsQYaIANB2AFqELEGGiADQZACahCxBhogA0HIAmoQsQYaIANBgANqJAALsAcBBH8jAEHwAWsiAiQAIAJBuAFqIABBABDNBiACQYABaiABQQAQzQYgAkHIAGogAkGAAWoQrQYhAQJAIAIoArgBQQN2Qf8DcSIABEAgAEEBaiEADAELIAIoAsQBIgAgAigCwAEiA0wNACACQgA3AwggAkGAgIQINgIAIAIgAkG4AWo2AgQgAkGAgIQQNgI4IAJCADcDQCACIAJBuAFqNgI8IAIgAkE4ahC0ByADIQALAkAgAigCgAFBA3ZB/wNxIgNBAWogAigCiAEiBCACKAKMASIFIAQgBUgbIAMbIgMgAEYEQCACQYCAhBA2AgAgAkIANwMIIAIgAkGAAWo2AgQgAkG4AWogAhCWBAwBCyAAIANIBEAgAkIANwMIIAJBgICECDYCACACIAJBuAFqNgIEIAJBgICEEDYCOCACQgA3A0AgAiACQYABajYCPCACIAJBOGoQ2QsMAQsgAkIANwMIIAJBgICECDYCACACIAJBuAFqNgIEIAJBgICEEDYCOCACQgA3A0AgAiACQYABajYCPCACIAJBOGoQ1wsLIAIgAkGAAWogASgCAEEDdkH/A3EiAEEBaiABKAIMIgQgASgCCCAARSADIARIcSIAGxDBBiACQYABaiACELkGGiACELEGGgJAAkACQCAABEAgAigCiAEgASgCDEcNAiACKAKMASABKAIIRw0CIAIoAoABIAEoAgBzQf8fcUUEQCACQgA3AwggAkGAgIQINgIAIAIgAkGAAWo2AgQgAiABNgI8IAJBgICEkHw2AjggAkIANwNAIAIgAkE4ahC0BwwCCyACQgA3AwggAkGAgIQINgIAIAIgAkGAAWo2AgQgAkGAgIQQNgI4IAJCADcDQCACIAJBgAFqNgI8IAIgAkE4ahC0ByACQYCAhJB8NgIAIAJCADcDCCACIAE2AgQgAkGAAWogAiABKAIAQf8fcUQAAAAAAADwP0QAAAAAAAAAABCIAwwBCyACKAKoASIAKAIEIAEo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OQOQASABIAArA4gBIAihOQOYASABIAArA6ABIAihOQOgASABIAArA3ggACsDYCIIoTkDqAEgASAAKwOQASAIoTkDsAEgASAAKwOoASAIoTkDuAEgASAAKwOAASAAKwNoIgihOQPAASABIAArA5gBIAihOQPIASABIAArA7ABIAihOQPQASABQSBqIAEQtwQgACgCUCIFQQFOBEAgACgCOCEGIAAoAiAhBwNAIAYgA0EFdGoiBCABKwNAIAcgA0EYbGoiAisDACAAKwNYoaIgASsDSCACKwMIIAArA2ChoqAgASsDUCACKwMQIAArA2ihoqAiCDkDCCAEIAErA1ggAisDACAAKwNYoaIgASsDYCACKwMIIAArA2ChoqAgASsDaCACKwMQIAArA2ihoqAiCTkDECAEIAErA3AgAisDACAAKwNYoaIgASsDeCACKwMIIAArA2ChoqAgASsDgAEgAisDECAAKwNooaKgIgo5AxggBEQAAAAAAADwPyAIoSAJoSAKoTkDACADQQFqIgMgBUcNAAsLIAFB4AFqJAALqAMBAnwgACsDECEGIAMrAwAhByABKAIQIAJB4ABsaiIBQgA3AwggASAHIAaiOQMAIAMrAwAhBiAAKwMAIQcgAUIANwNgIAEgBiAHIAShojkDECABIAMrAwAgACsDGKI5A2ggASADKwMAIAArAwggBaGiOQNwIAArAxAhBiADKwMIIQcgAUIANwMgIAEgByAGojkDGCADKwMIIQYgACsDACEHIAFCADcDeCABIAYgByAEoaI5AyggASADKwMIIAArAxiiOQOAASABIAMrAwggACsDCCAFoaI5A4gBIAArAxAhBiADKwMQIQcgAUIANwM4IAEgByAGojkDMCADKwMQIQYgACsDACEHIAFCADcDkAEgASAGIAcgBKGiOQNAIAEgAysDECAAKwMYojkDmAEgASADKwMQIAArAwggBaGiOQOgASAAKwMQIQYgAysDGCEHIAFCADcDUCABIAcgBqI5A0ggAysDGCEGIAArAwAhByABQgA3A6gBIAEgBiAHIAShojkDWCABIAMrAxggACsDGKI5A7ABIAEgAysDGCAAKwMIIAWhojkDuAELwAICBH8MfCAAQbgBakEAQeAAEK8bIQYDQCAGIBIgASAFQQN0aiIDKwMAIAJBCyAFa0HgAGxqIgQrAwCioCISOQMAIAAgESADKwMAIAQrAwiioCIROQPAASAAIBAgAysDACAEKwMQoqAiEDkDyAEgACAPIAMrAwAgBCsDGKKgIg85A9ABIAAgDiADKwMAIAQrAyCioCIOOQPYASAAIA0gAysDACAEKwMooqAiDTkD4AEgACAMIAMrAwAgBCsDMKKgIgw5A+gBIAAgCyADKwMAIAQrAziioCILOQPwASAAIAogAysDACAEKwNAoqAiCjkD+AEgACAJIAMrAwAgBCsDSKKgIgk5A4ACIAAgCCADKwMAIAQrA1CioCIIOQOIAiAAIAcgAysDACAEKwNYoqAiBzkDkAIgBUEBaiIFQQRHDQALC+YBAQZ/IAAoAlAiBEEBTgRAIAAoAkQhBSAAKAI4IQYDQCAFIAJBGGxqIgMgBiACQQV0aiIBKwMAIAArA7gBoiABKwMIIAArA9ABoqAgASsDECAAKwPoAaKgIAErAxggACsDgAKioDkDACADIAErAwAgACsDwAGiIAErAwggACsD2AGioCABKwMQIAArA/ABoqAgASsDGCAAKwOIAqKgOQMIIAMgASsDACAAKwPIAaIgASsDCCAAKwPgAaKgIAErAxAgACsD+AGioCABKwMYIAArA5ACoqA5AxAgAkEBaiICIARHDQALCwuNCwIFfw18IwBBkB1rIgMkACAAEJ4MIAAQnwwgAyAAKAJQQQF0QQxBBhD3AyIFNgKMHSAAKAJQQQFOBEADQCAAIAUgBEEBdCAAKAI4IARBBXRqIAAoAiwiByAEQQR0IgZqKwMAIAcgBkEIcmorAwAQoAwgBEEBaiIEIAAoAlBIDQALCyADQYAUakEAQYAJEK8bGiADQaATakEAQeAAEK8bGiADQaAKakEAQYAJEK8bGiADQoaAiZKEDDcDgAogA0KMgICAwAE3ApQKIANCADcDiAogAyADQYAUajYCkAogA0KGgImShAE3A+AJIANCjICAgBA3AvQJIANCADcD6AkgAyADQaATajYC8AkgA0KGgImShAw3A8AJIANCjICAgMABNwLUCSADQgA3A8gJIAMgA0GgCmo2AtAJIAUgA0GACmpBABCHBiADQYAKaiADQeAJaiADQcAJakEAQQMQuQQgA0GMHWoQ+wMgA0HgBWpBAEHgAxCvGxogA0HYBWoiBEIANwMAIANB0AVqIgdCADcDACADQcgF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+AIgAyAPIAUrAxAgHKEgBCsDECAQoaKgIg85A4ADIAZBAWoiBiAHRw0ACwsgA0HgAGogA0FAayADQSBqIANBARC5BCABIAMrA9ABIhMgAysDgAEiFKIgAysD2AEiCyADKwOIASIVoqAgAysD4AEiDCADKwOQASIWoqAiDzkDACABIBMgAysDmAEiF6IgCyADKwOgASIdoqAgDCADKwOoASIeoqAiCjkDCCABIBMgAysDsAEiGKIgCyADKwO4ASIZoqAgDCADKwPAASILoqAiEzkDECABIBggAysD6AEiDKIgGSADKwPwASIaoqAgCyADKwP4ASIboqAiHzkDKCABIAwgF6IgGiAdoqAgGyAeoqAiIDkDICABIAwgFKIgGiAVoqAgGyAWoqAiGjkDGCABQUBrIBggAysDgAIiG6IgGSADKwOIAiIYoqAgCyADKwOQAiIZoqAiCzkDACABIBsgF6IgGCAdoqAgGSAeoqAiDDkDOCABIBsgFKIgGCAVoqAgGSAWoqAiFDkDMCAPICCiIAuiIAogH6IgFKKgIBMgGqIgDKKgIBQgICAToqKhIAsgCiAaoqKhIA8gH6IgDKKhRAAAAAAAAAAAYwRAIAEgC5o5A0AgASAMmjkDOCABIBSaOQMwCyACIBEgDyANoiAKIA6ioCATIBCioKE5AwAgAiASIA0gASsDGKIgDiABKwMgoqAgECABKwMooqChOQMIIAIgHCANIAErAzCiIA4gASsDOKKgIBAgASsDQKKgoTkDECADQZADaiQAC8wCAgN/FXwCQCAAKAJQIgNBAUgEQAwBCyABQUBrKwMAIQkgASsDOCEKIAErAyghCyABKwMgIQwgACgCLCEEIAArAxghDSAAKwMIIQ4gACsDECEPIAArAwAhECACKwMQIREgASsDMCESIAIrAwghEyABKwMYIRQgAisDACEVIAErAxAhFiABKwMIIRcgASsDACEYIAAoAiAhBUEAIQEDQCAGIAQgAUEEdCICaisDACAQIBUgGCAFIAFBGGxqIgArAwAiBqIgFyAAKwMIIgeioCAWIAArAxAiCKKgoCAPokQAAAAAAADwPyARIAYgEqIgByAKoqAgCCAJoqCgoyIZoqChIhogGqIgBCACQQhyaisDACAOIBkgEyAGIBSiIAcgDKKgIAggC6KgoCANoqKgoSIGIAaioJ+gIQYgAUEBaiIBIANHDQALCyAGIAO3owvuAwIHfwJ8IwBB8AFrIgMkACADQeAAakEAQZABEK8bGiADQgA3A1AgA0IANwNIIANCADcDQCADQoaAiZKEAzcDICADQoaAgIAwNwI0IANCADcDKCADIANB4ABqNgIwIANChoCJkoQBNwMAIANCg4CAgBA3AhQgA0IANwMIIAMgA0FAazYCECAAKAIEIQggACgCAEH/H3FBBUchCQNAIAQgCGwiBSAAKAIQaiEHAnwgCUUEQCAEQRhsIgYgAygCMGogByoCALs5AwAgAygCMCAGaiAAKAIQIAVqKgIEuzkDCCAAKAIQIAVqKgIIuwwBCyAEQRhsIgYgAygCMGogBysDADkDACADKAIwIAZqIAAoAhAgBWorAwg5AwggACgCECAFaisDEAshCiADKAIwIAZqIAo5AxAgBEEBaiIEQQZHDQALIANBIGogASADELgEAkAgAysDQCIKRAAAAAAAAAAAYwRAIAIgCpqfIgs5AwAgAysDUCIKRAAAAAAAAAAAYyEEIAqaIQoMAQsgAiAKnyILOQMAIAMrA1AiCkQAAAAAAAAAAGQhBAsgAiAKn0QAAAAAAAAAACAEGzkDCCADKwNIRAAAAAAAAAAAY0EBc0UEQCACIAuaOQMACyACQgA3AxAgAkIANwMYIANB8AFqJAAL4wQCB38CfCMAQeACayIDJAAgA0HwAGpBAEHwARCvGxogA0IANwNgIANCADcDWCADQgA3A1AgA0IANwNIIANCADcDQCADQoaAiZKEBTcDICADQoaAgIDQADcCNCADQgA3AyggAyADQfAAajYCMCADQoaAiZKEATcDACADQoWAgIAQNwIUIANCADcDCCADIANBQGs2AhAgACgCBCEIIAAoAgBB/x9xQQVHIQkDQCAGIAhsIgQgACgCEGohBwJ8IAlFBEAgBkEobCIFIAMoAjBqIAcqAgC7OQMAIAMoAjAgBWogACgCECAEaioCBLs5AwggAygCMCAFaiAAKAIQIARqKgIIuzkDECADKAIwIAVqIAAoAhAgBGoqAgy7OQMYIAAoAhAgBGoqAhC7DAELIAZBKGwiBSADKAIwaiAHKwMAOQMAIAMoAjAgBWogACgCECAEaisDCDkDCCADKAIwIAVqIAAoAhAgBGorAxA5AxAgAygCMCAFaiAAKAIQIARqKwMYOQMYIAAoAhAgBGorAyALIQogAygCMCAFaiAKOQMgIAZBAWoiBkEGRw0ACyADQSBqIAEgAxC4BAJAIAMrA0AiCkQAAAAAAAAAAGMEQCACIAqanyIKOQMAIAMrA1AiC0QAAAAAAAAAAGMhACALmiELDAELIAIgCp8iCjkDACADKwNQIgtEAAAAAAAAAABkIQALIAIgC59EAAAAAAAAAAAgABs5AwggAysDSEQAAAAAAAAAAGNBAXNFBEAgAiAKmiIKOQMACyADKwNYIQsgAkIANwMYIAIgCyAKozkDECADQeACaiQAC+YDAgR/A3wgBCgCAEH/H3FBBUchCANAIAMoAhAgBkEFdGoiByAAIAZB0ABsaiIFKwMAIgkgCaAgAisDAKIgBSsDCCACKwMIoqAgBSsDGCACKwMQoqAgBSsDMCACKwMYoqA5AwAgByAFKwMIIAIrAwCiIAUrAxAiCSAJoCACKwMIoqAgBSsDICACKwMQoqAgBSsDOCACKwMYoqA5AwggByAFKwMYIAIrAwCiIAUrAyAgAisDCKKgIAUrAygiCSAJoCACKwMQoqAgBSsDQCACKwMYoqA5AxAgByAFKwMwIAIrAwCiIAUrAzggAisDCKKgIAUrA0AgAisDEKKgIAUrA0giCSAJoCACKwMYoqA5AxggASAGQQN0aisDACACKwMAIgkgCSAFKwMAoqIgCSAFKwMIoiACKwMIIgqioCAKIAogBSsDEKKioCAJIAUrAxiiIAIrAxAiC6KgIAsgCiAFKwMgoqKgIAsgCyAFKwMooqKgIAkgBSsDMKIgAisDGCIJoqAgCSAKIAUrAziioqAgCSALIAUrA0CioqAgCSAJIAUrA0iioqChIQkCQCAIRQRAIAQoAhAgBCgCBCAGbGogCbY4AgAMAQsgBCgCECAEKAIEIAZsaiAJOQMACyAGQQFqIgZBBkcNAAsL1wgCDn8FfAJAIAEoAhQiBUEBSA0AIAEoAhgiBkEBSA0AAkAgACgCmAIiBEUNACAEIAVODQAgACgCnAIiBARAIAQQohsLIAAoAqACIgRFDQAgBBCiGwsgBSAAKAKYAkoEQCAAIAU2ApgCIABBfyAFQQN0IAVB/////wFxIAVHGyIEENUaNgKcAiAAIAQQ1Ro2AqACCyAGQQFqIQ8gASgCECEOIAYEQCAGQQN0IQogDiEIA0AgCCsDACIVmSESAkAgB0EBaiIQIAVODQAgCCEBIAdBAmoiBCAFRg0AA0AgASAKaiIBKwMAmSITIBIgEiATYxshEiAEQQFqIgQgBUcNAAsLIBJEAAAAAAAAAABhBEAgB0EDdCIBIAAoAqACakIANwMAIAAoApwCIAFqQgA3AwAPC0QAAAAAAAAAACEUIAUgB0wiDUUEQCAIRAAAAAAAAPA/IBKjIhYgFaIiEzkDACATIBOiRAAAAAAAAAAAoCEUIAghASAFIAdBAWoiBEcEQANAIAEgCmoiASAWIAErAwCiIhM5AwAgFCATIBOioCEUIARBAWoiBCAFRw0ACwsgCCsDACEVCyAIIBUgFJ8iE5ogEyAVRAAAAAAAAAAAYxsiE6AiFDkDACAHQQN0IgEgACgCnAJqIhEgEyAUojkDACAAKAKgAiABaiATIBKaojkDACAQIgsgBkgEQANAAkAgDQ0AIAsgB2shDEQAAAAAAAAAACESIAchBCAIIQEDQCASIAErAwAgASAMQQN0IglqKwMAoqAhEiABIApqIQEgBEEBaiIEIAVHDQALIA0NACASIBErAwCjIRIgByEEIAghAQNAIAEgCWoiDCAMKwMAIBIgASsDAKKhOQMAIAEgCmohASAEQQFqIgQgBUcNAAsLIAtBAWoiCyAGRw0ACwsgCCAPQQN0aiEIIBAiByAGRw0ACwsgACgCnAIhDSACKAIQIQpBACELIA4hBwNARAAAAAAAAAAAIRIgByEEAkAgCyIBIAVIIgxFDQADQCASIAQrAwAgCiABQQN0aisDAKKgIRIgBCAGQQN0IglqIQQgAUEBaiIBIAVHDQALIAxFDQAgEiANIAtBA3RqKwMAoyESIAshASAHIQQDQCAKIAFBA3RqIgwgDCsDACASIAQrAwCioTkDACAEIAlqIQQgAUEBaiIBIAVHDQALCyAHIA9BA3RqIQcgC0EBaiILIAZHDQALIAMoAhAiBSAGQQN0QQhrIgFqIAEgCmorAwAgACgCoAIiDCABaisDAKM5AwAgBkECSA0AIAZBAmshCQNARAAAAAAAAAAAIRIgBiAJQQFqIgFKBEAgDiAGIAlsQQN0aiABQQN0aiEEA0AgEiAEKwMAIAUgAUEDdGorAwCioCESIARBCGohBCABQQFqIgEgBkcNAAsLIAUgCUEDdCIBaiABIApqKwMAIBKhIAEgDGorAwCjOQMAIAlBAEohASAJQQFrIQkgAQ0ACwsLEwAgAEL808aX3cmYqD83AwAgAAugCQEFfyMAQcADayIJJAAgCUGIA2oQpwYhCwJAIAIQzAdBgIAERgRAIAlB0AJqIAIoAgQQrQYaDAELIAlB0AJqIAIQyQcLIAkoAtACIQogCUHQAmoQsQYaAkAgCkH/H3FBDUYEQAJAIAIQzAdBgIAERgRAIAlB0AJqIAIoAgQQrQYaDAELIAlB0AJqIAIQyQcLIAkgCzYCnAIgCUGAgIQQNgKYAiAJQgA3A6ACIAlB0AJqIAlBmAJqQQZEAAAAAAAA8D9EAAAAAAAAAAAQiAMgCUHQAmoQsQYaDAELAkAgAhDMB0GAgARGBEAgCUHQAmogAigCBBCtBhoMAQsgCUHQAmogAhDJBwsgCyAJQdACahC5BhogCUHQAmoQsQYaCyAJQdACahCnBiEMIAlBmAJqEKcGIQ0gCUIANwPoASAJIAs2AuQBIAlBgICECDYC4AEgCSAMNgKsASAJQYCAhBA2AqgBIAlCADcDsAEgCSANNgJEIAlBgICEEDYCQCAJQgA3A0ggACABIAlB4AFqIAlBqAFqIAlBQGsQsAwgCUHgAWoQpwYhAiAJQagBahCnBiEKIAlCADcDSCAJIAs2AkQgCUGAgIQINgJAIAlCADcDECAJIAw2AgwgCUGAgIQINgIIIAlCADcDoAEgCSANNgKcASAJQYCAhAg2ApgBIAkgAjYCjAEgCUGAgIQQNgKIASAJQgA3A5ABIAkgCjYCfCAJQYCAhBA2AnggCUIANwOAASABIAlBQGsgCUEIaiAJQZgBaiAJQYgBaiAJQfgAaiAFIAgQsQwgCUKAgICA+P////8ANwNAIAlCgICAgDA3A5gBIAlBCGogAiAJQUBrIAlBmAFqELoGIQAgCUKAgICAMDcDiAEgCUKAgICA+P////8ANwN4IAlBQGsgACAJQYgBaiAJQfgAahC6BiEBIAlCADcDoAEgCSABNgKcASAJQYCAhAg2ApgBIAlBmAFqIAMQsgwgARCxBhogABCxBhogCUKAgICA+P////8ANwNAIAlCgICAgDA3A5gBIAlBCGogCiAJQUBrIAlBmAFqELoGIQAgCUKAgICAMDcDiAEgCUKAgICA+P////8ANwN4IAlBQGsgACAJQYgBaiAJQfgAahC6BiEBIAlCADcDoAEgCSABNgKcASAJQYCAhAg2ApgBIAlBmAFqIAYQsgwgARCxBhogABCxBhogCUKAgICA+P////8ANwNAIAlCg4CAgMAANwOYASAJQQhqIAIgCUFAayAJQZgBahC6BiEAIAlCgICAgDA3A5gBIAlCgICAgPj/////ADcDiAEgCUFAayAAIAlBmAFqIAlBiAFqELoGIgEgBBCWBCABELEGGiAAELEGGiAJQoCAgID4/////wA3A0AgCUKDgICAwAA3A5gBIAlBCGogCiAJQUBrIAlBmAFqELoGIQAgCUKAgICAMDcDmAEgCUKAgICA+P////8ANwOIASAJQUBrIAAgCUGYAWogCUGIAWoQugYiASAHEJYEIAEQsQYaIAAQsQYaIAoQsQYaIAIQsQYaIA0QsQYaIAwQsQYaIAsQsQYaIAlBwANqJAAL5AkBCn8jAEGABmsiBSQAIAIQ0gchCCACENMHIQkgARDLByEGIAIQywchBwJAAkACQAJAAkAgBkEVa0ECSQRAIAdBDWtBAk8NASABENIHQQFHBEAgARDTB0EBRw0DCyABENIHQQNMBEAgARDTB0EDTA0ECyACENIHQQFHBEAgAhDTB0EBRw0FCyABENIHIAEQ0wdsIAggCWxHDQUgBUHIBWoQpwYhCAJAIAdBDUYEQAJAIAIQzAdBgIAERgRAIAVBQGsgAigCBBCtBhoMAQsgBUFAayACEMkHCyAFIAg2AtwDIAVBgICEEDYC2AMgBUIANwPgAyAFQUBrIAVB2ANqQQZEAAAAAAAA8D9EAAAAAAAAAAAQiAMgBUFAaxCxBhoMAQsCQCACEMwHQYCABEYEQCAFQUBrIAIoAgQQrQYaDAELIAVBQGsgAhDJBwsgCCAFQUBrELkGGiAFQUBrELEGGgsgBUGQBWoQpwYhBwJAIAZBFUYEQAJAIAEQzAdBgIAERgRAIAVBQGsgASgCBBCtBhoMAQsgBUFAayABEMkHCyAFIAc2AtwDIAVBgICEEDYC2AMgBUIANwPgAyAFQUBrIAVB2ANqQQZEAAAAAAAA8D9EAAAAAAAAAAAQiAMgBUFAaxCxBhoMAQsCQCABEMwHQYCABEYEQCAFQUBrIAEoAgQQrQYaDAELIAVBQGsgARDJBwsgByAFQUBrELkGGiAFQUBrELEGGgsgBUHYBGoQpwYhASAFQaAEahCnBiEGIAVCADcDSCAFIAc2AkQgBUGAgIQINgJAIAUgATYC3AMgBUGAgIQQNgLYAyAFQgA3A+ADIAUgBjYCpAMgBUGAgIQQNgKgAyAFQgA3A6gDIAAgBUFAayAFQdgDaiAFQaADahCzDCAFQdgDakEAQcgAEK8bGiAFQgA3A0ggBSABNgJEIAVBgICECDYCQCAFQUBrIAIgBUHYA2oQtAwgBUGgA2oQpwYhAiAFQegCahCnBiEJIAVCADcDSCAFIAE2AkQgBUGAgIQINgJAIAVCADcDqAIgBSAINgKkAiAFQYCAhAg2AqACIAUgAjYCDCAFQYCAhBA2AgggBUIANwMQIAUgCTYC3AIgBUGAgIQQNgLYAiAFQgA3A+ACIAVBQGsgBUGgAmogBUHYA2ogBUEIaiAFQdgCahC1DCAFQUBrIAIgBhD/BiAFQaACahCnBiEAIAUoAkAiCiAFQUBrIABBfyAKKAIAKAIMEQYAIAVBuAFqIgsQsQYaIAVBgAFqIgwQsQYaIAVByABqIg0QsQYaIAVBQGsgCSAGEP8GIAVBCGoQpwYhCiAFKAJAIg4gBUFAayAKQX8gDigCACgCDBEGACALELEGGiAMELEGGiANELEGGiAAIAMQlgQgCiAEEJYEIAoQsQYaIAAQsQYaIAkQsQYaIAIQsQYaIAYQsQYaIAEQsQYaIAcQsQYaIAgQsQYaIAVBgAZqJAAPCyAGQaDcBBDaAwALIAdBsN4EENoDAAtBqX4gBUFAa0HE3wQQiQNB+98EQabdBEHYABCYCgALQal+IAVBQGtBiOAEEIkDQfvfBEGm3QRB2QAQmAoAC0GpfiAFQUBrQb/gBBCJA0H73wRBpt0EQdoAEJgKAAtBqX4gBUFAa0GI4QQQiQNB+98EQabdBEHbABCYCgALcQIBfwJ9IwBBEGsiCCQAIAAgASACIAhBDGoQtgwgACABIAMgCEEIahC2DCAGIAgqAgwiCSAIKgIIIgogCSAKXSIAGzgCACACIAMgABsgBBDaByAHIAogCSAAGzgCACADIAIgABsgBRDaByAIQRBqJAALwgUCA38EfCMAQZABayICJAACQAJAIAAQywdBBkYEQCAAENIHQQNHDQEgABDTB0EDRw0CIAFBA0EBQQZBAEEAEPcHAkAgABDMB0GAgARGBEAgAkHYAGogACgCBBCtBhoMAQsgAkHYAGogABDJBwsCQCABEMwHQYCABEYEQCACQSBqIAEoAgQQrQYaDAELIAJBIGogARDJBwsgAigCaCIAKwMAIAAgAigChAEoAgAiAWoiAysDCKAgACABQQF0aiIBKwMQoEQAAAAAAADwv6BEAAAAAAAA4D+iEIkVIgYQlhUhBQJAIAZEAAAAAAAAgD5jQQFzRQRAIAJCgYCAgBA3AxggAkGGgIiIfDYCECACQgA3AwggAiACQQhqNgIUIAJBIGogAkEQakHU1goQmQQMAQsgAysDACAAKwMIoSEIIAArAxAgASsDAKEhByAGRAAAAAAAAPA/IAUgBaCjoiIGIAErAwggAysDEKGiIQUCfwJ/AkACQCACLQAhQcAAcUUEQCACKAJIIgEoAgAhAyACKAIwIgAgBTkDACADQQFGDQEgBiAHoiEFIAEoAgRBAUcNAiAAIAIoAkwoAgBqDAMLIAIoAjAiACAFOQMACyAAIAYgB6I5AwggAEEQagwCCyAAIAIoAiwiA0EAIANBAWpBA0kbIgQgAigCTCgCAGxqQQEgAyAEbGtBA3RqCyAFOQMAIAEoAgRBAUYEQCAAIAIoAkwoAgBBAXRqDAELIABBAiACKAIsIgFtIgMgAigCTCgCAGxqQQIgASADbGtBA3RqCyAGIAiiOQMACyACQSBqELEGGiACQdgAahCxBhogAkGQAWokAA8LIAAQywdB+OEEENoDAAtBqX4gAkHYAGpBlOMEEIkDQaPjBEGm3QRBqQIQmAoAC0GpfiACQdgAakGr4wQQiQNBo+MEQabdBEGqAhCYCgALnRgDD38CfRR8IwBBwAZrIgQkAAJAAkAgARDLByIGQRVrQQJJBEAgAkEBIAEQ0gcgARDTB2wiCkEOQQBBABD3BwJAIAEQzAdBgIAERgRAIARBiAZqIAEoAgQQrQYaDAELIARBiAZqIAEQyQcLAkAgAhDMB0GAgARGBEAgBEHQBWogAigCBBCtBhoMAQsgBEHQBWogAhDJBwtBACEBIARBmAVqQQMgCkEGEKgGIQ4gCkEATARAQQEhBkQAAAAAAAAAACAKt6MiFSEXIBUhFgwDCyAEKAKIBkGAgAFxIQwgDigCECILIA4oAiwoAgAiAmohDSALIAJBAXRqIRAgBCgCtAYhCCAEKAKUBiEJIAQoArAGIQcgBCgCmAYhBSAGQRVHIRFBASEGA0ACfCARRQRAAkACfwJAAkAgDA0AIAcoAgBBAUYNAAJ/IAcoAgRBAUYEQCAFIAgoAgAgAWxqDAELIAUgASAJbSICIAgoAgBsaiABIAIgCWxrQQxsagsqAgAhEyAHKAIEQQFHDQEgBSAIKAIAIAFsagwCCyAFIAFBDGwiD2ohAiAFIA9qIg8qAgQhFCAPKgIAIRMMAgsgBSABIAltIgIgCCgCAGxqIAEgAiAJbGtBDGxqCyoCBCEUIAcoAgRBAUYEQCAFIAgoAgAgAWxqIQIMAQsgBSABIAltIgIgCCgCAGxqIAEgAiAJbGtBDGxqIQILIBS7IRcgE7shFiACKgIIuwwBCwJAAn8CQAJAIAwNACAHKAIAQQFGDQACfyAHKAIEQQFGBEAgBSAIKAIAIAFsagwBCyAFIAEgCW0iAiAIKAIAbGogASACIAlsa0EYbGoLKwMAIRYgBygCBEEBRw0BIAUgCCgCACABbGoMAgsgBSABQRhsaiICKwMIIRcgAisDACEWDAILIAUgASAJbSICIAgoAgBsaiABIAIgCWxrQRhsagsrAwghFyAHKAIEQQFGBEAgBSAIKAIAIAFsaiECDAELIAUgASAJbSICIAgoAgBsaiABIAIgCWxrQRhsaiECCyACKwMQCyEVIAArAwAhGyALIAFBA3QiAmogFjkDACACIA1qIBc5AwAgAiAQaiAVOQMAIBggFaAhGCAZIBegIRkgGiAWoCEaIAYgFZkgG2RBAXNxIQYgCiABQQFqIgFHDQALDAELIAZB1OoEENoDAAsgGCAKtyIWoyEVIBkgFqMhFyAaIBajIRYgCkEBSA0AIA4oAhAiByAOKAIsKAIAIgFqIQsgByABQQF0aiEMQQAhAQNAIAcgAUEDdCICaiIFIAUrAwAgFqE5AwAgAiALaiIFIAUrAwAgF6E5AwAgAiAMaiICIAIrAwAgFaE5AwAgAUEBaiIBIApHDQALCyAEQaAEakEAQfAAEK8bGiAEQoCAgICAgID4PzcDkAUgBEKAgICAgICA+D83A+gEIARCgICAgICAgPg/NwPABCAEQoCAgICAgID4PzcDmAQgBCAVmjkD8AQgBCAXmjkD0AQgBCAWmjkDsAQCQCAGBEAgBEHoAWoiAUKggICAgAE3AwAgBEIANwPYASAEQoSAgIDAADcDwAEgBEKGgP2XJDcDuAEgBCABNgLkASAEIARBwAFqNgLgASAEIARBmAVqIgE2AtQBIAQgATYC0AEgBCAEQZgEajYCzAEgBCAEQZgEajYCyAEgBEG4AWogAxCWBCAEQbgBahCxBhogCkEBSA0BIAQoAtAFQYCAAXEhByAOKAIsIQsgDigCECECQQAhASAEKAL8BSEMIAQoAuAFIQYgBCgC3AUhDSAEKAL4BSEAA0AgAiABQQN0IgVqKwMAIRUCfwJAAkACQCAHRQRAIAAoAgBBAUYNAQJ/IAAoAgRBAUYEQCAGIAwoAgAgAWxqDAELIAYgASANbSIQIAwoAgBsaiABIA0gEGxrQQR0agsgFTkDACACIAsoAgBqIAVqKwMAIRUMAwsgBiABQQR0aiAVOQMAIAIgCygCAGogBWorAwAhFQwBCyAGIAFBBHRqIBU5AwAgAiALKAIAaiAFaisDACEVIAAoAgBBAUcNAQsgBiABQQR0agwBCyAAKAIEQQFGBEAgBiAMKAIAIAFsagwBCyAGIAEgDW0iBSAMKAIAbGogASAFIA1sa0EEdGoLIBU5AwggAUEBaiIBIApHDQALDAELIARB4ANqQQMgCkEGEKgGIQ8gBEGYA2pBAEHIABCvGxogBEIANwPAASAEQYCAhAg2ArgBIAQgBEGIBmo2ArwBIAAgBEG4AWogBEGYA2oQtwxFBEAgBEIANwPAASAEIA42ArwBIARBgICECDYCuAEgBEKDgICAMDcDQCAEQYaAiJB8NgI4IAQgBEGYA2o2AjwgACAEQbgBaiAEQThqELgMCyAEQgA3A1AgBEIANwNYIARB6ABqIgFCADcDACAEQgA3A0ggBEKDgICAMDcDQCAEQoaA/ZckNwM4IAQgATYCZCAEIARBQGs2AmBBACECIARBuAFqQQNBA0EGIARBmANqQQAQrgYhASAEQYCAhBA2AgAgBEIANwMIIAQgBEE4ajYCBCABIAQQlgQgARCxBhogBEG4AWogBEE4aiAOEP8GIARBOGoQsQYaIAQoArgBIgEgBEG4AWogD0F/IAEoAgAoAgwRBgAgBEGwAmoQsQYaIARB+AFqELEGGiAEQcABaiISELEGGiAKQQFOBEAgBCgC0AVBgIABcSEQIA8oAiwhESAPKAIQIQZBACEBIAQoAvwFIQggBCgC4AUhByAEKALcBSEJIAQoAvgFIQ0DQCAGIAFBA3QiBWorAwAhFQJ/AkACQAJAIBBFBEAgDSgCAEEBRg0BAn8gDSgCBEEBRgRAIAcgCCgCACABbGoMAQsgByABIAltIgsgCCgCAGxqIAEgCSALbGtBBHRqCyAVOQMAIAYgESgCACILaiAFaisDACEVDAMLIAcgAUEEdGogFTkDACAGIBEoAgAiC2ogBWorAwAhFQwBCyAHIAFBBHRqIBU5AwAgBiARKAIAIgtqIAVqKwMAIRUgDSgCAEEBRw0BCyAHIAFBBHRqDAELIA0oAgRBAUYEQCAHIAgoAgAgAWxqDAELIAcgASAJbSIMIAgoAgBsaiABIAkgDGxrQQR0agsgFTkDCCAAKwMAIAYgC0EBdGogBWorAwCZY0EBc0UEQEF5IARBuAFqQdfrBBCJA0GI7ARBpt0EQZkFEJgKAAsgAUEBaiIBIApHDQALCyAEQdABakEAQeAAEK8bGiASIAQpA6ADNwMAIAQgBCkDqAM3A8gBIAQgBCkDuAM3A+ABIAQgBCkDwAM3A+gBIAQgBCkD0AM3A4ACIAQgBCkD2AM3A4gCIARCgICAgICAgPg/NwOwAiAEIAQpA5gDNwO4ASAEIAQpA7ADNwPYASAEIAQpA8gDNwP4ASAEKwOQBSEZIAQrA/AEIRogBCsD0AQhGyAEKwOwBCEcIAQrA4gFIR0gBCsD6AQhHiAEKwPIBCEfIAQrA6gEISAgBCsDgAUhISAEKwPgBCEiIAQrA8AEISMgBCsDoAQhJCAEKwP4BCElIAQrA9gEISYgBCsDuAQhJyAEKwOYBCEoA0AgAkEFdCIBIARBOGpqIARBuAFqIAFqKwMAIhUgKKJEAAAAAAAAAACgIAFBCHIiCiAEQbgBamorAwAiFyAnoqAgAUEQciIGIARBuAFqaisDACIWICaioCABQRhyIgEgBEG4AWpqKwMAIhggJaKgOQMAIARBOGogCmogFSAkokQAAAAAAAAAAKAgFyAjoqAgFiAioqAgGCAhoqA5AwAgBEE4aiAGaiAVICCiRAAAAAAAAAAAoCAXIB+ioCAWIB6ioCAYIB2ioDkDACAEQThqIAFqIBUgHKJEAAAAAAAAAACgIBcgG6KgIBYgGqKgIBggGaKgOQMAIAJBAWoiAkEERw0ACyAEQTBqIgFCoICAgIABNwMAIARCADcDICAEQoSAgIDAADcDCCAEQoaA/ZckNwMAIAQgATYCLCAEIARBCGo2AiggBCAEQbgBaiIBNgIcIAQgATYCGCAEIARBOGo2AhQgBCAEQThqNgIQIAQgAxCWBCAEELEGGiAPELEGGgsgDhCxBhogBEHQBWoQsQYaIARBiAZqELEGGiAEQcAGaiQAC7oZAiZ/CHwjAEHgEGsiAyQAIANBqBBqEKcGIQ4gA0HwD2oQpwYhEyADQbgPahCnBiEnIANBgA9qEKcGISAgA0HIDmoQpwYhISADQZAOahCnBiEoIAMgDjYC9AggA0GAgIQQNgLwCCADQgA3A/gIIAMgJzYCvAEgA0GAgIQQNgK4ASADQgA3A8ABIAMgIDYCPCADQYCAhBA2AjggA0IANwNAIAAgA0HwCGogA0G4AWogA0E4ahC5DCADIBM2AvQIIANBgICEEDYC8AggA0IANwP4CCADICE2ArwBIANBgICEEDYCuAEgA0IANwPAASADICg2AjwgA0GAgIQQNgI4IANCADcDQCABIANB8AhqIANBuAFqIANBOGoQuQwCQCAOKAIMIgYgEygCDEYEQCADQdgNakEBIAZBBhCoBiEiIANBoA1qQQEgBkEGEKgGISMgA0HoDGpBASAGQQYQqAYhJCADQbAMakEBIAZBBhCoBiElIAZBAUgiCARADAILIBMoAhAiDyATKAIsKAIAaiEQIA4oAhAiESAOKAIsKAIAaiESICUoAhAhFCAkKAIQIQwgIygCECEVICIoAhAhCUEAIQADQCAJIABBA3QiAWoiBCABIBFqIgUrAwAgASAPaiIHKwMAmqI5AwAgASAVaiILIAEgEmoiCisDACAHKwMAmqI5AwAgASAMaiIHIAUrAwAgASAQaiIFKwMAmqI5AwAgASAUaiAKKwMAIAUrAwCaoiIqOQMAICkgKqAhKSAsIAcrAwCgISwgKyALKwMAoCErIC0gBCsDAKAhLSAAQQFqIgAgBkcNAAsMAQtBqX4gA0HwCGpB++8EEIkDQYvwBEGm3QRB3wcQmAoACyApIAa3IiqjISkgLCAqoyEsICsgKqMhKyAtICqjIS0gA0H4C2ogBkEDQQYQqAYhFiADQcALaiAGQQNBBhCoBiEXIAhFBEAgEygCECIFIBMoAiwoAgBqIQcgJSgCECELIBcoAhAhCiAkKAIQIQ8gIygCECEQIBYoAhAhESAiKAIQIRIgFygCLCgCACEUIBYoAiwoAgAhDEEAIQADQCARIAAgDGxqIgQgEiAAQQN0IgFqKwMAIC2hOQMAIAQgASAQaisDACAroTkDCCAEIAEgBWorAwCaOQMQIAogACAUbGoiBCABIA9qKwMAICyhOQMAIAQgASALaisDACApoTkDCCAEIAEgB2orAwCaOQMQIABBAWoiACAGRw0ACwsgA0GIC2oQpwYhGSADQdAKahCnBiEYIANCADcD+AggAyAONgL0CCADQYCAhAg2AvAIIAMgGTYCvAEgA0GAgIQQNgK4ASADQgA3A8ABIANB8AhqIANBuAFqELQHIANB8AhqIA4gGRD/BiADKALwCCIBIANB8AhqIBhBfyABKAIAKAIMEQYAIANB6AlqIgkQsQYaIANBsAlqIggQsQYaIANB+AhqIg0QsQYaIBgoAhAiASAYKAIsKAIAaiIAKwMAISogASsDCCEuIAArAwghLyABKwMAITAgA0G4CGpBAkECQQYQqAYiJigCLCEEICYoAhAiASAYKAIQIgAgGCgCLCgCAGoiBSsDCCAwIC+iIC4gKqKhIiqjOQMAIAEgACsDCJogKqM5AwggASAEKAIAaiIBIAUrAwCaICqjOQMAIAEgACsDACAqozkDCCADQfAIaiAmIA4Q/wYgA0GACGoQpwYhGyADKALwCCIBIANB8AhqIBtBfyABKAIAKAIMEQYAIAkQsQYaIAgQsQYaIA0QsQYaIANB8AhqIBsgFhD/BiADQcgHahCnBiEcIAMoAvAIIgEgA0HwCGogHEF/IAEoAgAoAgwRBgAgCRCxBhogCBCxBhogDRCxBhogA0HwCGogGyAXEP8GIANBkAdqEKcGIR0gAygC8AgiASADQfAIaiAdQX8gASgCACgCDBEGACAJELEGGiAIELEGGiANELEGGiADQfAIaiAZIBwQ/wYgA0HYBmoQpwYhHiADKALwCCIBIANB8AhqIB5BfyABKAIAKAIMEQYAIAkQsQYaIAgQsQYaIA0QsQYaIANB8AhqIBkgHRD/BiADQaAGahCnBiEfIAMoAvAIIgEgA0HwCGogH0F/IAEoAgAoAgwRBgAgCRCxBhogCBCxBhogDRCxBhogA0HoBWogBkEBdEEDQQYQqAYhGiAGQQFOBEAgHygCECEKIBcoAhAhDyAaKAIQIQcgHigCECEQIBYoAhAhESAfKAIsKAIAIRIgFygCLCgCACEUIBooAiwoAgAhCyAeKAIsKAIAIQwgFigCLCgCACEVQQAhAQNAIAcgASALbGoiACARIAEgFWxqIgQrAwAgECABIAxsaiIFKwMAoTkDACAAIAQrAwggBSsDCKE5AwggACAEKwMQIAUrAxChOQMQIAcgCyABIAZqbGoiACAPIAEgFGxqIgQrAwAgCiABIBJsaiIFKwMAoTkDACAAIAQrAwggBSsDCKE5AwggACAEKwMQIAUrAxChOQMQIAFBAWoiASAGRw0ACwsgA0GwBWoQpwYhByADQfgEahCnBiELIANCADcD+AggAyAaNgL0CCADQYCAhAg2AvAIIAMgBzYCvAEgA0GAgIQQNgK4ASADQgA3A8ABIANB8AhqIANBuAFqELQHIANB8AhqIAcgGhD/BiADKALwCCIBIANB8AhqIAtBfyABKAIAKAIMEQYAIAkQsQYaIAgQsQYaIA0QsQYaIANBwARqEKcGIQ8gA0GIBGoQpwYhBiADQgA3A/gIIAMgCzYC9AggA0GAgIQINgLwCCADIA82ArwBIANBgICEEDYCuAEgA0IANwPAASADIAY2AjwgA0GAgIQQNgI4IANCADcDQCADQfAIaiADQbgBaiADQThqEK4EGiADQdADakEDQQFBBhCoBiIAKAIsIQUgACgCECIBIAYoAhAgBigCLCgCAEEBdGoiBCsDADkDACABIAUoAgAiBWogBCsDCDkDACABIAVBAXRqIAQrAxA5AwAgA0G4AWogHBD+BiADQfAIaiADQbgBaiAAEIEHIANBmANqEKcGIQQgAygC8AgiASADQfAIaiAEQX8gASgCACgCDBEGACAJELEGGiAIELEGGiANELEGGiADQbACaiIQELEGGiADQfgBaiIRELEGGiADQcABaiISELEGGiADQbgBaiAdEP4GIANB8AhqIANBuAFqIAAQgQcgA0GAAWoQpwYhBSADKALwCCIBIANB8AhqIAVBfyABKAIAKAIMEQYAIAkQsQYaIAgQsQYaIA0QsQYaIBAQsQYaIBEQsQYaIBIQsQYaIAAoAhAiASAAKAIsKAIAIgpqIhQrAwAhKiABKwMAIS4gBCgCLCEMIAIgBCgCECIVKwMAOQMAIBUgDCgCAGorAwAhLyACIC0gLqIgKyAqoqCaOQMQIAIgLzkDCCAFKAIsIQwgAiAFKAIQIhUrAwA5AxggFSAMKAIAaisDACErIAIgLCAuoiApICqioJo5AyggAiArOQMgIAIgASsDADkDMCACIBQrAwA5AzggAiABIApBAXRqKwMAOQNAIANCADcDUCADQgA3A1ggA0HoAGoiAUIANwMAIANCADcDSCADQoOAgIAwNwNAIANChoD9lyQ3AzggAyABNgJkIAMgA0FAazYCYCADQfAIakEDQQNBBiACQQAQrgYhASADQYCAhBA2ArgBIANCADcDwAEgAyADQThqNgK8ASABIANBuAFqEJYEIAEQsQYaIANBuAFqICEgA0E4ahD/BiADQThqELEGGiADQfAIaiADQbgBaiAgEIEHIAMQpwYhCiADKALwCCIBIANB8AhqIApBfyABKAIAKAIMEQYAIANBOGogChDDCyACIANBOGpByAAQrhshASAKELEGGiAJELEGGiAIELEGGiANELEGGiAQELEGGiARELEGGiASELEGGiABIAErA0AiKUQAAAAAAADwPyApoyIpojkDQCABICkgASsDOKI5AzggASApIAErAzCiOQMwIAEgKSABKwMoojkDKCABICkgASsDIKI5AyAgASApIAErAxiiOQMYIAEgKSABKwMQojkDECABICkgASsDCKI5AwggASABKwMAICmiOQMAIAUQsQYaIAQQsQYaIAAQsQYaIAYQsQYaIA8QsQYaIAsQsQYaIAcQsQYaIBoQsQYaIB8QsQYaIB4QsQYaIB0QsQYaIBwQsQYaIBsQsQYaICYQsQYaIBgQsQYaIBkQsQYaIBcQsQYaIBYQsQYaICUQsQYaICQQsQYaICMQsQYaICIQsQYaICgQsQYaICEQsQYaICAQsQYaICcQsQYaIBMQsQYaIA4QsQYaIANB4BBqJAAL0ggCA38IfCMAQaADayIFJAAgA0EEQQRBBkEAQQAQ9wcgBEEEQQRBBkEAQQAQ9wcCQCADEMwHQYCABEYEQCAFQeACaiADKAIEEK0GGgwBCyAFQeACaiADEMkHCwJAIAQQzAdBgIAERgRAIAVBqAJqIAQoAgQQrQYaDAELIAVBqAJqIAQQyQcLIAVCgYCAgBA3A/gBIAVBhoCIiHw2AvABIAVCADcDuAEgBSAFQbgBajYC9AEgBUHgAmogBUHwAWpB1NYKEJkEIAUoAvACIAUoAowDKAIAQQNsakKAgICAgICA+D83AxggBUKBgICAEDcD+AEgBUGGgIiIfDYC8AEgBUIANwO4ASAFIAVBuAFqNgL0ASAFQagCaiAFQfABakHU1goQmQQgBSgCuAIgBSgC1AIoAgBBA2xqQoCAgICAgID4PzcDGCACKwMAIQwgAisDCCENIAIrAxAhCCACKwMYIQ4gAisDMCEKIAIrAyAhDyACKwMoIQkgAisDOCELIAVCgICAgPj/////ADcD8AEgBUKAgICAMDcDgAEgBUG4AWogBUHgAmogBUHwAWogBUGAAWoQugYhBCAFQoCAgIAwNwOAASAFQoCAgID4/////wA3A0ggBUHwAWogBCAFQYABaiAFQcgAahC6BiECIAQQsQYaIAVCgICAgPj/////ADcDuAEgBUKAgICAMDcDSCAFQYABaiAFQagCaiAFQbgBaiAFQcgAahC6BiEDIAVCgICAgDA3A0ggBUKAgICA+P////8ANwMQIAVBuAFqIAMgBUHIAGogBUEQahC6BiEEIAMQsQYaIAUgAjYChAEgBUGAgIQQNgKAASAFQgA3A4gBIAUgBDYCTCAFQYCAhBA2AkggBUIANwNQIAwgCiAIoqEgDSAIIAuioSAOIAogCaKhIA8gCyAJoqEgCCAJIAVBgAFqIAVByABqELoMIAVCgICAgPj/////ADcDgAEgBUKDgICAwAA3AxAgBUHIAGogBUHgAmogBUGAAWogBUEQahC6BiEDIAVCgICAgDA3AxAgBUKAgICA+P////8ANwMAIAVBgAFqIAMgBUEQaiAFELoGIQYgAxCxBhogBUKAgICA+P////8ANwNIIAVCg4CAgMAANwMAIAVBEGogBUGoAmogBUHIAGogBRC6BiEDIAVCgICAgDA3AwAgBUKAgICA+P////8ANwOYAyAFQcgAaiADIAUgBUGYA2oQugYhByADELEGGiAFQgA3AxggBSACNgIUIAVBgICECDYCECAFIAY2AgQgBUGAgIQQNgIAIAVCADcDCCAAIAEgBUEQaiAFELsMIAVCADcDGCAFIAQ2AhQgBUGAgIQINgIQIAUgBzYCBCAFQYCAhBA2AgAgBUIANwMIIAAgASAFQRBqIAUQuwwgBxCxBhogBhCxBhogBBCxBhogAhCxBhogBUGoAmoQsQYaIAVB4AJqELEGGiAFQaADaiQAC6gNAhB/An0jAEHABWsiBCQA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gIAERgRAIANBOGogASgCBBCtBhoMAQsgA0E4aiABEMkHCyADQfAAaiADQThqEJwHIANBiANqIANB0AJqIANB8ABqEIIHIANB6ARqIANBiANqEKYHIQEgA0GAgIQQNgIoIANCADcDMCADIAI2AiwgAyAFNgIcIANBgICEEDYCGCADQgA3AyAgAyAHNgIMIANBgICEEDYCCCADQgA3AxAgASADQShqIANBGGogA0EIakEAEK8EIANBgARqELEGGiADQcgDahCxBhogA0GQA2oQsQYaIANB6AFqELEGGiADQbABahCxBhogA0H4AGoQsQYaIANBOGoQsQYaIANB0AJqELEGGgJAAn8CQAJAIAItAAFBwABxDQAgAigCKCIBKAIAQQFGDQAgASgCBEEBRw0BIAIoAhAiBCACKAIsKAIAQQF0agwCCyACKAIQIgRBCGohASAEKwMQIQwMAgsgAigCECIEQQIgAigCDCIGbSILIAIoAiwoAgBsakECIAYgC2xrQQN0agsrAwAhDCABKAIEQQFGBEAgBCACKAIsKAIAaiEBDAELIAQgAigCDCIBQQAgAUEBakEDSRsiBiACKAIsKAIAbGpBASABIAZsa0EDdGohAQsgACsDACAMIAErAwCjZARAIANBiANqIAUQnAcgAygCiAMiASADQYgDaiADQcgHakF/IAEoAgAoAgwRBgAgA0GABGoQsQYaIANByANqELEGGiADQZADahCxBhogA0IANwOQAyADQYCAhAg2AogDIAMgA0HIB2o2AowDIANBiANqEKoERAAAAAAAAAAAY0EBc0UEQCADKALYByADKAL0BygCAEEBdGoiASABKwMAmjkDACABIAErAwiaOQMIIAEgASsDEJo5AxALIAcQsQYaIAUQsQYaIAIQsQYaIAoQsQYaIAkQsQYaIAgQsQYaIANByAdqELEGGiADQYAIaiQADwtBqX4gA0GIA2pBouwEEIkDQbfsBEGm3QRB1QYQmAoAC4UUAwx/AX0FfCMAQeADayIEJAACQCAAEMwHQYCABEYEQCAEQagDaiAAKAIEEK0GGgwBCyAEQagDaiAAEMkHCwJAAkACQCAEKAKwAyIMQQFHQQAgBCgCtAMiCUEBRxtFBEAgBCgCqANBA3ZB/wNxQQFrQQJPDQEgCSAMbCIJQQNMDQIgABDLByIKQRZLDQNBASAK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aiAIQcgBahC6BiEAIAhCgICAgDA3A4ABIAhCgICAgPj/////ADcDcCAIQThqIAAgCEGAAWogCEHwAGoQugYhBCAIQgA3A9ABIAggBDYCzAEgCEGAgIQINgLIASAIQcgBaiACELIMIAQQsQYaIAAQsQYaIAhCgICAgPj/////ADcDOCAIQoCAgIAwNwPIASAIIAogCEE4aiAIQcgBahC6BiEAIAhCgICAgDA3A4ABIAhCgICAgPj/////ADcDcCAIQThqIAAgCEGAAWogCEHwAGoQugYhBCAIQgA3A9ABIAggBDYCzAEgCEGAgIQINgLIASAIQcgBaiAFELIMIAQQsQYaIAAQsQYaIAhCgICAgPj/////ADcDOCAIQoOAgIDAADcDyAEgCCABIAhBOGogCEHIAWoQugYhACAIQoCAgIAwNwPIASAIQoCAgID4/////wA3A4ABIAhBOGogACAIQcgBaiAIQYABahC6BiIEIAMQlgQgBBCxBhogABCxBhogCEKAgICA+P////8ANwM4IAhCg4CAgMAANwPIASAIIAogCEE4aiAIQcgBahC6BiEAIAhCgICAgDA3A8gBIAhCgICAgPj/////ADcDgAEgCEE4aiAAIAhByAFqIAhBgAFqELoGIgQgBhCWBCAEELEGGiAAELEGGiAKELEGGiABELEGGiAOELEGGiANELEGGiAJELEGGiAMELEGGiAIQYAEahCxBhogCxCxBhogCEHwBGokAAuREQIEfxV8IwBBwAFrIgMkAAJ8An8CQAJAIAAQywdBDUcEQCAAEMsHQQ5HDQELAkAgABDMB0GAgARGBEAgA0GIAWogACgCBBCtBhoMAQsgA0GIAWogABDJBwsgABDLByEAIAMoAogBQYCAAXEhBSAAQQ1GBEACQAJAIAVFBEAgAygCmAEiACoCBIy7IQ0gACoCAIy7IQ4CQAJAAkACQAJAAkACQCADKAKwASIFKAIAQQFHBEACfyAFKAIEQQFGBEAgACADKAK0ASgCAGoMAQsgACADKAKUASIEQQAgBEEBakEDSRsiBiADKAK0ASgCAGxqQQEgBCAGbGtBA3RqCyoCAIy7IQoMAQsgACoCCIy7IQogAygCsAEiBSgCAEEBRg0BCwJ/IAUoAgRBAUYEQCAAIAMoArQBKAIAagwBCyAAIAMoApQBIgRBACAEQQFqQQNJ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ACsDkAIgGyABKwMIoqE5A5ACIAAgACsDmAIgHCABKwMIoqE5A5gCIAAgACsD2AIgHSABKwMIoqE5A9gCIAAgACsD4AIgHiABKwMIoqE5A+ACIAAgACsDqAMgHyABKwMIoqE5A6gDIAAgGCAYoiAZIBmioCIQIBqiIAArA+ADoDkD4AMgACAQIBuiIAArA+gDoDkD6AMgACAQIByiIAArA/ADoDkD8AMgACAQIB2iIAArA7AEoDkDsAQgACAQIB6iIAArA7gEoDkDuAQgACAQIB+iIAArA4AFoDkDgAUgAyACKwMAIAMrA7gJoDkDuAkgAyACKwMIIAMrA8AJoDkDwAkgAyACKwMQIAMrA8gJoDkDyAkgAyACKwMAIAMrA5gKoDkDmAogAyACKwMIIAMrA6AKoDkDoAogAyACKwMQIAMrA6gKoDkDqAogAyADKwPoCSABKwMAIAIrAwCioTkD6AkgAyADKwPwCSABKwMAIAIrAwiioTkD8AkgAyADKwP4CSABKwMAIAIrAxCioTkD+AkgAyADKwOwCiABKwMIIAIrAwCioTkDsAogAyADKwO4CiABKwMIIAIrAwiioTkDuAogAyADKwPACiABKwMIIAIrAxCioTkDwAogAyADKwPICiABKwMAIAIrAwCioTkDyAogAyADKwPQCiABKwMAIAIrAwiioTkD0AogAyADKwPYCiABKwMAIAIrAxCioTkD2AogAyADKwPgCiABKwMIIAIrAwCioTkD4AogAyADKwPoCiABKwMIIAIrAwiioTkD6AogAyADKwPwCiABKwMIIAIrAxCioTkD8AogAyADKwP4CiAQIAIrAwCioDkD+AogAyADKwOACyAQIAIrAwiioDkDgAsgAyADKwOICyAQIAIrAxCioDkDiAsgIiARoCEiICEgEqAhISAgIBegISAgEyAZoCETIBUgGKAhFSAWIBCgIRYgBEEBaiIEIAVHDQALCyAAIAArAzg5A3ggACAAKwNAOQPAASAAIAArA4gBOQPIASAAIAArA5ACOQPQAiAAIAArA5gCOQOYAyAAIAArA+ACOQOgAyAAIAArA+gDOQOoBCAAIAArA/ADOQPwBCAAIAArA7gEOQP4BCAAIAArAwA5A/ABIAAgACsDCCIQOQP4ASAAIAArAxAiETkDgAIgACAAKwNQOQPAAiAAIAArA1giEjkD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IAIrAwAgA0HAA2ogAWorAwCgOQMAIARBAWoiBEHRAEcNAAsgA0KJgICAkAE3A8gDIANBhoCIiHw2AsADIAMgADYCxAMgA0GYAmoQpwYhByADQdACahCnBiEFIANBiANqEKcGIQYgA0GYAmogA0HAA2oQtQQgA0HAA2ogBRDZDCAAQYgFaiADQcADakHIABCuGxogAyAGEJwHIANB4AFqEKcGIQEgAygCACICIAMgAUF/IAIoAgAoAgwRBgAgA0HAA2ogARDaDCAAQdAFaiADQcADakGIBRCuGxogARCxBhogA0H4AGoQsQYaIANBQGsQsQYaIANBCGoQsQYaAkACQCAAKwOIBURIr7ya8td6PmZBAXNFBEAgAEEAIAAoAsgMIgFrQQN0aisDwAVESK+8mvLXej5jDQEgASEEDAILQal+IANBwANqQYOBBRCJA0H2gAVBwPwEQfsBEJgKAAsDQEEGIAFrIQIgAUEBaiIEIQEgACACQQN0aisDiAVESK+8mvLXej5jDQALCyAAIARBAWo2AsgMIARBBk4NASAAQcAMaiAiIBSjOQMAIABBuAxqICEgFKM5AwAgACAgIBSjOQOwDCAGELEGGiAFELEGGiAHELEGGiADQcgIahCxBhogA0GACWoQsQYaIANBkAtqJAAPC0GpfiADQcADakHAgAUQiQNB9oAFQcD8BEHuARCYCgALQal+IANBwANqQZGBBRCJA0H2gAVBwPwEQf8BEJgKAAu8HAIFfxt8IwBB0ANrIgEkACABQv/////////3/wA3A8gDRP///////+9/IQdBCSAAKALIDCICa0EIIAJBAEobIgRBCEwEQCABQZgCaiEFIAQhAwNAIAAgA0EDdGoiAisD0AUhCCACKwOYBiEJIAIrA+AGIQogAisDqAchCyACKwPwByEMIAJBuAhqKwMAIQ0gAkGACWorAwAhDiACQcgJaisDACEPIAEgAkGQCmorAwBEqkxY6Hq2+z+iIgc5A8ADIAEgD0SqTFjoerb7P6IiDzkDuAMgASAORKpMWOh6tvs/oiIOOQOwAyABIA1EqkxY6Hq2+z+iIg05A6gDIAEgDESqTFjoerb7P6IiDDkDoAMgASALRKpMWOh6tvs/oiILOQOYAyABIApEqkxY6Hq2+z+iIgo5A5ADIAEgCUSqTFjoerb7P6IiCTkDiAMgASAI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NgIAAkAgACgCECIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsCQCAAKAIIIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAEKIbCxgAIAAoAgQiACABIAIgACgCACgCIBEFAAu9AgEDfyMAQRBrIgMkACADQQhqIAEoAgQiAiACKAIAKAIsEQIAIAMgASgCDCIBIAEoAgAoAiwRAgBBIBDVGiIBQgA3AgQgAUGokgU2AgAgAUEMaiIEEOMLGiABQaSTBTYCDCABIAMoAgg2AhAgASADKAIMIgI2AhQgAgRAIAIgAigCBEEBajYCBAsgASADKAIANgIYIAEgAygCBCICNgIcAkAgAkUEQCAAIAE2AgQgACAENgIADAELIAIgAigCBEEBajYCBCADKAIEIQIgACABNgIEIAAgBDYCACACRQ0AIAIgAigCBCIBQQFrNgIEIAENACACIAIoAgAoAggRAQAgAhDQGgsCQCADKAIMIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyADQRBqJAALiQEBA38gAEG0lQU2AgwgAEG8lAU2AgACQCAAKAIcIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQQxqIQICQCAAKAIUIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCyACEOMLGiAAC4wBAQN/IABBtJUFNgIMIABBvJQFNgIAAkAgACgCHCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgAEEMaiECAkAgACgCFCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgAhDjCxogABCiGwt5AQJ/IABBtJUFNgIAAkAgACgCECIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsCQCAAKAIIIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAC3wBAn8gAEG0lQU2AgACQCAAKAIQIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAAQohsLvQIBA38jAEEQayIDJAAgA0EIaiABKAIEIgIgAigCACgCLBECACADIAEoAgwiASABKAIAKAIsEQIAQSAQ1RoiAUIANwIEIAFBvJQFNgIAIAFBDGoiBBDjCxogAUG0lQU2AgwgASADKAIINgIQIAEgAygCDCICNgIUIAIEQCACIAIoAgRBAWo2AgQLIAEgAygCADYCGCABIAMoAgQiAjYCHAJAIAJFBEAgACABNgIEIAAgBDYCAAwBCyACIAIoAgRBAWo2AgQgAygCBCECIAAgATYCBCAAIAQ2AgAgAkUNACACIAIoAgQiAUEBazYCBCABDQAgAiACKAIAKAIIEQEAIAIQ0BoLAkAgAygCDCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgA0EQaiQACzcBAX8gAEHQlwU2AgwgAEHIlgU2AgAgACgCYCIBBEAgACABNgJkIAEQohsLIABBDGoQ4wsaIAALOgEBfyAAQdCXBTYCDCAAQciWBTYCACAAKAJgIgEEQCAAIAE2AmQgARCiGwsgAEEMahDjCxogABCiGwsrAQF/IABB0JcFNgIAIAAoAlQiAQRAIAAgATYCWCABEKIbCyAAEOMLGiAACy4BAX8gAEHQlwU2AgAgACgCVCIBBEAgACABNgJYIAEQohsLIAAQ4wsaIAAQohsLnwMBAn8jAEGgAmsiAyQAAkACQCABELcGRQRAIAEoAgBBB3EiAkEGRw0BIAAgASgCECICKwMAtjgCDCAAIAIrAwi2OAIQIAAgAisDELY4AhQgACACKwMYtjgCGCAAIAIrAyC2OAIcIAAgAisDKLY4AiAgACACKwMwtjgCJCAAIAIrAzi2OAIoIAAgAisDQLY4AiwgA0EIaiABQQAQnQcgA0HoAWoQpwYhASADKAIIIgIgA0EIaiABQX8gAigCACgCDBEGACADQYABahCxBhogA0HIAGoQsQYaIANBEGoQsQYaIAEoAgBBB3EiAkEGRw0CIAAgASgCECICKwMAtjgCMCAAIAIrAwi2OAI0IAAgAisDELY4AjggACACKwMYtjgCPCAAIAIrAyC2OAJAIAAgAisDKLY4AkQgACACKwMwtjgCSCAAIAIrAzi2OAJMIAAgAisDQLY4AlAgARCxBhogA0GgAmokAA8LQal+IANBCGpBiJkFEIkDQZeZBUGqmQVB8QEQmAoACyACQQZB2JkFENIDAAsgAkEGQeiaBRDSAwALhAICAX8FfSAAKAIIIgIgAUEEdCIBQQhyaioCACIDQwAAgD8gACoCLCABIAJqKgIAIgQgACoCJJQgAiABQQRyaioCACIHIAAqAiiUkpKVIgUgACoCFCAEIAAqAgyUIAcgACoCEJSSkpSTIgYgBpQgAiABQQxyaioCACIGIAUgACoCICAEIAAqAhiUIAcgACoCHJSSkpSTIgUgBZSSIARDAACAPyAAKgJQIAMgACoCSJQgBiAAKgJMlJKSlSIFIAAqAjggAyAAKgIwlCAGIAAqAjSUkpKUkyIEIASUkiAHIAUgACoCRCADIAAqAjyUIAYgACoCQJSSkpSTIgMgA5SSQwAAAD+UC8wCAgR/BX0gACABIAAoAgAoAiARAgAgACgCBCgCCCIEQQFOBEAgACgCVCEFIAAoAgghAQNAIAUgAkECdGogASACQQR0IgNBCHJqKgIAIgZDAACAPyAAKgIsIAEgA2oqAgAiByAAKgIklCABIANBBHJqKgIAIgogACoCKJSSkpUiCCAAKgIUIAcgACoCDJQgCiAAKgIQlJKSlJMiCSAJlCABIANBDHJqKgIAIgkgCCAAKgIgIAcgACoCGJQgCiAAKgIclJKSlJMiCCAIlJIgB0MAAIA/IAAqAlAgBiAAKgJIlCAJIAAqAkyUkpKVIgggACoCOCAGIAAqAjCUIAkgACoCNJSSkpSTIgcgB5SSIAogCCAAKgJEIAYgACoCPJQgCSAAKgJAlJKSlJMiBiAGlJJDAAAAP5Q4AgAgAkEBaiICIARHDQALCyAAQdQAagu9AQEEfyABKAIEIQJB7AAQ1RoiAUIANwIEIAFByJYFNgIAIAFBDGoiBBDjCxogASACNgIQIAFB0JcFNgIMIAEgAigCEDYCFCABQRhqQQBByAAQrxsaIAIoAgghAiABQQA2AmggAUIANwJgAkAgAgRAIAJBgICAgARPDQEgASACQQJ0IgIQ1RoiAzYCYCABIAIgA2oiBTYCaCADQQAgAhCvGxogASAFNgJkCyAAIAE2AgQgACAENgIADwsQ/BoACzoBAX8gAEGknAU2AgwgAEGgmwU2AgAgACgCPCIBBEAgAEFAayABNgIAIAEQohsLIABBDGoQ4wsaIAALPQEBfyAAQaScBTYCDCAAQaCbBTYCACAAKAI8IgEEQCAAQUBrIAE2AgAgARCiGwsgAEEMahDjCxogABCiGwsrAQF/IABBpJwFNgIAIAAoAjAiAQRAIAAgATYCNCABEKIbCyAAEOMLGiAACy4BAX8gAEGknAU2AgAgACgCMCIBBEAgACABNgI0IAEQohsLIAAQ4wsaIAAQohsLvwEBAn8jAEEQayICJAACQCABELcGRQRAIAEoAgBBB3EiA0EGRw0BIAAgASgCECIBKwMAtjgCDCAAIAErAwi2OAIQIAAgASsDELY4AhQgACABKwMYtjgCGCAAIAErAyC2OAIcIAAgASsDKLY4AiAgACABKwMwtjgCJCAAIAErAzi2OAIoIAAgASsDQLY4AiwgAkEQaiQADwtBqX4gAkGImQUQiQNBl5kFQaqZBUG1AhCYCgALIANBBkG8nQUQ0gMAC5cBAgF/BH0gACgCCCICIAFBBHQiAUEIcmoqAgBDAACAPyAAKgIsIAEgAmoqAgAiAyAAKgIklCACIAFBBHJqKgIAIgQgACoCKJSSkpUiBSAAKgIUIAMgACoCDJQgBCAAKgIQlJKSlJMiBiAGlCACIAFBDHJqKgIAIAUgACoCICADIAAqAhiUIAQgACoCHJSSkpSTIgMgA5SSC94BAgR/BH0gACABIAAoAgAoAiARAgAgACgCBCgCCCIEQQFOBEAgACgCMCEFIAAoAgghAQNAIAUgAkECdGogASACQQR0IgNBCHJqKgIAQwAAgD8gACoCLCABIANqKgIAIgYgACoCJJQgASADQQRyaioCACIHIAAqAiiUkpKVIgggACoCFCAGIAAqAgyUIAcgACoCEJSSkpSTIgkgCZQgASADQQxyaioCACAIIAAqAiAgBiAAKgIYlCAHIAAqAhyUkpKUkyIGIAaUkjgCACACQQFqIgIgBEcNAAsLIABBMGoL1gEBBH8gASgCBCECQcgAENUaIgFCADcCBCABQaCbBTYCACABQQxqIgQQ4wsaIAEgAjYCECABQaScBTYCDCACKAIQIQMgAUIANwIYIAEgAzYCFCABQgA3AiAgAUIANwIoIAFCADcCMCABQQA2AjggAigCCCECIAFBADYCRCABQgA3AjwCQCACBEAgAkGAgICABE8NASABIAJBAnQiAhDVGiIDNgI8IAEgAiADaiIFNgJEIANBACACEK8bGiABIAU2AkALIAAgATYCBCAAIAQ2AgAPCxD8GgALOgEBfyAAQbSfBTYCDCAAQbyeBTYCACAAKAI8IgEEQCAAQUBrIAE2AgAgARCiGwsgAEEMahDjCxogAAs9AQF/IABBtJ8FNgIMIABBvJ4FNgIAIAAoAjwiAQRAIABBQGsgATYCACABEKIbCyAAQQxqEOMLGiAAEKIbCysBAX8gAEG0nwU2AgAgACgCMCIBBEAgACABNgI0IAEQohsLIAAQ4wsaIAALLgEBfyAAQbSfBTYCACAAKAIwIgEEQCAAIAE2AjQgARCiGwsgABDjCxogABCiGwu/AQECfyMAQRBrIgIkAAJAIAEQtwZFBEAgASgCAEEHcSIDQQZHDQEgACABKAIQIgErAwC2OAIMIAAgASsDCLY4AhAgACABKwMQtjgCFCAAIAErAxi2OAIYIAAgASsDILY4AhwgACABKwMotjgCICAAIAErAzC2OAIkIAAgASsDOLY4AiggACABKwNAtjgCLCACQRBqJAAPC0GpfiACQYiZBRCJA0GXmQVBqpkFQesCEJgKAAsgA0EGQbSgBRDSAwALzwECAX8LfSAAKgIsIAAoAggiAiABQQR0IgFBBHJqKgIAIgQgACoCKCIIlCABIAJqKgIAIgMgACoCJCIJlCACIAFBCHJqKgIAIgUgACoCFCADIAAqAgwiCpQgBCAAKgIQIguUkpIiBpQgAiABQQxyaioCACIHIAAqAiAgAyAAKgIYIgyUIAQgACoCHCIDlJKSIgSUkpKSkiINIA2UIAUgC5QgByADlJIgCJIiAyADlCAFIAqUIAcgDJSSIAmSIgMgA5QgBiAGlCAEIASUkpKSlQuWAgIEfwt9IAAgASAAKAIAKAIgEQIAIAAoAgQoAggiBEEBTgRAIAAoAjAhBSAAKAIIIQEDQCAFIAJBAnRqIAAqAiwgASACQQR0IgNBBHJqKgIAIgcgACoCKCILlCABIANqKgIAIgYgACoCJCIMlCABIANBCHJqKgIAIgggACoCFCAGIAAqAgwiDZQgByAAKgIQIg6UkpIiCZQgASADQQxyaioCACIKIAAqAiAgBiAAKgIYIg+UIAcgACoCHCIGlJKSIgeUkpKSkiIQIBCUIAggDpQgCiAGlJIgC5IiBiAGlCAIIA2UIAogD5SSIAySIgYgBpQgCSAJlCAHIAeUkpKSlTgCACACQQFqIgIgBEcNAAsLIABBMGoL1gEBBH8gASgCBCECQcgAENUaIgFCADcCBCABQbyeBTYCACABQQxqIgQQ4wsaIAEgAjYCECABQbSfBTYCDCACKAIQIQMgAUIANwIYIAEgAzYCFCABQgA3AiAgAUIANwIoIAFCADcCMCABQQA2AjggAigCCCECIAFBADYCRCABQgA3AjwCQCACBEAgAkGAgICABE8NASABIAJBAnQiAhDVGiIDNgI8IAEgAiADaiIFNgJEIANBACACEK8bGiABIAU2AkALIAAgATYCBCAAIAQ2AgAPCxD8GgALOgEBfyAAQbCiBTYCDCAAQaihBTYCACAAKAI8IgEEQCAAQUBrIAE2AgAgARCiGwsgAEEMahDjCxogAAs9AQF/IABBsKIFNgIMIABBqKEFNgIAIAAoAjwiAQRAIABBQGsgATYCACABEKIbCyAAQQxqEOMLGiAAEKIbCysBAX8gAEGwogU2AgAgACgCMCIBBEAgACABNgI0IAEQohsLIAAQ4wsaIAALLgEBfyAAQbCiBTYCACAAKAIwIgEEQCAAIAE2AjQgARCiGwsgABDjCxogABCiGwu/AQECfyMAQRBrIgIkAAJAIAEQtwZFBEAgASgCAEEHcSIDQQZHDQEgACABKAIQIgErAwC2OAIMIAAgASsDCLY4AhAgACABKwMQtjgCFCAAIAErAxi2OAIYIAAgASsDILY4AhwgACABKwMotjgCICAAIAErAzC2OAIkIAAgASsDOLY4AiggACABKwNAtjgCLCACQRBqJAAPC0GpfiACQYiZBRCJA0GXmQVBqpkFQbIDEJgKAAsgA0EGQcyjBRDSAwAL1AECAX8LfSAAKgIsIAAoAggiAiABQQR0IgFBDHJqKgIAIgMgACoCICIJlCACIAFBCHJqKgIAIgQgACoCFCIKlCABIAJqKgIAIgYgACoCJCAEIAAqAgwiC5QgAyAAKgIYIgyUkpIiB5QgAiABQQRyaioCACIIIAAqAiggBCAAKgIQIg2UIAMgACoCHCIElJKSIgOUkpKSkiIFIAWUIgUgByAHlCADIAOUkpUgBSAGIAuUIAggDZSSIAqSIgMgA5QgBiAMlCAIIASUkiAJkiIDIAOUkpWSC5sCAgR/C30gACABIAAoAgAoAiARAgAgACgCBCgCCCIEQQFOBEAgACgCMCEFIAAoAgghAQNAIAUgAkECdGogACoCLCABIAJBBHQiA0EMcmoqAgAiBiAAKgIgIgyUIAEgA0EIcmoqAgAiByAAKgIUIg2UIAEgA2oqAgAiCSAAKgIkIAcgACoCDCIOlCAGIAAqAhgiD5SSkiIKlCABIANBBHJqKgIAIgsgACoCKCAHIAAqAhAiEJQgBiAAKgIcIgeUkpIiBpSSkpKSIgggCJQiCCAKIAqUIAYgBpSSlSAIIA0gCSAOlCALIBCUkpIiBiAGlCAJIA+UIAsgB5SSIAySIgYgBpSSlZI4AgAgAkEBaiICIARHDQALCyAAQTBqC9YBAQR/IAEoAgQhAkHIABDVGiIBQgA3AgQgAUGooQU2AgAgAUEMaiIEEOMLGiABIAI2AhAgAUGwogU2AgwgAigCECEDIAFCADcCGCABIAM2AhQgAUIANwIgIAFCADcCKCABQgA3AjAgAUEANgI4IAIoAgghAiABQQA2AkQgAUIANwI8AkAgAgRAIAJBgICAgARPDQEgASACQQJ0IgIQ1RoiAzYCPCABIAIgA2oiBTYCRCADQQAgAhCvGxogASAFNgJACyAAIAE2AgQgACAENgIADwsQ/BoACzcBAX8gAEHQpQU2AgwgAEHMpAU2AgAgACgCSCIBBEAgACABNgJMIAEQohsLIABBDGoQ4wsaIAALOgEBfyAAQdClBTYCDCAAQcykBTYCACAAKAJIIgEEQCAAIAE2AkwgARCiGwsgAEEMahDjCxogABCiGwsuAQF/IABB0KUFNgIAIAAoAjwiAQRAIABBQGsgATYCACABEKIbCyAAEOMLGiAACzEBAX8gAEHQpQU2AgAgACgCPCIBBEAgAEFAayABNgIAIAEQohsLIAAQ4wsaIAAQohsL4AEBAn8jAEEQayICJAACQCABELcGRQRAIAEoAgBBB3EiA0EGRw0BIAAgASgCECIBKwMAtjgCDCAAIAErAwi2OAIQIAAgASsDELY4AhQgACABKwMYtjgCGCAAIAErAyC2OAIcIAAgASsDKLY4AiAgACABKwMwtjgCJCAAIAErAzi2OAIoIAAgASsDQLY4AiwgACABKwNItjgCMCAAIAErA1C2OAI0IAAgASsDWLY4AjggAkEQaiQADwtBqX4gAkGImQUQiQNBl5kFQaqZBUHyAxCYCgALIANBBkHopgUQ0gMAC6EBAQV9IAAoAgggAUEUbGoiASoCAEMAAIA/IAAqAjggASoCCCICIAAqAiyUIAEqAgwiAyAAKgIwlJIgASoCECIEIAAqAjSUkpKVIgUgACoCGCACIAAqAgyUIAMgACoCEJSSIAQgACoCFJSSkpSTIgYgBpQgASoCBCAFIAAqAiggAiAAKgIclCADIAAqAiCUkiAEIAAqAiSUkpKUkyICIAKUkgvsAQIEfwV9IAAgASAAKAIAKAIgEQIAIAAoAgQoAggiA0EBTgRAIAAoAjwhBCAAKAIIIQUDQCAEIAJBAnRqIAUgAkEUbGoiASoCAEMAAIA/IAAqAjggASoCCCIGIAAqAiyUIAEqAgwiByAAKgIwlJIgASoCECIIIAAqAjSUkpKVIgkgACoCGCAGIAAqAgyUIAcgACoCEJSSIAggACoCFJSSkpSTIgogCpQgASoCBCAJIAAqAiggBiAAKgIclCAHIAAqAiCUkiAIIAAqAiSUkpKUkyIGIAaUkjgCACACQQFqIgIgA0cNAAsLIABBPGoL4AEBBH8gASgCBCECQdQAENUaIgFCADcCBCABQcykBTYCACABQQxqIgQQ4wsaIAEgAjYCECABQdClBTYCDCACKAIQIQMgAUIANwIYIAEgAzYCFCABQgA3AiAgAUIANwIoIAFCADcCMCABQgA3AjggAUFAa0IANwIAIAIoAgghAiABQQA2AlAgAUIANwJIAkAgAgRAIAJBgICAgARPDQEgASACQQJ0IgIQ1RoiAzYCSCABIAIgA2oiBTYCUCADQQAgAhCvGxogASAFNgJMCyAAIAE2AgQgACAENgIADwsQ/BoACzcBAX8gAEHwqAU2AgwgAEHopwU2AgAgACgCMCIBBEAgACABNgI0IAEQohsLIABBDGoQ4wsaIAALOgEBfyAAQfCoBTYCDCAAQeinBTYCACAAKAIwIgEEQCAAIAE2AjQgARCiGwsgAEEMahDjCxogABCiGwsrAQF/IABB8KgFNgIAIAAoAiQiAQRAIAAgATYCKCABEKIbCyAAEOMLGiAACy4BAX8gAEHwqAU2AgAgACgCJCIBBEAgACABNgIoIAEQohsLIAAQ4wsaIAAQohsLngEBAn8jAEEQayICJAACQCABELcGRQRAIAEoAgBBB3EiA0EGRw0BIAAgASgCECIBKwMAtjgCDCAAIAErAwi2OAIQIAAgASsDELY4AhQgACABKwMYtjgCGCAAIAErAyC2OAIcIAAgASsDKLY4AiAgAkEQaiQADwtBqX4gAkGImQUQiQNBl5kFQaqZBUGxBBCYCgALIANBBkGIqgUQ0gMAC3QCAX8DfSAAKAIIIgIgAUEEdCIBQQhyaioCACAAKgIUIAEgAmoqAgAiAyAAKgIMlCACIAFBBHJqKgIAIgQgACoCEJSSkpMiBSAFlCACIAFBDHJqKgIAIAAqAiAgAyAAKgIYlCAEIAAqAhyUkpKTIgMgA5SSC7sBAgR/A30gACABIAAoAgAoAiARAgAgACgCBCgCCCIEQQFOBEAgACgCJCEFIAAoAgghAQNAIAUgAkECdGogASACQQR0IgNBCHJqKgIAIAAqAhQgASADaioCACIGIAAqAgyUIAEgA0EEcmoqAgAiByAAKgIQlJKSkyIIIAiUIAEgA0EMcmoqAgAgACoCICAGIAAqAhiUIAcgACoCHJSSkpMiBiAGlJI4AgAgAkEBaiICIARHDQALCyAAQSRqC8cBAQR/IAEoAgQhAkE8ENUaIgFCADcCBCABQeinBTYCACABQQxqIgQQ4wsaIAEgAjYCECABQfCoBTYCDCACKAIQIQMgAUIANwIYIAEgAzYCFCABQgA3AiAgAUIANwIoIAIoAgghAiABQQA2AjggAUIANwIwAkAgAgRAIAJBgICAgARPDQEgASACQQJ0IgIQ1RoiAzYCMCABIAIgA2oiBTYCOCADQQAgAhCvGxogASAFNgI0CyAAIAE2AgQgACAENgIADwsQ/BoACxYAIABBiKsFNgIAIABBDGoQ4wsaIAALGQAgAEGIqwU2AgAgAEEMahDjCxogABCiGwsNACAAEOMLGiAAEKIbC6gGAwV/Bn0IfCMAQUBqIgokAAJAAkAgA0EATARARAAAAAAAAAAAIAO3IhWjIhQhFiAUIRcgFCEYDAELIAAoAgQhBiACKAIAIQkDQCARIAYgCSAIQQJ0aigCAEEEdCIHaioCALugIREgFCAGIAdBDHJqKgIAu6AhFCATIAYgB0EIcmoqAgC7oCETIBIgBiAHQQRyaioCALugIRIgCEEBaiIIIANHDQALIBQgA7ciFaMhFCATIBWjIRYgEiAVoyEXIBEgFaMhGCADQQFIBEBEAAAAAAAAAAAhEQwBCyAAKAIEIQYgAigCACEJQQAhCEQAAAAAAAAAACESRAAAAAAAAAAAIREDQCARIAYgCSAIQQJ0aigCAEEEdCIHQQhyaioCALsgFqEiEyAToiAGIAdBDHJqKgIAuyAUoSITIBOioJ+gIREgEiAGIAdqKgIAuyAYoSITIBOiIAYgB0EEcmoqAgC7IBehIhMgE6Kgn6AhEiAIQQFqIgggA0cNAAsMAQtEAAAAAAAAAAAhEgsgBEIANwMwIARCADcDGCAEQgA3AwggBEKAgICAgICA+D83A0AgBEIANwM4IAREzTt/Zp6g9j8gEiAVo6MiEjkDICAEIBI5AwAgBCASIBeaoiITOQMoIAQgEiAYmqIiFzkDECAFQgA3AzAgBUTNO39mnqD2PyARIBWjoyIRIBSaoiIUOQMoIAUgETkDICAFQgA3AxggBSARIBaaoiIWOQMQIAVCADcDCCAFIBE5AwAgBUIANwM4IAVCgICAgICAgPg/NwNAIAEgCkEIaiADQQRBBRCoBiIGELkGGiAGELEGGiADQQFOBEAgEbYhCyAStiEMIBS2IQ0gFrYhDiATtiEPIBe2IRAgACgCBCEHIAIoAgAhBCABKAIQIQZBACEJA0AgBiAHIAQgCUECdGooAgBBBHQiCGoqAgAgDJQgEJI4AgAgBiAHIAhBBHJqKgIAIAyUIA+SOAIEIAYgByAIQQhyaioCACALlCAOkjgCCCAGIAcgCEEMcmoqAgAgC5QgDZI4AgwgBkEQaiEGIAlBAWoiCSADRw0ACwsgCkFAayQAC4kGAg5/CnxBpPkKQgA3AgBBoPkKQbgXNgIAQZj5CkLS8PqouL2U/D83AwBBkPkKQvuouL2U3J6JwAA3AwBBrPkKQgA3AgBBtPkKQgA3AgBBvPkKQgA3AgBBxPkKQQA2AgBBkAMQ1RpB+KwFQZADEK4bIQdBkAMQ1RpBiLAFQZADEK4bIQhBkAMQ1RpBmLMFQZADEK4bIQlBrPkKQcC7ARDVGkEAQcC7ARCvGyIBQcC7AWoiAzYCAEGo+QogAzYCAEGk+QogATYCAEG4+QpBwLsBENUaQQBBwLsBEK8bIgNBwLsBaiIANgIAQbT5CiAANgIAQbD5CiADNgIAQcT5CkHAuwEQ1RpBAEHAuwEQrxsiBkHAuwFqIgA2AgBBwPkKIAA2AgBBvPkKIAY2AgBEau+0kfhb/D8hDkRq77SR+Fv8PyEPA0AgDyEQIBQhESAOIRIgCSAEQQFqIgRBA3QiAGorAwAiDiASoUQAAAAAAIBOQKMhFSAAIAhqKwMAIhQgEaFEAAAAAACATkCjIRYgACAHaisDACIPIBChRAAAAAAAgE5AoyEXQQAhAANAIAEgAiIFQQN0IgJqIBAgFyAAtyIToqA5AwAgAiADaiARIBYgE6KgOQMAIAIgBmogEiAVIBOioDkDACAFQQFqIQIgAEEBaiIAQT1HDQALIARBMUcNAAsCQCAFQbcXTg0AIAVBA3QhCkHAuwEgAkEDdCIEayILQQFIIgxFBEAgASAKaiENIAtBA3YhACABIARqIQEDQCABIA0rAwA5AwAgAUEIaiEBIABBAUohBCAAQQFrIQAgBA0ACwsgDEUEQCADIApqIQQgC0EDdiEAIAMgAkEDdGohAQNAIAEgBCsDADkDACABQQhqIQEgAEEBSiEDIABBAWshACADDQALC0HAuwEgAkEDdCICayIAQQFIDQAgBiAFQQN0aiEBIABBA3YhACACIAZqIQIDQCACIAErAwA5AwAgAkEIaiECIABBAUohBSAAQQFrIQAgBQ0ACwsgCRCiGyAIEKIbIAcQohsLBwAgACgCEAspAAJAQcj5Ci0AAEEBcQ0AQcj5ChD9GkUNABC9DUHI+QoQgRsLQZD5CgtQAEG8+QooAgAiAARAQcD5CiAANgIAIAAQohsLQbD5CigCACIABEBBtPkKIAA2AgAgABCiGwtBpPkKKAIAIgAEQEGo+QogADYCACAAEKIbCwu1BQMBfwJ9BHwgABDjCxogAEH0vAU2AgAgACADKAIANgIEIAAgAygCBCIDNgIIIAMEQCADIAMoAgRBAWo2AgQLEL8NIQMgACAIOQNwIAAgBzkDaCAAIAk5A1AgACAGOQMwIAAgBTYCKCAAIAQ5AyAgACACNgIQIAAgAzYCDCAAIAEgAaI5AxggACADQRRqNgKoASAAKAIMEOQKIQMgAEL/////////9/8ANwN4IAAgAzYCrAEgACAAKwMwIgEgAaJEAAAAAAAA4D+iOQM4IAAgACgCKLciBEQAAAAAAADwP6BEAAAAAAAA4D+iIgY5A0ggACAERAAAAAAAAPC/oEQAAAAAAADgP6IiBDkDQCAAIAArAxiftiABtpUiCzgCgAEgACAGEKsbIgE5A2AgACAEEKsbOQNYIAAgCyALlCIMOAKEASAAIAEgC7ujOQOQASAAIAwgDJI4AowBIAAgDEMAAAA/lDgCiAEgACAAKAIMIgIoAhggAigCFGtBA3W4IAIrAwCjOQOYASAAKAIMKAIQIQMgAEK7+97O/Zvf7T03A6ABIAAgA0EBayICNgKwAUQAAAAAAAAAACEBIAArAxgiB0QAAAAAAAAAAGRBAXNFBEAgB0QAAAAAAAA+QKMhCCAAKwNoIQkgACsDkAEhDSAAKwOYASEOIAAoAqgBKAIAIQUgACgCrAEoAgAhCiAAKgKIAbshDyAAKgKMAbshEES7vdfZ33zbPSEGA0AgBiANIAogAiACAn8gASAOoiAQoxCIFSIEmUQAAAAAAADgQWMEQCAEqgwBC0GAgICAeAsiAyADQQBIGyACIANMG0EDdCIDaisDACAPoiABRAAAAAAAANA/oiADIAVqKwMAIAmhoqCiIgRjQQFzRQRAIAAgBDkDoAEgBCEGCyAIIAGgIgEgB2MNAAsLC4UGAQR/IwBBEGsiCyQAIAAQ4wsaIABBmMMFNgIAIAAgAaxC/////w8gARs3AwggACACKAIANgIQIAAgAigCBCICNgIUIAIEQCACIAIoAgRBAWo2AgQLQQAhAiAAQQA2AqgBIAAgCDkDSCAAIAc5A0AgACAEOQMoIAAgAzYCGCAAQgA3AoABIAAgCTYCuAEgAEIANwKIASAAQgA3ApABIABCADcCmAEgAEEANgKgASAAQv/////////3/wA3A7ABIAAgBEQAAAAAAAAiQKJEAAAAAAAA0D+iIgQ5AzAgAEQAAAAAAADwPyAEozkDOCALQQA2AgggC0IANwMAQQAhAQJAIAMEQCADQYCAgIAETw0BIANBAnQiChDVGiIBQQAgChCvGyAKaiIKIQwLIABBCGohDSAAIAo2ApQBIAAgDDYCkAEgACABNgKMASADQQBKBEADQCABIAJBAnRqIAI2AgAgAkEBaiICIANIDQALCyALIABBjAFqNgIEIAtBhICMmHg2AgAgC0IANwMIIAsgDRD5CQJAIAAoAogBIAAoAoABIgJrQQV1QRNLDQAgACgChAEhCkGABRDVGiIBQYAFaiEMIAEgCiACayIKaiENIApBAU4EQCABIAIgChCuGxoLIAAgDDYCiAEgACANNgKEASAAIAE2AoABIAJFDQAgAhCiGwsgACAFIAYQ7w1BACECIABBADoAvAEgAEL/////////9/8ANwNQIABBADYCHCAAIAlBAkkiCiAJQQNGciIBOgC9ASAKRQRAIAtBADYCCCALQgA3AwBBACEKQQAhCSADBEAgA0GAgICABE8NAiALIANBAnQiAxDVGiIJNgIAIAsgAyAJaiICNgIIIAlBACADEK8bGiALIAI2AgQgAiEKCyAAKAKYASIDBEAgACADNgKcASADEKIbIAsoAgghAiALKAIEIQogCygCACEJIAAtAL0BIQELIAAgAjYCoAEgACAKNgKcASAAIAk2ApgBCyAAIAFBAXM6AL4BIAtBEGokAA8LEPwaAAtXAQN/IABB8LcFNgIQIABB9LYFNgIAIABBEGohAgJAIAAoAhgiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIAIQ4wsaIAALWgEDfyAAQfC3BTYCECAAQfS2BTYCACAAQRBqIQICQCAAKAIYIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCyACEOMLGiAAEKIbCxMAIABBEGogACgCECgCABEAABoLRwECfyAAQfC3BTYCAAJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAALSgECfyAAQfC3BTYCAAJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAAQohsLjgECAn8BfSABKAIEIgMgAiADKAIAKAIgEQIAAkAgASgCDEEBSARAQQAhAwwBC0EAIQJBACEDA0AgASgCBCIEIAIgBCgCACgCJBEZACEFIAErAxiaIAMgASsDECAFu2RqIgMgASgCDCIEIAJrardkDQEgAkEBaiICIARIDQALCyAAIAM2AgAgACADt5o5AwgLJgAjAEEQayIAJABBq34gAEGguQUQiQNBsbkFQbq5BUHjARCYCgALpQECAn8BfCAAKwMQIQUgACgCBCIAIAEgACgCACgCKBEDACEAIAIoAgQiASACKAIAIgNrIgJBAUgEQEEADwsgAyABayIBIAIgASACShtBAnYiAkEBIAJBAUsbIQEgACgCACEEQQAhAkEAIQADQCAFIAQgAkECdGoqAgC7ZEEBc0UEQCADIABBAnRqIAI2AgAgAEEBaiEACyACQQFqIgIgAUcNAAsgAAucAQECfyAAKAIEIgAgASAAKAIAKAIoEQMAIQEgAigCBCIAIAIoAgAiBGsiAkEBSARAQQAPCyAEIABrIgAgAiAAIAJKG0ECdiICQQEgAkEBSxshACABKAIAIQVBACECQQAhAQNAIAUgAkECdGoqAgC7IANjQQFzRQRAIAQgAUECdGogAjYCACABQQFqIQELIAJBAWoiAiAARw0ACyABCxgAIAArAxggAWRBAXNFBEAgACABOQMYCwvlAQIDfwF8IAArAxAhBgJAIAIoAgQiA0UNACACKAIAQQAgA0EFdkECdCIEEK8bIQUgA0EfcSIDRQ0AIAQgBWoiBCAEKAIAQX9BICADa3ZBf3NxNgIACyAAKAIEIgAgASAAKAIAKAIoEQMAIQAgAigCBCIDQQFIBEBBAA8LIAIoAgAhBSAAKAIAIQRBACEAQQAhAQNAIAYgBCAAQQJ0aioCALtkQQFzRQRAIAUgAEEDdkH8////AXFqIgMgAygCAEEBIAB0cjYCACACKAIEIQMgAUEBaiEBCyAAQQFqIgAgA0gNAAsgAQsHACAAKAIMC+8BAgR/AXwjAEEQayIDJAAgA0EIaiABKAIEIgIgAigCACgCLBECAEEwENUaIgJCADcCBCACQfS2BTYCACABKwMQIQYgASgCDCEEIAJBEGoiBRDjCxogAkHwtwU2AhAgAiADKAIINgIUIAIgAygCDCIBNgIYIAEEfyABIAEoAgRBAWo2AgQgAygCDAVBAAshASACQv/////////3/wA3AyggAiAGOQMgIAIgBDYCHCAAIAI2AgQgACAFNgIAAkAgAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIANBEGokAAtXAQN/IABB5LoFNgIQIABB7LkFNgIAIABBEGohAgJAIAAoAhgiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIAIQ4wsaIAALWgEDfyAAQeS6BTYCECAAQey5BTYCACAAQRBqIQICQCAAKAIYIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCyACEOMLGiAAEKIbC0cBAn8gAEHkugU2AgACQCAAKAIIIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAC0oBAn8gAEHkugU2AgACQCAAKAIIIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAEKIbC7IBAgJ/AnwgASgCBCIDIAIgAygCACgCIBECAAJAIAEoAgxBAUgEQAwBC0EAIQIDQAJAIAEoAgQiAyACIAMoAgAoAiQRGQC7IgYgASsDIGNBAXMNACAFRAAAAAAAAPA/IAErAyggBqKhoSEFIAErAxAgBmRBAXMNACAEQQFqIQQLIAErAxggBSABKAIMIgO3oSACt6BjDQEgAkEBaiICIANIDQALCyAAIAU5AwggACAENgIAC54CAgR/AXwjAEEQayIDJAAgA0EIaiABKAIEIgIgAigCACgCLBECAEHAABDVGiICQgA3AgQgAkHsuQU2AgAgASsDECEGIAEoAgwhBCACQRBqIgUQ4wsaIAJB5LoFNgIQIAIgAygCCDYCFCACIAMoAgwiATYCGCABBH8gASABKAIEQQFqNgIEIAMoAgwFQQALIQEgAkL/////////9/8ANwMoIAIgBjkDICACIAQ2AhwgAiAGRAAAAAAAACJAokQAAAAAAADQP6IiBjkDMCACRAAAAAAAAPA/IAajOQM4IAAgAjYCBCAAIAU2AgACQCABRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgA0EQaiQAC1cBA38gAEH0vAU2AhAgAEH4uwU2AgAgAEEQaiECAkAgACgCGCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgAhDjCxogAAtaAQN/IABB9LwFNgIQIABB+LsFNgIAIABBEGohAgJAIAAoAhgiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIAIQ4wsaIAAQohsLRwECfyAAQfS8BTYCAAJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAALSgECfyAAQfS8BTYCAAJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAAQohsLxAICBH8DfCABKAIEIgMgAiADKAIAKAIgEQIAAkAgASgCEEEBSARAQQAhAwwBC0EAIQJBACEDA0AgASgCBCIEIAIgBCgCACgCJBEZALsiCCABKwMgYyEEIAErAxggCGRBAXNFBEACfyABKwOYASAIoiABKgKMAbujEIgVIgmZRAAAAAAAAOBBYwRAIAmqDAELQYCAgIB4CyEFIAdEAAAAAAAA8D8gASsDkAEgASgCsAEiBiAGIAUgBUEASBsgBSAGThtBA3QiBSABKAKsASgCAGorAwAgASoCiAG7oiAIRAAAAAAAANA/oiABKAKoASgCACAFaisDACABKwNooaKgoiABKwOgAaOhoSEHCyADIARqIQMgASsDeCAHIAEoAhAiBCACa7ehYw0BIAJBAWoiAiAESA0ACwsgACAHOQMIIAAgAzYCAAurAgIFfwZ8AkAgASgCECIFQQFIBEAMAQsgASsDeCEKIAErAxghCyABKwMgIQwgAigCACEHQQAhAgNAIAwgByACQQJ0aioCALsiCWQgBGohBCAJIAtjQQFzRQRAAn8gASsDmAEgCaIgASoCjAG7oxCIFSINmUQAAAAAAADgQWMEQCANqgwBC0GAgICAeAshAyAIRAAAAAAAAPA/IAErA5ABIAEoArABIgYgBiADIANBAEgbIAMgBk4bQQN0IgMgASgCrAEoAgBqKwMAIAEqAogBu6IgCUQAAAAAAADQP6IgASgCqAEoAgAgA2orAwAgASsDaKGioKIgASsDoAGjoaEhCAsgCCAFIAJrt6EgCmQNASAFIAJBAWoiAkoNAAsLIAAgCDkDCCAAIAQ2AgALpQECAn8BfCAAKwMgIQUgACgCBCIAIAEgACgCACgCKBEDACEAIAIoAgQiASACKAIAIgNrIgJBAUgEQEEADwsgAyABayIBIAIgASACShtBAnYiAkEBIAJBAUsbIQEgACgCACEEQQAhAkEAIQADQCAFIAQgAkECdGoqAgC7ZEEBc0UEQCADIABBAnRqIAI2AgAgAEEBaiEACyACQQFqIgIgAUcNAAsgAAsYACAAKwN4IAFkQQFzRQRAIAAgATkDeAsL5QECA38BfCAAKwMgIQYCQCACKAIEIgNFDQAgAigCAEEAIANBBXZBAnQiBBCvGyEFIANBH3EiA0UNACAEIAVqIgQgBCgCAEF/QSAgA2t2QX9zcTYCAAsgACgCBCIAIAEgACgCACgCKBEDACEAIAIoAgQiA0EBSARAQQAPCyACKAIAIQUgACgCACEEQQAhAEEAIQEDQCAGIAQgAEECdGoqAgC7ZEEBc0UEQCAFIABBA3ZB/P///wFxaiIDIAMoAgBBASAAdHI2AgAgAigCBCEDIAFBAWohAQsgAEEBaiIAIANIDQALIAELugEBA38jAEEQayIDJAAgA0EIaiABKAIEIgIgAigCACgCLBECAEHIARDVGiICQgA3AgQgAkH4uwU2AgAgAkEQaiIEIAEqAoABuyABKAIQIANBCGogASsDICABKAIoIAErAzAgASsDaCABKwNwIAErA1AQwQ0gACACNgIEIAAgBDYCAAJAIAMoAgwiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIANBEGokAAtXAQN/IABBhL8FNgIQIABBjL4FNgIAIABBEGohAgJAIAAoAhgiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIAIQ4wsaIAALWgEDfyAAQYS/BTYCECAAQYy+BTYCACAAQRBqIQICQCAAKAIYIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCyACEOMLGiAAEKIbC0cBAn8gAEGEvwU2AgACQCAAKAIIIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAC0oBAn8gAEGEvwU2AgACQCAAKAIIIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAEKIbC5oCAwV/AX0BfCMAQRBrIgMkACABKAIEIgQgAiAEKAIAKAIoEQMAIQIgA0EANgIIIANCADcDAEEAIQQCQCACKAIEIAIoAgBrIgUEQCAFQQJ1IgdBgICAgARPDQEgAyAFENUaIgQ2AgAgAyAENgIEIAMgBCAHQQJ0ajYCCCADAn8gBCACKAIEIAIoAgAiBWsiAkEBSA0AGiAEIAUgAhCuGyACags2AgQLIAEoAgwiBUEBTgRAIAErAxAhCUEAIQIDQCAGIAkgBCACQQJ0aioCALtkaiEGIAJBAWoiAiAFRw0ACwsgAxD7EyEIIAAgBjYCACAAIAi7OQMIIAMoAgAiAgRAIAMgAjYCBCACEKIbCyADQRBqJAAPCxD8GgALAwABC98BAgR/AXwjAEEQayIDJAAgA0EIaiABKAIEIgIgAigCACgCLBECAEEoENUaIgJCADcCBCACQYy+BTYCACABKwMQIQYgASgCDCEEIAJBEGoiBRDjCxogAkGEvwU2AhAgAiADKAIINgIUIAIgAygCDCIBNgIYIAEEfyABIAEoAgRBAWo2AgQgAygCDAVBAAshASACIAY5AyAgAiAENgIcIAAgAjYCBCAAIAU2AgACQCABRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgA0EQaiQACzcBAX8gAEGYwQU2AgwgAEGcwAU2AgAgACgCECIBBEAgACABNgIUIAEQohsLIABBDGoQ4wsaIAALOgEBfyAAQZjBBTYCDCAAQZzABTYCACAAKAIQIgEEQCAAIAE2AhQgARCiGwsgAEEMahDjCxogABCiGwsrAQF/IABBmMEFNgIAIAAoAgQiAQRAIAAgATYCCCABEKIbCyAAEOMLGiAACy4BAX8gAEGYwQU2AgAgACgCBCIBBEAgACABNgIIIAEQohsLIAAQ4wsaIAAQohsLBwAgAEEEagtVAEEcENUaIgFCADcCBCABQgA3AgwgAUGcwAU2AgAgAUIANwIUIAFBDGoiAhDjCxogAUEANgIYIAFCADcCECABQZjBBTYCDCAAIAE2AgQgACACNgIAC58BAQN/IABBmMMFNgIQIABBqMIFNgIAIAAoAqgBIgEEQCAAIAE2AqwBIAEQohsLIAAoApwBIgEEQCAAIAE2AqABIAEQohsLIAAoApABIgEEQCAAIAE2ApQBIAEQohsLIABBEGohAgJAIAAoAiQiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIAIQ4wsaIAALogEBA38gAEGYwwU2AhAgAEGowgU2AgAgACgCqAEiAQRAIAAgATYCrAEgARCiGwsgACgCnAEiAQRAIAAgATYCoAEgARCiGwsgACgCkAEiAQRAIAAgATYClAEgARCiGwsgAEEQaiECAkAgACgCJCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgAhDjCxogABCiGwvEAwIGfwF8IABEK4cW2c737z8gASABROkLIef9/+8/ZBsiASABRC1DHOviNhq/oCACIAEgAmMbRDMzMzMzM9M/pCICEPANIQkCQAJAAkAgACgChAEiAyAAKAKIASIESQRAIANCADcDGCADIAk5AxAgAyACOQMIIAMgATkDACAAIANBIGoiAzYChAEMAQsgAyAAQYABaigCACIGayIHQQV1IghBAWoiA0GAgIDAAE8NAQJ/QQAgAyAEIAZrIgRBBHUiBSADIAVLG0H///8/IARBBXVB////H0kbIgVFDQAaIAVBgICAwABPDQMgBUEFdBDVGgsiBCAIQQV0aiIDQgA3AxggAyAJOQMQIAMgAjkDCCADIAE5AwAgBCAFQQV0aiEFIANBIGohAyAHQQFOBEAgBCAGIAcQrhsaCyAAIAU2AogBIAAgAzYChAEgACAENgKAASAGRQ0AIAYQohsgACgChAEhAwsgACACOQNgIAAgCTkDaCAAIAE5A1ggACACIAGjOQNwIABEAAAAAAAA8D8gAqFEAAAAAAAA8D8gAaGjOQN4IAAgAyAAKAKAAWtBBXVBAWs2AiAPCxD8GgALQai2BRC+AgAL2gIBAnxEAAAAAAAA8D8gAqEiA0QAAAAAAADwPyABoaMQlRUhBAJAIAIgAaMQlRUgAqIgAyAEoqAgACsDQKIgACsDSKNEAAAAAAAA8D+gIgIgAhCVFaAiASACoZlEAAAAAAAAgD5jDQAgAiABEJUVoCIDIAGhmUQAAAAAAACAPmNBAXNFBEAgAyEBDAELIAIgAxCVFaAiASADoZlEAAAAAAAAgD5jDQAgAiABEJUVoCIDIAGhmUQAAAAAAACAPmMEQCADDwsgAiADEJUVoCIBIAOhmUQAAAAAAACAPmMNACACIAEQlRWgIgMgAaGZRAAAAAAAAIA+YwRAIAMPCyACIAMQlRWgIgEgA6GZRAAAAAAAAIA+Yw0AIAIgARCVFaAiAyABoZlEAAAAAAAAgD5jBEAgAw8LIAIgAxCVFaAiASADoZlEAAAAAAAAgD5jDQAgAiABEJUVoA8LIAELjwEBAn8gAEGYwwU2AgAgACgCmAEiAQRAIAAgATYCnAEgARCiGwsgACgCjAEiAQRAIAAgATYCkAEgARCiGwsgACgCgAEiAQRAIAAgATYChAEgARCiGwsCQCAAKAIUIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAAC5IBAQJ/IABBmMMFNgIAIAAoApgBIgEEQCAAIAE2ApwBIAEQohsLIAAoAowBIgEEQCAAIAE2ApABIAEQohsLIAAoAoABIgEEQCAAIAE2AoQBIAEQohsLAkAgACgCFCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgABDjCxogABCiGwurBQQEfwF+AX0DfCABELcGBH8gAgUgACgCECICIAEgAigCACgCIBECACAAQQE6ALwBQQAhAgJAIAAoAhgiAUUEQEEAIQEMAQsgACAAKQMIIgZC/////w+DQorG/cEPfiAGQiCIfCIGNwMIIAFBAUgEQAwBCyAGpyABcCEERAAAAAAAAPA/IQgDQAJAIAAoAhAiBSAEQQAgASAEShsiBEECdCIBIAAoAowBaigCACAFKAIAKAIkERkAIge7IgogACsDKGNBAXNFBEAgA0EBaiEDIAggACsDcKIhCAwBCyAIIAArA3iiIgggACsDaGRBAXMNACAAKAIYIQEMAgsCQAJAAkACQCAAKAK4AQ4CAQACCyAAKwMwIApkQQFzRQRAIAlEAAAAAAAA8D8gACsDOCAKoqGhIQkLIAArA1AgCSAAKAIYIgG3oSACt6BjRQ0CDAQLIAAoAhwgACgCGCIBIAMgAmtqTA0BDAMLIAAoApgBIAAoAowBIAFqKAIAQQJ0aiAHOAIAIAAoAhghAQsgBEEBaiEEIAJBAWoiAiABSA0ACwsgACABIAJGOgC8ASAAKAKAASAAKAIgQQV0aiIEIAQoAhhBAWo2AhgCQCABIAJGBEAgACADNgKoAQJAAkACQAJAIAAoArgBDgQBAAMCAwsgACAJOQOwASAAKwNQIAlkQQFzDQIgACAJOQNQDAILIAAgA7eaOQOwAQwBCyAAIABBmAFqEPsTuzkDsAEgACgCGCEBCyADtyABt6MiCCAAKwNYZEEBcw0BIAAgAzYCHCAAIAggACsDYBDvDQwBCyADtyACQQFqt6MiCEQAAAAAAAAAAGRBAXMNACAAKwNgIgogCKGZIAqjRJqZmZmZmak/ZEEBcw0AIAAgACsDWCAIEO8NCyAALQC8AUEARwsLNQEBfwJAIAAtALwBRQ0AIAAtAL0BRQ0AIAEgACkDqAE3AwAgASAAKQOwATcDCEEBIQILIAILTwEBfCABtyAAKAIYt6MiAiAAKwNYZEEBc0UEQCAAIAE2AhwgACgCgAEgACgCIEEFdGoiASgCGEUEQCABQQE2AhgLIAAgAiAAKwNgEO8NCwsIACAAQZgBagsIACAALQC+AQvNAQEFfyMAQRBrIgQkACAEQQhqIAEoAhAiAyADKAIAKAIsEQIAIAEoAoABIQUgASgCICEGQdABENUaIgNCADcCBCADQajCBTYCACADQRBqIgcgAiAEQQhqIAEoAhggASsDKCAFIAZBBXRqIgUrAwAgBSsDCCABKwNAIAErA0ggASgCuAEQwg0gACADNgIEIAAgBzYCAAJAIAQoAgwiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIARBEGokAAsIACAAQYABagtMAQJ/QRwQ1RoiAkIANwIEIAJB9MYFNgIAIAJBDGoiAxDjCxogAiABNgIQIAJB/McFNgIMIAJBFGogARDnDCAAIAI2AgQgACADNgIACxYAIABBmMQFNgIAIABBDGoQ4wsaIAALGQAgAEGYxAU2AgAgAEEMahDjCxogABCiGwvKCQMEfwR9BHwjAEGAAWsiBSQAIAVBwAQQ1RoiAzYCcCAFIANBwARqIgQ2AnggA0EYakEAQfgDEK8bGiAFIAQ2AnQgACgCCCIAIAEoAgAiASgCAEEEdCIEQQRyaioCACEHIAAgBEEIcmoqAgAhCCAAIARqKgIAIQkgACAEQQxyaioCACEKIANCgICAgICAgPi/fzcDcCADQoCAgICAgID4v383AxAgAyAKuyILOQOIASADIAm7Ig2aIgw5A2AgAyAIuyIOOQNAIAMgDDkDACADIAe7IgwgC6I5A4ABIAMgDSALojkDeCADIAyaIgs5A2ggAyAMIA6iOQM4IAMgDSAOojkDMCADIAs5AwggACABKAIEQQR0IgRBBHJqKgIAIQcgACAEQQhyaioCACEIIAAgBGoqAgAhCSAAIARBDHJqKgIAIQogA0KAgICAgICA+L9/NwOAAiADQoCAgICAgID4v383A6ABIAMgCrsiCzkDmAIgAyAJuyINmiIMOQPwASADIAi7Ig45A9ABIAMgDDkDkAEgAyAHuyIMIAuiOQOQAiADIA0gC6I5A4gCIAMgDJoiCzkD+AEgAyAMIA6iOQPIASADIA0gDqI5A8ABIAMgCzkDmAEgACABKAIIQQR0IgRBBHJqKgIAIQcgACAEQQhyaioCACEIIAAgBGoqAgAhCSAAIARBDHJqKgIAIQogA0KAgICAgICA+L9/NwOQAyADQoCAgICAgID4v383A7ACIAMgCrsiCzkDqAMgAyAJuyINmiIMOQOAAyADIAi7Ig45A+ACIAMgDDkDoAIgAyAHuyIMIAuiOQOgAyADIA0gC6I5A5gDIAMgDJoiCzkDiAMgAyAMIA6iOQPYAiADIA0gDqI5A9ACIAMgCzkDqAIgACABKAIMQQR0IgFBBHJqKgIAIQcgACABQQhyaioCACEIIAAgAWoqAgAhCSAAIAFBDHJqKgIAIQogA0KAgICAgICA+L9/NwOgBCADQoCAgICAgID4v383A8ADIAMgCrsiCzkDuAQgAyAJuyINmiIMOQOQBCADIAi7Ig45A/ADIAMgDDkDsAMgAyAHuyIMIAuiOQOwBCADIA0gC6I5A6gEIAMgDJoiCzkDmAQgAyAMIA6iOQPoAyADIA0gDqI5A+ADIAMgCzkDuAMCQAJAIAVB8ABqQQhBCRD4EwRAIAVBOGogBUEDQQNBBhCoBiIGELgGIQNBOBDVGiIBIAMQrQYaIAFBOGohBCACKAIAIgAEQAJ/IAAgACACKAIEIgNGDQAaA0AgA0E4axCxBiIDIABHDQALIAIoAgALIQMgAiAANgIEIAMQohsLIAIgBDYCCCACIAQ2AgQgAiABNgIAIAVBOGoQsQYaIAYQsQYaIAIoAgAoAhAiAkKAgICAgICA+D83A0BBByEDIAUoAnAhAANAIAMiBEEJbCEBRAAAAAAAAAAAIQsDQCALIAAgA0EBaiIDIAFqQQN0aisDACACIANBA3RqKwMAoqEhCyADQQhHDQALIAIgBEEDdGogCyAAIARB0ABsaisDAKMiCzkDACALIAthBEAgBEEBayEDIAQNAQsLIAsgC2EhBgwBCyAFKAJwIgBFDQELIAUgADYCdCAAEKIbCyAFQYABaiQAIAYLBABBBAsEAEEBC1MBAn8gASgCBCECQRgQ1RoiAUIANwIEIAFBmMQFNgIAIAFBDGoiAxDjCxogASACNgIQIAFBpMUFNgIMIAEgAigCEDYCFCAAIAE2AgQgACADNgIAC1cBA38gAEH8xwU2AgwgAEH0xgU2AgAgAEEMaiECAkAgACgCGCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgAhDjCxogAAtaAQN/IABB/McFNgIMIABB9MYFNgIAIABBDGohAgJAIAAoAhgiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLIAIQ4wsaIAAQohsLRwECfyAAQfzHBTYCAAJAIAAoAgwiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAALSgECfyAAQfzHBTYCAAJAIAAoAgwiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAAQohsLkxQDBn8EfQ58IwBBsBZrIgUkACAAIAAoAgAoAiQRAAAgAkwEQCAFQaAVakEAQcgAEK8bGiAFQdgUakEAQcgAEK8bGiAFQaAUahCnBiEJIAAoAggiACAJIAEgAiAFQaAVaiAFQdgUaiAAKAIAKAIgEQ0AIAkoAhAhByAFQdATakEAQcgAEK8bGiAFQoCAgICAgID4v383A+ATIAVBgBNqQQBByAAQrxsaIAVCgICAgICAgPi/fzcDqBMgBUHwDWpBAEGIBRCvGxoCQCAEKAIAIgogBCgCBEcEQCACQQFIDQEDQCAHIAhBBHQiAEEMcmoqAgAhCyAHIABBCHJqKgIAIQwgByAAQQRyaioCACENIAAgB2oqAgAhDiAFIAogCEEDdGorAwAiEJoiDzkD4BMgBSAPOQOoEyAFIA8gDrsiEaIiEjkD0BMgBSASOQOYEyAFIA8gDbsiEqIiDzkD2BMgBSAPOQOgEyAFIBAgDLuiIg85A5AUIAUgDyASojkDiBQgBSAPIBGiOQOAFCAFIBAgC7uiIg85A8ATIAUgDyASojkDuBMgBSAPIBGiOQOwE0EAIQEDQCAFQfANaiABQdAAbGoiACAAKwMAIAFBA3QiACAFQdATamorAwAiDyAPoiAFQYATaiAAaisDACIQIBCioKA5AwAgAUEBaiIAQQlHBEAgAUEJbCEEA0AgBUHwDWogACAEakEDdGoiBiAGKwMAIA8gAEEDdCIGIAVB0BNqaisDAKIgECAFQYATaiAGaisDAKKgoDkDACAAQQFqIgBBCUcNAAsLIAFBAWoiAUEJRw0ACyAIQQFqIgggAkcNAAsMAQsgAkEBSA0AA0AgByAIQQR0IgBBDHJqKgIAIQsgByAAQQhyaioCACEMIAcgAEEEcmoqAgAhDSAFIAAgB2oqAgC7Ig+aIhA5A9ATIAUgEDkDmBMgBSANuyIQmiIROQPYEyAFIBE5A6ATIAUgDLsiETkDkBQgBSAQIBGiOQOIFCAFIA8gEaI5A4AUIAUgC7siETkDwBMgBSAQIBGiOQO4EyAFIA8gEaI5A7ATQQAhAQNAIAVB8A1qIAFB0ABsaiIAIAArAwAgAUEDdCIAIAVB0BNqaisDACIPIA+iIAVBgBNqIABqKwMAIhAgEKKgoDkDACABQQFqIgBBCUcEQCABQQlsIQQDQCAFQfANaiAAIARqQQN0aiIGIAYrAwAgDyAAQQN0IgYgBUHQE2pqKwMAoiAQIAVBgBNqIAZqKwMAoqCgOQMAIABBAWoiAEEJRw0ACwsgAUEBaiIBQQlHDQALIAhBAWoiCCACRw0ACwsgBSAFKwP4DTkDuA4gBSAFKwOADjkDgA8gBSAFKwPIDjkDiA8gBSAFKwOIDjkDyA8gBSAFKwPQDjkD0A8gBSAFKwOYDzkD2A8gBSAFKwOQDjkDkBAgBSAFKwPYDjkDmBAgBSAFKwOgDzkDoBAgBSAFKwPoDzkDqBAgBSAFKwOYDjkD2BAgBSAFKwPgDjkD4BAgBSAFKwOoDzkD6BAgBSAFKwPwDzkD8BAgBSAFKwO4EDkD+BAgBSAFKwOgDjkDoBEgBSAFKwPoDjkDqBEgBSAFKwOwDzkDsBEgBSAFKwP4DzkDuBEgBSAFKwPAEDkDwBEgBSAFKwOIETkDyBEgBSAFKwOoDjkD6BEgBSAFKwPwDjkD8BEgBSAFKwO4DzkD+BEgBSAFKwOAEDkDgBIgBSAFKwPIEDkDiBIgBSAFKwOQETkDkBIgBSAFKwPYETkDmBIgBSAFKwOwDjkDsBIgBSAFKwP4DjkDuBIgBSAFKwPADzkDwBIgBSAFKwOIEDkDyBIgBSAFKwPQEDkD0BIgBSAFKwOYETkD2BIgBSAFKwPgETkD4BIgBSAFKwOoEjkD6BJBACEGIAVB6AhqQQBBiAUQrxsaIAVBoAhqQQBByAAQrxsaIAVBmANqIAVB8A1qQYgFEK4bGiAFQomAgICQATcDUCAFQYaAiIh8NgJIIAUgBUGYA2o2AkwgBUKBgICAkAE3AwggBUGGgIiQfDYCACAFIAVBoAhqNgIEIAVCiYCAgJABNwPwFSAFQYaAiJB8NgLoFSAFIAVB6AhqNgLsFSAFQcgAaiAFIAVB6BVqEK4EBEAgBUHgAmogBUGYA2pBA0EDQQYgBUGoDWpBABCuBiIAELgGIQEgABCxBhoCQCAFKwPoFCITIAUrA5AVIhAgBSsD8BQiEaIgBSsD+BQiEiAFKwOIFSIWoqEiGaIgBSsD2BQiFCASIAUrA5gVIheiIBAgBSsDgBUiGKKhIhqiIAUrA+AUIhUgFyARoiIbIBggFqIiHKGioaAiD0QAAAAAAAAAAGIEQCAFIBlEAAAAAAAA8D8gD6MiD6I5AzAgBSAcIBuhIA+iOQMYIAUgGiAPojkDACAFIBQgEqIgFSARoqEgD6I5A0AgBSAVIBaiIBQgEKKhIA+iOQM4IAUgESAToiAUIBiioSAPojkDKCAFIBQgF6IgFiAToqEgD6I5AyAgBSAYIBWiIBIgE6KhIA+iOQMQIAUgECAToiAXIBWioSAPojkDCAwBCyAFQQBByAAQrxsaCyAFQYAWaiIHQgA3AwAgBUGIFmoiCEIANwMAIAVBmBZqIgBCADcDACAFQgA3A/gVIAVCg4CAgDA3A/AVIAVChoD9lyQ3A+gVIAUgADYClBYgBSAFQfAVaiICNgKQFiAFQZgDakEDQQNBBiAFQQAQrgYhBiAFQYCAhBA2AkggBUIANwNQIAUgBUHoFWo2AkwgBiAFQcgAahCWBCAGELEGGiAFQcgAaiAFQegVaiABEP8GIAVB6BVqELEGGiAFQagCahCnBiEEIAUoAkgiBiAFQcgAaiAEQX8gBigCACgCDBEGACAHQgA3AwAgCEIANwMAIABCADcDACAFQgA3A/gVIAVCg4CAgDA3A/AVIAVChoD9lyQ3A+gVIAUgADYClBYgBSACNgKQFiAFQZgDakEDQQNBBiAFQaAVakEAEK4GIQAgBUGAgIQQNgKgFiAFQgA3A6gWIAUgBUHoFWo2AqQWIAAgBUGgFmoQlgQgABCxBhogBUGYA2ogBCAFQegVahD/BiAFQegVahCxBhogBUHoFWoQpwYhACAFKAKYAyIGIAVBmANqIABBfyAGKAIAKAIMEQYAQTgQ1RoiByAAEK0GGiAHQThqIQggAygCACIGBEACfyAGIAYgAygCBCIARg0AGgNAIABBOGsQsQYiACAGRw0ACyADKAIACyEAIAMgBjYCBCAAEKIbCyADIAg2AgggAyAINgIEIAMgBzYCACAFQegVahCxBhogBUGQBGoQsQYaIAVB2ANqELEGGiAFQaADahCxBhogBBCxBhogBUHAAWoQsQYaIAVBiAFqELEGGiAFQdAAahCxBhogARCxBhpBASEGCyAJELEGGgsgBUGwFmokACAGC1MBAn8gASgCBCECQRwQ1RoiAUIANwIEIAFB9MYFNgIAIAFBDGoiAxDjCxogASACNgIQIAFB/McFNgIMIAFBFGogAhDnDCAAIAE2AgQgACADNgIACxYAIABByMkFNgIAIABBDGoQ4wsaIAALGQAgAEHIyQU2AgAgAEEMahDjCxogABCiGwu9BQMEfwx9BHwjAEHQAWsiAyQAIAAoAggiACABKAIAIgEoAgRBBHQiBWoqAgAiCSAAIAEoAghBBHQiBkEEcmoqAgAiCpQgACABKAIAQQR0IgFBBHJqKgIAIgcgACAGaioCACILlCAAIAFqKgIAIgggACAFQQRyaioCACIMlCAHIAmUkyAIIAqUk5KSIAwgC5STuyITmUQAAAAAAACAPmNFBEAgACAGQQxyaioCACEPIAAgBkEIcmoqAgAhECAAIAVBDHJqKgIAIREgACAFQQhyaioCACESIAAgAUEMcmoqAgAhDSAAIAFBCHJqKgIAIQ4gA0FAa0IANwMAIANCADcDaCADQgA3A3AgA0GAAWoiAEIANwMAIANCADcDYCADQoOAgIAwNwNYIANChoD9lyQ3A1AgA0IANwM4IANCgICAgICAgPg/NwNIIAMgADYCfCADIANB2ABqNgJ4IANEAAAAAAAA8D8gE6MiEyARIAuUIA0gCZQgCCARlJMgDSALlJMgCCAPlJKSIAkgD5STjLuiIhQ5AyggAyATIBEgCpQgDSAMlCAHIBGUkyANIAqUkyAHIA+UkpIgDCAPlJO7oiIVOQMgIAMgDbsgFSAIuyIWoqEgFCAHuyIVoqE5AzAgAyATIBIgC5QgDiAJlCAIIBKUkyAOIAuUkyAIIBCUkpIgCSAQlJOMu6IiFDkDECADIBMgEiAKlCAOIAyUIAcgEpSTIA4gCpSTIAcgEJSSkiAMIBCUk7uiIhM5AwggAyAOuyATIBaioSAUIBWioTkDGCADQZgBakEDQQNBBiADQQhqQQAQrgYhACADQYCAhBA2AogBIANCADcDkAEgAyADQdAAajYCjAEgACADQYgBahCWBCAAELEGGiACKAIAIANB0ABqELkGGiADQdAAahCxBhpBASEECyADQdABaiQAIAQLBABBAwtTAQJ/IAEoAgQhAkEYENUaIgFCADcCBCABQcjJBTYCACABQQxqIgMQ4wsaIAEgAjYCECABQcjKBTYCDCABIAIoAhA2AhQgACABNgIEIAAgAzYCAAsWACAAQdzLBTYCACAAQQxqEOMLGiAACxkAIABB3MsFNgIAIABBDGoQ4wsaIAAQohsLtQ0DB38EfQR8IwBBoAdrIgUkAAJ/QQAgACAAKAIAKAIkEQAAIAJKDQAaIAVBsARqQQBBoAIQrxsaIAVCADcDqAQgBUIANwOgBCAFQgA3A5gEIAVCADcDkAQgBUIANwOIBCAFQgA3A4AEIAVCADcD+AMgBUIANwPwAyAFQgA3A+gDIAVCgICAgICAgPg/NwPgAyAFQgA3A9gDIAVCADcD0AMgBUIANwPAAyAFQgA3A7gDIAVCADcDsAMgBUKAgICAgICA+D83A8gDIAVCADcDqAMgBUIANwOgAwJAIAQoAgAiCiAEKAIERwRAIAJBAUgNASAAKAIIIQYgASgCACELA0AgBiALIAhBAnRqKAIAQQR0IgBBCHJqKgIAIQwgBiAAQQxyaioCACENIAYgAEEEcmoqAgAhDiAAIAZqKgIAIQ8gBSAKIAhBA3RqKwMAIhA5A+ADIAUgEDkDyAMgBSAQIA+7oiIROQPQAyAFIBE5A7gDIAUgECAOu6IiETkD2AMgBSAROQPAAyAQIA27oiESIBAgDLuiIRNBACEBA0AgBUGwBGogAUE4bGoiACAAKwMAIAFBA3QiCSAFQdADamorAwAiECAQoiAFQaADaiAJaisDACIRIBGioKA5AwAgAUEBaiIAQQZHBEAgAUEGbCEEA0AgBUGwBGogACAEakEDdGoiByAHKwMAIBAgAEEDdCIHIAVB0ANqaisDAKIgESAFQaADaiAHaisDAKKgoDkDACAAQQFqIgBBBkcNAAsLIAVBgARqIAlqIgAgACsDACATIBCiIBIgEaKgoDkDACABQQFqIgFBBkcNAAsgCEEBaiIIIAJHDQALDAELIAJBAUgNACAAKAIIIQYgASgCACEKA0AgBiAKIAhBAnRqKAIAQQR0IgBBCHJqKgIAIQwgBiAAQQxyaioCACENIAYgAEEEcmoqAgAhDiAFIAAgBmoqAgC7IhA5A9ADIAUgEDkDuAMgBSAOuyIQOQPYAyAFIBA5A8ADIA27IRIgDLshE0EAIQEDQCAFQbAEaiABQThsaiIAIAArAwAgAUEDdCIJIAVB0ANqaisDACIQIBCiIAVBoANqIAlqKwMAIhEgEaKgoDkDACABQQFqIgBBBkcEQCABQQZsIQQDQCAFQbAEaiAAIARqQQN0aiIHIAcrAwAgECAAQQN0IgcgBUHQA2pqKwMAoiARIAVBoANqIAdqKwMAoqCgOQMAIABBAWoiAEEGRw0ACwsgBUGABGogCWoiACAAKwMAIBAgE6IgESASoqCgOQMAIAFBAWoiAUEGRw0ACyAIQQFqIgggAkcNAAsLIAUgBSsDuAQ5A+AEIAUgBSsDwAQ5A5AFIAUgBSsD8AQ5A5gFIAUgBSsDyAQ5A8AFIAUgBSsD+AQ5A8gFIAUgBSsDqAU5A9AFIAUgBSsD0AQ5A/AFIAUgBSsDgAU5A/gFIAUgBSsDsAU5A4AGIAUgBSsD4AU5A4gGIAUgBSsD2AQ5A6AGIAUgBSsDiAU5A6gGIAUgBSsDuAU5A7AGIAUgBSsD6AU5A7gGIAUgBSsDmAY5A8AGIAVCADcDmAMgBUIANwOQAyAFQgA3A4gDIAVCADcDgAMgBUIANwP4AiAFQgA3A/ACIAVB0ABqIAVBsARqQaACEK4bGiAFQoaAgIDgADcDECAFQYaAiIh8NgIIIAUgBUHQAGo2AgwgBUKBgICA4AA3A+AGIAVBhoCIiHw2AtgGIAUgBSsDgAQ5A+gGIAUgBSsDiAQ5A/AGIAUgBSsDkAQ5A/gGIAUgBSsDmAQ5A4AHIAUgBSsDoAQ5A4gHIAUgBSsDqAQ5A5AHIAUgBUHoBmo2AtwGIAVCgYCAgOAANwNIIAVBhoCIkHw2AkAgBSAFQfACajYCREEAIAVBCGogBUHYBmogBUFAa0EAELQERQ0AGiAFQgA3A4gBIAVCg4CAgDA3AxAgBUKGgP2XJDcDCCAFQgA3A4ABIAUgBSsDmAM5A3ggBSAFKwOQAzkDcCAFIAUrA4gDOQNoIAUgBSsDgAM5A2AgBSAFKwP4AjkDWCAFIAUrA/ACOQNQIAVCgICAgICAgPg/NwOQASAFQgA3AyggBUIANwMgIAVBOGoiAEIANwMAIAVCADcDGCAFIAA2AjQgBSAFQRBqNgIwIAVB6AZqQQNBA0EGIAVB0ABqQQAQrgYhACAFQYCAhBA2AtgGIAVCADcD4AYgBSAFQQhqNgLcBiAAIAVB2AZqEJYEIAAQsQYaIAMoAgAgBUEIahC5BhogBUEIahCxBhpBAQshByAFQaAHaiQAIAcLUwECfyABKAIEIQJBGBDVGiIBQgA3AgQgAUHcywU2AgAgAUEMaiIDEOMLGiABIAI2AhAgAUHgzAU2AgwgASACKAIQNgIUIAAgATYCBCAAIAM2AgALmw8CAX8VfCMAQfACayICJAAgAkHgAWpBAEHIABCvGxogAkGYAWpBAEHIABCvGxogAkIANwOQASACQgA3A4gBIAJCADcDgAEgAkIANwMIIAIgADYCBCACQYCAhAg2AgAgAkKBgICAMDcDwAIgAkGGgIiQfDYCuAIgAiACQYABajYCvAIgAkKDgICAMDcDUCACQYaAiJB8NgJIIAIgAkHgAWo2AkwgAkKDgICAMDcDsAIgAkGGgIiQfDYCqAIgAiACQZgBajYCrAIgAiACQbgCaiACQcgAaiACQagCakEBEK8EAkAgAQRAIAIgAisDgAEiBiACKwPgASIEokQAAAAAAAAAAKAgAisD6AEiBUQAAAAAAAAAAKIiD6AgAisD8AFEAAAAAAAAAACiIgOgIhMgAisDmAEiC6JEAAAAAAAAAACgIAREAAAAAAAAAACiRAAAAAAAAAAAoCIEIAIrA4gBIhQgBaKgIAOgIhUgAisDsAEiEKKgIAQgD6AgA6AiDyACKwPIASIMoqA5AwAgAisDiAIhCSACKwP4ASEKIAIrA4ACIQ0gAisDoAIhCCACKwOQAiEHIAIrA5gCIQ4gAisD0AEhAyACKwOgASEEIAIrA7gBIQUgAkIANwNoIAJCADcDYCACQfgAaiIBQgA3AwAgAiATIASiRAAAAAAAAAAAoCAVIAWioCAPIAOioDkDCCACIAQgBiAHokQAAAAAAAAAAKAgDkQAAAAAAAAAAKIiEaAgCEQAAAAAAAAAAKIiCKAiFqJEAAAAAAAAAACgIAUgB0QAAAAAAAAAAKJEAAAAAAAAAACgIhIgFCAOoqAgCKAiB6KgIAMgEiARoCAIoCIOoqA5AzggAiAOIAyiIAcgEKIgCyAWokQAAAAAAAAAAKCgoDkDMCACIAQgBiAKokQAAAAAAAAAAKAgDUQAAAAAAAAAAKIiEaAgCUQAAAAAAAAAAKIiBqAiCKJEAAAAAAAAAACgIAUgCkQAAAAAAAAAAKJEAAAAAAAAAACgIgogFCANoqAgBqAiBKKgIAMgCiARoCAGoCIFoqA5AyAgAiAIIAuiRAAAAAAAAAAAoCAEIBCioCAFIAyioDkDGCACQoaA/ZckNwNIIAJCg4CAgDA3A1AgAkIANwNYIAIgAkHQAGo2AnAgAiABNgJ0IAIgFiACKwOoASIDokQAAAAAAAAAAKAgByACKwPAASIGoqAgDiACKwPYASILoqA5A0AgAiAIIAOiRAAAAAAAAAAAoCAEIAaioCAFIAuioDkDKCACIBMgA6JEAAAAAAAAAACgIBUgBqKgIA8gC6KgOQMQIAJBuAJqQQNBA0EGIAJBABCuBiEBIAJBgICEEDYCqAIgAkIANwOwAiACIAJByABqNgKsAiABIAJBqAJqEJYEIAEQsQYaIAAgAkHIAGoQuQYaIAJByABqELEGGgwBCyACIAIrA4ABIAIrA4gBoEQAAAAAAADgP6IiAyACKwPgASIFokQAAAAAAAAAAKAgAisD6AEiBkQAAAAAAAAAAKIiEKAgAisD8AFEAAAAAAAAAACiIgSgIhMgAisDmAEiC6JEAAAAAAAAAACgIAVEAAAAAAAAAACiRAAAAAAAAAAAoCIFIAMgBqKgIASgIhQgAisDsAEiFaKgIAUgEKAgBKAiECACKwPIASIPoqA5AwAgAisDiAIhEiACKwOAAiEMIAIrA/gBIQogAisDoAIhCSACKwOYAiENIAIrA5ACIQcgAiATIAIrA6ABIg6iRAAAAAAAAAAAoCAUIAIrA7gBIgiioCAQIAIrA9ABIhaioDkDCCACKwPYASEEIAIrA6gBIQUgAisDwAEhBiACIA4gAyAHokQAAAAAAAAAAKAgDUQAAAAAAAAAAKIiF6AgCUQAAAAAAAAAAKIiCaAiEaJEAAAAAAAAAACgIAggB0QAAAAAAAAAAKJEAAAAAAAAAACgIgcgAyANoqAgCaAiDaKgIBYgByAXoCAJoCIHoqA5AzggAiAHIA+iIA0gFaIgCyARokQAAAAAAAAAAKCgoDkDMCACIA4gAyAKokQAAAAAAAAAAKAgDEQAAAAAAAAAAKIiF6AgEkQAAAAAAAAAAKIiCaAiEqJEAAAAAAAAAACgIAggCkQAAAAAAAAAAKJEAAAAAAAAAACgIgogAyAMoqAgCaAiA6KgIBYgCiAXoCAJoCIMoqA5AyAgAiASIAuiRAAAAAAAAAAAoCADIBWioCAMIA+ioDkDGCACIBEgBaJEAAAAAAAAAACgIA0gBqKgIAcgBKKgOQNAIAIgEiAFokQAAAAAAAAAAKAgAyAGoqAgDCAEoqA5AyggAiATIAWiRAAAAAAAAAAAoCAUIAaioCAQIASioDkDECACQoOAgIAwNwNQIAJChoD9lyQ3A0ggAkIANwNoIAJCADcDYCACQgA3A1ggAkH4AGoiAUIANwMAIAIgATYCdCACIAJB0ABqNgJwIAJBuAJqQQNBA0EGIAJBABCuBiEBIAJBgICEEDYCqAIgAkIANwOwAiACIAJByABqNgKsAiABIAJBqAJqEJYEIAEQsQYaIAAgAkHIAGoQuQYaIAJByABqELEGGgsgAkHwAmokAAuNDwEIfyMAQUBqIgckACAAEOMLGiAAQaTVBTYCACAAIAGsQv////8PIAEbNwMIIAAgAigCADYCECAAIAIoAgQiATYCFCABBEAgASABKAIEQQFqNgIECyADKAIQIQEgACADNgIcIAAgATYCGCAAQSBqIAMQ5gwgAEIANwIoIABBMGoQ4wsaIAAgAzYCNCAAQcjPBTYCMCADKAIQIQEgAEKRx8/bp+j9g0A3A0ggACAFOQNAIAAgBDYCPCAAIAE2AjggB0EMENUaIgE2AgAgByABQQxqIgY2AgggAUECNgIIIAFCgICAgBA3AgAgByAGNgIEIAdBDBDVGiIBQQxqIgY2AhQgByABNgIMIAFBBTYCCCABQoOAgIDAADcCACAHIAY2AhAgB0EMENUaIgFBDGoiBjYCICAHIAE2AhggAUEGNgIIIAFCgICAgBA3AgAgByAGNgIcIAdBDBDVGiIBQQxqIgY2AiwgByABNgIkIAFBBjYCCCABQoOAgIDAADcCACAHIAY2AiggB0EMENUaIglBDGoiATYCOCAHIAk2AjAgCUEGNgIIIAlCgoCAgNAANwIAIAcgATYCNCAAQdgAaiIGQQA2AgAgAEIANwJQIABBPBDVGiIBNgJQIAAgATYCVCAGIAFBPGo2AgAgAEHQAGohCiAHQTxqIQ0gByEGAkACQANAIAFBADYCCCABQgA3AgAgBigCBCAGKAIAIgtrIggEQCAIQQJ1IgxBgICAgARPDQIgASAIENUaIgg2AgAgASAINgIEIAEgCCAMQQJ0ajYCCCABIAYoAgQgC2siDEEBTgR/IAggCyAMEK4bIAxqBSAICzYCBAsgAUEMaiEBIAZBDGoiBiANRw0ACyAAIAE2AlQgByAJNgI0IAkQohsgBygCJCIBBEAgByABNgIoIAEQohsLIAcoAhgiAQRAIAcgATYCHCABEKIbCyAHKAIMIgEEQCAHIAE2AhAgARCiGwsgBygCACIBBEAgByABNgIEIAEQohsLIABCADcCXEEAIQEgAEEANgJ8IABCADcCdCAAQgA3AmwgAEIANwJkIAIoAgAiBiAGKAIAKAI4EQAAIQYgACAENgKEASAAIAY2AoABIARBCEYEQCAHQQwQ1RoiBjYCACAHIAZBDGoiCDYCCCAGQQc2AgggBkKAgICAEDcCACAHIAg2AgQCQCAAKAJUIgYgACgCWEkEQCAGQQA2AgggBkIANwIAIAYgBygCADYCACAGIAcoAgQ2AgQgBiAHKAIINgIIIAAgBkEMajYCVAwBCyAKIAcQng4gBygCACIGRQ0AIAcgBjYCBCAGEKIbCyAHQQwQ1RoiBjYCACAHIAZBDGoiCDYCCCAGQQc2AgggBkKAgICAIDcCACAHIAg2AgQCQCAAKAJUIgYgACgCWEkEQCAGQQA2AgggBkIANwIAIAYgBygCADYCACAGIAcoAgQ2AgQgBiAHKAIINgIIIAAgBkEMajYCVAwBCyAKIAcQng4gBygCACIGRQ0AIAcgBjYCBCAGEKIbCyAHQQwQ1RoiBjYCACAHIAZBDGoiCDYCCCAGQQc2AgggBkKDgICA0AA3AgAgByAINgIEAkAgACgCVCIGIAAoAlhJBEAgBkEANgIIIAZCADcCACAGIAcoAgA2AgAgBiAHKAIENgIEIAYgBygCCDYCCCAAIAZBDGo2AlQMAQsgCiAHEJ4OIAcoAgAiBkUNACAHIAY2AgQgBhCiGwsgB0EMENUaIgY2AgAgByAGQQxqIgg2AgggBkEHNgIIIAZCg4CAgOAANwIAIAcgCDYCBAJAIAAoAlQiBiAAKAJYSQRAIAZBADYCCCAGQgA3AgAgBiAHKAIANgIAIAYgBygCBDYCBCAGIAcoAgg2AgggACAGQQxqNgJUDAELIAogBxCeDiAHKAIAIgZFDQAgByAGNgIEIAYQohsLIAdBDBDVGiIGNgIAIAcgBkEMaiIINgIIIAZBBzYCCCAGQoKAgIDAADcCACAHIAg2AgQCQCAAKAJUIgYgACgCWEkEQCAGQQA2AgggBkIANwIAIAYgBygCADYCACAGIAcoAgQ2AgQgBiAHKAIINgIIIAAgBkEMajYCVAwBCyAKIAcQng4gBygCACIGRQ0AIAcgBjYCBCAGEKIbCyAAKAKAASEGCyAHQQA2AgggB0IANwMAQQAhCCAGBEAgBkGAgICABE8NAiAHIAZBAnQiBhDVGiIINgIAIAcgBiAIaiIBNgIIIAhBACAGEK8bGiAHIAE2AgQLIAEhBiAAIAAoAlwiCwR/IAAgCzYCYCALEKIbIAcoAgQhBiAHKAIAIQggBygCCAUgAQs2AmQgACAGNgJgIAAgCDYCXCAHIAMQ+g0gBygCACEBIAcoAgQiBgRAIAYgBigCBEEBajYCBAsgACABNgIoIAAoAiwhASAAIAY2AiwCQCABRQ0AIAEgASgCBCIGQQFrNgIEIAYNACABIAEoAgAoAggRAQAgARDQGgsCQCAHKAIEIgFFDQAgASABKAIEIgZBAWs2AgQgBg0AIAEgASgCACgCCBEBACABENAaCyAHQUBrJAAPCxD8GgALEPwaAAsWACAAQcDOBTYCACAAQQxqEOMLGiAACxkAIABBwM4FNgIAIABBDGoQ4wsaIAAQohsLlQYCBH8HfCMAQfABayIDJAAgA0KAgICAEDcDoAEgA0KAgICA+P////8ANwMwIANB6ABqIAEgA0GgAWogA0EwahC6BiEFIANCgoCAgDA3A6ABIANCgICAgPj/////ADcD2AEgA0EwaiABIANBoAFqIANB2AFqELoGIQQgA0IANwMgIAMgBDYCHCADQYCAhAg2AhggA0GgAWogBSADQRhqELMHIANB2AFqIANBoAFqEJUOIANBoAFqELEGGiAEELEGGiAFELEGGkEBIQUCQCADKwPYASIHRDtfvSX//+E8ZUEBcw0AIAdEO1+9Jf//4bxmQQFzDQAgAysD4AEiB0Q7X70l///hPGVBAXMNACAHRDtfvSX//+G8ZkEBcw0AIAMrA+gBIgdEO1+9Jf//4TxlQQFzDQAgB0Q7X70l///hvGZBAXMNACADQoGAgIAgNwOgASADQoCAgID4/////wA3AzAgA0HoAGogASADQaABaiADQTBqELoGIQQgA0KCgICAMDcDoAEgA0KAgICA+P////8ANwMYIANBMGogASADQaABaiADQRhqELoGIQYgA0IANwMQIAMgBjYCDCADQYCAhAg2AgggA0GgAWogBCADQQhqELMHIANBGGogA0GgAWoQlQ4gAyADKQMoNwPoASADIAMpAyA3A+ABIAMgAykDGDcD2AEgA0GgAWoQsQYaIAYQsQYaIAQQsQYaCyAAKAIMIgZBAk4EQCABKAIQIgQrAzAiCCAEKwMAIgkgACgCCCIBIAIoAgAiACgCAEEEdCICQQhyaioCALuiIAQrAxgiCiABIAJBDHJqKgIAu6KgoCADKwPgASILIAMrA+gBIgwgASACQQRyaioCALuioaIhDQNAAkAgCyAMIAEgACAFQQJ0aigCAEEEdCIEQQRyaioCALuioSANIAggCSABIARBCHJqKgIAu6IgCiABIARBDHJqKgIAu6KgoKKiIQcgBUEBaiIFIAZODQAgB0QAAAAAAAAAAGNBAXMNAQsLIAdEAAAAAAAAAABjQQFzIQULIANB8AFqJAAgBQvXAgIFfwN8IwBB4ABrIgIkAAJAIAEoAhAiBUUNACABKAIEQQJKDQBBASEDIAEoAgwhBAJAIAEoAggiBkEBRgRAIAQhAwwBCyAEQQFHDQELIAMgBmpBBEcNACABKAIAIgRB+B9xDQACQCAEQf+fAXFBhoABRgRAIAUrAxAhByAFKwMIIQggBSsDACEJDAELIAJB2ABqIgVCADcDACACQdAAaiIEQgA3AwAgAkIANwNIIAIgAkEQaiAGIANBBiACQcgAakEAEK4GIgM2AgQgAkGAgIQQNgIAIAJCADcDCCABIAIgAygCAEH/H3FEAAAAAAAA8D9EAAAAAAAAAAAQiAMgBCsDACEIIAUrAwAhByACKwNIIQkgAxCxBhoLIAAgBzkDECAAIAg5AwggACAJOQMAIAJB4ABqJAAPC0GpfiACQRBqQeTQBRCJA0G90QVBytEFQeAIEJgKAAtlAQJ/IAEoAgQhA0EcENUaIgJCADcCBCACQcDOBTYCACABKAIMIQEgAkEMaiIEEOMLGiACIAM2AhAgAkHIzwU2AgwgAygCECEDIAIgATYCGCACIAM2AhQgACACNgIEIAAgBDYCAAsWACAAQYjSBTYCACAAQQxqEOMLGiAACxkAIABBiNIFNgIAIABBDGoQ4wsaIAAQohsLpwYCBH8YfQJAIAAoAggiACABKAIAIgIoAgBBBHQiAWoqAgAiByAAIAIoAgRBBHQiA0EEcmoqAgAiCJQgACABQQRyaioCACIGIAAgA2oqAgAiEJSTIgogBiAIkyILIAAgAigCCEEEdCIEaioCACIRlCAQIAeTIhcgACAEQQRyaioCACISlJKSIAAgAUEIcmoqAgAiDCAAIANBDHJqKgIAIg6UIAAgAUEMcmoqAgAiCSAAIANBCHJqKgIAIhOUkyIPIAkgDpMiDSAAIARBCHJqKgIAIhSUIBMgDJMiGCAAIARBDHJqKgIAIhWUkpKUQwAAAABdDQAgCiALIAAgAigCDEEEdCIBaioCACIWlCAXIAAgAUEEcmoqAgAiC5SSkiAPIA0gACABQQhyaioCACIKlCAYIAAgAUEMcmoqAgAiDZSSkpRDAAAAAF0NACARIAuUIBIgFpSTIg8gBiAWIBGTIhmUIAcgEiALkyIalJKSIBQgDZQgFSAKlJMiGyAJIAogFJMiHJQgDCAVIA2TIh2UkpKUQwAAAABdDQAgDyAIIBmUIBAgGpSSkiAbIA4gHJQgEyAdlJKSlEMAAAAAXQ0AIBcgEiAGkyIZlCAIIAaTIg8gESAHkyIalJOLu0QAAAAAAADgP6JEAAAAAAAAgD5jDQAgFyALIAaTIgaUIA8gFiAHkyIHlJOLu0QAAAAAAADgP6JEAAAAAAAAgD5jDQAgGiAGlCAZIAeUk4u7RAAAAAAAAOA/okQAAAAAAACAPmMNACARIBCTIAsgCJOUIBIgCJMgFiAQk5STi7tEAAAAAAAA4D+iRAAAAAAAAIA+Yw0AIBggFSAJkyIHlCAOIAmTIgYgFCAMkyIIlJOLu0QAAAAAAADgP6JEAAAAAAAAgD5jDQAgGCANIAmTIgmUIAYgCiAMkyIMlJOLu0QAAAAAAADgP6JEAAAAAAAAgD5jDQAgCCAJlCAHIAyUk4u7RAAAAAAAAOA/okQAAAAAAACAPmMNACAUIBOTIA0gDpOUIBUgDpMgCiATk5STi7tEAAAAAAAA4D+iRAAAAAAAAIA+Yw0AQQEhBQsgBQtTAQF/IAEoAgQhAkEYENUaIgFCADcCBCABQYjSBTYCACABQQxqIgMQ4wsaIAEgAjYCECABQYjTBTYCDCABIAIoAhA2AhQgACABNgIEIAAgAzYCAAsWACAAQaDUBTYCACAAQRBqEJwOGiAAC/wCAQR/IABBpNUFNgIAIAAoAnQiAgRAAn8gAiACIAAoAngiAUYNABoDQCABQThrELEGIgEgAkcNAAsgACgCdAshASAAIAI2AnggARCiGwsgACgCaCIBBEAgACABNgJsIAEQohsLIAAoAlwiAQRAIAAgATYCYCABEKIbCyAAKAJQIgMEQAJ/IAMgAyAAKAJUIgJGDQAaA0AgAkEMayIBKAIAIgQEQCACQQhrIAQ2AgAgBBCiGwsgASECIAEgA0cNAAsgACgCUAshASAAIAM2AlQgARCiGwsgAEEwahDjCxoCQCAAKAIsIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoAiQiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLAkAgACgCFCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgABDjCxogAAsZACAAQaDUBTYCACAAQRBqEJwOGiAAEKIbC5wDAQR/AkACQAJAIAAoAgQgACgCACIDa0EMbSIFQQFqIgJB1qrVqgFJBEAgBUEMbAJ/IAIgACgCCCADa0EMbSIDQQF0IgUgAiAFSxtB1arVqgEgA0Gq1arVAEkbIgMEQCADQdaq1aoBTw0DIANBDGwQ1RohBAsgBAtqIgIgASgCADYCACACIAEoAgQ2AgQgAiABKAIINgIIIAFBADYCCCABQgA3AgAgBCADQQxsaiEDIAJBDGohBSAAKAIEIgEgACgCACIERg0CA0AgAkEMayICQQA2AgggAkIANwIAIAIgAUEMayIBKAIANgIAIAIgASgCBDYCBCACIAEoAgg2AgggAUEANgIIIAFCADcCACABIARHDQALIAAgAzYCCCAAKAIEIQMgACAFNgIEIAAoAgAhBCAAIAI2AgAgAyAERg0DA0AgA0EMayIBKAIAIgIEQCADQQhrIAI2AgAgAhCiGwsgASEDIAEgBEcNAAsMAwsQ/BoAC0H0zQUQvgIACyAAIAM2AgggACAFNgIEIAAgAjYCAAsgBARAIAQQohsLCwoAIAAQnA4QohsLDgAgAEEwaiABIAIQlA4LmRYDDn8BfR58IwBB0AJrIgUkACAEQv/////////3/wA3AwggBEEANgIAIAVCgICAgPj/////ADcD4AEgBUKAgICAEDcDACAFQZgBaiACIAVB4AFqIAUQugYhByAFQoCAgID4/////wA3A+ABIAVCgoCAgDA3A6gCIAUgAiAFQeABaiAFQagCahC6BiEGIAVCADcDUCAFIAY2AkwgBUGAgIQINgJIIAVB4AFqIAcgBUHIAGoQswcgBUGoAmogBUHgAWoQlQ4gBUHgAWoQsQYaIAYQsQYaIAcQsQYaAkAgBSsDqAKZRLu919nffNs9Y0EBcw0AIAUrA7ACmUS7vdfZ33zbPWNBAXMNACAFKwO4AplEu73X2d982z1jQQFzDQAgBUKAgICA+P////8ANwPgASAFQoGAgIAgNwMAIAVBmAFqIAIgBUHgAWogBRC6BiEHIAVCgICAgPj/////ADcD4AEgBUKCgICAMDcDSCAFIAIgBUHgAWogBUHIAGoQugYhBiAFQgA3A4gBIAUgBjYChAEgBUGAgIQINgKAASAFQeABaiAHIAVBgAFqELMHIAVByABqIAVB4AFqEJUOIAUgBSkDWDcDuAIgBSAFKQNQNwOwAiAFIAUpA0g3A6gCIAVB4AFqELEGGiAGELEGGiAHELEGGgsgBUHgAWogBUGoAmoQ9RMgBUGYAWogAhDDCyAFKwPwASEUIAUrA+ABIRYgBSsD6AEhFSAFKwOIAiEXIAUrA/gBIRggBSsDgAIhGSAFKwPIASEbIAUrA5gBIRwgBSsDsAEhHSAFKwPQASEaIAUrA6ABIR4gBSsDuAEhHyAFKwOgAiEgIAUrA9gBISEgBSsDkAIhIiAFKwOoASEjIAUrA5gCISQgBSsDwAEhJSAFQgA3A5ABIAVCADcDiAEgBUIANwOAASAFQgA3A+gBIAVCADcDgAIgBUIANwOYAiAFQgA3A+ABIAVCADcD+AEgBUKAgICAgICA+D83A/ABIAVCADcDkAIgBUKAgICAgICA+D83A4gCIAVCgICAgICAgPg/NwOgAiAAKAJQIgwgACgCVCIQRwRAICMgIqJEAAAAAAAAAACgICUgJKKgICEgIKKgISYgHiAiokQAAAAAAAAAAKAgHyAkoqAgGiAgoqAhJyAcICKiRAAAAAAAAAAAoCAdICSioCAbICCioCEgICMgGKJEAAAAAAAAAACgICUgGaKgICEgF6KgISIgHiAYokQAAAAAAAAAAKAgHyAZoqAgGiAXoqAhJCAcIBiiRAAAAAAAAAAAoCAdIBmioCAbIBeioCEoIBYgI6JEAAAAAAAAAACgIBUgJaKgIBQgIaKgISEgFiAeokQAAAAAAAAAAKAgFSAfoqAgFCAaoqAhHyAWIByiRAAAAAAAAAAAoCAVIB2ioCAUIBuioCEjIABB6ABqIREgAEH0AGohDiAAQdwAaiESIAVB+ABqIQ8gBUHYAGohCiAFQdAAaiENA0AgACgCGCEHIAEoAgAhCSAMKAIAIQggBSsDqAIhGyAFKwOwAiEcIAUrA7gCIR1BACECA0AgBUGAAWogAkEDdGogIiAoIAcgCSAIIAJBAnRqKAIAQQJ0aigCAEEEdCIGaioCALsiFKJEAAAAAAAAAACgICQgByAGQQRyaioCALsiFqKgoCIaIAcgBkEIcmoqAgC7IhWiICEgIyAUokQAAAAAAAAAAKAgHyAWoqCgIhkgByAGQQxyaioCALsiF6KhIBwgFaIgGyAXoqEiGKIgGSAmICAgFKJEAAAAAAAAAACgICcgFqKgoCIeIBWioSAbIB0gFaKhIhWiIB0gF6IgHKEiGSAeIBeiIBqhokQAAAAAAAAAAKCgoCAZIBmiRAAAAAAAAAAAoCAVIBWioCAYIBiioJ8iFSAVoqM5AwAgBUHgAWogAkEYbGoiBiAUOQMAIAYgFjkDCCACQQFqIgJBA0cNAAtEAAAAAAAAAAAhHkQAAAAAAAAAACElRAAAAAAAAAAAISlEAAAAAAAAAAAhKkQAAAAAAAAAACErRAAAAAAAAAAAISxEAAAAAAAAAAAhLUQAAAAAAAAAACEuRAAAAAAAAAAAIS8gBSsDmAIiFyAFKwP4ASIWoiAFKwOAAiIYIAUrA5ACIhWioSIwIAUrA+ABIhkgGCAXoSIxoiAFKwPoASIaIBYgFaGioaAiFEQAAAAAAAAAAGIEQCAWIBmhRAAAAAAAAPA/IBSjIhSiISwgGSAVoSAUoiErIBUgFqEgFKIhKiAaIBihIBSiISkgFyAaoSAUoiElIBkgGKIgGiAWoqEgFKIhLyAaIBWiIBkgF6KhIBSiIS4gMCAUoiEtIDEgFKIhHgsgBSAmIC0gBSsDgAEiFKJEAAAAAAAAAACgIC4gBSsDiAEiFqKgIC8gBSsDkAEiFaKgIhcgHaJEAAAAAAAAAACgoTkD2AEgBSAnICogFKJEAAAAAAAAAACgICsgFqKgICwgFaKgIhggHaJEAAAAAAAAAACgoTkD0AEgBSAgIB4gFKJEAAAAAAAAAACgICUgFqKgICkgFaKgIhQgHaJEAAAAAAAAAACgoTkDyAEgBSAiIBcgHKJEAAAAAAAAAACgoTkDwAEgBSAkIBggHKJEAAAAAAAAAACgoTkDuAEgBSAoIBQgHKJEAAAAAAAAAACgoTkDsAEgBSAhIBsgF6JEAAAAAAAAAACgoTkDqAEgBSAfIBsgGKJEAAAAAAAAAACgoTkDoAEgBSAjIBsgFKJEAAAAAAAAAACgoTkDmAEgACgCICEHIAVCg4CAgDA3A1AgBUKGgP2XJDcDSCAKQQhqIglCADcCACAKQRBqIghCADcCACAKQgA3AgAgBUIANwN4IAUgDzYCdCAFIA02AnBBACECIAVBA0EDQQYgBUGYAWpBABCuBiEGIAVBgICEEDYCwAIgBUIANwPIAiAFIAVByABqNgLEAiAGIAVBwAJqEJYEIAYQsQYaIAcgBUHIAGogBygCACgCIBECACAFQcgAahCxBhpBACEGAkAgACgChAFBAEoEQANAAkAgACgCICIHIAEoAgAgAkECdGooAgAgBygCACgCJBEZACETIAArA0AgE7tjQQFzRQRAIAZBAUohByAGQQFqIQYgBw0BCyACQQFqIgIgACgChAFIDQELCyAGQQJKDQELIAAoAiAhAiAFQoOAgIAwNwNQIAVChoD9lyQ3A0ggCUIANwIAIAhCADcCACAKQgA3AgAgBUIANwN4IAUgDzYCdCAFIA02AnBBACEHIAVBA0EDQQYgBUGYAWpBABCuBiEGIAVBgICEEDYCwAIgBUIANwPIAiAFIAVByABqNgLEAiAGIAVBwAJqEJYEIAYQsQYaIAIgBUHIAGogAigCACgCKBEDACEIIAVByABqELEGGiAAKAKAASIGQQFOBEAgACsDQCEUIAgoAgAhCUEAIQIDQCAUIAkgAkECdGoqAgC7ZEEBc0UEQCAAKAJcIAdBAnRqIAI2AgAgB0EBaiEHIAAoAoABIQYLIAJBAWoiAiAGSA0ACwsgACgCKCICIBIgByAOIBEgAigCACgCIBEJAARAIAUgDigCABDDCyAFQZgBaiAFQcgAEK4bGgsgBUHIAGogACAFQZgBaiAFEKcGIgIgCBCiDiAFKwNQIAQrAwhjQQFzRQRAIAQgBSkDSDcDACAEIA0pAwA3AwggBSADNgLEAiAFQYCAhBA2AsACIAVCADcDyAIgAiAFQcACahCWBAsgAhCxBhpBASELCyAMQQxqIgwgEEcNAAsLIAVB0AJqJAAgCwu2DAMKfwJ+EnwjAEHwAWsiBSQAIABC//////////f/ADcDCCAAQQA2AgAgBUE4aiELIAVBGGohCiAFQRBqIQxB5AAhCQNAQQAhCAJAIAEoAoABIgYEQCABIAEpAwgiD0L/////D4NCisb9wQ9+IA9CIIh8Ig9C/////w+DQorG/cEPfiAPQiCIfCIQNwMIIA+nIAZwIgggEKcgBnAiB0cNAQsDQCAGBH8gASABKQMIIg9C/////w+DQorG/cEPfiAPQiCIfCIPNwMIIA+nIAZwBUEACyIHIAhGDQALCwJAIAErA0AiESAEKAIAIgYgCEECdGoqAgC7Y0EBcw0AIBEgBiAHQQJ0aioCALtjQQFzDQAgBSACKwNAIhQgAisDMCIVIAEoAhgiBiAIQQR0IghqKgIAuyIRokQAAAAAAAAAAKAgAisDOCIXIAYgCEEEcmoqAgC7IhKioKAiGCAGIAhBDHJqKgIAuyIaoiACKwMoIhsgAisDGCIcIBGiRAAAAAAAAAAAoCACKwMgIh0gEqKgoCIeoSIfIAIrAxAiGSACKwMAIiAgBiAHQQR0IgdqKgIAuyIWokQAAAAAAAAAAKAgAisDCCIhIAYgB0EEcmoqAgC7IhOioKAiIiAUIBUgFqJEAAAAAAAAAACgIBcgE6KgoCIUIAYgB0EIcmoqAgC7IhWioSIXoiAZICAgEaJEAAAAAAAAAACgICEgEqKgoCIRIBggBiAIQQhyaioCALsiEqKhIhggFCAGIAdBDHJqKgIAuyIZoiAbIBwgFqJEAAAAAAAAAACgIB0gE6KgoCIWoSIToqE5AxggBSAeIBKiIBEgGqKhIhEgE6IgHyAWIBWiICIgGaKhIhKioTkDECAFIBggEqIgESAXoqE5AwggBUHQAGogBUEIahD1EyAFIAUrA1AiEyACKwMAIhSiRAAAAAAAAAAAoCAFKwNYIhUgAisDGCIXoqAgBSsDYCIYIAIrAzAiGqKgOQOYASAFIBMgAisDCCIbokQAAAAAAAAAAKAgFSACKwMgIhyioCAYIAIrAzgiHaKgOQOgASACKwNAIREgAisDECESIAIrAyghFiAFIBQgBSsDaCIeokQAAAAAAAAAAKAgFyAFKwNwIh+ioCAaIAUrA3giGaKgOQOwASAFIBsgHqJEAAAAAAAAAACgIBwgH6KgIB0gGaKgOQO4ASAFIBMgEqJEAAAAAAAAAACgIBUgFqKgIBggEaKgOQOoASAFIBIgHqJEAAAAAAAAAACgIBYgH6KgIBEgGaKgOQPAASAFIBQgBSsDgAEiE6JEAAAAAAAAAACgIBcgBSsDiAEiFKKgIBogBSsDkAEiFaKgOQPIASAFIBsgE6JEAAAAAAAAAACgIBwgFKKgIB0gFaKgOQPQASAFIBIgE6JEAAAAAAAAAACgIBYgFKKgIBEgFaKgOQPYASABKAIQIQcgBUKDgICAMDcDECAFQoaA/ZckNwMIIApBCGoiCEIANwIAIApBEGoiDkIANwIAIApCADcCACAFQgA3AzggBSALNgI0IAUgDDYCMCAFQdAAakEDQQNBBiAFQZgBakEAEK4GIQYgBUGAgIQQNgLgASAFQgA3A+gBIAUgBUEIajYC5AEgBiAFQeABahCWBCAGELEGGiAFQUBrIAcgBUEIaiAHKAIAKAIgEQQAIAVBCGoQsQYaIAUrA0ggACsDCGNBAXMNACAAIAUpA0A3AwAgACAFKQNINwMIIAVCg4CAgDA3AxAgBUKGgP2XJDcDCCAIQgA3AgAgDkIANwIAIApCADcCACAFQgA3AzggBSALNgI0IAUgDDYCMCAFQdAAakEDQQNBBiAFQZgBakEAEK4GIQcgBUGAgIQQNgLgASAFQgA3A+gBIAUgBUEIajYC5AEgByAFQeABahCWBCAHELEGGiADIAVBCGoQuQYaIAVBCGoQsQYaIAErA0hEAAAAAAAA8D8gBSgCQLcgASgCgAG3oyIRIBGioRCVFaMiEb1C////////////AINCgICAgICAgPj/AFIhBwJ/IBGZRAAAAAAAAOBBYwRAIBGqDAELQYCAgIB4CyAJIAcbIAkgESAJt2MbIQkLIA1BAWoiDSAJSA0ACyAFQfABaiQAC6YBAQR/IwBBEGsiBCQAIARBCGogASgCECIDIAMoAgAoAjwRAgAgASgCHCEFQZgBENUaIgNCADcCBCADQaDUBTYCACADQRBqIgYgAiAEQQhqIAUgASgChAEgASsDQBCRDiAAIAM2AgQgACAGNgIAAkAgBCgCDCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgBEEQaiQACygAIABBvNcFNgIMIABBvNYFNgIAIABBGGoQ4wsaIABBDGoQ4wsaIAALKwAgAEG81wU2AgwgAEG81gU2AgAgAEEYahDjCxogAEEMahDjCxogABCiGwscACAAQbzXBTYCACAAQQxqEOMLGiAAEOMLGiAACx8AIABBvNcFNgIAIABBDGoQ4wsaIAAQ4wsaIAAQohsLDgAgAEEMaiABIAIQlA4LhQEBAn8gASgCBCEDQSgQ1RoiAkIANwIEIAJBvNYFNgIAIAEoAgghASACQQxqIgQQ4wsaIAIgATYCFCACIAM2AhAgAkG81wU2AgwgAkEYahDjCxogAiADNgIcIAJByM8FNgIYIAMoAhAhAyACIAE2AiQgAiADNgIgIAAgAjYCBCAAIAQ2AgALFgAgAEHQ2AU2AgAgAEEMahDjCxogAAsZACAAQdDYBTYCACAAQQxqEOMLGiAAEKIbC9oPAwV/BH0VfCMAQbADayIDJAAgA0H4AxDVGiIENgKgAyADIARB+ANqIgU2AqgDIARBAEH4AxCvGxogAyAFNgKkAyAAKAIIIQAgASgCACEFA0AgACAFIAZBAnRqKAIAQQR0IgFBCHJqKgIAIQggACABQQxyaioCACEJIAAgAUEEcmoqAgAhCiAAIAFqKgIAIQsgBEKAgICAgICA+D83A0AgBCALuzkDMCAEIAq7OQM4IAQgCbs5AyggBCAIuzkDECAEIAogCZS7OQMgIAQgCyAJlLs5AxggBCAKIAiUuzkDCCAEIAsgCJS7OQMAIARByABqIQQgBkEBaiIGQQdHDQALQQAhBAJAAkAgA0GgA2pBB0EJEPgTRQ0AIANCgICAgICAgPg/NwOQAyADQgA3A4gDIAMoAqADIgErA+ADIQwgASsD8AMhDSADQoCAgICAgID4PzcDwAIgAyANmiINIAyjOQOAAyABKwPoAyEMIANCADcDsAIgAyANIAyjOQO4AkEFIQQCQANAIAQiBUEJbCEGRAAAAAAAAAAAIQxEAAAAAAAAAAAhDQNAIAwgASAEQQFqIgQgBmpBA3RqKwMAIg4gBEEDdCIAIANBgAJqaisDAKKhIQwgDSAOIANB0AJqIABqKwMAoqEhDSAEQQhHDQALIAVBA3QiBCADQYACamogDCABIAVB0ABsaisDACIOoyIMOQMAIANB0AJqIARqIA0gDqMiDTkDACANIA1iIAwgDGJyRQRAIAVBAWshBCAFRQ0CDAELC0EAIQQMAQsgA0H4AWoiAEIANwMAIANB8AFqIgFCADcDACADQgA3A+gBIANCADcD4AEgA0IANwPQASADQgA3A8gBIANCADcDwAFBACEEIANBiAFqQQFBBEEGIANB4AFqQQAQrgYhBSADQdAAakEBQQNBBiADQcABakEAEK4GIQcgAyADKwP4AiADKwOoAiIToSIUOQP4AiADIAMrA/ACIAMrA6ACIg+hIhU5A/ACIAMgAysD6AIgAysDmAIiFqEiFzkD6AIgAyADKwPgAiADKwOQAiIMoSINOQPgAiADIAMrA9ACIAMrA4ACIg6hIhA5A9ACIAMgAysD2AIgAysDiAIiEaEiEjkD2AIgAyADKwOAAyADKwOwAiIYoSIZOQOAAyADIAMrA4gDIAMrA7gCIhqhIhs5A4gDIAMgAysDkAMgAysDwAIiHKEiHTkDkAMgACAOIA8gHKIgEyAaoqEiHqIgESAcIBaiIBMgGKKhIh+ioSAMIBogFqIgDyAYoqEiIKKgOQMAIAEgHiAQoiAfIBKioSAgIA2ioCAcIBGiIBogDKKhIBeioSAcIA6iIBggDKKhIBWioCAaIA6iIBggEaKhIBSioSATIBGiIA8gDKKhIBmioCATIA6iIBYgDKKhIBuioSAPIA6iIBYgEaKhIB2ioDkDACADIBwgECAVoiASIBeioaIgGCASIBSiIA0gFaKhoiAPIBAgHaIgDSAZoqGiIAwgFyAboiAVIBmioSIPoiAOIBUgHaIgFCAboqEiDKIgESAXIB2iIBQgGaKhIg6ioaAgFiASIB2iIA0gG6KhoqGgIBMgECAboiASIBmioaKhoCAaIBAgFKIgDSAXoqGioaA5A+gBIAMgDSAPoiAQIAyiIBIgDqKhoDkD4AEgA0IANwMQIANBhoCEiHg2AgggAyADQYgBajYCDCADQYaAhJB4NgJAIANCADcDSCADIANB0ABqNgJEIANBCGogA0FAaxCzCyIGQQFOBEAgA0EANgIQIANCADcDCCAGQaWSySRPDQIgAyAGQThsIgAQ1RoiBDYCCCADIAQ2AgwgAyAAIARqIgA2AhADQCAEEKcGQThqIgQgAEcNAAsgAyAANgIMIAIoAgAiAQRAAn8gASABIAIoAgQiBEYNABoDQCAEQThrELEGIgQgAUcNAAsgAigCAAshBCACIAE2AgQgBBCiGyADKAIMIQALIAMoAgghBCACIAA2AgQgAiAENgIAIAIgAygCEDYCCCAGQQFOBEBBACEAIAMrA7gCIRAgAysDiAMhESADKwOwAiESIAMrA4ADIRMgAysDqAIhFCADKwP4AiEPIAMrA6ACIRUgAysD8AIhFiADKwOYAiEXIAMrA+gCIRggAysDkAIhGSADKwPgAiEaIAMrA4gCIRsgAysD2AIhHiADKwOAAiEfIAMrA9ACISADQCADQQhqQQNBA0EGEKgGIQQgAEE4bCIBIAIoAgBqIAQQuQYaIAQQsQYaIAIoAgAgAWooAhAiBAJ8IBwgHSADQcABaiAAQQN0aisDACIMoqAiDZlEAAAAAAAAgD5kQQFzBEBEAAAAAAAA8D8hDUQAAAAAAAAAAAwBCyAMRAAAAAAAAPA/IA2jIg2iIQxEAAAAAAAA8D8LOQNAIAQgDCARoiANIBCioDkDOCAEIAwgE6IgDSASoqA5AzAgBCAMIA+iIA0gFKKgOQMoIAQgDCAWoiANIBWioDkDICAEIAwgGKIgDSAXoqA5AxggBCAMIBqiIA0gGaKgOQMQIAQgDCAeoiANIBuioDkDCCAEIAwgIKIgDSAfoqA5AwAgAEEBaiIAIAZHDQALCyAGIQQLIAcQsQYaIAUQsQYaCyADKAKgAyIABEAgAyAANgKkAyAAEKIbCyADQbADaiQAIAQPCxD8GgALBABBBwtTAQJ/IAEoAgQhAkEYENUaIgFCADcCBCABQdDYBTYCACABQQxqIgMQ4wsaIAEgAjYCECABQdjZBTYCDCABIAIoAhA2AhQgACABNgIEIAAgAzYCAAsWACAAQYDbBTYCACAAQQxqEOMLGiAACxkAIABBgNsFNgIAIABBDGoQ4wsaIAAQohsL5gQDBH8EfQF8IwBBgAFrIgQkACAEQcAEENUaIgM2AnAgBCADQcAEaiIFNgJ4IANBAEHABBCvGxogBCAFNgJ0IAAoAgghACABKAIAIQUDQCAAIAUgBkECdGooAgBBBHQiAUEIcmoqAgAhByAAIAFBDHJqKgIAIQggACABQQRyaioCACEJIAAgAWoqAgAhCiADQoCAgICAgID4PzcDQCADIAq7OQMwIAMgCbs5AzggAyAIuzkDKCADIAe7OQMQIAMgCSAIlLs5AyAgAyAKIAiUuzkDGCADIAkgB5S7OQMIIAMgCiAHlLs5AwAgA0HIAGohAyAGQQFqIgZBCEcNAAsCQAJAIARB8ABqQQhBCRD4EwRAIARBOGogBEEDQQNBBhCoBiIFELgGIQNBOBDVGiIBIAMQrQYaIAFBOGohBiACKAIAIgAEQAJ/IAAgACACKAIEIgNGDQAaA0AgA0E4axCxBiIDIABHDQALIAIoAgALIQMgAiAANgIEIAMQohsLIAIgBjYCCCACIAY2AgQgAiABNgIAIARBOGoQsQYaIAUQsQYaIAIoAgAoAhAiAUKAgICAgICA+D83A0BBByEDIAQoAnAhAANAIAMiBUEJbCEGRAAAAAAAAAAAIQsDQCALIAAgA0EBaiIDIAZqQQN0aisDACABIANBA3RqKwMAoqEhCyADQQhHDQALIAEgBUEDdGogCyAAIAVB0ABsaisDAKMiCzkDACALIAthBEAgBUEBayEDIAUNAQsLIAsgC2EhAwwBC0EAIQMgBCgCcCIARQ0BCyAEIAA2AnQgABCiGwsgBEGAAWokACADCwQAQQgLUwECfyABKAIEIQJBGBDVGiIBQgA3AgQgAUGA2wU2AgAgAUEMaiIDEOMLGiABIAI2AhAgAUGI3AU2AgwgASACKAIQNgIUIAAgATYCBCAAIAM2AgALVwEDfyAAQbjeBTYCDCAAQbDdBTYCACAAQQxqIQICQCAAKAIYIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCyACEOMLGiAAC1oBA38gAEG43gU2AgwgAEGw3QU2AgAgAEEMaiECAkAgACgCGCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgAhDjCxogABCiGwtHAQJ/IABBuN4FNgIAAkAgACgCDCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgABDjCxogAAtKAQJ/IABBuN4FNgIAAkAgACgCDCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgABDjCxogABCiGwv1EQMGfwR9BHwjAEHQG2siBSQAIAAgACgCACgCJBEAACACTARAIAVBwBpqQQBByAAQrxsaIAVB+BlqQQBByAAQrxsaIAVBwBlqEKcGIQkgACgCCCIAIAkgASACIAVBwBpqIAVB+BlqIAAoAgAoAiARDQAgCSgCECEGIAVBqBlqQgA3AwAgBUGgGWpCADcDACAFQZgZakIANwMAIAVBkBlqQgA3AwAgBUGIGWpCADcDACAFQYAZakIANwMAIAVCADcD+BggBUIANwPwGCAFQoCAgICAgID4PzcDsBkgBUHgE2pBAEGIBRCvGxoCQCAEKAIAIgogBCgCBEcEQCACQQFIDQEDQCAGIAhBBHQiAEEIcmoqAgAhCyAGIABBDHJqKgIAIQwgBiAAQQRyaioCACENIAAgBmoqAgAhDiAFIAogCEEDdGorAwAiDzkDsBkgBSAPIA67IhCiOQOgGSAFIA8gDbsiEaI5A6gZIAUgDyAMu6IiEjkDmBkgBSASIBGiOQOQGSAFIBIgEKI5A4gZIAUgDyALu6IiDzkDgBkgBSAPIBGiOQP4GCAFIA8gEKI5A/AYQQAhAQNAIAVB4BNqIAFB0ABsaiIAIAArAwAgBUHwGGogAUEDdGorAwAiDyAPoqA5AwAgAUEBaiIAQQlHBEAgAUEJbCEEA0AgBUHgE2ogACAEakEDdGoiByAHKwMAIA8gBUHwGGogAEEDdGorAwCioDkDACAAQQFqIgBBCUcNAAsLIAFBAWoiAUEJRw0ACyAIQQFqIgggAkcNAAsMAQsgAkEBSA0AA0AgBiAIQQR0IgBBCHJqKgIAIQsgACAGaioCACEMIAYgAEEEcmoqAgAhDSAFIAYgAEEMcmoqAgC7Ig85A5gZIAUgDbsiEDkDqBkgBSAQIA+iOQOQGSAFIAy7IhE5A6AZIAUgESAPojkDiBkgBSALuyIPOQOAGSAFIBAgD6I5A/gYIAUgESAPojkD8BhBACEBA0AgBUHgE2ogAUHQAGxqIgAgACsDACAFQfAYaiABQQN0aisDACIPIA+ioDkDACABQQFqIgBBCUcEQCABQQlsIQQDQCAFQeATaiAAIARqQQN0aiIHIAcrAwAgDyAFQfAYaiAAQQN0aisDAKKgOQMAIABBAWoiAEEJRw0ACwsgAUEBaiIBQQlHDQALIAhBAWoiCCACRw0ACwsgBSAFKwPoEzkDqBQgBSAFKwPwEzkD8BQgBSAFKwO4FDkD+BQgBSAFKwP4EzkDuBUgBSAFKwPAFDkDwBUgBSAFKwOIFTkDyBUgBSAFKwOAFDkDgBYgBSAFKwPIFDkDiBYgBSAFKwOQFTkDkBYgBSAFKwPYFTkDmBYgBSAFKwOIFDkDyBYgBSAFKwPQFDkD0BYgBSAFKwOYFTkD2BYgBSAFKwPgFTkD4BYgBSAFKwOoFjkD6BYgBSAFKwOQFDkDkBcgBSAFKwPYFDkDmBcgBSAFKwOgFTkDoBcgBSAFKwPoFTkDqBcgBSAFKwOwFjkDsBcgBSAFKwP4FjkDuBcgBSAFKwOYFDkD2BcgBSAFKwPgFDkD4BcgBSAFKwOoFTkD6BcgBSAFKwPwFTkD8BcgBSAFKwO4FjkD+BcgBSAFKwOAFzkDgBggBSAFKwPIFzkDiBggBSAFKwOgFDkDoBggBSAFKwPoFDkDqBggBSAFKwOwFTkDsBggBSAFKwP4FTkDuBggBSAFKwPAFjkDwBggBSAFKwOIFzkDyBggBSAFKwPQFzkD0BggBSAFKwOYGDkD2BggBUHYDmogBUHgE2pBiAUQrhsaIAVB0AlqQQBBiAUQrxsaIAVByARqQQBBiAUQrxsaIAVBgARqQQBByAAQrxsaIAVCiYCAgJABNwOoAiAFQYaAiIh8NgKgAiAFIAVB2A5qNgKkAiAFQoGAgICQATcDECAFQYaAiJB8NgIIIAUgBUGABGo2AgwgBUKJgICAkAE3A6AbIAVBhoCIkHw2ApgbIAUgBUHQCWo2ApwbIAVCiYCAgJABNwPwASAFQYaAiJB8NgLoASAFIAVByARqNgLsASAFQaACaiAFQQhqIAVBmBtqIAVB6AFqQQUQrwQgBUGgAmogBUEIakEDQQNBBiAFQYgJakEAEK4GIgYQuAYhAEE4ENUaIgQgABCtBhogBEE4aiEBIAMoAgAiBwRAAn8gByAHIAMoAgQiAEYNABoDQCAAQThrELEGIgAgB0cNAAsgAygCAAshACADIAc2AgQgABCiGwsgAyABNgIIIAMgATYCBCADIAQ2AgAgBUGgAmoQsQYaIAYQsQYaIAMoAgBBARCQDiAFIAUrA4gaOQOoGiAFKwOgGiEPIAVCADcDoBogBSAPOQOwGiAFQgA3A4gaIAMoAgAhASAFQbAbaiIGQgA3AwAgBUG4G2oiCEIANwMAIAVByBtqIgBCADcDACAFQgA3A6gbIAVCg4CAgDA3A6AbIAVChoD9lyQ3A5gbIAUgADYCxBsgBSAFQaAbaiICNgLAGyAFQaACakEDQQNBBiAFQfgZakEAEK4GIQQgBUGAgIQQNgIIIAVCADcDECAFIAVBmBtqNgIMIAQgBUEIahCWBCAEELEGGiAFQQhqIAVBmBtqIAEQ/wYgBUGYG2oQsQYaIAVB6AFqEKcGIQQgBSgCCCIBIAVBCGogBEF/IAEoAgAoAgwRBgAgBkIANwMAIAhCADcDACAAQgA3AwAgBUIANwOoGyAFQoOAgIAwNwOgGyAFQoaA/ZckNwOYGyAFIAA2AsQbIAUgAjYCwBsgBUGgAmpBA0EDQQYgBUHAGmpBABCuBiEAIAVBgICEEDYCiBsgBUIANwOQGyAFIAVBmBtqNgKMGyAAIAVBiBtqEJYEIAAQsQYaIAVBoAJqIAQgBUGYG2oQ/wYgBUGYG2oQsQYaIAUoAqACIgAgBUGgAmogAygCAEF/IAAoAgAoAgwRBgAgBUGYA2oQsQYaIAVB4AJqELEGGiAFQagCahCxBhogBBCxBhogBUGAAWoQsQYaIAVByABqELEGGiAFQRBqELEGGiAJELEGGkEBIQcLIAVB0BtqJAAgBwtTAQJ/IAEoAgQhAkEcENUaIgFCADcCBCABQbDdBTYCACABQQxqIgMQ4wsaIAEgAjYCECABQbjeBTYCDCABQRRqIAIQ5wwgACABNgIEIAAgAzYCAAsWACAAQdzfBTYCACAAQQxqEOMLGiAACxkAIABB3N8FNgIAIABBDGoQ4wsaIAAQohsLJgAjAEEQayIAJABBq34gAEGY4gUQiQNB3OIFQeXiBUHFARCYCgALBABBBQsEAEEKC0kBAn8gASgCBCECQRQQ1RoiAUIANwIEIAFB3N8FNgIAIAFBDGoiAxDjCxogASACNgIQIAFB7OAFNgIMIAAgATYCBCAAIAM2AgALFgAgAEGg4wU2AgAgAEEMahDjCxogAAsZACAAQaDjBTYCACAAQQxqEOMLGiAAEKIbC5sNAwZ/BH0EfCMAQdAWayIFJAAgACAAKAIAKAIkEQAAIAJMBEAgBUG4FmpCADcDACAFQbAWakIANwMAIAVBqBZqQgA3AwAgBUGgFmpCADcDACAFQZgWakIANwMAIAVBkBZqQgA3AwAgBUIANwOIFiAFQgA3A4AWIAVCgICAgICAgPg/NwPAFiAFQfAQakEAQYgFEK8bGgJAIAQoAgAiCSAEKAIERwRAIAJBAUgNASAAKAIIIQYgASgCACEKA0AgBiAKIAhBAnRqKAIAQQR0IgBBCHJqKgIAIQsgBiAAQQxyaioCACEMIAYgAEEEcmoqAgAhDSAAIAZqKgIAIQ4gBSAJIAhBA3RqKwMAIg85A8AWIAUgDyAOuyIQojkDsBYgBSAPIA27IhGiOQO4FiAFIA8gDLuiIhI5A6gWIAUgEiARojkDoBYgBSASIBCiOQOYFiAFIA8gC7uiIg85A5AWIAUgDyARojkDiBYgBSAPIBCiOQOAFkEAIQEDQCAFQfAQaiABQdAAbGoiACAAKwMAIAVBgBZqIAFBA3RqKwMAIg8gD6KgOQMAIAFBAWoiAEEJRwRAIAFBCWwhBANAIAVB8BBqIAAgBGpBA3RqIgcgBysDACAPIAVBgBZqIABBA3RqKwMAoqA5AwAgAEEBaiIAQQlHDQALCyABQQFqIgFBCUcNAAsgCEEBaiIIIAJHDQALDAELIAJBAUgNACAAKAIIIQYgASgCACEJA0AgBiAJIAhBAnRqKAIAQQR0IgBBCHJqKgIAIQsgACAGaioCACEMIAYgAEEEcmoqAgAhDSAFIAYgAEEMcmoqAgC7Ig85A6gWIAUgDbsiEDkDuBYgBSAQIA+iOQOgFiAFIAy7IhE5A7AWIAUgESAPojkDmBYgBSALuyIPOQOQFiAFIBAgD6I5A4gWIAUgESAPojkDgBZBACEBA0AgBUHwEGogAUHQAGxqIgAgACsDACAFQYAWaiABQQN0aisDACIPIA+ioDkDACABQQFqIgBBCUcEQCABQQlsIQQDQCAFQfAQaiAAIARqQQN0aiIHIAcrAwAgDyAFQYAWaiAAQQN0aisDAKKgOQMAIABBAWoiAEEJRw0ACwsgAUEBaiIBQQlHDQALIAhBAWoiCCACRw0ACwsgBSAFKwP4EDkDuBEgBSAFKwOAETkDgBIgBSAFKwPIETkDiBIgBSAFKwOIETkDyBIgBSAFKwPQETkD0BIgBSAFKwOYEjkD2BIgBSAFKwOQETkDkBMgBSAFKwPYETkDmBMgBSAFKwOgEjkDoBMgBSAFKwPoEjkDqBMgBSAFKwOYETkD2BMgBSAFKwPgETkD4BMgBSAFKwOoEjkD6BMgBSAFKwPwEjkD8BMgBSAFKwO4EzkD+BMgBSAFKwOgETkDoBQgBSAFKwPoETkDqBQgBSAFKwOwEjkDsBQgBSAFKwP4EjkDuBQgBSAFKwPAEzkDwBQgBSAFKwOIFDkDyBQgBSAFKwOoETkD6BQgBSAFKwPwETkD8BQgBSAFKwO4EjkD+BQgBSAFKwOAEzkDgBUgBSAFKwPIEzkDiBUgBSAFKwOQFDkDkBUgBSAFKwPYFDkDmBUgBSAFKwOwETkDsBUgBSAFKwP4ETkDuBUgBSAFKwPAEjkDwBUgBSAFKwOIEzkDyBUgBSAFKwPQEzkD0BUgBSAFKwOYFDkD2BUgBSAFKwPgFDkD4BUgBSAFKwOoFTkD6BUgBUHoC2ogBUHwEGpBiAUQrhsaIAVB4AZqQQBBiAUQrxsaIAVB2AFqQQBBiAUQrxsaIAVBkAFqQQBByAAQrxsaIAVCiYCAgJABNwNAIAVBhoCIiHw2AjggBSAFQegLajYCPCAFQoGAgICQATcDCCAFQYaAiJB8NgIAIAUgBUGQAWo2AgQgBUKJgICAkAE3A4gBIAVBhoCIkHw2AoABIAUgBUHgBmo2AoQBIAVCiYCAgJABNwN4IAVBhoCIkHw2AnAgBSAFQdgBajYCdCAFQThqIAUgBUGAAWogBUHwAGpBBRCvBCAFQThqIAVBA0EDQQYgBUGYBmpBABCuBiIGELgGIQBBOBDVGiIEIAAQrQYaIARBOGohASADKAIAIgcEQAJ/IAcgByADKAIEIgBGDQAaA0AgAEE4axCxBiIAIAdHDQALIAMoAgALIQAgAyAHNgIEIAAQohsLIAMgATYCCCADIAE2AgQgAyAENgIAIAVBOGoQsQYaIAYQsQYaIAMoAgBBABCQDkEBIQcLIAVB0BZqJAAgBwtTAQJ/IAEoAgQhAkEYENUaIgFCADcCBCABQaDjBTYCACABQQxqIgMQ4wsaIAEgAjYCECABQajkBTYCDCABIAIoAhA2AhQgACABNgIEIAAgAzYCAAsWACAAQcjlBTYCACAAQQxqEOMLGiAACxkAIABByOUFNgIAIABBDGoQ4wsaIAAQohsLBABBAAsEAEEbC1kCAn8BfiABKQIEIQQgASgCDCECQRwQ1RoiAUIANwIEIAFByOUFNgIAIAFBDGoiAxDjCxogASACNgIYIAEgBDcCECABQbzmBTYCDCAAIAE2AgQgACADNgIACxYAIABB/OcFNgIAIABBDGoQ4wsaIAALGQAgAEH85wU2AgAgAEEMahDjCxogABCiGwuXDAMHfwF9BXwjAEGQAWsiBCQAIARB4AMQ1RoiAzYCgAEgBCADQeADaiIFNgKIASADQQBB4AMQrxshCSAEIAU2AoQBIARBwAMQ1RoiAzYCcCAEIANBwANqIgU2AnggA0EAQcADEK8bIQMgBCAFNgJ0IAAoAgghByABKAIAIQhBACEFQQAhAANAIAggAEECdGooAgBBBWxBAnQgB2oiASoCELshDCABKgIMuyENIAEqAgi7IQ4gASoCBLshCyAAQQVHBEAgASoCACEKIAkgBkEDdGoiAUKAgICAgICA+D83AxggASAMOQMQIAEgDTkDCCABIA45AwAgASAKu5oiDzkDWCABIAwgD6I5A1AgASANIA+iOQNIIAFBQGsgDiAPojkDACAGQQxqIQYLIAMgBUEDdCIBaiAOOQMAIAMgAUEIcmogDTkDACADIAFBEHJqIAw5AwAgAyABQRhyakKAgICAgICA+D83AwAgAyABQSByaiALmiILIA6iOQMAIAMgAUEocmogCyANojkDACADIAFBMHJqIAsgDKI5AwAgAyABQThyaiALOQMAIAVBCGohBSAAQQFqIgBBBkcNAAsgBEGAAWpBBUEMEPgTGiAEKAJwIgMgBCgCgAEiASsDoAM5A4ADIAMgASsDqAM5A4gDIAMgASsDsAM5A5ADIAMgASsDuAM5A5gDIAMgASsDwAM5A6ADIAMgASsDyAM5A6gDIAMgASsD0AM5A7ADIAMgASsD2AM5A7gDQQAhASAEQfAAakEHQQgQ+BMEQEEGIQMgBEE4aiAEQQNBBEEGEKgGIgEQuAYhCCABELEGGiAIKAIQIgBCgICAgICAgPg/NwNYIAQoAnAhBgJAA0AgAyIHQQN0IQVEAAAAAAAAAAAhCwNAIANBA3QhASALIAYgA0EBaiIDIAVqQQN0aisDACAAIAFqKwMooqEhCyADQQdHDQALIAAgBWogCyAGIAdByABsaisDAKMiCzkDIEEAIQEgCyALYg0BIAdBAWshAyAHDQALIABEAAAAAAAAAAAgBCgCgAEiAysDwAIgACsDIKKhIAMrA8gCIAArAyiioSADKwPQAiAAKwMwoqEgAysD2AIgACsDOKKhIAMrA+ACIAArA0CioSADKwPoAiAAKwNIoqEgAysD8AIgACsDUKKhIAMrA/gCIAArA1iioSADKwO4AqMiCzkDGCALIAtiDQAgAEQAAAAAAAAAACADKwPYASAAKwMYoqEgAysD4AEgACsDIKKhIAMrA+gBIAArAyiioSADKwPwASAAKwMwoqEgAysD+AEgACsDOKKhIAMrA4ACIAArA0CioSADKwOIAiAAKwNIoqEgAysDkAIgACsDUKKhIAMrA5gCIAArA1iioSADKwPQAaMiCzkDECALIAtiDQAgAEQAAAAAAAAAACADKwNwIAArAxCioSADKwN4IAArAxiioSADKwOAASAAKwMgoqEgAysDiAEgACsDKKKhIAMrA5ABIAArAzCioSADKwOYASAAKwM4oqEgAysDoAEgACsDQKKhIAMrA6gBIAArA0iioSADKwOwASAAKwNQoqEgAysDuAEgACsDWKKhIAMrA2ijIgs5AwggCyALYg0AIABEAAAAAAAAAAAgAysDCCAAKwMIoqEgAysDECAAKwMQoqEgAysDGCAAKwMYoqEgAysDICAAKwMgoqEgAysDKCAAKwMooqEgAysDMCAAKwMwoqEgAysDOCAAKwM4oqEgAysDQCAAKwNAoqEgAysDSCAAKwNIoqEgAysDUCAAKwNQoqEgAysDWCAAKwNYoqEgAysDAKMiCzkDACALIAtiDQAgBCAIEK0GIQNBOBDVGiIAIAMQrQYaIABBOGohBSACKAIAIgEEQAJ/IAEgASACKAIEIgNGDQAaA0AgA0E4axCxBiIDIAFHDQALIAIoAgALIQMgAiABNgIEIAMQohsLIAIgBTYCCCACIAU2AgQgAiAANgIAIAQQsQYaQQEhAQsgCBCxBhoLIAQoAnAiAwRAIAQgAzYCdCADEKIbCyAEKAKAASIDBEAgBCADNgKEASADEKIbCyAEQZABaiQAIAELBABBBgtTAQJ/IAEoAgQhAkEYENUaIgFCADcCBCABQfznBTYCACABQQxqIgMQ4wsaIAEgAjYCECABQfzoBTYCDCABIAIoAhA2AhQgACABNgIEIAAgAzYCAAsWACAAQZTqBTYCACAAQQxqEOMLGiAACxkAIABBlOoFNgIAIABBDGoQ4wsaIAAQohsL9xIDBn8FfQd8IwBBsB5rIgUkAAJ/QQAgAkEGSA0AGiAFQeAUakEAQYAJEK8bGiAFQbgUakIANwMAIAVBsBRqQgA3AwAgBUGoFGpCADcDACAFQgA3A6AUIAVCgICAgICAgPi/fzcDmBQgBUG4E2pCADcDACAFQbATakIANwMAIAVCADcDqBMgBUIANwOgEyAFQoCAgICAgID4v383A9gTIAAoAgghCCABKAIAIQkCQCAEKAIAIgogBCgCBEYEQANAIAggCSAHQQJ0aigCAEEUbGoiBioCBCELIAYqAgghDCAGKgIMIQ0gBioCECEOIAUgBioCALsiEDkD2BQgBSAQIA67IhGiOQPQFCAFIBAgDbsiEqI5A8gUIAUgECAMuyITojkDwBQgBSARmiIQOQOQFCAFIBKaIhQ5A4gUIAUgE5oiFTkDgBQgBSAQOQPQEyAFIBQ5A8gTIAUgFTkDwBMgBSALuyIQOQP4EyAFIBAgEaI5A/ATIAUgECASojkD6BMgBSAQIBOiOQPgE0EAIQEDQCAFQeAUaiABQegAbGoiBiAGKwMAIAFBA3QiBiAFQYAUamorAwAiECAQoiAFQaATaiAGaisDACIRIBGioKA5AwAgAUEBaiIGQQxHBEAgAUEMbCEAA0AgBUHgFGogACAGakEDdGoiBCAEKwMAIBAgBkEDdCIEIAVBgBRqaisDAKIgESAFQaATaiAEaisDAKKgoDkDACAGQQFqIgZBDEcNAAsLIAFBAWoiAUEMRw0ACyAHQQFqIgcgAkcNAAwCCwALA0AgCCAJIAdBAnRqKAIAQRRsaiIGKgIIIQsgBioCDCEMIAYqAhAhDSAGKgIEIQ4gBioCACEPIAUgCiAHQQN0aisDACIQmiIROQOYFCAFIBE5A9gTIAUgECAPuyIRojkD2BQgBSAQIA67IhKiOQP4EyAFIBAgDbuiIhMgEaI5A9AUIAUgECAMu6IiFCARojkDyBQgBSAQIAu7oiIQIBGiOQPAFCAFIBOaIhE5A5AUIAUgFJoiFTkDiBQgBSAQmiIWOQOAFCAFIBMgEqI5A/ATIAUgFCASojkD6BMgBSAQIBKiOQPgEyAFIBE5A9ATIAUgFTkDyBMgBSAWOQPAE0EAIQEDQCAFQeAUaiABQegAbGoiBiAGKwMAIAFBA3QiBiAFQYAUamorAwAiECAQoiAFQaATaiAGaisDACIRIBGioKA5AwAgAUEBaiIGQQxHBEAgAUEMbCEAA0AgBUHgFGogACAGakEDdGoiBCAEKwMAIBAgBkEDdCIEIAVBgBRqaisDAKIgESAFQaATaiAEaisDAKKgoDkDACAGQQFqIgZBDEcNAAsLIAFBAWoiAUEMRw0ACyAHQQFqIgcgAkcNAAsLIAUgBSsD6BQ5A8AVIAUgBSsD8BQ5A6AWIAUgBSsD0BU5A6gWIAUgBSsD+BQ5A4AXIAUgBSsD2BU5A4gXIAUgBSsDuBY5A5AXIAUgBSsDgBU5A+AXIAUgBSsD4BU5A+gXIAUgBSsDwBY5A/AXIAUgBSsDoBc5A/gXIAUgBSsDiBU5A8AYIAUgBSsD6BU5A8gYIAUgBSsDyBY5A9AYIAUgBSsDqBc5A9gYIAUgBSsDiBg5A+AYIAUgBSsDkBU5A6AZIAUgBSsD8BU5A6gZIAUgBSsD0BY5A7AZIAUgBSsDsBc5A7gZIAUgBSsDkBg5A8AZIAUgBSsD8Bg5A8gZIAUgBSsDmBU5A4AaIAUgBSsD+BU5A4gaIAUgBSsD2BY5A5AaIAUgBSsDuBc5A5gaIAUgBSsDmBg5A6AaIAUgBSsD+Bg5A6gaIAUgBSsD2Bk5A7AaIAUgBSsDoBU5A+AaIAUgBSsDgBY5A+gaIAUgBSsD4BY5A/AaIAUgBSsDwBc5A/gaIAUgBSsDoBg5A4AbIAUgBSsDgBk5A4gbIAUgBSsD4Bk5A5AbIAUgBSsDwBo5A5gbIAUgBSsDqBU5A8AbIAUgBSsDiBY5A8gbIAUgBSsD6BY5A9AbIAUgBSsDyBc5A9gbIAUgBSsDqBg5A+AbIAUgBSsDiBk5A+gbIAUgBSsD6Bk5A/AbIAUgBSsDyBo5A/gbIAUgBSsDqBs5A4AcIAUgBSsDsBU5A6AcIAUgBSsDkBY5A6gcIAUgBSsD8BY5A7AcIAUgBSsD0Bc5A7gcIAUgBSsDsBg5A8AcIAUgBSsDkBk5A8gcIAUgBSsD8Bk5A9AcIAUgBSsD0Bo5A9gcIAUgBSsDsBs5A+AcIAUgBSsDkBw5A+gcIAUgBSsDuBU5A4AdIAUgBSsDmBY5A4gdIAUgBSsD+BY5A5AdIAUgBSsD2Bc5A5gdIAUgBSsDuBg5A6AdIAUgBSsDmBk5A6gdIAUgBSsD+Bk5A7AdIAUgBSsD2Bo5A7gdIAUgBSsDuBs5A8AdIAUgBSsDmBw5A8gdIAUgBSsD+Bw5A9AdIAVBoApqQQBBgAkQrxsaIAVBwAlqQQBB4AAQrxsaIAVBQGsgBUHgFGpBgAkQrhsaIAVCjICAgMABNwOAHiAFQYaAiIh8NgL4HSAFIAVBQGs2AvwdIAVCgYCAgMABNwMQIAVBhoCIkHw2AgggBSAFQcAJajYCDCAFQoyAgIDAATcD8B0gBUGGgIiQfDYC6B0gBSAFQaAKajYC7B1BACAFQfgdaiAFQQhqIAVB6B1qEK4ERQ0AGiAFIAUrA5gTOQOYASAFIAUrA5ATOQOQASAFIAUrA4gTOQOIASAFIAUrA4ATOQOAASAFIAUrA/gSOQN4IAUgBSsD8BI5A3AgBSAFKwPoEjkDaCAFIAUrA+ASOQNgIAUgBSsD2BI5A1ggBSAFKwPQEjkDUCAFIAUrA8gSOQNIIAUgBSsDwBI5A0AgBUIANwMgIAVCADcDKCAFQThqIgZCADcDACAFQoOAgIDAADcDECAFQoaA/ZckNwMIIAVCADcDGCAFIAVBEGo2AjAgBSAGNgI0IAVB+B1qQQNBBEEGIAVBQGtBABCuBiEGIAVBgICEEDYC6B0gBUIANwPwHSAFIAVBCGo2AuwdIAYgBUHoHWoQlgQgBhCxBhpBOBDVGiIAIAVBCGoQrQYaIABBOGohASADKAIAIgQEQAJ/IAQgBCADKAIEIgZGDQAaA0AgBkE4axCxBiIGIARHDQALIAMoAgALIQYgAyAENgIEIAYQohsLIAMgATYCCCADIAE2AgQgAyAANgIAIAVBCGoQsQYaQQELIQYgBUGwHmokACAGC1MBAn8gASgCBCECQRgQ1RoiAUIANwIEIAFBlOoFNgIAIAFBDGoiAxDjCxogASACNgIQIAFBlOsFNgIMIAEgAigCEDYCFCAAIAE2AgQgACADNgIACxYAIABBqOwFNgIAIABBEGoQ4wsaIAALGQAgAEGo7AU2AgAgAEEQahDjCxogABCiGwvBHQMRfwl9OXwjAEGAB2siAyQAAkAgACgCGCIHIAEoAgAiBCgCCCIIQRRsaiIBKgIIuyIhIAQoAgAiBkEUbCAHaiIFKgIIuyJAoSIfIB+iRAAAAAAAAAAAoCABKgIMuyIoIAUqAgy7IkGhIh4gHqKgIAEqAhC7IicgBSoCELsiQqEiJiAmoqCfIjsgACsDICIdYw0AIEAgBCgCBCIEQRRsIAdqIgEqAgi7Ii2hIjAgMKJEAAAAAAAAAACgIEEgASoCDLsiKaEiMCAwoqAgQiABKgIQuyIxoSIwIDCioJ8iMCAdYw0AIC0gIaEiISAhokQAAAAAAAAAAKAgKSAooSIhICGioCAxICehIiEgIaKgnyI/IB1jDQAgACgCFCIBIAZBDGxqIgUqAgghFCAFKgIEIRUgBSoCACEWIAEgBEEMbGoiBSoCCCEXIAEgCEEMbGoiASoCCCEYIAUqAgQhGSABKgIEIRogBSoCACEbIAEqAgAhHCADQfgFaiIBQgA3AwAgA0HwBWoiBUIANwMAIANCADcD6AUgA0IANwPgBSA/ID+iIjYgNqIiHSA7IDuiIjMgM6IiKqIiLiAzIDAgMKIiKCAdIB2gIiCioiIvICggKKIiIyAdoiIrIB0gHaIiISAzICggHUQAAAAAAAAQQKIiIqKiIiQgG7siSyAcuyJMoiAZuyJNIBq7Ik6ioCAXuyJPIBi7IlCioCI0IDSiIjKiIjehICggNiAdoiIlICWgIieiIjihIDMgJ6IiOaGgoKAgMyAlRAAAAAAAACBAoiI6oiI8IBa7IlEgS6IgFbsiUiBNoqAgFLsiUyBPoqAiJ6IiPSAoICVEAAAAAAAAEECiIj6iIiwgJ6IiQyA0ICQgUSBMoiBSIE6ioCBTIFCioCI1oqIiRCAzICggHUQAAAAAAAAgQKKioiJFICeiIDKiIDQgLCA1oqIiRqAgNCAjICKiIh0gNaKiIkehoCAhRAAAAAAAABBAoiJIICeiIkmhoKAgJCAnoiIkoSAqICKiIiIgJ6IiSqEgKiAgoiAhICGgICIgJyAnoiIqoiAdIDKiIB0gNSA1oiIioiBIICqiIDQgJyAoICVEAAAAAAAAIMCioiA1oqKiIDQgJyBFIDWioqKhoCAsICKiIh2hIDwgKqKhoKAgN6GgoCAzID6ioSAjICCioaAgJCA9IEQgRiAnICggOqIgIqKioCBHoaAgSaEgQ6GgoCBKoSArIC4gOCAhIB2hIC+hoKCgIDmhIANB4AVqIANB4AVqQQhyIAUgARC/DCEEIAIoAgAiBQRAAn8gBSAFIAIoAgQiAUYNABoDQCABQThrELEGIgEgBUcNAAsgAigCAAshASACIAU2AgQgARCiGwsgAkEANgIIIAJCADcCACACIAQQ1Q4gKSBBoUQAAAAAAADwPyAwoyIloiIhICEgJkQAAAAAAADwPyA7oyIpoiIdoiAxIEKhICWiIiYgHiApoiIxoqEiIEQAAAAAAADwPyAtIEChICWiIh4gMaIgISAfICmiIiqioSItIC2iICYgKqIgHiAdoqEiJSAloiAgICCiRAAAAAAAAAAAoKCgn6MiKaIiH6IgHiAlICmiIiWioUQAAAAAAADwPyAxIC0gKaIiLaIgHSAloqEiKSAmICWiICEgLaKhIiCiIB8gISAqICWiIDEgH6KhIjGiICYgHSAfoiAqIC2ioSIqoqEiI6IgHiAlIDGiIiIgLSAqoiIkoaKhoCJDoyIdoiFEIB4gLaIgJiAfoqEgHaIhRSAgIB2iIUYgJSApoiAfICqioSAdoiFHIB8gMaIgLSApoqEgHaIhSCAkICKhIB2iIUkgHiAqoiAhICmioSAdoiFKICYgKaIgHiAxoqEgHaIhVCAjIB2iIVUgMyA0oiElIDYgNaIhLSA2IDOhISkgKCAzIDahIh0gHaCiIDSiITEgA0EoaiEKIANB4ABqIQsgA0GYAWohDCADQcACaiENIANB+AJqIQ4gA0GwA2ohDyADQbAGaiEQIANBkAZqIQcgA0GIBmohESADQdgEaiESIANBuARqIQkgA0GwBGohEyAoICigISogA0GABmohBSADQeAFaiEBA0ACQCABKwMAIh1EAAAAAAAAAABlDQAgMCAdIB2iIiFEAAAAAAAA8D+gICcgHSAdoKKhIiafoyIeRAAAAAAAAAAAZQ0AIB0gHqIiH0QAAAAAAAAAAGUNACAeICggNiAzICGioaIgKSA2ICaiICggIaKhoqAgMSAdoiAqIC0gJSAdoqGioKOiIh1EAAAAAAAAAABlDQAgACsDICIhIB4gHqIiICAfIB+iIiagICcgHiAeoCAfoqKhnyAwoSAwo5ljDQAgJiAdIB2iIiOgIDQgHyAfoCAdoqKhnyA/oSA/o5kgIWQNACAgICOgIDUgHiAdIB2goqKhnyA7oSA7o5kgIWQNAEQAAAAAAAAAACEyIB0gTKIgHiBRoiIhoSIgRAAAAAAAAPA/IB0gUKIgHiBToiImoSIjICOiIB0gTqIgHiBSoiIdoSIiICKiICAgIKJEAAAAAAAAAACgoKCfoyIgoiIsICwgHyBPoiAmoSIeRAAAAAAAAPA/IB4gHqIgHyBNoiAdoSIkICSiIB8gS6IgIaEiHyAfokQAAAAAAAAAAKCgoJ+jIiuiIh6iIB8gK6IiHyAjICCiIi6ioSIjRAAAAAAAAPA/IB8gIiAgoiIvoiAsICQgK6IiIKKhIiQgJKIgIyAjoiAgIC6iIB4gL6KhIiIgIqJEAAAAAAAAAACgoKCfoyIroiIjoiAvICIgK6IiIqKhITwgLiAioiAsICQgK6IiJKKhIT0gLyAkoiAuICOioSE+RAAAAAAAAAAAISxEAAAAAAAAAAAhLkQAAAAAAAAAACEvRAAAAAAAAAAAIStEAAAAAAAAAAAhN0QAAAAAAAAAACE4RAAAAAAAAAAAITlEAAAAAAAAAAAhOiBDRAAAAAAAAAAAYgRAIFUhMiBUISwgSiEuIEkhLyBHITcgRiE4IEUhOSBEITogSCErCyADICQgLqJEAAAAAAAAAACgIB4gN6KgIDwgOqKgOQP4AiADICQgLKJEAAAAAAAAAACgIB4gK6KgIDwgOaKgOQPwAiADICQgMqJEAAAAAAAAAACgIB4gL6KgIDwgOKKgOQPoAiADICMgLqJEAAAAAAAAAACgICAgN6KgID0gOqKgOQPgAiADICMgLKJEAAAAAAAAAACgICAgK6KgID0gOaKgOQPYAiADICMgMqJEAAAAAAAAAACgICAgL6KgID0gOKKgOQPQAiADICIgLqJEAAAAAAAAAACgIB8gN6KgID4gOqKgOQPIAiADICIgLKJEAAAAAAAAAACgIB8gK6KgID4gOaKgOQPAAiADICIgMqJEAAAAAAAAAACgIB8gL6KgID4gOKKgOQO4AiADQSBqIANBuAJqEPcTIANBmAVqIANBIGoQ9hMgA0HgBGoQpwYhCCADIAAoAhAiBCsDACADKwOYBSIeokQAAAAAAAAAAKAgBCsDCCIyIAMrA7AFIh+ioCAEKwMQIiAgAysDyAUiI6KgOQO4AiADIAQrAwAgAysDoAUiIqJEAAAAAAAAAACgIDIgAysDuAUiJKKgICAgAysD0AUiMqKgOQPAAiADIAQrAwAgAysDqAUiLKJEAAAAAAAAAACgIAQrAwggAysDwAUiLqKgICAgAysD2AUiL6KgOQPIAiADIB4gBCsDGKJEAAAAAAAAAACgIB8gBCsDICIroqAgIyAEKwMoIiCioDkD0AIgAyAyICCiICQgK6IgIiAEKwMYokQAAAAAAAAAAKCgoDkD2AIgAyAvICCiICwgBCsDGKJEAAAAAAAAAACgIC4gBCsDIKKgoDkD4AIgAyAeIAQrAzCiRAAAAAAAAAAAoCAfIAQrAzgiIKKgICMgBCsDQCIeoqA5A+gCIAMgMiAeoiAkICCiICIgBCsDMKJEAAAAAAAAAACgoKA5A/ACIAQrAzAhHyAEKwM4ISAgA0KDgICAMDcDsAQgA0KGgP2XJDcDqAQgAyAvIB6iICwgH6JEAAAAAAAAAACgIC4gIKKgoDkD+AIgCUIANwIIIAlCADcCACAJQgA3AhAgA0IANwPYBCADIBI2AtQEIAMgEzYC0AQgA0EgakEDQQNBBiADQbgCakEAEK4GIQQgA0GAgIQQNgLIBiADQgA3A9AGIAMgA0GoBGo2AswGIAQgA0HIBmoQlgQgBBCxBhogA0IANwOgBCADQYCAhAg2ApgEIAMgA0GoBGo2ApwEIANBIGogA0GoBGoQ/gYgA0GAAmoQpwYhBCADKAIgIgYgA0EgaiAEQX8gBigCACgCDBEGACADIEIgISADKwOoBaJEAAAAAAAAAACgIB0gAysDwAWioCAmIAMrA9gFoqChOQMYIAMgQSAhIAMrA6AFokQAAAAAAAAAAKAgHSADKwO4BaKgICYgAysD0AWioKE5AxAgAyBAICEgAysDmAWiRAAAAAAAAAAAoCAdIAMrA7AFoqAgJiADKwPIBaKgoTkDCCADQoOAgIAQNwOIBiADQoaA/ZckNwOABiAHQgA3AgggB0IANwIQIAdCADcCACADQgA3A7AGIAMgEDYCrAYgAyARNgKoBiADQcgGakEDQQFBBiADQQhqQQAQrgYhBiADQYCAhBA2ArgGIANCADcDwAYgAyADQYAGajYCvAYgBiADQbgGahCWBCAGELEGGiADQbgCaiAEIANBgAZqEP8GIANBgAZqELEGGiADQcgGaiADQbgCahCmByEGIAMgCDYChAYgA0GAgIQQNgKABiADQgA3A4gGIANBmARqIAYgA0GABmoQsAcgDxCxBhogDhCxBhogDRCxBhogBBCxBhogDBCxBhogCxCxBhogChCxBhoCQCACKAIEIgQgAigCCEkEQCACIAQgCBCtBkE4ajYCBAwBCyACIAgQ1g4LIANBqARqELEGGiAIELEGGgsgAUEIaiIBIAVHDQALIAIoAgQgAigCAGtBOG0hCQsgA0GAB2okACAJC+ABAQR/AkAgACgCCCAAKAIAIgNrQThtIAFPDQACQAJAIAFBpZLJJEkEQCAAKAIEIQIgAUE4bCIBENUaIgQgAWohBSAEIAIgA2tBOG1BOGxqIQQgAiADRg0BIAQhAQNAIAFBOGsgAkE4ayICEK0GIQEgAiADRw0ACyAAIAU2AgggACgCBCECIAAgBDYCBCAAKAIAIQMgACABNgIAIAIgA0YNAgNAIAJBOGsQsQYiAiADRw0ACwwCC0Gw5wUQvgIACyAAIAU2AgggACAENgIEIAAgBDYCAAsgA0UNACADEKIbCwunAgEEfwJAAkACQCAAKAIEIAAoAgAiA2tBOG0iBEEBaiICQaWSySRJBEACf0EAIAIgACgCCCADa0E4bSIDQQF0IgUgAiAFSxtBpJLJJCADQZLJpBJJGyICRQ0AGiACQaWSySRPDQIgAkE4bBDVGgshAyADIAJBOGxqIQUgAyAEQThsaiABEK0GIgNBOGohBCAAKAIEIgIgACgCACIBRg0CA0AgA0E4ayACQThrIgIQrQYhAyABIAJHDQALIAAgBTYCCCAAKAIEIQIgACAENgIEIAAoAgAhASAAIAM2AgAgASACRg0DA0AgAkE4axCxBiICIAFHDQALDAMLEPwaAAtBsOcFEL4CAAsgACAFNgIIIAAgBDYCBCAAIAM2AgALIAEEQCABEKIbCwuTAQEEfyABKAIEIQIgASgCCCEDIAEoAgwhBEE4ENUaIgFCADcCBCABQajsBTYCACABQRBqIgUQ4wsaIAEgBDYCICABIAQ2AhwgASADNgIYIAEgAjYCFCABQaDtBTYCECABIAMoAhA2AiQgAigCECECIAFCrYbx2K7cjY0/NwMwIAEgAjYCKCAAIAE2AgQgACAFNgIAC9gHAQF/IwBBEGsiCSQAIAAQ4wsaIABB2O8FNgIAIAAgBCgCADYCBCAAIAQoAgQiBDYCCCAEBEAgBCAEKAIEQQFqNgIECyAAIAEoAgA2AgwgACABKAIEIgQ2AhAgBARAIAQgBCgCBEEBajYCBAsgACADKAIANgIUIAAgAygCBCIENgIYIAQEQCAEIAQoAgRBAWo2AgQLIAAgBSgCADYCHCAAIAUoAgQiBDYCICAEBEAgBCAEKAIEQQFqNgIECyAAIAIoAgA2AiQgACACKAIEIgQ2AiggBARAIAQgBCgCBEEBajYCBAsgAEIANwJQQQAhBCAAQQA2AogBIABCADcCgAEgAEIANwJ4IABCADcCcCAAQgA3AmggAEIANwJgIABCADcCWCADKAIAIgMgAygCACgCOBEAACEDIAAgBkQAAAAAAAACQKI5A0AgACAHOQM4IAAgAzYCNCAFKAIAIgMgAygCACgCNBEAACEDIAAgCDYCMCAAIAM2AiwgAEQAAAAAAADwPyAAKwM4oTkDSCAAKAI0IQMgCUEANgIIIAlCADcDAEEAIQUCQCADBEAgA0GAgICAAk8NASADQQN0IgQQ1RoiBUEAIAQQrxsgBGohBAsgACgCXCIBBEAgACABNgJgIAEQohsgACgCNCEDCyAAIAQ2AmQgACAENgJgIAAgBTYCXEEAIQUgCUEANgIIIAlCADcDAEEAIQQgAwRAIANBgICAgARPDQEgA0ECdCIFENUaIgRBACAFEK8bIAVqIQULIAAoAlAiAQRAIAAgATYCVCABEKIbIAAoAjQhAwsgACAFNgJYIAAgBTYCVCAAIAQ2AlACQCADIANsIgNFBEBBACEEQQAhBQwBCyADQQFrQQV2IgFBAWoiBEECdBDVGiIFIAUgAUECdGogA0EhSRtBADYCACAFQQAgA0EFdkECdCIBEK8bIQIgA0EfcSIIRQ0AIAEgAmoiASABKAIAQX9BICAIa3ZBf3NxNgIACyAAKAJ0IgEEQCABEKIbCyAAIAQ2AnwgACADNgJ4IAAgBTYCdEEAIQUgACgCDCIDIAMoAgAoAjQRAAAhAyAJQQA2AgggCUIANwMAQQAhASADBEAgA0GlkskkTw0BIANBOGwiAxDVGiIBIANqIQUgASEDA0AgAxCnBkE4aiIDIAVHDQALCyAAKAKAASIEBEACfyAEIAQgACgChAEiA0YNABoDQCADQThrELEGIgMgBEcNAAsgACgCgAELIQMgACAENgKEASADEKIbCyAAIAU2AoQBIAAgATYCgAEgACAFNgKIASAJQRBqJAAPCxD8GgAL3QkBAX8jAEEQayILJAAgABDjCxogAEHs8wU2AgAgACABKAIANgIEIAAgASgCBCIBNgIIIAEEQCABIAEoAgRBAWo2AgQLIAAgAigCADYCDCAAIAIoAgQiATYCECABBEAgASABKAIEQQFqNgIECyAAIAMoAgAiATYCFCAAIAMoAgQiAjYCGCACBEAgAiACKAIEQQFqNgIEIAAoAhQhAQsgAEIANwIcQQAhAiAAQQA2AmAgAEIANwNwIAAgBTkDaCAAIAk2AlggACAINgJUIABCADcCJCAAQgA3AiwgAEIANwI0IABCADcCPCAAQgA3AkQgAEIANwJMIABCADcDeCAAQgA3A4ABIABBADYCiAEgASABKAIAKAI0EQAAIQEgACAGOgBkIAAgATYCXAJAIAYEQCAAIAc2AmAgC0EAIAQgBxD6EyALKAIAIQEgCygCBCIDBEAgAyADKAIEQQFqNgIECyAAIAE2AhwgACgCICEBIAAgAzYCIAJAIAFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCwJAIAsoAgQiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQEAIAEQ0BoLQQAhAyAAKAIEIgEgASgCACgCNBEAACEBIAtBADYCCCALQgA3AwAgAQRAIAFBpZLJJE8NAiALIAFBOGwiAxDVGiIBNgIAIAsgATYCBCALIAEgA2oiAzYCCANAIAEQpwZBOGoiASADRw0ACyALIAM2AgQLIAAoAjAiBgRAAn8gBiAGIAAoAjQiAUYNABoDQCABQThrELEGIgEgBkcNAAsgACgCMAshASAAIAY2AjQgARCiGyALKAIEIQMLIAsoAgAhASAAIAM2AjQgACABNgIwIAAgCygCCDYCOEEAIQEgC0EANgIIIAtCADcDAEEAIQMgBARAIARBgICAgARPDQIgCyAEQQJ0IgYQ1RoiAzYCACALIAMgBmoiATYCCCADQQAgBhCvGxogCyABNgIECyABIQYgACAAKAJIIgcEfyAAIAc2AkwgBxCiGyALKAIEIQYgCygCACEDIAsoAggFIAELNgJQIAAgBjYCTCAAIAM2AkggACAAKwNoIgUgCqIiCjkDcCAAIAogBaEgCbejOQN4CyAAKAIEIgEgASgCACgCNBEAACEBIAtBADYCCCALQgA3AwAgAQRAIAFBpZLJJE8NASALIAFBOGwiAhDVGiIBNgIAIAsgATYCBCALIAEgAmoiAjYCCANAIAEQpwZBOGoiASACRw0ACyALIAI2AgQLIAAoAiQiAwRAAn8gAyADIAAoAigiAUYNABoDQCABQThrELEGIgEgA0cNAAsgACgCJAshASAAIAM2AiggARCiGyALKAIEIQILIAsoAgAhASAAIAI2AiggACABNgIkIAAgCygCCDYCLEEAIQEgC0EANgIIIAtCADcDAEEAIQIgBARAIARBgICAgARPDQEgCyAEQQJ0IgMQ1RoiAjYCACALIAIgA2oiATYCCCACQQAgAxCvGxogCyABNgIECyABIQMgACgCPCIGBEAgACAGNgJAIAYQohsgCygCBCEDIAsoAgAhAiALKAIIIQELIAAgAzYCQCAAIAI2AjwgACABNgJEIAtBEGokAA8LEPwaAAvYCQECfyMAQRBrIg0kACAAEOMLGiAAQYz2BTYCACAAIAEoAgA2AgQgACABKAIEIgw2AgggDARAIAwgDCgCBEEBajYCBAsgACADKAIANgIMIAAgAygCBCIMNgIQIAwEQCAMIAwoAgRBAWo2AgQLIAAgAigCADYCFCAAIAIoAgQiDDYCGCAMBEAgDCAMKAIEQQFqNgIECyAAIAQoAgA2AhwgACAEKAIEIgw2AiAgDARAIAwgDCgCBEEBajYCBAsQvw0hDCAAIAo5A0AgACAIOQMwIAAgBzYCKCAAIAw2AiQgASgCACIBIAEoAgAoAigRAAAhASAAIAk5A3AgACABNgJIIAMoAgAiAyADKAIAKAI4EQAAIQMgAEIANwKYASAAIAs5A5ABIAAgCzkDiAEgACAGNgKEASAAIAM2AoABIABCADcCoAEgAEIANwKoASAAQgA3ArABIABCADcCuAEgAEIANwLAASAAQgA3AsgBQQAhASAAQQA2AtABIABC/////w83A+gBIAAgACgCJBDlCjYC8AEgACAAKwOQASILIAuiIgggCKAiCDkDYCAAIAAoAii3RAAAAAAAAPC/oEQAAAAAAADgP6IiCTkDOCAAIAhEAAAAAAAA4D+iOQN4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FBEBAAsgABCiGws1ACAAKAIYIgBFBEBBBBAVIgBBoOgINgIAIABByOgIQY8MEBYACyAAIAEgACgCACgCGBECAAtbACABQaiCBjYCACABIAApAgQ3AgQgASAAKQIMNwIMIAEgACkCFDcCFCABIAApAhw3AhwgASAAKQIkNwIkIAEgACkCLDcCLCABIAApAjQ3AjQgASAAKAI8NgI8CwoAIABBBGoQ/Q4L8hcDGH8CfgJ8IwBBwAJrIgEkAAJAAkACQCAAKAIALQAAQQFxDQAgACgCCCEIIAAoAgQiAiACKAIAIglBAWo2AgAgCCgCTCECIAFBqAJqIAgoAggiAyADKAIAKAI4EQIAIAFBoAJqIAgoAjAiAyACIAlBCmxqIgIgAygCACgCLBEEACABQZgCaiAIKAIQIgMgAygCACgCPBECACABQZACaiAIKAIoIgMgAkEBaiADKAIAKAI0EQQAIAJBAmohAyAAKAIMLQAABEAgAUHQAWogCCgCOCIGIAMgBigCACgCJBEEACABKALQASEOAkAgASgC1AEiCkUNACAKIAooAgRBAWo2AgQgASgC1AEiA0UNACADIAMoAgQiBkEBazYCBCAGDQAgAyADKAIAKAIIEQEAIAMQ0BoLIAJBA2ohAwsgAUGIAmogCCgCICICIAIoAgAoAiQRAgACQCAAKAIQLQAADQAgAUHQAWogCCgCGCICIAMgAigCACgCKBEEACABKALQASEWIAEoAtQBIgtFDQAgCyALKAIEQQFqNgIEIAEoAtQBIgJFDQAgAiACKAIEIgNBAWs2AgQgAw0AIAIgAigCACgCCBEBACACENAaCyABQdABahCnBiEHIAFBmAFqEKcGIRMgAUHgAGoQpwYhDyABQv/////////3/wA3A1ggAUEANgJQIAFC//////////f/ADcDSCABQQA2AkAgAUL/////////9/8ANwM4IAFBADYCMCABQv/////////3/wA3AyggAUEANgIgIAEoAqgCIgIgAigCACgCKBEAACECIAFBADYCGCABQgA3AxAgAgRAIAJBgICAgARPDQMgASACQQJ0IgIQ1RoiAzYCECABIAIgA2oiBjYCGCADQQAgAhCvGxogASAGNgIUCyABKAKoAiICIAIoAgAoAjARAAAhAiABQQA2AgggAUIANwMAIAIEQCACQaWSySRPDQIg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ASIBBEAgACABNgKkASABEKIbCyAAEOMLGiAAEKIbCw0AIAAoAiBBAWtBAkkLCAAgACgCIEULCgAgACgCIEEDRgsNACAAKAIgQQVrQQJJCwcAIAAoAhgLCAAgAC0AsQELBwAgACgCYAsHACAAKAI8CwgAIAAoApABCwcAIAAoAigLBwAgACgCHAsHACAAKwMQCwcAIAArAwgLBwAgACgCJAsIACAAKwOIAQsHACAAKwN4CwcAIAArA3ALCAAgACsDgAELBwAgACgCOAsHACAAKAIsCwcAIAAoAjALBwAgACgCNAsIACAAKwOYAQsIACAAKAKsAQsIACAAKAK8AQsIACAAKwPAAQsIACAAKwPIAQsIACAAKwPQAQsIACAAKwPYAQsIACAAKwPgAQsHACAAKwNYCwcAIAAoAkwLBwAgACgCUAsIACAAQaABagsIACAAKAK0AQsIACAAKAK4AQsJACAAIAE2AjwLCQAgACABNgIsCwkAIAAgATYCOAsJACAAIAE2AjALCgAgACABOgCxAQsJACAAIAE2AmQLCQAgACABNgJgCwoAIAAgATYCkAELCQAgACABNgJECwkAIAAgATYCSAsJACAAIAE2AkALKwAgARCIFSIBmUQAAAAAAADgQWMEQCAAIAGqNgJMDwsgAEGAgICAeDYCTAsKACAAIAE2ArQBCwoAIAAgAToAsAELCAAgAC0AsAEL+AEBBX8jAEEQayIEJAACQCABIAAoAhBOBEAgASAAKAIUIgNKBEAgBEEANgIIIARCADcDACABBEAgAUGAgICABE8NAyABQQJ0IgIQ1RoiBkEAIAIQrxsgAmohAgsgACgCBCIFBEAgACAFNgIIIAUQohsgACgCFCEDCyAAIAY2AgQgACACNgIMIAAgAjYCCAsCQCABIANGDQAgACABNgIUIAFBAUgNACAAKAIEIQNBACEBA0AgAyABQQJ0aiABNgIAIAFBAWoiASAAKAIUSA0ACwsgBEEQaiQADwtBqX4gBEH8jgYQiQNBmI8GQaaPBkEwEJgKAAsQ/BoAC9ADAgN/AnwjAEEQayIGJAAgABDjCxogAEEANgIMIABCADcCBCAAQYSRBjYCACAAQShqIAEQ+RMCQCACIANOBEAgACAENgIgIAAgAjYCECAAIAM2AhQgBkEANgIIIAZCADcDACACBEAgAkGAgICABE8NAiACQQJ0IgIQ1RoiB0EAIAIQrxsgAmohBQsgACgCBCICBEAgACACNgIIIAIQohsgACgCICEEIAAoAhQhAwsgACAFNgIMIAAgBTYCCCAAIAc2AgRBASEFIAS3IQgCQCADQQFIDQAgACgCECEEQQAhAgNAIAggAyACa7cgBCACa7ejoiEIIAJBAWoiAiADRw0AC0EAIQIgA0EATA0AA0AgByACQQJ0akEBNgIAIAJBAWoiAiADSA0ACwsgACgCECIBIANKBEAgAyEEA0AgByAEQQJ0agJ/IAggBEEBaiICt6IgAiADa7ejIgkgCKGbIgiZRAAAAAAAAOBBYwRAIAiqDAELQYCAgIB4CyAFaiIFNgIAIAkhCCACIQQgASACSg0ACwsgAEEANgIkIAAgAzYCGCAAIAE2AhwgBkEQaiQADwtBqX4gBkHQjwYQiQNBvJEGQaaPBkHOARCYCgALEPwaAAvGBgIDfwJ8IwBBEGsiBiQAIAAQ4wsaIABB6JMGNgIAIABBHGogARD5EyAAQSRqIAAoAhwiAUH/////ByABKAIAKAI8EQMAIAJBASACEMkPIABB1ABqIAAoAhwiAUH/////ByABKAIAKAI8EQMAIAIgA0HAmgwQyQ8gAEIANwKIASAAIAQ2AoQBIABCADcCkAEgAEIANwKYASAAQgA3AqABIABCADcCqAEgAEIANwKwAQJAAkAgAiADTgRAIAAgBTYCGCAAIAI2AgggACADNgIUIAAgBCgCBCAEKAIAa0EDdTYCEEEAIQQgBkEANgIIIAZCADcDAEEAIQEgAgRAIAJBgICAgARPDQMgAkECdCIBENUaIghBACABEK8bIAFqIgEhBwsgACABNgKQASAAIAc2AowBIAAgCDYCiAEgACACIAVsIgc2AgQgA0EBayEFQQEhASAHtyEJIANBAUoEQANAIAkgBSAEa7cgAiAEa7ejoiEJIARBAWoiBCAFRw0ACwtBACEEIAJBAEwNAQNAIARBAWohAwJAIAQgBUgEQCAIIARBAnRqIAE2AgAMAQsgCCAEQQJ0agJ/IAkgA7eiIAMgBWu3oyIKIAmhmyIJmUQAAAAAAADgQWMEQCAJqgwBC0GAgICAeAsgAWoiATYCACAAKAIIIQIgCiEJCyADIQQgAiADSg0ACwwBC0GpfiAGQdCPBhCJA0GUlAZBpo8GQdwCEJgKAAsgBkEANgIIIAZCADcDAEEAIQNBACEBIAIEQCACQYCAgIAETw0BIAJBAnQiBBDVGiIBIARqIQMgACgCFCEFIAEhBANAIAQgBTYCACAEQQRqIgQgA0cNAAsLIAAgAzYCqAEgACADNgKkASAAIAE2AqABIAZBADYCCCAGQgA3AwACfyACBEAgAkGAgICABE8NAiAAIAJBAnQiAxDVGkEAIAMQrxsiBSADaiIBNgKcASAAIAE2ApgBIAAgBTYClAFBACEFQQAgAkUNARogAxDVGiIFQQAgAxCvGyADagwBCyAAQQA2ApwBIABCADcClAFBACEFQQALIQQgACAFNgKsASAAQQA2AgwgACAENgK0ASAAIAQ2ArABIAZBEGokAA8LEPwaAAuXAwEBfyMAQRBrIgUkACAAEOMLGiAAQeSWBjYCACAAIAQoAgA2AgQgACAEKAIEIgQ2AgggBARAIAQgBCgCBEEBajYCBAsgAEEMaiABIAIgAxD6E0EAIQQgAEEANgIgIABCADcCGCAAQQA6ABQCQCACIANOBEAgACADNgIsIAAgAjYCKCAFQQA2AgggBUIANwMAQQAhAyACBEAgAkGAgICABE8NAiACQQJ0IgQQ1RoiA0EAIAQQrxsgBGohBAsgACAENgIgIAAgBDYCHCAAIAM2AhhBACEDIABBADYCJAJAIAJBAEoEQANAIAAoAgQiAiADIAIoAgAoAiARAwAiAigCBCACKAIAa0ECdSAAKAIsQQFrTgRAIAAgACgCJCICQQFqNgIkIAAoAhggAkECdGogAzYCAAsgA0EBaiIDIAAoAihIDQALIAAoAiQNAQsgAEEBOgAUCyAAKAIMIgMgACgCLEEBayADKAIAKAIwEQIAIAVBEGokAA8LQal+IAVBkJcGEIkDQa2XBkGmjwZB7gMQmAoACxD8GgALNwEBfyAAQfyNBjYCECAAQYCNBjYCACAAKAIUIgEEQCAAIAE2AhggARCiGwsgAEEQahDjCxogAAs6AQF/IABB/I0GNgIQIABBgI0GNgIAIAAoAhQiAQRAIAAgATYCGCABEKIbCyAAQRBqEOMLGiAAEKIbCysBAX8gAEH8jQY2AgAgACgCBCIBBEAgACABNgIIIAEQohsLIAAQ4wsaIAALLgEBfyAAQfyNBjYCACAAKAIEIgEEQCAAIAE2AgggARCiGwsgABDjCxogABCiGwsJACAAIAEQyA8LpwECBX8BfiAAKAIQQQFOBEAgASgCACEFIAAoAgQhBCAAKAIUIQEDQEEAIQIgBSADQQJ0aiAEIAEEfyAAIAApAxgiB0L/////D4NCisb9wQ9+IAdCIIh8Igc3AxggB6cgAXAFIAILQQJ0aiICKAIANgIAIAIoAgAhBiACIAQgAUEBayIBQQJ0aiICKAIANgIAIAIgBjYCACADQQFqIgMgACgCEEgNAAsLC30BA39BMBDVGiIDQgA3AgQgA0GAjQY2AgAgASgCFCEEIAEoAhAhBSADQRBqIgEQ4wsaIAMgAqxC/////w8gAhs3AyggA0EANgIkIANBADYCHCADQgA3AhQgA0H8jQY2AhAgAyAFNgIgIAEgBBDIDyAAIAM2AgQgACABNgIAC20BAn8gAEGEkQY2AgwgAEGIkAY2AgACQCAAKAI4IgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQQxqIQIgACgCECIBBEAgACABNgIUIAEQohsLIAIQ4wsaIAALcAECfyAAQYSRBjYCDCAAQYiQBjYCAAJAIAAoAjgiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIABBDGohAiAAKAIQIgEEQCAAIAE2AhQgARCiGwsgAhDjCxogABCiGwtdAQJ/IABBhJEGNgIAAkAgACgCLCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgACgCBCIBBEAgACABNgIIIAEQohsLIAAQ4wsaIAALYAECfyAAQYSRBjYCAAJAIAAoAiwiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAoAgQiAQRAIAAgATYCCCABEKIbCyAAEOMLGiAAEKIbCyUAIwBBEGsiACQAQX4gAEH4kQYQiQNB7Y8GQaaPBkGzAhCYCgAL+AEBBn8gACgCJCICIAAoAiBKBEAgACgCKCICIAEgACgCFCAAKAIQIAIoAgAoAigRBgAPCyAAIAJBAWoiBDYCJAJAAkAgACgCBCIHIAAoAhgiA0EBayIFQQJ0aigCACIGIARHBEAgAyEEDAELIAAoAhwgA0wEQCADIQQMAgsgACADQQFqIgQ2AhggByADQQJ0aigCACEGIAMhBQsgAiAGSA0AIAAoAigiAiABIAAoAhRBAWsgBSACKAIAKAIoEQYAIAEoAgAgACgCFEECdGpBBGsgACgCGEEBazYCAA8LIAAoAigiAiABIAAoAhQgBCACKAIAKAIoEQYAC0IBAn9BPBDVGiIDQgA3AgQgA0GIkAY2AgAgA0EMaiIEIAIgASgCECABKAIUIAEoAiAQyQ8gACADNgIEIAAgBDYCAAsJACAAIAE2AhwLFgAgAEHokgY2AgAgAEEMahDcDxogAAvlAgECfyAAQeiTBjYCACAAKAKsASIBBEAgACABNgKwASABEKIbCyAAKAKgASIBBEAgACABNgKkASABEKIbCyAAKAKUASIBBEAgACABNgKYASABEKIbCyAAKAKIASIBBEAgACABNgKMASABEKIbCyAAQYSRBjYCVAJAIAAoAoABIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQdQAaiECIAAoAlgiAQRAIAAgATYCXCABEKIbCyACEOMLGiAAQYSRBjYCJAJAIAAoAlAiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIABBJGohAiAAKAIoIgEEQCAAIAE2AiwgARCiGwsgAhDjCxoCQCAAKAIgIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAEOMLGiAACxkAIABB6JIGNgIAIABBDGoQ3A8aIAAQohsLCgAgABDcDxCiGwslACMAQRBrIgAkAEF+IABBhJUGEIkDQe2PBkGmjwZB0gMQmAoAC7AGAQh/IAAoAgwiAiAAKAIESgRAIABB1ABqIAEQ2A8PCyAAIAJBAWo2AgwgAEEkaiABENgPIAEoAgAoAgAiB0ECdCIIIAAoApQBaiIGIAYoAgAiA0EBajYCAAJAIAMgACgCiAEiCSAAKAKgASAIaiIEKAIAIgJBAnRqQQRrKAIASA0AA0AgAiAAKAIITg0BIAQgAkEBaiIDNgIAIAJBAnQhBSADIQIgBigCACAFIAlqKAIASg0ACwsCQAJAIAAoAqwBIAhqIgMoAgAiAiAAKAIQSARAA0AgACgChAEiBSgCBCAFKAIAIgZrQQN1IAJNDQIgBiACQQN0aigCACICIAcgAigCACgCIBEDACICKAIEIAIoAgBrQQJ1IAQoAgBODQMgAyADKAIAQQFqIgI2AgAgAiAAKAIQSA0ACwsgACAAKAIMIgQ2AnggAEHUAGohBgJAIAAoAnQgBEgNACAAIAAoAmgiAjYCbCAAKAJYIQUCQANAIAQgAkECdCAFakEEaygCAEwEQCACIQMMAgsgACACQQFqIgI2AmwgAiAAKAJkIgNIDQALIAAgAzYCbAsgACgCcCADTg0AIAAgAzYCcAsgBiABENgPIAEoAgAgACgCFEECdGpBBGsgBzYCAA8LENoaAAsCQCADKAIAIgMgACgChAEiAigCBCACKAIAIgVrQQN1SQRAIAUgA0EDdGooAgAiAiAHIAIoAgAoAiARAwAhAiABKAIAIgMgACgCFEECdGpBBGsgBzYCACADIAAoAhRBAnRqQQhrIAIoAgAgBCgCAEECdGpBBGsoAgA2AgAgACgCHCIDIAEgACgCFEECayAEKAIAQQFrIAMoAgAoAigRBgAgACgCFCIEQQJMBEAgBEECayEEIAAoApQBIQMgASgCACEFDAILIAAoApQBIQMgAigCACEGIAEoAgAhBUEAIQIDQCAFIAJBAnRqIgQgBiAEKAIAQQJ0aigCACIENgIAIAMgBEECdGoiBCAEKAIAQQFqNgIAIAJBAWoiAiAAKAIUQQJrIgRIDQALDAELENoaAAsgAyAFIARBAnRqKAIAQQJ0aiIAIAAoAgBBAWo2AgALTQEDfyABKAKEASEEQcQBENUaIgNCADcCBCADQeiSBjYCACADQQxqIgUgAiABKAIIIAEoAhQgBCABKAIYEMoPIAAgAzYCBCAAIAU2AgALnwEBA38gAEHklgY2AgwgAEHolQY2AgAgACgCJCIBBEAgACABNgIoIAEQohsLAkAgACgCHCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgAEEMaiECAkAgACgCFCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAQAgARDQGgsgAhDjCxogAAuiAQEDfyAAQeSWBjYCDCAAQeiVBjYCACAAKAIkIgEEQCAAIAE2AiggARCiGwsCQCAAKAIcIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCyAAQQxqIQICQCAAKAIUIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEBACABENAaCyACEOMLGiAAEKIbC48BAQJ/IABB5JYGNgIAIAAoAhgiAQRAIAAgATYCHCABEKIbCwJAIAAoAhAiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLAkAgACgCCCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgABDjCxogAAuSAQECfyAAQeSWBjYCACAAKAIYIgEEQCAAIAE2AhwgARCiGwsCQCAAKAIQIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLIAAQ4wsaIAAQohsLJQAjAEEQayIAJABBfiAAQZCYBhCJA0HtjwZBpo8GQZoEEJgKAAvzAQEEfyAAKAIMIQIgAC0AFARAIAIgASAAKAIoIAIoAgAoAiwRBAAPCyACIAAoAiQgAigCACgCPBEDACECIAAoAgQiAyAAKAIYIAJBAnRqKAIAIgQgAygCACgCIBEDACECIAAoAgwiAyABIAIoAgQgAigCAGtBAnUgAygCACgCLBEEAAJAIAAoAiwiA0EBTARAIANBAWshAyABKAIAIQEMAQsgAigCACEFIAEoAgAhAUEAIQIDQCABIAJBAnRqIgMgBSADKAIAQQJ0aigCADYCACACQQFqIgIgACgCLEEBayIDSA0ACwsgASADQQJ0aiAENgIAC0IBAn9BPBDVGiIDQgA3AgQgA0HolQY2AgAgA0EMaiIEIAIgASgCKCABKAIsIAFBBGoQyw8gACADNgIEIAAgBDYCAAv1BQILfwR8IwBBEGsiCCQAIAAoAiwhAyAIQQA2AgggCEIANwMAAkAgAwRAIANBgICAgARPDQEgA0ECdCIBENUaIgZBACABEK8bIAFqIQELIAAoAkAiBARAIAAgBDYCRCAEEKIbIAAoAiwhAwsgACAGNgJAIAAgATYCSCAAIAE2AkQgCEEANgIIIAhCADcDACADBEAgA0GAgICAAk8NASAIIANBA3QiARDVGiIHNgIAIAggASAHajYCCCAHQQAgARCvGxoLAkAgACgCNCICIANBsAkgA0GwCUgbIglKDQAgAiADSg0AIAArAxAiDEQAAAAAAADwPyAMoSIPoyENIAJBA3QgB2pBCGshCyACIQUDQCALIA8gBbcQkxUiDDkDACAFIAIiAUoEQANAIAcgAUEDdGogDCANIAUgAWu3oiABQQFqIgQgAmu3o6IiDDkDACAFIAQiAUoNAAsLIAIhBAJAIAIgBUoNACAHIAUiAUEBayIKQQN0aisDAEQAAAAAAAAAAKAiDCAAKwMYIg5jRQ0AA0AgASEEIAohASACIAROBEAgAiEEDAILIAwgByABQQFrIgpBA3RqKwMAoCIMIA5jDQALCyAFQQJ0IAZqQQRrIAQ2AgAgBUEyaiIFIAlKDQEgAyAFTg0ACwsCQCACIANKDQADQCACQQFrIQEgCSACQTFqIgRMBEAgBiADQQJ0aiAGIAJBAnRqQQRrIgRrIgJBAUgNAiAGIAFBAnRqIQUgAkECdiEBA0AgBCAFKAIANgIAIARBBGohBCABQQFKIQIgAUEBayEBIAINAAsMAgsgBiAEQQJ0aigCACAGIAFBAnRqKAIAIgFrt0QAAAAAAABJQKMhDSABtyEOQQAhAQNAIAYgASACakECdGoCfyANIAFBAWoiAbeiIA6gIgyZRAAAAAAAAOBBYwRAIAyqDAELQYCAgIB4CzYCACABQTFHDQALIAJBMmoiAiADTA0ACwsgBwRAIAcQohsLIAhBEGokAA8LEPwaAAsWACAAQfSYBjYCACAAQRBqEOMLGiAACxkAIABB9JgGNgIAIABBEGoQ4wsaIAAQohsLfAEBfCACtyAAKAIQt6MgACgCFLcQkxUhAyAAKwMIRAAAAAAAAPA/IAOhEJUVoyIDIAAoAhgiALdjIQICfyADmUQAAAAAAADgQWMEQCADqgwBC0GAgICAeAsgACACGyAAIAO9Qv///////////wCDQoCAgICAgID4/wBSGwuDAQMCfwF+AXwgASsDCCEFQTAQ1RoiAkIANwIEIAJB9JgGNgIAIAEpAhAhBCABKAIYIQEgAkEQaiIDEOMLGiACIAE2AiggAiAENwMgIAIgBRCEFUQAAAAAAADwv6BEAAAAAAAA8D+gEJUVOQMYIAJB/JkGNgIQIAAgAjYCBCAAIAM2AgALFgAgAEHEmwY2AgAgAEEQahDjCxogAAsZACAAQcSbBjYCACAAQRBqEOMLGiAAEKIbC5IJAgR/CnwCQCAAKAIEIgEoAgAiAyABKAIEIgFGBEAgArcgACgCELejIAAoAhS3EJMVIQcgACsDCEQAAAAAAADwPyAHoRCVFaMiByAAKAIYIgK3YyEBAn8gB5lEAAAAAAAA4EFjBEAgB6oMAQtBgICAgHgLIAIgARsgAiAHvUL///////////8Ag0KAgICAgICA+P8AUhsiASACIAEgAkgbIQIMAQsgArcgACgCELejIg0gACgCFLcQkxUhCwJAAn8CQCABIANrIgJBIE4EQCACQQV1QQFrIQQgAkEgRwRAIARBASAEQQFKGyEGQQAhAUQAAAAAAADwP0QAAAAAAADwPyANoSIPoxCVFSEQA0BEAAAAAAAA8D8gAyABQQV0aiICKwMIIgihRAAAAAAAAPA/IAIrAwAiCaGjEJUVIgdEAAAAAAAA8D8gDSAIIAmjEJUVIg4gECAHoyIJohCEFaIiCCAIoKEgD6MQlRUgB6MiCqIQhBUhByAOIAqiEIQVIQ4gAisDECAJIAggCSAKoSAIRAAAAAAAAPA/oCANIA6iIA8gB6KgoaOioSIHRAAAAAAAAAAAIAcgB2EbmhCTFSEHIAIoAhghAiAMRAAAAAAAAPA/IAtEAAAAAAAA8D8gB6GioRCVFSACt6KgIQwgAiAFaiEFIAFBAWoiASAGRw0ACyAFtyEICyAAKwMIIQdEAAAAAAAA8D8gC6EiCSAIEJMVIAdjRQ0DIAcgCRCVFaMiByAAKAIYIgK3YyEBIAeZRAAAAAAAAOBBY0UNASAHqgwCCyAAKwMIRAAAAAAAAPA/IAuhEJUVoyIHIAAoAhgiArdjIQECfyAHmUQAAAAAAADgQWMEQCAHqgwBC0GAgICAeAsgAiABGyACIAe9Qv///////////wCDQoCAgICAgID4/wBSGw8LQYCAgIB4CyACIAEbIAIgB71C////////////AINCgICAgICAgPj/AFIbIgEgAiABIAJIGw8LIAcgDKFEAAAAAAAA8D8gC0QAAAAAAADwP0QAAAAAAADwPyADIARBBXRqKwMQo6GioRCVFaMiCCAIYUEAIAi9Qv///////////wCDQoCAgICAgID4/wBSG0UEQCAHIAkQlRWjIgcgACgCGCICt2MhAQJ/IAeZRAAAAAAAAOBBYwRAIAeqDAELQYCAgIB4CyACIAEbIAIgB71C////////////AINCgICAgICAgPj/AFIbDwtBACECIAhEAAAAAAAAAABjDQAgCCAAKAIYIgK3IgpjQQFzRQRAIAcgCRCVFaMiByAKYyEBAn8gB5lEAAAAAAAA4EFjBEAgB6oMAQtBgICAgHgLIAIgARsgAiAHvUL///////////8Ag0KAgICAgICA+P8AUhsiAgJ/IAiZRAAAAAAAAOBBYwRAIAiqDAELQYCAgIB4CyIBIAEgAkobDwsgByAJEJUVoyIHIApjIQECfyAHmUQAAAAAAADgQWMEQCAHqgwBC0GAgICAeAsgAiABGyACIAe9Qv///////////wCDQoCAgICAgID4/wBSGw8LIAILkQEDA38BfgF8IAEoAgQhAyABKwMIIQZBMBDVGiICQgA3AgQgAkHEmwY2AgAgASkCECEFIAEoAhghASACQRBqIgQQ4wsaIAIgATYCKCACIAU3AyAgAiAGEIQVRAAAAAAAAPC/oEQAAAAAAADwP6AQlRU5AxggAiADNgIUIAJBwJwGNgIQIAAgAjYCBCAAIAQ2AgALKAAgAEHIngY2AhAgAEHEnQY2AgAgAEEYahDjCxogAEEQahDjCxogAAsrACAAQcieBjYCECAAQcSdBjYCACAAQRhqEOMLGiAAQRBqEOMLGiAAEKIbCxwAIABByJ4GNgIAIABBCGoQ4wsaIAAQ4wsaIAALHwAgAEHIngY2AgAgAEEIahDjCxogABDjCxogABCiGwuhAQIBfwF8IABBCGogASACEPAPIQEgACsDMCACtyAAKAJAt6OgIgREAAAAAAAA8D9mBH8gAwUgBCAAKAJEtxCTFSEEIAArAzhEAAAAAAAA8D8gBKEQlRWjIgS9Qv///////////wCDQoCAgICAgID4/wBSIQACfyAEmUQAAAAAAADgQWMEQCAEqgwBC0GAgICAeAsgASAAGyABIAQgAbdjGwsL4wECBX8CfCABKAIoIQMgASsDOCEHQeAAENUaIgJCADcCBCACQcSdBjYCACABKwMwIQggASgCQCEEIAEoAkQhBSABKAJIIQEgAkEQaiIGEOMLGiACQcieBjYCECACQRhqEOMLGiACIAE2AlggAiAFNgJUIAIgBDYCUCACIAcQhBVEAAAAAAAA8L+gRAAAAAAA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ECADIAQ2AhhBGBDVGiIBIANBEGogAigCABDMECABKAIAKAIIEQEAIAAgATYCACADQSBqJAAPCyADIAU2AgAgA0EQakHEtwYgAxCUCkGufiADQRBqQc23BkGApAZB0AIQmAoAC0F7IANBEGpB2bcGEIkDQc23BkGApAZB0gIQmAoAC+YCAQR/IwBBMGsiAiQAIAEQuBsiA0FwSQRAAkACQCADQQtPBEAgA0EQakFwcSIFENUaIQQgAiAFQYCAgIB4cjYCKCACIAQ2AiAgAiADNgIkDAELIAIgAzoAKyACQSBqIQQgA0UNAQsgBCABIAMQrhsaCyADIARqQQA6AAAgAkEAOgAQIAJBADoAGyACQcAAENUaIgM2AgAgAkKygICAgIiAgIB/NwIEIANBADoAMiADQfyoBi8AADsAMCADQfSoBikAADcAKCADQeyoBikAADcAICADQeSoBikAADcAGCADQdyoBikAADcAECADQdSoBikAADcACCADQcyoBikAADcAACAAQQAgAkEgaiACQRBqIAJBLhCRChogAiwAC0F/TARAIAIoAgAQohsLIAIsABtBf0wEQCACKAIQEKIbCyACLAArQX9MBEAgAigCIBCiGwsgAEGIqQY2AgAgAkEwaiQADwsQ2RoAC7ICAQN/IwBB0ABrIgQkACACKAIAQf+fAXFBgIABRgRAIAIoAgghBiACKAIMIQUgBCACKAIQNgI0IAQgBTYCLCAEIAY2AiggBCAFNgIwIARCADcCHCAEIARBGGpBBHI2AhggBCAAKAIINgIUIARBADoAESAEQfyhBi0AADoAECAEQQk6ABMgBEH0oQYpAAA3AwggBCAEQQhqNgJAIARByABqIARBGGogBEEIaiAEQUBrEJAQIAQoAkhBHGogBEEUahCOECAELAATQX9MBEAgBCgCCBCiGwtBGBDVGiICIARBKGogBEEYahDMECADIAIoAgAoAhgRAgAgASACNgIAIARBGGogBCgCHBD/DyAEQdAAaiQADwtBqX4gBEEoakGxmgcQiQNB85oHQYCkBkGGBhCYCgALsgIBA38jAEHQAGsiBCQAIAIoAgBB/58BcUGFgAFGBEAgAigCCCEGIAIoAgwhBSAEIAIoAhA2AjQgBCAFNgIsIAQgBjYCKCAEIAU2AjAgBEIANwIcIAQgBEEYakEEcjYCGCAEIAAo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KAIoEQAANgI0IAIgASABKAIAKAIcEQAANgI4IAIgASABKAIAKAIgEQAANgI8IAJBEGpBMEEBIAMQtBsaIAIgACgCBDYCECACQRBqQQRBASADELQbGiABIAMgASgCACgCFBECAAwCCyADEJoVQXsgAkEQakHYowYQiQNBtqUGQYCkBkH7BRCYCgALIAAoAhAhASACQaSoBigAADYCGCACQgA3ACcgAkEAOgAvIAJBrZoHKAAANgAjIAJBnKgGKQAANwMQIAJBADYCHCACQaqaBygAADYCICACQQQ2AjAgAiABIAEoAgAoAigRAAA2AjQgAiABIAEoAgAoAhwRAAA2AjggAiABIAEoAgAoAiARAAA2AjwgAkEQakEwQQEgAxC0GxogAiAAKAIENgIQIAJBEGpBBEEBIAMQtBsaIAEgAyABKAIAKAIUEQIACyADEJoVIAJBQGskAA8LIAIgASgCACABIAEsAAtBAEgbNgIAIAJBEGpBiKUGIAIQlApBfiACQRBqQbalBkGApAZB1wUQmAoAC40BAQF/IwBB8ABrIgMkACAAIAAoAgAoAhwRAQACQCABEMwHQYCABEYEQCADIAEoAgQQrQYaDAELIAMgARDJBwsgA0E4aiADELQGIABBFGoiASADQThqELkGGiADQThqELEGGiADELEGGiADQThqIAEQrQYhASAAIAIQlRAhACABELEGGiADQfAAaiQAIAALDQAgABCVChogABCiGwuXAgEHfyAAQQRqIQQCQCAAKAIEIgAEQCACKAIAIAIgAi0ACyIDQRh0QRh1QQBIIgUbIQggAigCBCADIAUbIQIDQAJAAkACQAJAAkACQCAAKAIUIAAtABsiAyADQRh0QRh1QQBIIgYbIgMgAiACIANLIgkbIgUEQCAIIABBEGoiBygCACAHIAYbIgcgBRD4FCIGRQRAIAIgA0kNAgwDCyAGQX9KDQIMAQsgAiADTw0CCyAAKAIAIgMNBCABIAA2AgAgAA8LIAcgCCAFEPgUIgMNAQsgCQ0BDAULIANBf0oNBAsgAEEEaiEEIAAoAgQiA0UNAyAEIQALIAAhBCADIQAMAAsACyABIAQ2AgAgBA8LIAEgADYCACAECxgAIAEoAgAiAARAIAAQohsLIAFBADYCAAsMACACQQEQ1Ro2AgALBwAgASgCAAsGAEHkqwYLDgAgAUHsqwZBCxDMAxoLDAAgAiABKAIANgIACwQAIAELBgBB/NIJCw0AIAEgAigCABDNFhoLDAAgAiABKgIAOAIACwYAQazTCQsMACABIAIqAgAQzxYLDAAgAiABLQAAOgAACwYAQbTSCQsMACABIAItAAAQxxYLGABBBBDVGiIAIAEoAgA2AgAgAiAANgIACxsAQQQQ1RoiACABKAIAKAIANgIAIAIgADYCAAsSACACKAIAIAEoAgAoAgA2AgALBgBB0LEGCxAAIAEgAigCACgCABDNFhoLBgBB0LMGCysAIAEoAgAiAARAIAAsAAtBf0wEQCAAKAIAEKIbCyAAEKIbCyABQQA2AgALFgBBDBDVGiIAIAEQ2xoaIAIgADYCAAsZAEEMENUaIgAgASgCABDbGhogAiAANgIACyoAIAIoAgAiACwAC0F/TAR/IAAoAgAQohsgAigCAAUgAAsgASgCABDfGgsEAEEMCwYAQdS8AQspACABAn8gAigCACICLAALQX9MBEAgAigCACECCyACCyACELgbEMwDGgsYAEEIENUaIgAgASsDADkDACACIAA2AgALGwBBCBDVGiIAIAEoAgArAwA5AwAgAiAANgIACxIAIAIoAgAgASgCACsDADkDAAsGAEG40wkLDwAgASACKAIAKwMAENEWC4QDAQd/IwBBQGoiAyQAIABBiLgGNgIAIABBEGoiB0IANwIAIAAgBzYCDCACKAIAIgYgAkEEaiIIRwRAIABBDGohCQNAIAkgByAGIgRBEGoQzRACQCAEKAIEIgVFBEAgBCgCCCIGKAIAIARGDQEgBEEIaiEEA0AgBCgCACIFQQhqIQQgBSAFKAIIIgYoAgBHDQALDAELA0AgBSIGKAIAIgUNAAsLIAYgCEcNAAsLIANBADoAMSADQfyhBi0AADoAMCADQQk6ADMgA0H0oQYpAAA3AyggAiADQShqEM4QIQUgAywAM0F/TARAIAMoAigQohsLIABBADoACAJAIAVB/gFGBEAgA0EIOgATIANBADoAECADQubSsavmrdi25QA3AwggA0EYaiACIANBCGoQzxAgACABIANBGGoQ0BA2AgQgAywAI0F/TARAIAMoAhgQohsLIAMsABNBf0wEQCADKAIIEKIbCyAAQQE6AAgMAQsgACABIAIQ0RA2AgQLIANBQGskACAAC48BAQJ/IwBBEGsiAyQAIAAgASADQQxqIANBCGogAhDvECIEKAIARQRAQSQQ1RoiAUEQaiACEPAQIAEgAygCDDYCCCABQgA3AgAgBCABNgIAAn8gASAAKAIAKAIAIgJFDQAaIAAgAjYCACAEKAIACyECIAAoAgQgAhCNCyAAIAAoAghBAWo2AggLIANBEGokAAu5AQECfyMAQUBqIgMkAAJAIAAgARCBECICIABBBGpHBEAgAigCHCIAIAAoAgAoAhwRAAAoAgRBsLEGRw0BIAIoAhwiACACQSBqIAAoAgAoAhQRAwAoAgAhAiADQUBrJAAgAg8LQTwQFSECIANBIGogA0EQakHkvQYQiQMgARDSECADQTBqIANBIGogA0H4vQYQiQMQ0hAgAiADQTBqENMQIAJBkKgGQeMHEBYAC0EBEBVBnLYGQQAQFgALuAEBAn8jAEFAaiIDJAACQCABIAIQgRAiBCABQQRqRwRAIAQoAhwiASABKAIAKAIcEQAAKAIEQeS7AUcNASAAIAQoAhwiASAEQSBqIAEoAgAoAhQRAwAQ2xoaIANBQGskAA8LQTwQFSEEIANBIGogA0EQakHkvQYQiQMgAhDSECADQTBqIANBIGogA0H4vQYQiQMQ0hAgBCADQTBqENMQIARBkKgGQeMHEBYAC0EBEBVBnLYGQQAQFgALnAMBAn8jAEHwAGsiAiQAAkACQAJAAkAgASgCACABIAEsAAtBAEgbQbulBhCjFSIBBEAgAkEgakEwQQEgARCoFUEBRw0BIAJBIGpBnKgGQQwQ+BQNAiACKAJAQQRHDQMgAigCSCAAKAIARw0EIAIoAkwgACgCBEcNBCACQgA3AhQgAiACQRBqQQRyNgIQIAJBADoACSACQfyhBi0AADoACCACQQk6AAsgAkH0oQYpAAA3AwAgAiACNgJgIAJB6ABqIAJBEGogAiACQeAAahCQECACKAJoQRxqIAJBxABqEI4QIAIsAAtBf0wEQCACKAIAEKIbCyAAIAJBEGoQ0RAiAyABIAMoAgAoAhgRAgAgARCaFSACQRBqIAIoAhQQ/w8LIAJB8ABqJAAgAw8LQTwQFSICQdSnBhCZECACQZCoBkHjBxAWAAtBPBAVIgJBqKgGEJkQIAJBkKgGQeMHEBYACyABEJoVQTwQFSICQZK+BhCZECACQZCoBkHjBxAWAAsgARCaFUE8EBUiAkHWvgYQmRAgAkGQqAZB4wcQFgAL+QIBBn8jAEEQayIDJAAgA0EAOgAJIANB/KEGLQAAOgAIIANBCToACyADQfShBikAADcDACABIAMQzhAhBCADLAALQX9MBEAgAygCABCiGwsCQAJAAkACQAJAAkAgBA4HAAMEAwMBAgMLQSQQ1RoiAkGgvwY2AgAgAiAAKQIANwIEIAIgACkCCDcCDCACQgA3AhggAiACQRhqIgU2AhQgASgCACIAIAFBBGoiBkYNBCACQRRqIQcDQCAHIAUgACIEQRBqEM0QAkAgACgCBCIBRQRAIAQoAggiACgCACAERg0BIARBCGohBANAIAQoAgAiAUEIaiEEIAEgASgCCCIAKAIARw0ACwwBCwNAIAEiACgCACIBDQALCyAAIAZHDQALDAQLQegAENUaIgIgACABEPEQDAMLQcwAENUaIgIgACABEPIQDAILQTwQFSIBQYW/BhCZECABQZCoBkHjBxAWAAtB7AAQ1RoiAiAAIAEQ8xALIANBEGokACACC1QBAX8gACABIAIoAgAgAiACLQALIgFBGHRBGHVBAEgiAxsgAigCBCABIAMbEOcaIgIpAgA3AgAgACACQQhqIgAoAgA2AgggAkIANwIAIABBADYCAAvcAQECfyMAQSBrIgIkACACQQA6ABAgAkEAOgAbIAJBwAAQ1RoiAzYCACACQrKAgICAiICAgH83AgQgA0EAOgAyIANB/KgGLwAAOwAwIANB9KgGKQAANwAoIANB7KgGKQAANwAgIANB5KgGKQAANwAYIANB3KgGKQAANwAQIANB1KgGKQAANwAIIANBzKgGKQAANwAAIABBACABIAJBEGogAkEwEJEKGiACLAALQX9MBEAgAigCABCiGwsgAiwAG0F/TARAIAIoAhAQohsLIABBiKkGNgIAIAJBIGokAAszAQF/IABBiLgGNgIAIAAoAgQiAQRAIAEgASgCACgCBBEBAAsgAEEMaiAAKAIQEP8PIAALNgEBfyAAQYi4BjYCACAAKAIEIgEEQCABIAEoAgAoAgQRAQALIABBDGogACgCEBD/DyAAEKIbCx0AIAAtAAhFBEAgACgCBCIAIAAoAgAoAggRAQALCx4AIAAoAgQiACABIAIgAyAEIAUgACgCACgCDBENAAseACAAKAIEIgAgASACIAMgBCAFIAAo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IQALAkACQAJAAkAgBkH/AXFFDQAgAEUNACAHBEADQCACLQAMIQECQCACIAIoAggiAygCAEcEQAJAAn8gAUH/AXFFBEAgAkEBOgAMIANBADoADCADIAMoAgQiASgCACIENgIEIAQEQCAEIAM2AggLIAEgAygCCDYCCCADKAIIIgQgBCgCACADR0ECdGogATYCACABIAM2AgAgAyABNgIIIAIgACAAIAIoAgAiA0YbIQAgAygCBCECCyACKAIAIgMLBEAgAy0ADEUNAQsgAigCBCIBBEAgAS0ADEUNBwsgAkEAOgAMAkAgACACKAIIIgJGBEAgACECDAELIAItAAwNAwsgAkEBOgAMDwsgAigCBCIBDQUMBgsCQCABQf8BcQRAIAIhAQwBCyACQQE6AAwgA0EAOgAMIAMgAigCBCIBNgIAIAEEQCABIAM2AggLIAIgAygCCDYCCAJAIAMgAygCCCIEKAIARgRAIAQgAjYCACADKAIAIQEMAQsgBCACNgIECyACIAM2AgQgAyACNgIIIAIgACAAIANGGyEACwJAAkAgASgCACIDRQ0AIAMtAAwNACABIQIMAQsCQCABKAIEIgIEQCACLQAMRQ0BCyABQQA6AAwgACABKAIIIgJHBEAgAi0ADA0DCyACQQE6AAwPCyADBEAgAy0ADEUEQCABIQIMAgsgASgCBCECCyACQQE6AAwgAUEAOgAMIAEgAigCACIDNgIEIAMEQCADIAE2AggLIAIgASgCCDYCCCABKAIIIgMgAygCACABR0ECdGogAjYCACACIAE2AgAgASACNgIIIAEhAwsgAiACKAIIIgAtAAw6AAwgAEEBOgAMIANBAToADCAAIAAoAgAiAigCBCIDNgIAIAMEQCADIAA2AggLIAIgACgCCDYCCCAAKAIIIgMgAygCACAAR0ECdGogAjYCACACIAA2AgQgACACNgIIDwsgAigCCCIDIAMoAgAgAkZBAnRqKAIAIQIMAAsACyAEQQE6AAwLDwsgAS0ADA0AIAIhAwwBCyADQQE6AAwgAkEAOgAMIAIgAygCBCIANgIAIAAEQCAAIAI2AggLIAMgAigCCDYCCCACKAIIIgAgACgCACACR0ECdGogAzYCACADIAI2AgQgAiADNgIIIAIhAQsgAyADKAIIIgItAAw6AAwgAkEBOgAMIAFBAToADCACIAIo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BEAgAhCiGyAAKAJIIANqQQA2AgAgACgCECEECyABQQFqIgEgBE4NASAAKAJIIQIMAAsACyAEQQFIDQBB7OQIKAIAIQYDQEF/IAAoAjwiAkECdCACQf////8DcSACRxsQ1RohASAFQQJ0IgMgACgCSGogATYCACACBEAgACgCSCADaigCACEEQQAhAQNAIAQgAUECdGogATYCACABQQFqIgEgAkcNAAsLAkACfyAAKAJQIgJBIE4EQCAAKAJYDAELIAAgACgCZCACajYCZEGAwAAQoRsiAUUEQEHkxQZBG0EBIAYQtBsaQQAhAQwCCyABIAAoAlQ2AgAgACABNgJUQfw/IQIgAUEEagshASAAIAJBIGs2AlAgACABQSBqNgJYIAAgACgCYEEgajYCYAsgACgCRCADaiABNgIAIAAoAkQgA2ooAgAiAUIANwIAIAFCADcCGCABQgA3AhAgAUIANwIIIAAgACgCRCADaigCACAAKAJIIANqKAIAIAAoAjwQhREgACAAKAJEIANqKAIAIAAoAkggA2ooAgAgACgCPCAAKAIMQQAQhhEgBUEBaiIFIAAoAhBIDQALCw8LQTwQFSIBQcDFBhCZECABQZCoBkHjBxAWAAusCgMOfwJ+A3wgACgCQCIKENUaIQ0gACAKIAAoAmhqNgJoQX8gCkEFdCIHIApBA3QiDEH4////A3EgDEcbENUaQQAgBxCvGyEHIAMEfCAMQQFrQQN2IQ8gACgCKCEQIAAoAiwhEQNAIBEgECACIA5BAnRqKAIAbGohC0EAIQlBACEEQQAhBSAKBEADQCAFIAQgC2otAABBgMYGai0AAGohBSAEQQFqIgQgCkcNAAsLIAUgBWytIRNBACEGIAwEQANAIAcgBkECdCIEaiIFIAUoAgAgCSALaiIFLQAAQQFxajYCACAHIARBBHJqIgggCCgCACAFLQAAQQF2QQFxajYCACAHIARBCHJqIgggCCgCACAFLQAAQQJ2QQFxajYCACAHIARBDHJqIgggCCgCACAFLQAAQQN2QQFxajYCACAHIARBEHJqIgggCCgCACAFLQAAQQR2QQFxajYCACAHIARBFHJqIgggCCgCACAFLQAAQQV2QQFxajYCACAHIARBGHJqIgggCCgCACAFLQAAQQZ2QQFxajYCACAHIARBHHJqIgQgBCgCACAFLQAAQQd2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IABBJGogACgCKBD/DyAAKAIEIgIEQAJ/IAIgAiAAKAIIIgFGDQAaA0AgAUHIAGsQsBEiASACRw0ACyAAKAIECyEBIAAgAjYCCCABEKIbCyAAEKIbC8QCAgd/AXwjAEHQAGsiBiQAAkAgACgCMCIBIAAoAggiAiAAKAIEIgRrQcgAbSIDSwRAIABBBGogASADaxCzEQwBCyABIANPDQAgBCABQcgAbGoiASACRwRAA0AgAkHIAGsQsBEiAiABRw0ACwsgACABNgIICyAAKAIwQQFOBEADQCAAKAIEIAVByABsaiIBIAZBCGogACgCICAAKAI0ELQRIgIQtREgAhCwERogACgCHCEEIAAoAhghByABQQxqAn8gACgCECIDIAEoAhhquEQzMzMzMzPzP6IiCEQAAAAAAADwQWMgCEQAAAAAAAAAAGZxBEAgCKsMAQtBAAsQnBFBACECIAMEQANAIAEgAiAEIAIgB2xqELYRIAJBAWoiAiADRw0ACwsgARC3ESAFQQFqIgUgACgCMEgNAAsLIAZB0ABqJAALkgQBBX8gASAAKAIIIgMgACgCBCICa0HIAG1NBEAgACABBH8gAiABQcgAbGohAwNAIAJCADcCACACQgA3AiAgAkIANwIQIAJCADcCCCACQoCAgICAgIDAPzcCGCACQgA3AiggAkIANwIwIAJCADcCOCACQUBrQgA3AgAgAkHIAGoiAiADRw0ACyADBSACCzYCBA8LAkACQAJAIAIgACgCACIEa0HIAG0iBSABaiICQeTxuBxJBEAgBUHIAGwCf0EAIAIgAyAEa0HIAG0iA0EBdCIEIAIgBEsbQePxuBwgA0HxuJwOSRsiBUUNABogBUHk8bgcTw0CIAVByABsENUaCyIGaiIDIAFByABsaiEEIAMhAgNAIAJCADcCACACQgA3AiAgAkIANwIQIAJCADcCCCACQoCAgICAgIDAPzcCGCACQgA3AiggAkIANwIwIAJCADcCOCACQUBrQgA3AgAgAkHIAGoiAiAERw0ACyAGIAVByABsaiEGIAAoAgQiAiAAKAIAIgFGDQIDQCADQcgAayIDIAJByABrIgIQwREgASACRw0ACyAAIAY2AgggACgCBCECIAAgBDYCBCAAKAIAIQEgACADNgIAIAEgAkYNAwNAIAJByABrELARIgIgAUcNAAsMAwsQ/BoA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CwNAIAIiASgCACICDQALCyABIAdHDQALCyAAQgA3AjAgAEEANgJUIABCADcCPCAAQgA3AkwgAEKAgICAgIAINwJEIAAgACkCDDcCKCADQYyiBi0AADoAOCADQQk6ADsgA0EAOgA5IANBhKIGKQAANwMwAkACQAJAAkAgACAFIAYgA0EwahCBECICRwR/IAIoAhwiASABKAIAKAIcEQAAKAIEQYDTCSgCAEcNASACKAIcIgEgAkEgaiABKAIAKAIUEQMAKAIABUEgCzYCWCADLAA7QX9MBEAgAygCMBCiGwsgA0EQENUaIgI2AiAgA0KMgICAgIKAgIB/NwIkIAJBADoADCACQaGiBigAADYACCACQZmiBikAADcAACAAIAUgBiADQSBqEIEQIgJHBH8gAigCHCIBIAEoAgAoAhwRAAAoAgRBrLMGRw0CIAIoAhwiASACQSBqIAEoAgAoAhQRAwAoAgAFQQALNgJgIAMsACtBf0wEQCADKAIgEKIbCyADQQU6ABsgA0EAOgAVIANB/qEGKAAANgIQIANBgqIGLQAAOgAUIAACf0EEIAUgBiADQRBqEIEQIgJGDQAaIAIoAhwiASABKAIAKAIcEQAAKAIEQYDTCSgCAEcNAyACKAIcIgEgAkEgaiABKAIAKAIUEQMAKAIACzYCXCADLAAbQX9MBEAgAygCEBCiGwsgA0EAOgAJIANB6qIGLQAAOgAIIANBCToACyADQeKiBikAADcDACAAAn9B5AAgBSAGIAMQgRAiAkYNABogAigCHCIBIAEoAgAoAhwRAAAoAgRBgNMJKAIARw0EIAIoAhwiASACQSBqIAEoAgAoAhQRAwAoAgALNgJkIAMsAAtBf0wEQCADKAIAEKIbC0HFDSECAkACQAJAAkACQCAAKAJgDgQEAwABAgtBxg0hAgwDC0HHDSECDAILQTwQFSICQczCBhCZECACQZCoBkHjBxAWAAtByA0hAgsgACACNgIEIABBADYCCCAAQX8gACgCXCIEQQJ0IARB/////wNxIARHGyICENUaIgE2AjAgACACENUaNgI0QQEhAgJAIARBAUgNACABQQA2AgAgACgCNEEANgIAIARBAUYNAANAIAJBAnQiASAAKAIwakEANgIAIAAoAjQgAWpBADYCACACQQFqIgIgBEcNAAsLIANBQGskAA8LQQEQFUGc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ACgCRCIDRQ0AIAAoAhAiBUEBSA0AQQAhBANAIAMgBEECdGooAgAiAwRAIAAgAxCbEiAAKAIQIQULIARBAWoiBCAFTg0BIAAoAkQhAwwACwALAkACQAJAAkACQCAAQQxqIgdBBEEBIAEQqBVBAUYEQCAAQRRqIghBBEEBIAEQqBVBAUcNASAAQegAakEEQQEgARCoFUEBRw0CIABBHGoiCUEEQQEgARCoFUEBRw0DIABBEGoiCkEEQQEgARCoFUEBRw0EIABBfyAAKAIQIgRBAnQgBEH/////A3EgBEcbENUaNgJIIARBAU4EQEEAIQMDQEF/IAAoAjwiBEECdCAEQf////8DcSAERxsQ1RohBiADQQJ0IgUgACgCSGogBjYCACAAKAJIIAVqKAIAQQQgBCABEKgVIARHDQcgACABIAAoAkQgBWogAxCjEiADQQFqIgMgACgCEEgNAAsLIAIgACAAKAIAKAIoEQAANgIQIAJBADoACSACQQhqIgNB/KEGLQAAOgAAIAJBCToACyACQfShBikAADcDACACIAI2AiAgAkEoaiAAQTBqIgQgAiACQSBqEJAQIAIoAihBHGogAkEQahCOECACLAALQX9MBEAgAigCABCiGwsgAkEAOgAJIANBjKIGLQAAOgAAIAJBCToACyACQYSiBikAADcDACACIAI2AiAgAkEoaiAEIAIgAkEgahCQECACKAIoQRxqIAcQhhAgAiwAC0F/TARAIAIoAgAQohsLIAJBBToACyACQQA6AAUgAkH+oQYoAAA2AgAgAkGCogYtAAA6AAQgAiACNgIgIAJBKGogBCACIAJBIGoQkBAgAigCKEEcaiAKEIYQIAIsAAtBf0wEQCACKAIAEKIbCyACQZaiBi8AADsBCCACQYAUOwEKIAJBjqIGKQAANwMAIAIgAjYCICACQShqIAQgAiACQSBqEJAQIAIoAihBHGogCBCGECACLAALQX9MBEAgAigCABCiGwsgAkEQENUaIgM2AgAgAkKMgICAgIKAgIB/NwIEIANBADoADCADQaGiBigAADYACCADQZmiBikAADcAACACIAI2AiAgAkEoaiAEIAIgAkEgahCQECACKAIoQRxqIABBGGoQkRAgAiwAC0F/TARAIAIoAgAQohsLIAJBADoACCACQuPE/crmjdmy+AA3AwAgAkEIOgALIAIg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IGoQugYhCiAFIAQ2AiQgBSABNgIgIAVCgICAgPj/////ADcDECAFQTBqIAggBUEgaiAFQRBqELoGIQEgACgCLCELIAVCADcDKCAFIAk2AiQgBUGAgIQINgIgIAUgCjYCFCAFQYCAhBA2AhAgBUIANwMYIAUgATYCBCAFQYCAhBA2AgAgBUIANwMIIAsgBUEgaiAFQRBqIAUgDCAGIAAoAiQgCygCACgCEBFDABogARCxBhogChCxBhogCRCxBhogBCIBIAUoAtACSA0ACwsgAEE0aiAHIAggAhDoEyAIELEGGiAHELEGGiAFQcgCahCxBhogBUGAA2okAAuXAQECfyAAQfycBzYCACAAKAIQIgEEQAJ/IAEgASAAKAIUIgJGDQAaA0AgAkEwaxDYCiICIAFHDQALIAAoAhALIQIgACABNgIUIAIQohsLIAAoAgQiAQRAAn8gASABIAAoAggiAkYNABoDQCACQThrELEGIgIgAUcNAAsgACgCBAshAiAAIAE2AgggAhCiGwsgABDjCxogAAvTAQECfyAAQaybBzYCNCAAQfCfBzYCACAAKAJwIgEEQCAAIAE2AnQgARCiGwsgAEE4ahCxBhoCQCAAKAIwIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEBACABENAaCwJAIAAoAigiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQEAIAEQ0BoLAkAgACgCICIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAQAgARDQGgsgABDrExogAAsKACAAEOwTEKIbCxYAIABBhKYHNgIAIABBDGoQ7BMaIAALGQAgAEGEpgc2AgAgAEEMahDsExogABCiGwsWACAAQfimBzYCACAAQQxqEJ0QGiAACxkAIABB+KYHNgIAIABBDGoQnRAaIAAQohsLFQAgAEHopwc2AgAgAEEMahD+DyAACxgAIABB6KcHNgIAIABBDGoQ/g8gABCiGwsKACAAQQxqEP4PC1sBA3wgASsDCCECIAErAxAhAyABKwMAIQQgAEIANwNAIAAgBDkDOCAAQgA3AyAgACADOQMYIAAgAjkDECAAQgA3AwAgACACmjkDMCAAIASaOQMoIAAgA5o5AwgLhQIBCHwgACABKwMAIgIgAqIgASsDCCID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IABBDGoPCyADIAJB9LEHENUDAAvhAQEFfyMAQRBrIgUkAEEwENUaIgNCADcCBCADQYSqBzYCACABKAIEIQQgASgCCCEGIANBEGoiBxDjCxogA0IANwIcIANBiKsHNgIQQQAhASADQQA2AiQgAyACrEL/////DyACGzcDKCADIAY2AhggAyAENgIUIAVBADYCCCAFQgA3AwBBACECAkAgBARAIARBgICAgARPDQEgBEECdCIEENUaIgJBACAEEK8bIARqIQELIAMgATYCJCADIAE2AiAgAyACNgIcIAAgAzYCBCAAIAc2AgAgBUEQaiQADwsQ/BoAC3wBBH8gAEGktAc2AgwgAEGYswc2AgAgACgCECIBBEACfyABIAEgACgCFCIDRg0AGgNAIANBDGsiAigCACIEBEAgA0EIayAENgIAIAQQohsLIAIhAyABIAJHDQALIAAoAhALIQIgACABNgIUIAIQohsLIABBDGoQ4wsaIAALfwEEfyAAQaS0BzYCDCAAQZizBzYCACAAKAIQIgEEQAJ/IAEgASAAKAIUIgNGDQAaA0AgA0EMayICKAIAIgQEQCADQQhrIAQ2AgAgBBCiGwsgAiEDIAEgAkcNAAsgACgCEAshAiAAIAE2AhQgAhCiGwsgAEEMahDjCxogABCiGwtwAQR/IABBpLQHNgIAIAAoAgQiAQRAAn8gASABIAAoAggiA0YNABoDQCADQQxrIgIoAgAiBARAIANBCGsgBDYCACAEEKIbCyACIQMgASACRw0ACyAAKAIECyECIAAgATYCCCACEKIbCyAAEOMLGiAAC3MBBH8gAEGktAc2AgAgACgCBCIBBEACfyABIAEgACgCCCIDRg0AGgNAIANBDGsiAigCACIEBEAgA0EIayAENgIAIAQQohsLIAIhAyABIAJHDQALIAAoAgQLIQIgACABNgIIIAIQohsLIAAQ4wsaIAAQohsLDQAgACgCBCABQQxsagsVACAAQai2BzYCACAAQQxqEP4PIAALGAAgAEGotgc2AgAgAEEMahD+DyAAEKIbCxUAIABBpLcHNgIAIABBDGoQ/g8gAAsYACAAQaS3BzYCACAAQQxqEP4PIAAQohsL1wEBBH8gAEGguQc2AgwgAEGcuAc2AgAgACgCHCIBBEACfyABIAEgACgCICIDRg0AGgNAIANBDGsiAigCACIEBEAgA0EIayAENgIAIAQQohsLIAIhAyABIAJHDQALIAAoAhwLIQIgACABNgIgIAIQohsLIAAoAhAiAQRAAn8gASABIAAoAhQiA0YNABoDQCADQQxrIgIoAgAiBARAIANBCGsgBDYCACAEEKIbCyACIQMgASACRw0ACyAAKAIQCyECIAAgATYCFCACEKIbCyAAQQxqEOMLGiAACwoAIAAQkRQQohsLywEBBH8gAEGguQc2AgAgACgCECIBBEACfyABIAEgACgCFCIDRg0AGgNAIANBDGsiAigCACIEBEAgA0EIayAENgIAIAQQohsLIAIhAyABIAJHDQALIAAoAhALIQIgACABNgIUIAIQohsLIAAoAgQiAQRAAn8gASABIAAoAggiA0YNABoDQCADQQxrIgIoAgAiBARAIANBCGsgBDYCACAEEKIbCyACIQMgASACRw0ACyAAKAIECyECIAAgATYCCCACEKIbCyAAEOMLGiAAC84BAQR/IABBoLkHNgIAIAAoAhAiAQRAAn8gASABIAAoAhQiA0YNABoDQCADQQxrIgIoAgAiBARAIANBCGsgBDYCACAEEKIbCyACIQMgASACRw0ACyAAKAIQCyECIAAgATYCFCACEKIbCyAAKAIEIgEEQAJ/IAEgASAAKAIIIgNGDQAaA0AgA0EMayICKAIAIgQEQCADQQhrIAQ2AgAgBBCiGwsgAiEDIAEgAkcNAAsgACgCBAshAiAAIAE2AgggAhCiGwsgABDjCxogABCiGwsNACAAKAIQIAFBDGxqC4kBAQR/IABB9LsHNgIMIABB8LoHNgIAIAAoAhwiAQRAAn8gASABIAAoAiAiA0YNABoDQCADQQxrIgIoAgAiBARAIANBCGsgBDYCACAEEKIbCyACIQMgASACRw0ACyAAKAIcCyECIAAgATYCICACEKIbCyAAQRBqIAAoAhQQlxQgAEEMahDjCxogAAs2ACABBEAgACABKAIAEJcUIAAgASgCBBCXFCABKAIgIgAEQCABIAA2AiQgABCiGwsgARCiGwsLjAEBBH8gAEH0uwc2AgwgAEHwugc2AgAgACgCHCIBBEACfyABIAEgACgCICIDRg0AGgNAIANBDGsiAigCACIEBEAgA0EIayAENgIAIAQQohsLIAIhAyABIAJHDQALIAAoAhwLIQIgACABNgIgIAIQohsL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OQECAgICAgICAgICAgECAgIBAgICAgICAgICAgICAgICAgIBAgICAgICAgICAgIBAgICAgICAgICAQALIAJBmgVGDQAgAkEqRw0BCwJ/An8CfyABKAIIIgIEQCAAKAIoIAIgAxECACAAKAIcIQELIAEoAkQiAgsEQCAAKAIoIAIgACgCJBECACAAKAIcIQELIAEoAkAiAgsEQCAAKAIoIAIgACgCJBECACAAKAIcIQELIAEoAjgiAgsEQCAAKAIoIAIgACgCJBECACAAKAIcIQELIAAoAiggASAAKAIkEQIAIABBADYCHAsLmQIBA39BfiECAkAgAEUNACAAKAIgRQ0AIAAoAiRFDQAgACgCHCIBRQ0AIAEoAgAgAEcNAAJAAkAgASgCBCIDQTlrDjkBAgICAgICAgICAgIBAgICAQICAgICAgICAgICAgICAgICAQICAgICAgICAgICAQICAgICAgICAgEACyADQZoFRg0AIANBKkcNAQsgAEECNgIsIABBADYCCCAAQgA3AhQgAUEANgIUIAEgASgCCDYCECABKAIYIgJBf0wEQCABQQAgAmsiAjYCGAsgAUE5QSpB8QAgAhsgAkECRhs2AgQgAAJ/IAJBAkYEQEEAQQBBABCpFAwBC0EAQQBBABCnFAs2AjBBACECIAFBADYCKCABEMEUCyACC7cBAQJ/IAAQrBRFBEAgACgCHCIAIAAoAixBAXQ2AjwgACgCRCIBIAAoAkxBAXRBAmsiAmpBADsBACABQQAgAhCvGxogAEEANgK0LSAAQoCAgIAgNwJ0IABCADcCaCAAQoCAgIAgNwJcIABBADYCSCAAIAAoAoQBQQxsIgFB5P4Hai8BADYCkAEgACABQeD+B2ovAQA2AowBIAAgAUHi/gdqLwEANgKAASAAIAFB5v4Hai8BADYCfAsLoAYBCn8gACgCLCIHQYYCayEJIAAoAnQhBSAHIQEDQCAAKAI8IAVrIAAoAmwiCGshBiABIAlqIAhNBEAgACgCOCIBIAEgB2ogByAGaxCuGxogACAAKAJwIAdrNgJwIAAgACgCbCAHayIINgJsIAAgACgCXCAHazYCXCAAKAJEIAAoAkwiA0EBdGohASAAKAIsIQIDQCABQQJrIgFBACABLwEAIgQgAmsiBSAEIAVJGzsBACADQQFrIgMNAAsgACgCQCACQQF0aiEBIAIhAwNAIAFBAmsiAUEAIAEvAQAiBCACayIFIAQgBUkbOwEAIANBAWsiAw0ACyAGIAdqIQYLAkAgACgCACIBKAIEIgNFDQAgACgCdCEEIAYgAyADIAZLGyICBEAgACgCOCEFIAEgAyACazYCBCAFIAhqIARqIAEoAgAgAhCuGyEDAkACQAJAIAEoAhwoAhhBAWsOAgABAgsgASABKAIwIAMgAhCnFDYCMAwBCyABIAEoAjAgAyACEKkUNgIwCyABIAEoAgAgAmo2AgAgASABKAIIIAJqNgIIIAAoAnQhBAsgACACIARqIgU2AnQCQCAAKAK0LSICIAVqQQNJDQAgACAAKAI4IgYgACgCbCACayIBaiIDLQAAIgQ2AkggACAAKAJUIgogAy0AASAEIAAoAlgiCHRzcSIDNgJIA0AgAkUNASAAIAEgBmotAAIgAyAIdHMgCnEiAzYCSCAAKAJAIAAoAjQgAXFBAXRqIAAoAkQgA0EBdGoiBC8BADsBACAEIAE7AQAgACACQQFrIgI2ArQtIAFBAWohASACIAVqQQJLDQALCyAFQYUCSw0AIAAoAgAoAgRFDQAgACgCLCEBDAELCwJAIAAoAjwiAyAAKALALSIBTQ0AIAAoAnQgACgCbGoiAiABSwRAIAAoAjggAmpBACADIAJrIgFBggIgAUGCAkkbIgEQrxsaIAAgASACajYCwC0PCyACQYICaiICIAFNDQAgACgCOCABakEAIAMgAWsiAyACIAFrIgEgASADSxsiARCvGxogACAAKALALSABajYCwC0LC4M2AQp/QX4hAwJAIABFDQAgACgCIEUNACAAKAIkRQ0AIAAoAhwiAkUNACACKAIAIABHDQACQAJAIAIoAgQiBEE5aw45AQICAgICAgICAgICAQICAgECAgICAgICAgICAgICAgICAgECAgICAgICAgICAgECAgICAgICAgIBAAsgBEGaBUYNACAEQSpHDQELIAFBBUsNAAJAAkAgACgCDEUNACAAKAIEIgMEQCAAKAIARQ0BCyABQQRGDQEgBEGaBUcNAQsgAEGgrggoAgA2AhhBfg8LIAAoAhBFBEAgAEGsrggoAgA2AhhBew8LIAIoAighBiACIAE2AigCQCACKAIUBEAgAhDEFAJAIAAoAhAiBCACKAIUIgUgBCAFSRsiA0UNACAAKAIM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IAdFDQQgAiAGLQAAOgADIAdBAUYEQCACQQRqIQMMBQsgAiAELQAEOgAEIAJBBWohAwwECyADIAItAAE6AAEgA0ECaiEDDAMLIAAgBzYCGEHR/gALNgIEDAILIAMgBzoAACADQQFqIQMLIAMgDU8NACAIIA5JDQELCyAAIAM2AgwgACAIIAVBA3ZrIgI2AgAgACANIANrQYECajYCECAAIA4gAmtBBWo2AgQgCSAFQQdxIgU2AkAgCSABQX8gBXRBf3NxNgI8C2IAIABBADYCvC0gAEEAOwG4LSAAQbgWakGYngg2AgAgACAAQfwUajYCsBYgAEGsFmpBhJ4INgIAIAAgAEGIE2o2AqQWIABBoBZqQfCdCDYCACAAIABBlAFqNgKYFiAAEMIUC9oEAQF/A0AgACABQQJ0akEAOwGUASABQQFqIgFBngJHDQALIABBADsB/BQgAEEAOwGIEyAAQcQVakEAOwEAIABBwBVqQQA7AQAgAEG8FWpBADsBACAAQbgVakEAOwEAIABBtBVqQQA7AQAgAEGwFWpBADsBACAAQawVakEAOwEAIABBqBVqQQA7AQAgAEGkFWpBADsBACAAQaAVakEAOwEAIABBnBVqQQA7AQAgAEGYFWpBADsBACAAQZQVakEAOwEAIABBkBVqQQA7AQAgAEGMFWpBADsBACAAQYgVakEAOwEAIABBhBVqQQA7AQAgAEGAFWpBADsBACAAQfwTakEAOwEAIABB+BNqQQA7AQAgAEH0E2pBADsBACAAQfATakEAOwEAIABB7BNqQQA7AQAgAEHoE2pBADsBACAAQeQTakEAOwEAIABB4BNqQQA7AQAgAEHcE2pBADsBACAAQdgTakEAOwEAIABB1BNqQQA7AQAgAEHQE2pBADsBACAAQcwTakEAOwEAIABByBNqQQA7AQAgAEHEE2pBADsBACAAQcATakEAOwEAIABBvBNqQQA7AQAgAEG4E2pBADsBACAAQbQTakEAOwEAIABBsBNqQQA7AQAgAEGsE2pBADsBACAAQagTakEAOwEAIABBpBNqQQA7AQAgAEGgE2pBADsBACAAQZwTakEAOwEAIABBmBNqQQA7AQAgAEGUE2pBADsBACAAQZATakEAOwEAIABBjBNqQQA7AQAgAEIANwKsLSAAQZQJakEBOwEAIABBADYCqC0gAEEANgKgLQuzAwECfyAAIAAvAbgtIANB//8DcSIFIAAoArwtIgR0ciIDOwG4LQJAAkACfyAEQQ5OBEAgACAAKAIUIgRBAWo2AhQgBCAAKAIIaiADOgAAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogAEG5LWotAAA6AAAgACAFQRAgACgCvC0iBGt2IgM7AbgtIARBDWsMAQsgBEEDagsiBEEJTgRAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogAzoAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIQQgAEG5LWotAAAhAwwBCyAEQQFIDQEgACAAKAIUIgRBAWo2AhQgBCAAKAIIaiEECyAEIAM6AAALIABBADYCvC0gAEEAOwG4LSAAIAAoAhQiA0EBajYCFCADIAAoAghqIAI6AAAgACAAKAIUIgNBAWo2AhQgAyAAKAIIaiACQQh2OgAAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogAkF/cyIDOgAAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogA0EIdjoAACAAKAIIIAAoAhRqIAEgAhCuGxogACAAKAIUIAJqNgIUC6wBAQF/AkAgAAJ/IAAoArwtIgFBEEYEQCAAIAAoAhQiAUEBajYCFCABIAAoAghqIAAtALgtOgAAIAAgACgCFCIBQQFqNgIUIAEgACgCCGogAEG5LWotAAA6AAAgAEEAOwG4LUEADAELIAFBCEgNASAAIAAoAhQiAUEBajYCFCABIAAoAghqIAAtALgtOgAAIAAgAEG5LWotAAA7AbgtIAAoArwtQQhrCzYCvC0LC5oDAQJ/IAAgAC8BuC1BAiAAKAK8LSIBdHIiAjsBuC0gAAJ/IAFBDk4EQCAAIAAoAhQiAUEBajYCFCABIAAoAghqIAI6AAAgACAAKAIUIgJBAWo2AhQgAiAAKAIIaiAAQbktai0AADoAACAAQQJBECAAKAK8LSIBa3YiAjsBuC0gAUENawwBCyABQQNqCyIBNgK8LSAAAn8gAUEKTgRAIAAgACgCFCIBQQFqNgIUIAEgACgCCGogAjoAACAAIAAoAhQiAkEBajYCFCACIAAoAghqIABBuS1qLQAAOgAAQQAhAiAAQQA7AbgtIAAoArwtQQlrDAELIAFBB2oLIgE2ArwtAkAgAAJ/IAFBEEYEQCAAIAAoAhQiAUEBajYCFCABIAAoAghqIAI6AAAgACAAKAIUIgJBAWo2AhQgAiAAKAIIaiAAQbktai0AADoAACAAQQA7AbgtQQAMAQsgAUEISA0BIAAgACgCFCIBQQFqNgIUIAEgACgCCGogAjoAACAAIABBuS1qLQAAOwG4LSAAKAK8LUEIaws2ArwtCwvXEgENfwJ/IAAoAoQBQQFOBEAgACgCACIGKAIsQQJGBEBB/4D/n38hBAJAA0ACQCAEQQFxRQ0AIAAgBUECdGovAZQBRQ0AQQAhBAwCCyAEQQF2IQQgBUEBaiIFQSBHDQALQQEhBCAALwG4AQ0AIAAvAbwBDQAgAC8ByAENAEEgIQUDQCAAIAVBAnRqLwGUAUUEQEEAIQQgBUEBaiIFQYACRw0BDAILC0EBIQQLIAYgBDYCLAsgACAAQZgWahDHFCAAIABBpBZqEMcUIAAvAZYBIQQgACAAQZwWaigCACIKQQJ0akH//wM7AZoBIApBAE4EQEEHQYoBIAQbIQlBBEEDIAQbIQsgAEHAFWohDiAAQcQVaiEPIABBvBVqIRBBfyEMA0AgBCEFIAAgCCINQQFqIghBAnRqLwGWASEEAkACQCAHQQFqIgYgCU4NACAEIAVHDQAgBiEHDAELAn8gBiALSARAIAAgBUECdGpB/BRqIgcvAQAgBmoMAQsgBQRAIAUgDEcEQCAAIAVBAnRqQfwUaiIGIAYvAQBBAWo7AQALIBAiBy8BAEEBagwBCyAHQQlMBEAgDiIHLwEAQQFqDAELIA8iBy8BAEEBagshBiAHIAY7AQBBACEHAn8gBEUEQEEDIQtBigEMAQtBA0EEIAQgBUYiBhshC0EGQQcgBhsLIQkgBSEMCyAKIA1HDQALCyAAQYoTai8BACEEIAAgAEGoFmooAgAiCkECdGpBjhNqQf//AzsBAEEAIQcgCkEATgRAQQdBigEgBBshCUEEQQMgBBshCyAAQcAVaiEOIABBxBVqIQ8gAEG8FWohEEF/IQxBACEIA0AgBCEFIAAgCCINQQFqIghBAnRqQYoTai8BACEEAkACQCAHQQFqIgYgCU4NACAEIAVHDQAgBiEHDAELAn8gBiALSARAIAAgBUECdGpB/BRqIgcvAQAgBmoMAQsgBQRAIAUgDEcEQCAAIAVBAnRqQfwUaiIGIAYvAQBBAWo7AQALIBAiBy8BAEEBagwBCyAHQQlMBEAgDiIHLwEAQQFqDAELIA8iBy8BAEEBagshBiAHIAY7AQBBACEHAn8gBEUEQEEDIQtBigEMAQtBA0EEIAQgBUYiBhshC0EGQQcgBhsLIQkgBSEMCyAKIA1HDQALCyAAIABBsBZqEMcUIAAgACgCqC0Cf0ESIABBuhVqLwEADQAaQREgAEGCFWovAQANABpBECAAQbYVai8BAA0AGkEPIABBhhVqLwEADQAaQQ4gAEGyFWovAQANABpBDSAAQYoVai8BAA0AGkEMIABBrhVqLwEADQAaQQsgAEGOFWovAQANABpBCiAAQaoVai8BAA0AGkEJIABBkhVqLwEADQAaQQggAEGmFWovAQANABpBByAAQZYVai8BAA0AGkEGIABBohVqLwEADQAaQQUgAEGaFWovAQANABpBBCAAQZ4Vai8BAA0AGkEDQQIgAEH+FGovAQAbCyIIQQNsaiIEQRFqNgKoLSAEQRtqQQN2IgQgACgCrC1BCmpBA3YiBSAEIAVJGwwBCyACQQVqIgULIQQCQAJAIAFFDQAgAkEEaiAESw0AIAAgASACIAMQwxQMAQsgACgCvC0hBgJAIAQgBUcEQCAAKAKIAUEERw0BCyAAIAAvAbgtIANBAmpB//8DcSIEIAZ0ciIFOwG4LSAAAn8gBkEOTgRAIAAgACgCFCIGQQFqNgIUIAYgACgCCGogBToAACAAIAAoAhQiBUEBajYCFCAFIAAoAghqIABBuS1qLQAAOgAAIAAgBEEQIAAoArwtIgVrdjsBuC0gBUENawwBCyAGQQNqCzYCvC0gAEGwnghBsKcIEMgUDAELIAAvAbgtIANBBGpB//8DcSIHIAZ0ciEFAkAgBkEOTgRAIAAgBTsBuC0gACAAKAIUIgRBAWo2AhQgBCAAKAIIaiAFOgAAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogAEG5LWotAAA6AAAgACgCvC0iBUENayEEIAdBECAFa3YhBQwBCyAGQQNqIQQLIAAgBDYCvC0gAEGcFmooAgAiCkGA/gNqQf//A3EiByAEdCEGIABBqBZqKAIAIQkCfyAEQQxOBEAgACAFIAZyIgQ7AbgtIAAgACgCFCIFQQFqNgIUIAUgACgCCGogBDoAACAAIAAoAhQiBEEBajYCFCAEIAAoAghqIABBuS1qLQAAOgAAIAAoArwtIgVBC2shBCAHQRAgBWt2DAELIARBBWohBCAFIAZyCyEFIAAgBDYCvC0gCUH//wNxIgcgBHQhBgJ/IARBDE4EQCAAIAUgBnIiBDsBuC0gACAAKAIUIgVBAWo2AhQgBSAAKAIIaiAEOgAAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogAEG5LWotAAA6AAAgACgCvC0iBUELayEEIAdBECAFa3YMAQsgBEEFaiEEIAUgBnILIQUgACAENgK8LSAIQf3/A2pB//8DcSIHIAR0IQYCfyAEQQ1OBEAgACAFIAZyIgQ7AbgtIAAgACgCFCIFQQFqNgIUIAUgACgCCGogBDoAACAAIAAoAhQiBEEBajYCFCAEIAAoAghqIABBuS1qLQAAOgAAIAAoArwtIgVBDGshBCAHQRAgBWt2DAELIARBBGohBCAFIAZyCyEGIAAgBDYCvC1BACEFIABBuS1qIQ0DQCAAIAYgACAFQYCrCGotAABBAnRqQf4Uai8BACIHIAR0ciIGOwG4LSAAAn8gBEEOTgRAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogBjoAACAAIAAoAhQiBEEBajYCFCAEIAAoAghqIA0tAAA6AAAgACAHQRAgACgCvC0iBGt2IgY7AbgtIARBDWsMAQsgBEEDagsiBDYCvC0gBSAIRyEHIAVBAWohBSAHDQALIAAgAEGUAWoiBCAKEMkUIAAgAEGIE2oiBSAJEMkUIAAgBCAFEMgUCyAAEMIUIAMEQAJAAn8gACgCvC0iBEEJTgRAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogAC0AuC06AAAgACAAKAIUIgRBAWo2AhQgBCAAKAIIaiEEIABBuS1qLQAADAELIARBAUgNASAAIAAoAhQiBEEBajYCFCAEIAAoAghqIQQgAC0AuC0LIQUgBCAFOgAACyAAQQA2ArwtIABBADsBuC0LC9oUARV/IwBBIGshCiABKAIAIQkgASgCCCICKAIAIQUgAigCDCENIABCgICAgNDHADcC0ChBfyEQAkAgDUEASgRAQQAhAgNAAkAgCSACQQJ0aiIDLwEABEAgACAAKALQKEEBaiIDNgLQKCAAIANBAnRqQdwWaiACNgIAIAAgAmpB2ChqQQA6AAAgAiEQDAELIANBADsBAgsgAkEBaiICIA1HDQALIAAoAtAoIgRBAUoNAQsDQCAAIARBAWoiAjYC0CggACACQQJ0akHcFmogEEEBaiIDQQAgEEECSCIEGyICNgIAIAkgAkECdCIHakEBOwEAIAAgAmpB2ChqQQA6AAAgACAAKAKoLUEBazYCqC0gBQRAIAAgACgCrC0gBSAHai8BAms2AqwtCyADIBAgBBshECAAKALQKCIEQQJIDQALCyABIBA2AgQgBEEBdiEIA0AgACAIQQJ0akHcFmooAgAhCwJAIAgiAkEBdCIDIARKDQAgACALakHYKGohDyAJIAtBAnRqIQYgCCEFA0ACQCADIAROBEAgAyECDAELIAkgAEHcFmoiAiADQQFyIgRBAnRqKAIAIg5BAnRqLwEAIgcgCSACIANBAnRqKAIAIgxBAnRqLwEAIgJPBEAgAiAHRwRAIAMhAgwCCyADIQIgAEHYKGoiAyAOai0AACADIAxqLQAASw0BCyAEIQILIAYvAQAiBCAJIAAgAkECdGpB3BZqKAIAIgNBAnRqLwEAIgdJBEAgBSECDAILAkAgBCAHRw0AIA8tAAAgACADakHYKGotAABLDQAgBSECDAILIAAgBUECdGpB3BZqIAM2AgAgAiEFIAJBAXQiAyAAKALQKCIETA0ACwsgACACQQJ0akHcFmogCzYCACAIQQJOBEAgCEEBayEIIAAoAtAoIQQMAQsLIAAoAtAoIQMDQCANIQggACADQQFrIgQ2AtAoIAAoAuAWIQsgACAAIANBAnRqQdwWaigCACINNgLgFkEBIQICQCADQQNIDQAgACANakHYKGohD0ECIQMgCSANQQJ0aiEGQQEhBQNAAkAgAyAETgRAIAMhAgwBCyAJIABB3BZqIgIgA0EBciIEQQJ0aigCACIOQQJ0ai8BACIHIAkgAiADQQJ0aigCACIMQQJ0ai8BACICTwRAIAIgB0cEQCADIQIMAgsgAyECIABB2ChqIgMgDmotAAAgAyAMai0AAEsNAQsgBCECCyAGLwEAIgQgCSAAIAJBAnRqQdwWaigCACIDQQJ0ai8BACIHSQRAIAUhAgwCCwJAIAQgB0cNACAPLQAAIAAgA2pB2ChqLQAASw0AIAUhAgwCCyAAIAVBAnRqQdwWaiADNgIAIAIhBSACQQF0IgMgACgC0CgiBEwNAAsLQQIhAyAAQdwWaiIGIAJBAnRqIA02AgAgACAAKALUKEEBayIENgLUKCAAKALgFiECIAYgBEECdGogCzYCACAAIAAoAtQoQQFrIgQ2AtQoIAYgBEECdGogAjYCACAJIAhBAnRqIg4gCSACQQJ0aiIELwEAIAkgC0ECdGoiBS8BAGo7AQAgAEHYKGoiDCAIaiIPIAIgDGotAAAiAiALIAxqLQAAIgcgAiAHSxtBAWo6AAAgBCAIOwECIAUgCDsBAiAAIAg2AuAWQQEhBUEBIQICQCAAKALQKCIEQQJIDQADQAJ/IAMgAyAETg0AGiAJIAYgA0EBciIEQQJ0aigCACILQQJ0ai8BACICIAkgBiADQQJ0aigCACINQQJ0ai8BACIHTwRAIAMgAiAHRw0BGiADIAsgDGotAAAgDCANai0AAEsNARoLIAQLIQIgDi8BACIEIAkgACACQQJ0akHcFmooAgAiA0ECdGovAQAiB0kEQCAFIQIMAgsCQCAEIAdHDQAgDy0AACAAIANqQdgoai0AAEsNACAFIQIMAgsgACAFQQJ0akHcFmogAzYCACACIQUgAkEBdCIDIAAoAtAoIgRMDQALCyAIQQFqIQ0gACACQQJ0akHcFmogCDYCACAAKALQKCIDQQFKDQALIAAgACgC1ChBAWsiAjYC1CggAEHcFmoiAyACQQJ0aiAAKALgFjYCACABKAIEIQcgASgCCCICKAIQIQYgAigCCCERIAIoAgQhEyACKAIAIRIgASgCACEMIABB1BZqIgFCADcBACAAQcwWaiIUQgA3AQAgAEHEFmoiFUIANwEAIABBvBZqIhZCADcBAEEAIQggDCADIAAoAtQoQQJ0aigCAEECdGpBADsBAgJAIAAoAtQoIgJBuwRKDQAgAkEBaiECQQAhDgNAIAwgACACQQJ0akHcFmooAgAiBEECdCINaiIFIAwgBS8BAkECdGovAQIiA0EBaiAGIAMgBkgbIg87AQIgAyAGTiEDAkAgBCAHSg0AIAAgD0EBdGpBvBZqIgsgCy8BAEEBajsBAEEAIQsgBCARTgRAIBMgBCARa0ECdGooAgAhCwsgACAAKAKoLSAFLwEAIgQgCyAPamxqNgKoLSASRQ0AIAAgACgCrC0gCyANIBJqLwECaiAEbGo2AqwtCyADIA5qIQ4gAkEBaiICQb0ERw0ACyAORQ0AIAAgBkEBdGpBvBZqIQ8DQCAGIQIDQCAAIAIiA0EBayICQQF0akG8FmoiBC8BACIFRQ0ACyAEIAVBAWs7AQAgACADQQF0akG8FmoiAiACLwEAQQJqOwEAIA8gDy8BAEEBayICOwEAIA5BAkohAyAOQQJrIQ4gAw0ACyAGRQ0AQb0EIQUDQCACQf//A3EhAyAFIQIDQCADBEAgACACQQFrIgJBAnRqQdwWaigCACIEIAdKDQEgDCAEQQJ0aiIELwECIgUgBkcEQCAAIAAoAqgtIAQvAQAgBiAFa2xqNgKoLSAEIAY7AQILIANBAWshAyACIQUMAQsLIAZBAWsiBkUNASAAIAZBAXRqQbwWai8BACECDAALAAsgCiAWLwEAQQF0IgI7AQIgCiACIABBvhZqLwEAakEBdCICOwEEIAogAiAAQcAWai8BAGpBAXQiAjsBBiAKIAIgAEHCFmovAQBqQQF0IgI7AQggCiACIBUvAQBqQQF0IgI7AQogCiACIABBxhZqLwEAakEBdCICOwEMIAogAiAAQcgWai8BAGpBAXQiAjsBDiAKIAIgAEHKFmovAQBqQQF0IgI7ARAgCiACIBQvAQBqQQF0IgI7ARIgCiACIABBzhZqLwEAakEBdCICOwEUIAogAiAAQdAWai8BAGpBAXQiAjsBFiAKIAIgAEHSFmovAQBqQQF0IgI7ARggCiABLwEAIAJqQQF0IgI7ARogCiAAQdYWai8BACACakEBdCICOwEcIAogAiAAQdgWai8BAGpBAXQ7AR4gEEEATgRAA0AgCSAIQQJ0aiIHLwECIgAEQCAKIABBAXRqIgIgAi8BACICQQFqOwEAQQAhAwNAIAMgAkEBcXIiBUEBdCEDIABBAUohBCACQQF2IQIgAEEBayEAIAQNAAsgByAFOwEACyAIIBBHIQAgCEEBaiEIIAANAAsLC9kIAQp/AkAgACgCoC1FBEAgACgCvC0hAwwBCyAAQbktaiEIA0AgBEEBaiEKIAAoApgtIARqLQAAIQUCQCAAAn8gACgCpC0gBEEBdGovAQAiB0UEQCABIAVBAnRqIgMvAQIhBCAAIAAvAbgtIAMvAQAiBSAAKAK8LSIDdHIiBzsBuC1BECAEayADSARAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogBzoAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIAgtAAA6AAAgACAFQRAgACgCvC0iA2t2OwG4LSADIARqQRBrDAILIAMgBGoMAQsgBUHwmwhqLQAAIgtBAnQiCUGACHIgAWoiAy8BBiEEIAAgAC8BuC0gAy8BBCIMIAAoArwtIgZ0ciIDOwG4LSAAAn9BECAEayAGSARAIAAgACgCFCIGQQFqNgIUIAYgACgCCGogAzoAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIAgtAAA6AAAgACAMQRAgACgCvC0iBmt2IgM7AbgtIAQgBmpBEGsMAQsgBCAGagsiBDYCvC0gC0EIa0ETTQRAIAAgAyAFIAlBoKsIaigCAGtB//8DcSIGIAR0ciIDOwG4LSAAAn9BECAJQbCoCGooAgAiBWsgBEgEQCAAIAAoAhQiBEEBajYCFCAEIAAoAghqIAM6AAAgACAAKAIUIgRBAWo2AhQgBCAAKAIIaiAILQAAOgAAIAAgBkEQIAAoArwtIgRrdiIDOwG4LSAEIAVqQRBrDAELIAQgBWoLIgQ2ArwtCyACIAdBAWsiBSAFQQd2QYACaiAFQYACSRtB8JcIai0AACILQQJ0IglqIgYvAQIhByAAIAMgBi8BACIMIAR0ciIGOwG4LSAAAn9BECAHayAESARAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogBjoAACAAIAAoAhQiBEEBajYCFCAEIAAoAghqIAgtAAA6AAAgACAMQRAgACgCvC0iBGt2IgY7AbgtIAQgB2pBEGsMAQsgBCAHagsiAzYCvC0gC0EESQ0BIAAgBiAFIAlBoKwIaigCAGtB//8DcSIFIAN0ciIHOwG4LUEQIAlBsKkIaigCACIEayADSARAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogBzoAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIAgtAAA6AAAgACAFQRAgACgCvC0iA2t2OwG4LSADIARqQRBrDAELIAMgBGoLIgM2ArwtCyAKIgQgACgCoC1JDQALCyABQYIIai8BACEEIAAgAC8BuC0gAS8BgAgiCiADdHIiBTsBuC1BECAEayADSARAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogBToAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIABBuS1qLQAAOgAAIAAgCkEQIAAoArwtIgNrdjsBuC0gACADIARqQRBrNgK8LQ8LIAAgAyAEajYCvC0LlwsBDH8gAkEATgRAQQRBAyABLwECIgobIQZBB0GKASAKGyEDIABBuS1qIQhBfyEHA0AgCiEJIAEgCyIMQQFqIgtBAnRqLwECIQoCQAJAIAVBAWoiBCADTg0AIAkgCkcNACAEIQUMAQsCQCAEIAZIBEAgACAJQQJ0aiIFQfwUaiENIAVB/hRqIQ4gACgCvC0hBQNAIA4vAQAhAyAAIAAvAbgtIA0vAQAiBiAFdHIiBzsBuC0gAAJ/QRAgA2sgBUgEQCAAIAAoAhQiBUEBajYCFCAFIAAoAghqIAc6AAAgACAAKAIUIgVBAWo2AhQgBSAAKAIIaiAILQAAOgAAIAAgBkEQIAAoArwtIgVrdjsBuC0gAyAFakEQawwBCyADIAVqCyIFNgK8LSAEQQFrIgQNAAsMAQsgAAJ/IAkEQAJAIAcgCUYEQCAAKAK8LSEDIAQhBQwBCyAAIAlBAnRqIgRB/hRqLwEAIQMgACAALwG4LSAEQfwUai8BACIGIAAoArwtIgR0ciIHOwG4LSAAAn9BECADayAESARAIAAgACgCFCIEQQFqNgIUIAQgACgCCGogBzoAACAAIAAoAhQiBEEBajYCFCAEIAAoAghqIAgtAAA6AAAgACAGQRAgACgCvC0iBGt2OwG4LSADIARqQRBrDAELIAMgBGoLIgM2ArwtCyAALwG4LSAALwG8FSIHIAN0ciEEAkBBECAALwG+FSIGayADSARAIAAgBDsBuC0gACAAKAIUIgNBAWo2AhQgAyAAKAIIaiAEOgAAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogCC0AADoAACAGIAAoArwtIgRqQRBrIQMgB0EQIARrdiEEDAELIAMgBmohAwsgACADNgK8LSAAIAQgBUH9/wNqQf//A3EiBSADdHIiBDsBuC0gA0EPTgRAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogBDoAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIAgtAAA6AAAgACAFQRAgACgCvC0iA2t2OwG4LSADQQ5rDAILIANBAmoMAQsgBUEJTARAIAAvAbgtIAAvAcAVIgcgACgCvC0iA3RyIQQCQEEQIAAvAcIVIgZrIANIBEAgACAEOwG4LSAAIAAoAhQiA0EBajYCFCADIAAoAghqIAQ6AAAgACAAKAIUIgNBAWo2AhQgAyAAKAIIaiAILQAAOgAAIAYgACgCvC0iBGpBEGshAyAHQRAgBGt2IQQMAQsgAyAGaiEDCyAAIAM2ArwtIAAgBCAFQf7/A2pB//8DcSIFIAN0ciIEOwG4LSADQQ5OBEAgACAAKAIUIgNBAWo2AhQgAyAAKAIIaiAEOgAAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogCC0AADoAACAAIAVBECAAKAK8LSIDa3Y7AbgtIANBDWsMAgsgA0EDagwBCyAALwG4LSAALwHEFSIHIAAoArwtIgN0ciEEAkBBECAALwHGFSIGayADSARAIAAgBDsBuC0gACAAKAIUIgNBAWo2AhQgAyAAKAIIaiAEOgAAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogCC0AADoAACAGIAAoArwtIgRqQRBrIQMgB0EQIARrdiEEDAELIAMgBmohAwsgACADNgK8LSAAIAQgBUH2/wNqQf//A3EiBSADdHIiBDsBuC0gA0EKTgRAIAAgACgCFCIDQQFqNgIUIAMgACgCCGogBDoAACAAIAAoAhQiA0EBajYCFCADIAAoAghqIAgtAAA6AAAgACAFQRAgACgCvC0iA2t2OwG4LSADQQlrDAELIANBB2oLNgK8LQtBACEFAn8gCkUEQEGKASEDQQMMAQtBBkEHIAkgCkYiBBshA0EDQQQgBBsLIQYgCSEHCyACIAxHDQALCwsKACABIAJsEKEbCwcAIAEQohsLKgEBfyMAQRBrIgEkACABIAA2AgwgASgCDBDNFBCBFSEAIAFBEGokACAACyIBAX8jAEEQayIBIAA2AgggASABKAIIKAIENgIMIAEoAgwL4gEAQZzSCUG4rggQGEG00glBva4IQQFBAUEAEBkQzxQQ0BQQ0RQQ0hQQ0xQQ1BQQ1RQQ1hQQ1xQQ2BQQ2RRB1LwBQaevCBAaQZC1CEGzrwgQGkHotQhBBEHUrwgQG0HEtghBAkHhrwgQG0GgtwhBBEHwrwgQG0GklgFB/68IEBwQ2hRBrbAIENsUQdKwCBDcFEH5sAgQ3RRBmLEIEN4UQcCxCBDfFEHdsQgQ4BQQ4RQQ4hRByLIIENsUQeiyCBDcFEGJswgQ3RRBqrMIEN4UQcyzCBDfFEHtswgQ4BQQ4xQQ5BQLMAEBfyMAQRBrIgAkACAAQcKuCDYCDEHA0gkgACgCDEEBQYB/Qf8AEB0gAEEQaiQACzABAX8jAEEQayIAJAAgAEHHrgg2AgxB2NIJIAAoAgxBAUGAf0H/ABAdIABBEGokAAsvAQF/IwBBEGsiACQAIABB064INgIMQczSCSAAKAIMQQFBAEH/ARAdIABBEGokAAsyAQF/IwBBEGsiACQAIABB4a4INgIMQeTSCSAAKAIMQQJBgIB+Qf//ARAdIABBEGokAAswAQF/IwBBEGsiACQAIABB564INgIMQfDSCSAAKAIMQQJBAEH//wMQHSAAQRBqJAALNgEBfyMAQRBrIgAkACAAQfauCDYCDEH80gkgACgCDEEEQYCAgIB4Qf////8HEB0gAEEQaiQACy4BAX8jAEEQayIAJAAgAEH6rgg2AgxBiNMJIAAoAgxBBEEAQX8QHSAAQRBqJAALNgEBfyMAQRBrIgAkACAAQYevCDYCDEGU0wkgACgCDEEEQYCAgIB4Qf////8HEB0gAEEQaiQACy4BAX8jAEEQayIAJAAgAEGMrwg2AgxBoNMJIAAoAgxBBEEAQX8QHSAAQRBqJAALKgEBfyMAQRBrIgAkACAAQZqvCDYCDEGs0wkgACgCDEEEEB4gAEEQaiQACyoBAX8jAEEQayIAJAAgAEGgrwg2AgxBuNMJIAAoAgxBCBAeIABBEGokAAsqAQF/IwBBEGsiACQAIABBj7AINgIMQYiyAUEAIAAoAgwQHyAAQRBqJAALKAEBfyMAQRBrIgEkACABIAA2AgxB2LcIQQAgASgCDBAfIAFBEGokAAsoAQF/IwBBEGsiASQAIAEgADYCDEHgsQFBASABKAIMEB8gAUEQaiQACygBAX8jAEEQayIBJAAgASAANgIMQdiyAUECIAEoAgwQHyABQRBqJAALKAEBfyMAQRBrIgEkACABIAA2AgxBsLIBQQMgASgCDBAfIAFBEGokAAsoAQF/IwBBEGsiASQAIAEgADYCDEGAswFBBCABKAIMEB8gAUEQaiQACygBAX8jAEEQayIBJAAgASAANgIMQYC4CEEFIAEoAgwQHyABQRBqJAALKgEBfyMAQRBrIgAkACAAQYOyCDYCDEGouAhBBCAAKAIMEB8gAEEQaiQACyoBAX8jAEEQayIAJAAgAEGhsgg2AgxB0LgIQQUgACgCDBAfIABBEGokAAsqAQF/IwBBEGsiACQAIABBj7QINgIMQaizAUEGIAAoAgwQHyAAQRBqJAALKgEBfyMAQRBrIgAkACAAQa60CDYCDEHQswFBByAAKAIMEB8gAEEQaiQACycBAX8jAEEQayIBJAAgASAANgIMIAEoAgwhABDOFCABQRBqJAAgAAtKAQF/IwBBEGsiAyQAIAMgAUHAgIACcQR/IAMgAkEEajYCDCACKAIABUEACzYCACAAIAFBgIACciADECAQ6xQhASADQRBqJAAgAQsQACAAQSBGIABBCWtBBUlyCxMAIABBIHIgACAAQcEAa0EaSRsLCwAgAEHhAGtBGkkLEAAgAEHfAHEgACAAEOkUGwscACAAQYFgTwR/QcT9CkEAIABrNgIAQX8FIAALCwYAQcT9CguOAQEDfwJAAkADQCAAIAJB4LgIai0AAEcEQEHXACEEIAJBAWoiAkHXAEcNAQwCCwsgAiEEIAINAEHAuQghAwwBC0HAuQghAgNAIAItAAAhACACQQFqIgMhAiAADQAgAyECIARBAWsiBA0ACwsgASgCFCIABH8gACgCACAAKAIEIAMQmhcFQQALIgAgAyAAGwsOACAAQZjRCigCABDtFAtFAQF/IwBBEGsiAyQAIAMgAjYCDCADIAE2AgggACADQQhqQQEgA0EEahAhENsVIQAgAygCBCEBIANBEGokAEF/IAEgABsLRQEBfyMAQRBrIgMkACADIAI2AgwgAyABNgIIIAAgA0EIakEBIANBBGoQIhDbFSEAIAMoAgQhASADQRBqJABBfyABIAAbCxQAQQAgABAjIgAgAEEbRhsQ2xUaCzkBAX8jAEEQayIDJAAgACABIAJB/wFxIANBCGoQpR4Q2xUhACADKQMIIQEgA0EQaiQAQn8gASAAGwuDAQECfyABLAAAIgNFBEAgAA8LAkAgACADEPwUIgBFDQAgAS0AAUUEQCAADwsgAC0AAUUNACABLQACRQRAIAAgARD0FA8LIAAtAAJFDQAgAS0AA0UEQCAAIAEQ9RQPCyAALQADRQ0AIAEtAARFBEAgACABEPYUDwsgACABEPcUIQILIAILcgEEfyAALQABIgJFIQMCQCAALQAAQQh0IAJyIgQgAS0AASABLQAAQQh0ciIFRg0AIAJFDQAgAEEBaiECA0AgAiIALQABIgFFIQMgBEEIdEGA/gNxIAFyIgQgBUYNASAAQQFqIQIgAQ0ACwtBACAAIAMbC5MBAQV/IABBAmohAiAALQACIgNFIQQCQAJAIAAtAAFBEHQgAC0AAEEYdHIgA0EIdHIiBSABLQABQRB0IAEtAABBGHRyIAEtAAJBCHRyIgZGDQAgA0UNAANAIAJBAWohASACLQABIgBFIQQgACAFckEIdCIFIAZGDQIgASECIAANAAsMAQsgAiEBC0EAIAFBAmsgBBsLpgEBBH8gAEEDaiEDIAAtAAMiAkUhBAJAAkAgAC0AAUEQdCAALQAAQRh0ciAALQACQQh0ciACciIFIAEoAAAiAEEYdCAAQQh0QYCA/AdxciAAQQh2QYD+A3EgAEEYdnJyIgFGDQAgAkUNAANAIANBAWohAiADLQABIgBFIQQgBUEIdCAAciIFIAFGDQIgAiEDIAANAAsMAQsgAyECC0EAIAJBA2sgBBsL2QYBDn8jAEGgCGsiCCQAIAhBmAhqQgA3AwAgCEGQCGpCADcDACAIQgA3A4gIIAhCADcDgAgCQAJAAkACQAJAIAEtAAAiAkUEQEF/IQlBASEDDAELA0AgACAFai0AAEUNBCAIIAJB/wFxIgJBAnRqIAVBAWoiBTYCACAIQYAIaiACQQN2QRxxaiIDIAMoAgBBASACdHI2AgAgASAFai0AACICDQALQQEhA0F/IQkgBUEBSw0BC0F/IQZBASEEDAELQQEhCkEBIQIDQAJ/IAEgAiAJamotAAAiBiABIANqLQAAIgtGBEAgAiAKRgRAIAQgCmohBEEBDAILIAJBAWoMAQsgBiALSwRAIAMgCWshCiADIQRBAQwBCyAEIQkgBEEBaiEEQQEhCkEBCyICIARqIgMgBUkNAAtBASEEQX8hBiAFQQFNBEAgCiEDDAELQQAhA0EBIQdBASECA0ACfyABIAIgBmpqLQAAIgsgASAEai0AACIMRgRAIAIgB0YEQCADIAdqIQNBAQwCCyACQQFqDAELIAsgDEkEQCAEIAZrIQcgBCEDQQEMAQsgAyEGIANBAWohA0EBIQdBAQsiAiADaiIEIAVJDQALIAohAyAHIQQLAn8gASABIAQgAyAGQQFqIAlBAWpLIgIbIgdqIAYgCSACGyINQQFqIgoQ+BQEQCAFIA0gBSANQX9zaiICIAIgDUkbQQFqIgdrIQ5BAAwBCyAFIAdrIg4LIQ8gBUEBayELIAVBP3IhDEEAIQYgACEDA0ACQCAAIANrIAVPDQAgAEEAIAwQ+hQiAgRAIAIhACACIANrIAVJDQMMAQsgACAMaiEACwJ/An8gBSAIQYAIaiADIAtqLQAAIgJBA3ZBHHFqKAIAIAJ2QQFxRQ0AGiAFIAggAkECdGooAgBrIgIEQCAOIAIgAiAHSRsgAiAGGyACIA8bDAELAkAgASAKIgIgBiACIAZLGyIEai0AACIJBEADQCADIARqLQAAIAlB/wFxRw0CIAEgBEEBaiIEai0AACIJDQALCwNAIAIgBk0NBiABIAJBAWsiAmotAAAgAiADai0AAEYNAAsgByECIA8MAgsgBCANawshAkEACyEGIAIgA2ohAwwACwALQQAhAwsgCEGgCGokACADC0MBA38CQCACRQ0AA0AgAC0AACIEIAEtAAAiBUYEQCABQQFqIQEgAEEBaiEAIAJBAWsiAg0BDAILCyAEIAVrIQMLIAMLJgEBfwNAIAFFBEBBAA8LIAAgAUEBayIBaiICLQAAQS5HDQALIAIL5QEBAn8gAkEARyEDAkACQAJAIAJFDQAgAEEDcUUNACABQf8BcSEEA0AgAC0AACAERg0CIABBAWohACACQQFrIgJBAEchAyACRQ0BIABBA3ENAAsLIANFDQELAkAgAC0AACABQf8BcUYNACACQQRJDQAgAUH/AXFBgYKECGwhBANAIAAoAgAgBHMiA0F/cyADQYGChAhrcUGAgYKEeHENASAAQQRqIQAgAkEEayICQQNLDQALCyACRQ0AIAFB/wFxIQMDQCADIAAtAABGBEAgAA8LIABBAWohACACQQFrIgINAAsLQQAL2wEBAn8CQCABQf8BcSIDBEAgAEEDcQRAA0AgAC0AACICRQ0DIAIgAUH/AXFGDQMgAEEBaiIAQQNxDQALCwJAIAAoAgAiAkF/cyACQYGChAhrcUGAgYKEeHENACADQYGChAhsIQMDQCACIANzIgJBf3MgAkGBgoQIa3FBgIGChHhxDQEgACgCBCECIABBBGohACACQYGChAhrIAJBf3NxQYCBgoR4cUUNAAsLA0AgACICLQAAIgMEQCACQQFqIQAgAyABQf8BcUcNAQsLIAIPCyAAELgbIABqDwsgAAsaACAAIAEQ+xQiAEEAIAAtAAAgAUH/AXFGGwvIAQEBfwJAAkAgACABc0EDcQ0AIAFBA3EEQANAIAAgAS0AACICOgAAIAJFDQMgAEEBaiEAIAFBAWoiAUEDcQ0ACwsgASgCACICQX9zIAJBgYKECGtxQYCBgoR4cQ0AA0AgACACNgIAIAEoAgQhAiAAQQRqIQAgAUEEaiEBIAJBgYKECGsgAkF/c3FBgIGChHhxRQ0ACwsgACABLQAAIgI6AAAgAkUNAANAIAAgAS0AASICOgABIABBAWohACABQQFqIQEgAg0ACwsLCQAgACABEP0UC00BAn8gAS0AACECAkAgAC0AACIDRQ0AIAIgA0cNAANAIAEtAAEhAiAALQABIgNFDQEgAUEBaiEBIABBAWohACACIANGDQALCyADIAJrC2YBA38gAkUEQEEADwsCQCAALQAAIgNFDQADQAJAIAMgAS0AACIFRw0AIAJBAWsiAkUNACAFRQ0AIAFBAWohASAALQABIQMgAEEBaiEAIAMNAQwCCwsgAyEECyAEQf8BcSABLQAAawsjAQJ/IAAQuBtBAWoiARChGyICRQRAQQAPCyACIAAgARCuGwsfACAAniIAmUQAAAAAAADgQWMEQCAAqg8LQYCAgIB4CxsAIACQIgCLQwAAAE9dBEAgAKgPC0GAgICAeAu6AwMCfwF+AnwgAL0iA0I/iKchAgJAAkACfAJAIAACfwJAAkAgA0IgiKdB/////wdxIgFBq8aYhARPBEAgAL1C////////////AINCgICAgICAgPj/AFYEQCAADwsgAETvOfr+Qi6GQGRBAXNFBEAgAEQAAAAAAADgf6IPCyAARNK8et0rI4bAY0EBcw0BIABEUTAt1RBJh8BjRQ0BDAYLIAFBw9zY/gNJDQMgAUGyxcL/A0kNAQsgAET+gitlRxX3P6IgAkEDdEHQxwhqKwMAoCIEmUQAAAAAAADgQWMEQCAEqgwCC0GAgICAeAwBCyACQQFzIAJrCyIBtyIERAAA4P5CLua/oqAiACAERHY8eTXvOeo9oiIFoQwBCyABQYCAwPEDTQ0CQQAhASAACyEEIAAgBCAEIAQgBKIiBCAEIAQgBCAERNCkvnJpN2Y+okTxa9LFQb27vqCiRCzeJa9qVhE/oKJEk72+FmzBZr+gokQ+VVVVVVXFP6CioSIEokQAAAAAAAAAQCAEoaMgBaGgRAAAAAAAAPA/oCEEIAFFDQAgBCABEKwbIQQLIAQPCyAARAAAAAAAAPA/oAuDAgMCfwF+AnwgAL0iA0IgiKdB/////wdxIgFBgIDA/wdPBEAgACAAoA8LQZPx/dQCIQICQCABQf//P00EQEGT8f3LAiECIABEAAAAAAAAUEOivSIDQiCIp0H/////B3EiAUUNAQsgACADQoCAgICAgICAgH+DIAFBA24gAmqtQiCGhL8iBSAFoiAFIACjoiIEIAQgBKKiIARE1+3k1ACwwj+iRNlR577LROi/oKIgBCAERMLWSUpg8fk/okQgJPCS4Cj+v6CiRJLmYQ/mA/4/oKAgBaK9QoCAgIAIfEKAgICAfIO/IgQgBKKjIgAgBKEgBCAEoCAAoKMgBKIgBKAhAAsgAAuBAQIBfwF+AkACQCAAvSICQjSIp0H/D3EiAUH/D0cEQCABDQEgAkIMhiICUARAQYCAgIB4DwtBgXghASACQgBTDQIDQCABQQFrIQEgAkIBhiICQn9VDQALDAILQf////8HQYCAgIB4IAJC/////////weDUBsPCyABQf8HayEBCyABC0sAIAC9QoCAgICAgID4/wCDQoCAgICAgID4/wBRBEAgACAAog8LIABEAAAAAAAAAABhBEBEAAAAAAAA8L8gACAAoqMPCyAAEIYVtwuyAQMBfwF+AXwgAL0iAkI0iKdB/w9xIgFBsghNBHwgAUH9B00EQCAARAAAAAAAAAAAog8LAnwgACAAmiACQn9VGyIARAAAAAAAADBDoEQAAAAAAAAww6AgAKEiA0QAAAAAAADgP2RBAXNFBEAgACADoEQAAAAAAADwv6AMAQsgACADoCIAIANEAAAAAAAA4L9lQQFzDQAaIABEAAAAAAAA8D+gCyIAIACaIAJCf1UbBSAACwuwAgMBfwF+AnwCQCAAvSICQiCIp0H/////B3EiAUGAgMD/A08EQCACpyABQYCAwP8Da3JFDQFEAAAAAAAAAAAgACAAoaMPCwJ8IAFB/////gNNBEBEGC1EVPsh+T8gAUGBgIDjA0kNARpEB1wUMyamkTwgACAAohCKFSAAoqEgAKFEGC1EVPsh+T+gDwsgAkJ/VwRARBgtRFT7Ifk/IABEAAAAAAAA8D+gRAAAAAAAAOA/oiIAnyIDIAMgABCKFaJEB1wUMyamkbygoKEiACAAoA8LRAAAAAAAAPA/IAChRAAAAAAAAOA/oiIDnyIEIAMQihWiIAMgBL1CgICAgHCDvyIAIACioSAEIACgo6AgAKAiACAAoAsPC0QAAAAAAAAAAEQYLURU+yEJQCACQn9VGwuNAQAgAEQJ9/0N4T0CP6JEiLIBdeDvST+gIACiRDuPaLUogqS/oCAAokRVRIgOVcHJP6AgAKJEfW/rAxLW1L+gIACiRFVVVVVVVcU/oCAAoiAARIKSLrHFuLM/okRZAY0bbAbmv6AgAKJEyIpZnOUqAECgIACiREstihwnOgPAoCAAokQAAAAAAADwP6CjC8YOAhB/AnwjAEGwBGsiBiQAIAJBA2tBGG0iBUEAIAVBAEobIg9BaGwgAmohCUHkxwgoAgAiCCADQQFrIgtqQQBOBEAgAyAIaiEEIA8gC2shAkEAIQUDQCAGQcACaiAFQQN0aiACQQBIBHxEAAAAAAAAAAAFIAJBAnRB8McIaigCALcLOQMAIAJBAWohAiAFQQFqIgUgBEcNAAsLIAlBGGshDEEAIQQgCEEAIAhBAEobIQcgA0EBSCEKA0ACQCAKBEBEAAAAAAAAAAAhFAwBCyAEIAtqIQVBACECRAAAAAAAAAAAIRQDQCAUIAAgAkEDdGorAwAgBkHAAmogBSACa0EDdGorAwCioCEUIAJBAWoiAiADRw0ACwsgBiAEQQN0aiAUOQMAIAQgB0YhAiAEQQFqIQQgAkUNAAtBLyAJayERQTAgCWshECAJQRlrIRIgCCEEAkADQCAGIARBA3RqKwMAIRRBACECIAQhBSAEQQFIIgtFBEADQCAGQeADaiACQQJ0agJ/IBQCfyAURAAAAAAAAHA+oiIVmUQAAAAAAADgQWMEQCAVqgwBC0GAgICAeAu3IhVEAAAAAAAAcMGioCIUmUQAAAAAAADgQWMEQCAUqgwBC0GAgICAeAs2AgAgBiAFQQFrIgVBA3RqKwMAIBWgIRQgAkEBaiICIARHDQALCwJ/IBQgDBCsGyIUIBREAAAAAAAAwD+inEQAAAAAAAAgwKKgIhSZRAAAAAAAAOBBYwRAIBSqDAELQYCAgIB4CyENIBQgDbehIRQCQAJAAkACfyAMQQFIIhNFBEAgBEECdCAGakHcA2oiAiACKAIAIgIgAiAQdSICIBB0ayIFNgIAIAIgDWohDSAFIBF1DAELIAwNASAEQQJ0IAZqKALcA0EXdQsiDkEBSA0CDAELQQIhDiAURAAAAAAAAOA/ZkEBc0UNAEEAIQ4MAQtBACECQQAhCiALRQRAA0AgBkHgA2ogAkECdGoiCygCACEFQf///wchBwJ/AkAgCg0AQYCAgAghByAFDQBBAAwBCyALIAcgBWs2AgBBAQshCiACQQFqIgIgBEcNAAsLAkAgEw0AAkACQCASDgIAAQILIARBAnQgBmpB3ANqIgIgAigCAEH///8DcTYCAAwBCyAEQQJ0IAZqQdwDaiICIAIoAgBB////AXE2AgALIA1BAWohDSAOQQJHDQBEAAAAAAAA8D8gFKEhFEECIQ4gCkUNACAURAAAAAAAAPA/IAwQrBuhIRQLIBREAAAAAAAAAABhBEBBACEFAkAgBCICIAhMDQADQCAGQeADaiACQQFrIgJBAnRqKAIAIAVyIQUgAiAISg0ACyAFRQ0AIAwhCQNAIAlBGGshCSAGQeADaiAEQQFrIgRBAnRqKAIARQ0ACwwDC0EBIQIDQCACIgVBAWohAiAGQeADaiAIIAVrQQJ0aigCAEUNAAsgBCAFaiEHA0AgBkHAAmogAyAEaiIFQQN0aiAEQQFqIgQgD2pBAnRB8McIaigCALc5AwBBACECRAAAAAAAAAAAIRQgA0EBTgRAA0AgFCAAIAJBA3RqKwMAIAZBwAJqIAUgAmtBA3RqKwMAoqAhFCACQQFqIgIgA0cNAAsLIAYgBEEDdGogFDkDACAEIAdIDQALIAchBAwBCwsCQCAUQRggCWsQrBsiFEQAAAAAAABwQWZBAXNFBEAgBkHgA2ogBEECdGoCfyAUAn8gFEQAAAAAAABwPqIiFZlEAAAAAAAA4EFjBEAgFaoMAQtBgICAgHgLIgK3RAAAAAAAAHDBoqAiFJlEAAAAAAAA4EFjBEAgFKoMAQtBgICAgHgLNgIAIARBAWohBAwBCwJ/IBSZRAAAAAAAAOBBYwRAIBSqDAELQYCAgIB4CyECIAwhCQsgBkHgA2ogBEECdGogAjYCAAtEAAAAAAAA8D8gCRCsGyEUAkAgBEF/TA0AIAQhAgNAIAYgAkEDdGogFCAGQeADaiACQQJ0aigCALeiOQMAIBREAAAAAAAAcD6iIRQgAkEASiEDIAJBAWshAiADDQALQQAhByAEQQBIDQAgCEEAIAhBAEobIQggBCEFA0AgCCAHIAcgCEsbIQAgBCAFayEKQQAhAkQAAAAAAAAAACEUA0AgFCACQQN0QcDdCGorAwAgBiACIAVqQQN0aisDAKKgIRQgACACRyEDIAJBAWohAiADDQALIAZBoAFqIApBA3RqIBQ5AwAgBUEBayEFIAQgB0chAiAHQQFqIQcgAg0ACwtEAAAAAAAAAAAhFCAEQQBOBEAgBCECA0AgFCAGQaABaiACQQN0aisDAKAhFCACQQBKIQMgAkEBayECIAMNAAsLIAEgFJogFCAOGzkDACAGKwOgASAUoSEUQQEhAiAEQQFOBEADQCAUIAZBoAFqIAJBA3RqKwMAoCEUIAIgBEchAyACQQFqIQIgAw0ACwsgASAUmiAUIA4bOQMIIAZBsARqJAAgDUEHcQvMCQMFfwF+BHwjAEEwayIDJAACQAJAAkAgAL0iB0IgiKciAkH/////B3EiBEH61L2ABE0EQCACQf//P3FB+8MkRg0BIARB/LKLgARNBEAgB0IAWQRAIAEgAEQAAEBU+yH5v6AiAEQxY2IaYbTQvaAiCDkDACABIAAgCKFEMWNiGmG00L2gOQMIQQEhAgwFCyABIABEAABAVPsh+T+gIgBEMWNiGmG00D2gIgg5AwAgASAAIAihRDFjYhphtNA9oDkDCEF/IQIMBAsgB0IAWQRAIAEgAEQAAEBU+yEJwKAiAEQxY2IaYbTgvaAiCDkDACABIAAgCKFEMWNiGmG04L2gOQMIQQIhAgwECyABIABEAABAVPshCUCgIgBEMWNiGmG04D2gIgg5AwAgASAAIAihRDFjYhphtOA9oDkDCEF+IQIMAwsgBEG7jPGABE0EQCAEQbz714AETQRAIARB/LLLgARGDQIgB0IAWQRAIAEgAEQAADB/fNkSwKAiAETKlJOnkQ7pvaAiCDkDACABIAAgCKFEypSTp5EO6b2gOQMIQQMhAgwFCyABIABEAAAwf3zZEkCgIgBEypSTp5EO6T2gIgg5AwAgASAAIAihRMqUk6eRDuk9oDkDCEF9IQIMBAsgBEH7w+SABEYNASAHQgBZBEAgASAARAAAQFT7IRnAoCIARDFjYhphtPC9oCIIOQMAIAEgACAIoUQxY2IaYbTwvaA5AwhBBCECDAQLIAEgAEQAAEBU+yEZQKAiAEQxY2IaYbTwPaAiCDkDACABIAAgCKFEMWNiGmG08D2gOQMIQXwhAgwDCyAEQfrD5IkESw0BCyABIAAgAESDyMltMF/kP6JEAAAAAAAAOEOgRAAAAAAAADjDoCIIRAAAQFT7Ifm/oqAiCSAIRDFjYhphtNA9oiILoSIAOQMAIARBFHYiBiAAvUI0iKdB/w9xa0ERSCEFAn8gCJlEAAAAAAAA4EFjBEAgCKoMAQtBgICAgHgLIQICQCAFDQAgASAJIAhEAABgGmG00D2iIgChIgogCERzcAMuihmjO6IgCSAKoSAAoaEiC6EiADkDACAGIAC9QjSIp0H/D3FrQTJIBEAgCiEJDAELIAEgCiAIRAAAAC6KGaM7oiIAoSIJIAhEwUkgJZqDezmiIAogCaEgAKGhIguhIgA5AwALIAEgCSAAoSALoTkDCAwBCyAEQYCAwP8HTwRAIAEgACAAoSIAOQMAIAEgADkDCEEAIQIMAQsgB0L/////////B4NCgICAgICAgLDBAIS/IQBBACECQQEhBQNAIANBEGogAkEDdGoCfyAAmUQAAAAAAADgQWMEQCAAqgwBC0GAgICAeAu3Igg5AwAgACAIoUQAAAAAAABwQaIhAEEBIQIgBUEBcSEGQQAhBSAGDQALIAMgADkDIAJAIABEAAAAAAAAAABiBEBBAiECDAELQQEhBQNAIAUiAkEBayEFIANBEGogAkEDdGorAwBEAAAAAAAAAABhDQALCyADQRBqIAMgBEEUdkGWCGsgAkEBahCLFSECIAMrAwAhACAHQn9XBEAgASAAmjkDACABIAMrAwiaOQMIQQAgAmshAgwBCyABIAA5AwAgASADKwMIOQMICyADQTBqJAAgAguZAQEDfCAAIACiIgMgAyADoqIgA0R81c9aOtnlPaJE65wriublWr6goiADIANEff6xV+Mdxz6iRNVhwRmgASq/oKJEpvgQERERgT+goCEFIAMgAKIhBCACRQRAIAQgAyAFokRJVVVVVVXFv6CiIACgDwsgACADIAFEAAAAAAAA4D+iIAQgBaKhoiABoSAERElVVVVVVcU/oqChC8cBAQJ/IwBBEGsiASQAAnwgAL1CIIinQf////8HcSICQfvDpP8DTQRARAAAAAAAAPA/IAJBnsGa8gNJDQEaIABEAAAAAAAAAAAQlBUMAQsgACAAoSACQYCAwP8HTw0AGgJAAkACQAJAIAAgARCMFUEDcQ4DAAECAwsgASsDACABKwMIEJQVDAMLIAErAwAgASsDCEEBEI0VmgwCCyABKwMAIAErAwgQlBWaDAELIAErAwAgASsDCEEBEI0VCyEAIAFBEGokACAAC60DAgV/AX4gAb1C////////////AINCgICAgICAgPj/AFhBACAAvUL///////////8Ag0KBgICAgICA+P8AVBtFBEAgACABoA8LIAG9IgdCIIinIgJBgIDA/wNrIAenIgVyRQRAIAAQkBUPCyAHQj6Ip0ECcSIGIAC9IgdCP4inciEDAkACQCAHQiCIp0H/////B3EiBCAHp3JFBEACQCADQQJrDgICAAMLRBgtRFT7IQnADwsgAkH/////B3EiAiAFckUEQEQYLURU+yH5PyAApg8LAkAgAkGAgMD/B0YEQCAEQYCAwP8HRw0BIANBA3RBgN4IaisDAA8LIARBgIDA/wdHQQAgAkGAgIAgaiAETxtFBEBEGC1EVPsh+T8gAKYPCwJ8IAYEQEQAAAAAAAAAACAEQYCAgCBqIAJJDQEaCyAAIAGjmRCQFQshAAJAAkACQCADDgMFAAECCyAAmg8LRBgtRFT7IQlAIABEB1wUMyamobygoQ8LIABEB1wUMyamobygRBgtRFT7IQnAoA8LIANBA3RBoN4IaisDAA8LRBgtRFT7IQlAIQALIAALgQQDAn8BfgN8IAC9IgNCIIinQf////8HcSIBQYCAwKAESQRAAkACfyABQf//7/4DTQRAIAFBgICA8gNJDQJBfyECQQEMAQsgAJkhAAJ8IAFB///L/wNNBEAgAUH//5f/A00EQCAAIACgRAAAAAAAAPC/oCAARAAAAAAAAABAoKMhAEEADAMLQQEhAiAARAAAAAAAAPC/oCAARAAAAAAAAPA/oKMMAQsgAUH//42ABE0EQEECIQIgAEQAAAAAAAD4v6AgAEQAAAAAAAD4P6JEAAAAAAAA8D+gowwBC0EDIQJEAAAAAAAA8L8gAKMLIQBBAAshASAAIACiIgUgBaIiBCAEIAQgBCAERC9saixEtKK/okSa/d5SLd6tv6CiRG2adK/ysLO/oKJEcRYj/sZxvL+gokTE65iZmZnJv6CiIQYgBSAEIAQgBCAEIAREEdoi4zqtkD+iROsNdiRLe6k/oKJEUT3QoGYNsT+gokRuIEzFzUW3P6CiRP+DAJIkScI/oKJEDVVVVVVV1T+goiEEIAEEQCAAIAAgBiAEoKKhDwsgAkEDdCIBQcDeCGorAwAgACAGIASgoiABQeDeCGorAwChIAChoSIAIACaIANCf1UbIQALIAAPCyAARBgtRFT7Ifk/IACmIAC9Qv///////////wCDQoCAgICAgID4/wBWGwu8AgMDfwN+AXwjAEEgayICJAAgAL1C////////////AIMiBSABvUL///////////8AgyIGIAUgBlQbIge/IQACQCAHQjSIpyIDQf8PRg0AIAUgBiAFIAZWGyIFvyEBAkAgB1ANACAFQjSIpyIEQf8PRg0AIAQgA2tBwQBOBEAgASAAoCEADAILAnwgBEH+C08EQCAARAAAAAAAADAUoiEAIAFEAAAAAAAAMBSiIQFEAAAAAAAAsGsMAQtEAAAAAAAA8D8gA0G8BEsNABogAEQAAAAAAACwa6IhACABRAAAAAAAALBroiEBRAAAAAAAADAUCyEIIAJBGGogAkEQaiABEJIVIAJBCGogAiAAEJIVIAggAisDACACKwMQoCACKwMIoCACKwMYoJ+iIQAMAQsgASEACyACQSBqJAAgAAtFAQJ8IAAgAiACoiIEOQMAIAEgAiACRAAAAAIAAKBBoiIDIAIgA6GgIgOhIgIgAqIgAyADoiAEoSADIAOgIAKioKA5AwAL/Q8DCH8Cfgh8RAAAAAAAAPA/IQwCQCABvSIKQiCIpyIEQf////8HcSICIAqnIgVyRQ0AIAC9IgtCIIinIQMgC6ciCUVBACADQYCAwP8DRhsNAAJAAkAgA0H/////B3EiBkGAgMD/B0sNACAGQYCAwP8HRiAJQQBHcQ0AIAJBgIDA/wdLDQAgBUUNASACQYCAwP8HRw0BCyAAIAGgDwsCQAJAAn8CQCADQX9KDQBBAiACQf///5kESw0BGiACQYCAwP8DSQ0AIAJBFHYhByACQYCAgIoETwRAQQAgBUGzCCAHayIHdiIIIAd0IAVHDQIaQQIgCEEBcWsMAgsgBQ0DIAJBkwggB2siBXYiByAFdCACRw0CQQIgB0EBcWshCAwCC0EACyEIIAUNAQsgAkGAgMD/B0YEQCAGQYCAwP8DayAJckUNAiAGQYCAwP8DTwRAIAFEAAAAAAAAAAAgBEF/ShsPC0QAAAAAAAAAACABmiAEQX9KGw8LIAJBgIDA/wNGBEAgBEF/SgRAIAAPC0QAAAAAAADwPyAAow8LIARBgICAgARGBEAgACAAog8LIANBAEgNACAEQYCAgP8DRw0AIACfDwsgAJkhDAJAIAkNACADQf////8DcUGAgMD/A0dBACAGGw0ARAAAAAAAAPA/IAyjIAwgBEEASBshDCADQX9KDQEgCCAGQYCAwP8Da3JFBEAgDCAMoSIBIAGjDwsgDJogDCAIQQFGGw8LRAAAAAAAAPA/IQ0CQCADQX9KDQACQAJAIAgOAgABAgsgACAAoSIBIAGjDwtEAAAAAAAA8L8hDQsCfCACQYGAgI8ETwRAIAJBgYDAnwRPBEAgBkH//7//A00EQEQAAAAAAADwf0QAAAAAAAAAACAEQQBIGw8LRAAAAAAAAPB/RAAAAAAAAAAAIARBAEobDwsgBkH+/7//A00EQCANRJx1AIg85Dd+okScdQCIPOQ3fqIgDURZ8/jCH26lAaJEWfP4wh9upQGiIARBAEgbDwsgBkGBgMD/A08EQCANRJx1AIg85Dd+okScdQCIPOQ3fqIgDURZ8/jCH26lAaJEWfP4wh9upQGiIARBAEobDwsgDEQAAAAAAADwv6AiAEQAAABgRxX3P6IiDCAARETfXfgLrlQ+oiAAIACiRAAAAAAAAOA/IAAgAEQAAAAAAADQv6JEVVVVVVVV1T+goqGiRP6CK2VHFfe/oqAiDqC9QoCAgIBwg78iACAMoQwBCyAMRAAAAAAAAEBDoiIAIAwgBkGAgMAASSICGyEMIAC9QiCIpyAGIAIbIgRB//8/cSIFQYCAwP8DciEDIARBFHVBzHdBgXggAhtqIQRBACECAkAgBUGPsQ5JDQAgBUH67C5JBEBBASECDAELIANBgIBAaiEDIARBAWohBAsgAkEDdCIFQaDfCGorAwAiESAMvUL/////D4MgA61CIIaEvyIOIAVBgN8IaisDACIPoSIQRAAAAAAAAPA/IA8gDqCjIhKiIgy9QoCAgIBwg78iACAAIACiIhNEAAAAAAAACECgIAwgAKAgEiAQIAAgA0EBdUGAgICAAnIgAkESdGpBgIAgaq1CIIa/IhCioSAAIA4gECAPoaGioaIiDqIgDCAMoiIAIACiIAAgACAAIAAgAETvTkVKKH7KP6JEZdvJk0qGzT+gokQBQR2pYHTRP6CiRE0mj1FVVdU/oKJE/6tv27Zt2z+gokQDMzMzMzPjP6CioCIPoL1CgICAgHCDvyIAoiIQIA4gAKIgDCAPIABEAAAAAAAACMCgIBOhoaKgIgygvUKAgICAcIO/IgBEAAAA4AnH7j+iIg8gBUGQ3whqKwMAIAwgACAQoaFE/QM63AnH7j+iIABE9QFbFOAvPr6ioKAiDqCgIAS3IgygvUKAgICAcIO/IgAgDKEgEaEgD6ELIQ8gACAKQoCAgIBwg78iEaIiDCAOIA+hIAGiIAEgEaEgAKKgIgGgIgC9IgqnIQICQCAKQiCIpyIDQYCAwIQETgRAIANBgIDAhARrIAJyBEAgDUScdQCIPOQ3fqJEnHUAiDzkN36iDwsgAUT+gitlRxWXPKAgACAMoWRBAXMNASANRJx1AIg85Dd+okScdQCIPOQ3fqIPCyADQYD4//8HcUGAmMOEBEkNACADQYDovPsDaiACcgRAIA1EWfP4wh9upQGiRFnz+MIfbqUBog8LIAEgACAMoWVBAXMNACANRFnz+MIfbqUBokRZ8/jCH26lAaIPC0EAIQIgDQJ8IANB/////wdxIgVBgYCA/wNPBH5BAEGAgMAAIAVBFHZB/gdrdiADaiIFQf//P3FBgIDAAHJBkwggBUEUdkH/D3EiBGt2IgJrIAIgA0EASBshAiABIAxBgIBAIARB/wdrdSAFca1CIIa/oSIMoL0FIAoLQoCAgIBwg78iAEQAAAAAQy7mP6IiDiABIAAgDKGhRO85+v5CLuY/oiAARDlsqAxhXCC+oqAiDKAiASABIAEgASABoiIAIAAgACAAIABE0KS+cmk3Zj6iRPFr0sVBvbu+oKJELN4lr2pWET+gokSTvb4WbMFmv6CiRD5VVVVVVcU/oKKhIgCiIABEAAAAAAAAAMCgoyAMIAEgDqGhIgAgASAAoqChoUQAAAAAAADwP6AiAb0iCkIgiKcgAkEUdGoiA0H//z9MBEAgASACEKwbDAELIApC/////w+DIAOtQiCGhL8LoiEMCyAMC5IBAQN8RAAAAAAAAPA/IAAgAKIiAkQAAAAAAADgP6IiA6EiBEQAAAAAAADwPyAEoSADoSACIAIgAiACRJAVyxmgAfo+okR3UcEWbMFWv6CiRExVVVVVVaU/oKIgAiACoiIDIAOiIAIgAkTUOIi+6fqovaJExLG0vZ7uIT6gokStUpyAT36SvqCioKIgACABoqGgoAudAwMDfwF+AnwCQAJAAkACQCAAvSIEQgBZBEAgBEIgiKciAUH//z9LDQELIARC////////////AINQBEBEAAAAAAAA8L8gACAAoqMPCyAEQn9VDQEgACAAoUQAAAAAAAAAAKMPCyABQf//v/8HSw0CQYCAwP8DIQJBgXghAyABQYCAwP8DRwRAIAEhAgwCCyAEpw0BRAAAAAAAAAAADwsgAEQAAAAAAABQQ6K9IgRCIIinIQJBy3chAwsgAyACQeK+JWoiAUEUdmq3IgVEAADg/kIu5j+iIARC/////w+DIAFB//8/cUGewZr/A2qtQiCGhL9EAAAAAAAA8L+gIgAgBUR2PHk17znqPaIgACAARAAAAAAAAABAoKMiBSAAIABEAAAAAAAA4D+ioiIGIAUgBaIiBSAFoiIAIAAgAESfxnjQCZrDP6JEr3iOHcVxzD+gokQE+peZmZnZP6CiIAUgACAAIABERFI+3xLxwj+iRN4Dy5ZkRsc/oKJEWZMilCRJ0j+gokSTVVVVVVXlP6CioKCioCAGoaCgIQALIAALywEBAn8jAEEQayIBJAACQCAAvUIgiKdB/////wdxIgJB+8Ok/wNNBEAgAkGAgMDyA0kNASAARAAAAAAAAAAAQQAQjRUhAAwBCyACQYCAwP8HTwRAIAAgAKEhAAwBCwJAAkACQAJAIAAgARCMFUEDcQ4DAAECAwsgASsDACABKwMIQQEQjRUhAAwDCyABKwMAIAErAwgQlBUhAAwCCyABKwMAIAErAwhBARCNFZohAAwBCyABKwMAIAErAwgQlBWaIQALIAFBEGokACAAC2ACAn8BfiAAKAIoIQFBASECIABCACAALQAAQYABcQR/QQJBASAAKAIUIAAoAhxLGwUgAgsgAREeACIDQgBZBH4gACgCFCAAKAIca6wgAyAAKAIIIAAoAgRrrH18BSADCws5AQF+An4gACgCTEF/TARAIAAQlxUMAQsgABCXFQsiAUKAgICACFkEQEHE/QpBPTYCAEF/DwsgAacLhgEBAX8gASgCTEEASARAAkAgASwASyAAQf8BcUYNACABKAIUIgIgASgCEE8NACABIAJBAWo2AhQgAiAAOgAADwsgASAAELIbDwsCQAJAIAEsAEsgAEH/AXFGDQAgASgCFCICIAEoAhBPDQAgASACQQFqNgIUIAIgADoAAAwBCyABIAAQshsLC4wBAQR/IAAoAkxBAE4hAyAAKAIAQQFxIgRFBEAgACgCNCICBEAgAiAAKAI4NgI4CyAAKAI4IgEEQCABIAI2AjQLIABBqIYLKAIARgRAQaiGCyABNgIACwsgABCbFRogACAAKAIMEQAAGiAAKAJgIgEEQCABEKIbCwJAIARFBEAgABCiGwwBCyADRQ0ACwtuAQF/IAAEQCAAKAJMQX9MBEAgABCcFQ8LIAAQnBUPC0Hg0gooAgAEQEHg0gooAgAQmxUhAQtBqIYLKAIAIgAEQANAIAAoAkwaIAAoAhQgACgCHEsEQCAAEJwVIAFyIQELIAAoAjgiAA0ACwsgAQtpAQJ/AkAgACgCFCAAKAIcTQ0AIABBAEEAIAAoAiQRBQAaIAAoAhQNAEF/DwsgACgCBCIBIAAoAggiAkkEQCAAIAEgAmusQQEgACgCKBEeABoLIABBADYCHCAAQgA3AxAgAEIANwIEQQALQQECfyMAQRBrIgEkAEF/IQICQCAAEKwVDQAgACABQQ9qQQEgACgCIBEFAEEBRw0AIAEtAA8hAgsgAUEQaiQAIAILXgEBfyAAKAJMQQBIBEAgACgCBCIBIAAoAghJBEAgACABQQFqNgIEIAEtAAAPCyAAEJ0VDwsCfyAAKAIEIgEgACgCCEkEQCAAIAFBAWo2AgQgAS0AAAwBCyAAEJ0VCwt9ACACQQFGBEAgASAAKAIIIAAoAgRrrH0hAQsCQCAAKAIUIAAoAhxLBEAgAEEAQQAgACgCJBEFABogACgCFEUNAQsgAEEANgIcIABCADcDECAAIAEgAiAAKAIoER4AQgBTDQAgAEIANwIEIAAgACgCAEFvcTYCAEEADwtBfwsrAQF+An8gAawhAyAAKAJMQX9MBEAgACADIAIQnxUMAQsgACADIAIQnxULC9QBAQR/IwBBIGsiAyQAIAMgATYCECADIAIgACgCMCIEQQBHazYCFCAAKAIsIQUgAyAENgIcIAMgBTYCGEF/IQQCQAJAIAAoAjwgA0EQakECIANBDGoQIhDbFUUEQCADKAIMIgRBAEoNAQsgACAAKAIAIARBMHFBEHNyNgIADAELIAQgAygCFCIGTQ0AIAAgACgCLCIFNgIEIAAgBSAEIAZrajYCCCAAKAIwBEAgACAFQQFqNgIEIAEgAmpBAWsgBS0AADoAAAsgAiEECyADQSBqJAAgBAvEAgECfyMAQSBrIgMkAAJ/AkACQEGw3wggASwAABD8FEUEQEHE/QpBHDYCAAwBC0GYCRChGyICDQELQQAMAQsgAkEAQZABEK8bGiABQSsQ/BRFBEAgAkEIQQQgAS0AAEHyAEYbNgIACwJAIAEtAABB4QBHBEAgAigCACEBDAELIABBA0EAECQiAUGACHFFBEAgAyABQYAIcjYCECAAQQQgA0EQahAkGgsgAiACKAIAQYABciIBNgIACyACQf8BOgBLIAJBgAg2AjAgAiAANgI8IAIgAkGYAWo2AiwCQCABQQhxDQAgAyADQRhqNgIAIABBk6gBIAMQJQ0AIAJBCjoASwsgAkH6ETYCKCACQfsRNgIkIAJB/BE2AiAgAkH9ETYCDEHM/QooAgBFBEAgAkF/NgJMCyACEMMVCyECIANBIGokACACC3EBA38jAEEQayICJAACQAJAQbTfCCABLAAAEPwURQRAQcT9CkEcNgIADAELIAEQxxUhBCACQbYDNgIAIAAgBEGAgAJyIAIQIBDrFCIAQQBIDQEgACABEKIVIgMNASAAECMaC0EAIQMLIAJBEGokACADC7sBAQJ/IwBBoAFrIgQkACAEQQhqQbjfCEGQARCuGxoCQAJAIAFBAWtB/////wdPBEAgAQ0BQQEhASAEQZ8BaiEACyAEIAA2AjQgBCAANgIcIARBfiAAayIFIAEgASAFSxsiATYCOCAEIAAgAWoiADYCJCAEIAA2AhggBEEIaiACIAMQvBUhACABRQ0BIAQoAhwiASABIAQoAhhGa0EAOgAADAELQcT9CkE9NgIAQX8hAAsgBEGgAWokACAACzQBAX8gACgCFCIDIAEgAiAAKAIQIANrIgMgAiADSRsiAxCuGxogACAAKAIUIANqNgIUIAILiwEBAn8jAEGgAWsiAyQAIANBCGpBuN8IQZABEK4bGiADIAA2AjQgAyAANgIcIANBfiAAayIEQf////8HIARB/////wdJGyIENgI4IAMgACAEaiIANgIkIAMgADYCGCADQQhqIAEgAhC/FSAEBEAgAygCHCIEIAQgAygCGEZrQQA6AAALIANBoAFqJAALiwEBAn8jAEGgAWsiAyQAIANBCGpBuN8IQZABEK4bGiADIAA2AjQgAyAANgIcIANBfiAAayIEQf////8HIARB/////wdJGyIENgI4IAMgACAEaiIANgIkIAMgADYCGCADQQhqIAEgAhDAFSAE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A6dBAXENACAGDQBBxP0KQcQANgIAIANCAX0hAwwDCyADIAlaDQBBxP0KQcQANgIADAILIAkgBqwiA4UgA30hAwwBC0IAIQMgAEIAEMgVCyAHQRBqJAAgAwsNACAAIAEgAkJ/EMwVC3wBAX8jAEGQAWsiBCQAIAQgADYCLCAEIAA2AgQgBEEANgIAIARBfzYCTCAEQX8gAEH/////B2ogAEEASBs2AgggBEIAEMgVIAQgAkEBIAMQyhUhAyABBEAgASAAIAQoAgQgBCgCeGogBCgCCGtqNgIACyAEQZABaiQAIAMLEgAgACABIAJCgICAgAgQzBWnCzUAIAAgATcDACAAIAJC////////P4MgBEIwiKdBgIACcSACQjCIp0H//wFxcq1CMIaENwMIC8QCAQF/IwBB0ABrIgQkAAJAIANBgIABTgRAIARBIGogASACQgBCgICAgICAgP//ABDqFSAEKQMoIQIgBCkDICEBIANB//8BSARAIANB//8AayEDDAILIARBEGogASACQgBCgICAgICAgP//ABDqFSADQf3/AiADQf3/AkgbQf7/AWshAyAEKQMYIQIgBCkDECEBDAELIANBgYB/Sg0AIARBQGsgASACQgBCgICAgICAwAAQ6hUgBCkDSCECIAQpA0AhASADQYOAfkoEQCADQf7/AGohAwwBCyAEQTBqIAEgAkIAQoCAgICAgMAAEOoVIANBhoB9IANBhoB9ShtB/P8BaiEDIAQpAzghAiAEKQMwIQELIAQgASACQgAgA0H//wBqrUIwhhDqFSAAIAQpAwg3AwggACAEKQMANwMAIARB0ABqJAALlAgCBn8CfiMAQTBrIgYkAAJAIAJBAk0EQCABQQRqIQUgAkECdCICQcznCGooAgAhCCACQcDnCGooAgAhCQNAAn8gASgCBCICIAEoAmhJBEAgBSACQQFqNgIAIAItAAAMAQsgARDJFQsiAhDnFA0AC0EBIQcCQAJAIAJBK2sOAwABAAELQX9BASACQS1GGyEHIAEoAgQiAiABKAJoSQRAIAUgAkEBajYCACACLQAAIQIMAQsgARDJFSECCwJAAkADQCAEQfrmCGosAAAgAkEgckYEQAJAIARBBksNACABKAIEIgIgASgCaEkEQCAFIAJBAWo2AgAgAi0AACECDAELIAEQyRUhAgsgBEEBaiIEQQhH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DQAgAC0AAEUNACAAQT0Q/BQNAEGshgsoAgAoAgAiAkUNAAJAA0AgACACIAQQgBUhA0GshgsoAgAhAiADRQRAIAIgAUECdGooAgAgBGoiAy0AAEE9Rg0CCyACIAFBAWoiAUECdGooAgAiAg0AC0EADwsgA0EBaiEBCyABCxYAIABFBEBBAA8LQcT9CiAANgIAQX8LAwABC9kBAQN/IABFBEBBHA8LQbCGCygCAEUEQEGwhgtBBDYCAEG0hgtBEBChGzYCAAtBuIYLKAIAIgMEQEG0hgsoAgAhAgJAA0AgAiABQQN0aigCBEUNASABQQFqIgEgA0cNAAsgAyEBCyADQQJ0IQILQbCGCygCACABRgRAQbCGCyABQQF0NgIAQbSGC0G0hgsoAgAgAhCjGzYCAEG4hgsoAgAhAwsgAUEBaiECIAEgA0YEQEG4hgsgAjYCAAtBtIYLKAIAIAFBA3RqQoCAgIAQNwIAIAAgAjYCAEEAC0UBAX9BHCEBAkAgAEEBayIAQbiGCygCAE8NAEG0hgsoAgAgAEEDdGoiACgCBEUNAEEAIQEgAEEANgIAIABBADYCBAsgAQs2AAJ/QQAgAEEBayIAQbiGCygCAE8NABpBAEG0hgsoAgAgAEEDdGoiACgCBEUNABogACgCAAsLPgEBf0EcIQICQCAAQQFrIgBBuIYLKAIATw0AQbSGCygCACAAQQN0aiIAKAIERQ0AIAAgATYCAEEAIQILIAIL2wECAX8CfkEBIQQCQCAAQgBSIAFC////////////AIMiBUKAgICAgIDA//8AViAFQoCAgICAgMD//wBRGw0AIAJCAFIgA0L///////////8AgyIGQoCAgICAgMD//wBWIAZCgICAgICAwP//AFEbDQAgACAChCAFIAaEhFAEQEEADwsgASADg0IAWQRAQX8hBCAAIAJUIAEgA1MgASADURsNASAAIAKFIAEgA4WEQgBSDwtBfyEEIAAgAlYgASADVSABIANRGw0AIAAgAoUgASADhYRCAFIhBAsgBAvEAQIBfwJ+QX8hAwJAIABCAFIgAUL///////////8AgyIEQoCAgICAgMD//wBWIARCgICAgICAwP//AFEbDQBBACACQv///////////wCDIgVCgICAgICAwP//AFYgBUKAgICAgIDA//8AURsNACAAIAQgBYSEUARAQQAPCyABIAKDQgBZBEBBACABIAJTIAEgAlEbDQEgACABIAKFhEIAUg8LIABCAFIgASACVSABIAJRGw0AIAAgASAChYRCAFIhAwsgAwtpAQN+IAAgAkIgiCIDIAFCIIgiBH4gAkL/////D4MiAiABQv////8PgyIBfiIFQiCIIAIgBH58IgJCIIh8IAEgA34gAkL/////D4N8IgJCIIh8NwMIIAAgBUL/////D4MgAkIghoQ3AwALUAEBfgJAIANBwABxBEAgASADQUBqrYYhAkIAIQEMAQsgA0UNACACIAOtIgSGIAFBwAAgA2utiIQhAiABIASGIQELIAAgATcDACAAIAI3AwgL4QkCBH8EfiMAQfAAayIFJAAgBEL///////////8AgyEKAkACQCABQgF9IglCf1EgAkL///////////8AgyILIAEgCVatfEIBfSIJQv///////7///wBWIAlC////////v///AFEbRQRAIANCAX0iCUJ/UiAKIAMgCVatfEIBfSIJQv///////7///wBUIAlC////////v///AFEbDQELIAFQIAtCgICAgICAwP//AFQgC0KAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCEEIAEhAwwCCyADUCAKQoCAgICAgMD//wBUIApCgICAgICAwP//AFEbRQRAIARCgICAgICAIIQhBAwCCyABIAtCgICAgICAwP//AIWEUARAQoCAgICAgOD//wAgAiABIAOFIAIgBIVCgICAgICAgICAf4WEUCIGGyEEQgAgASAGGyEDDAILIAMgCkKAgICAgIDA//8AhYRQDQEgASALhFAEQCADIAqEQgBSDQIgASADgyEDIAIgBIMhBAwCCyADIAqEUEUNACABIQMgAiEEDAELIAMgASABIANUIAogC1YgCiALURsiBxshCiAEIAIgBxsiC0L///////8/gyEJIAIgBCAHGyICQjCIp0H//wFxIQggC0IwiKdB//8BcSIGRQRAIAVB4ABqIAogCSAKIAkgCVAiBht5IAZBBnStfKciBkEPaxDkFSAFKQNoIQkgBSkDYCEKQRAgBmshBgsgASADIAcbIQMgAkL///////8/gyEEIAhFBEAgBUHQAGogAyAEIAMgBCAEUCIHG3kgB0EGdK18pyIHQQ9rEOQVQRAgB2shCCAFKQNYIQQgBSkDUCEDCyAEQgOGIANCPYiEQoCAgICAgIAEhCEEIAlCA4YgCkI9iIQhASACIAuFIQkCfiADQgOGIgMgBiAIayIHRQ0AGiAHQf8ASwRAQgAhBEIBDAELIAVBQGsgAyAEQYABIAdrEOQVIAVBMGogAyAEIAcQ5xUgBSkDOCEEIAUpAzAgBSkDQCAFKQNIhEIAUq2ECyEDIAFCgICAgICAgASEIQwgCkIDhiECAkAgCUJ/VwRAIAIgA30iASAMIAR9IAIgA1StfSIEhFAEQEIAIQNCACEEDAMLIARC/////////wNWDQEgBUEgaiABIAQgASAEIARQIgcbeSAHQQZ0rXynQQxrIgcQ5BUgBiAHayEGIAUpAyghBCAFKQMgIQEMAQsgAiADfCIBIANUrSAEIAx8fCIEQoCAgICAgIAIg1ANACABQgGDIARCP4YgAUIBiISEIQEgBkEBaiEGIARCAYghBAsgC0KAgICAgICAgIB/gyECIAZB//8BTgRAIAJCgICAgICAwP//AIQhBEIAIQMMAQtBACEHAkAgBkEASgRAIAYhBwwBCyAFQRBqIAEgBCAGQf8AahDkFSAFIAEgBEEBIAZrEOcVIAUpAwAgBSkDECAFKQMYhEIAUq2EIQEgBSkDCCEECyAEQj2GIAFCA4iEIgMgAyABp0EHcSIGQQRLrXwiAVatIARCA4hC////////P4MgAoQgB61CMIaEfCEEAkACQCAGQQRHBEAgASEDDAELIAQgAUIBgyICIAF8IgMgAlStfCEEDAELIAZFDQELCyAAIAM3AwAgACAENwMIIAVB8ABqJAALxwECA38CfiMAQRBrIgMkAAJ+IAG8IgRB/////wdxIgJBgICABGtB////9wdNBEAgAq1CGYZCgICAgICAgMA/fAwBCyACQYCAgPwHTwRAIAStQhmGQoCAgICAgMD//wCEDAELIAJFBEBCAAwBCyADIAKtQgAgAmciAkHRAGoQ5BUgAykDACEFIAMpAwhCgICAgICAwACFQYn/ACACa61CMIaECyEGIAAgBTcDACAAIAYgBEGAgICAeHGtQiCGhDcDCCADQRBqJAALUAEBfgJAIANBwABxBEAgAiADQUBqrYghAUIAIQIMAQsgA0UNACACQcAAIANrrYYgASADrSIEiIQhASACIASIIQILIAAgATcDACAAIAI3AwgLtgMCA38BfiMAQSBrIgMkAAJAIAFC////////////AIMiBUKAgICAgIDAwD99IAVCgICAgICAwL/AAH1UBEAgAUIZiKchBCAAUCABQv///w+DIgVCgICACFQgBUKAgIAIURtFBEAgBEGBgICABGohAgwCCyAEQYCAgIAEaiECIAAgBUKAgIAIhYRCAFINASACIARBAXFqIQIMAQsgAFAgBUKAgICAgIDA//8AVCAFQoCAgICAgMD//wBRG0UEQCABQhmIp0H///8BcUGAgID+B3IhAgwBC0GAgID8ByECIAVC////////v7/AAFYNAEEAIQIgBUIwiKciBEGR/gBJDQAgA0EQaiAAIAFC////////P4NCgICAgICAwACEIgUgBEGB/gBrEOQVIAMgACAFQYH/ACAEaxDnFSADKQMIIgVCGYinIQIgAykDACADKQMQIAMpAxiEQgBSrYQiAFAgBUL///8PgyIFQoCAgAhUIAVCgICACFEbRQRAIAJBAWohAgwBCyAAIAVCgICACIWEQgBSDQAgAkEBcSACaiECCyADQSBqJAAgAiABQiCIp0GAgICAeHFyvgv6AQICfwN+IwBBEGsiAiQAAn4gAb0iBUL///////////8AgyIEQoCAgICAgIAIfUL/////////7/8AWARAIARCPIYhBiAEQgSIQoCAgICAgICAPHwMAQsgBEKAgICAgICA+P8AWgRAIAVCPIYhBiAFQgSIQoCAgICAgMD//wCEDAELIARQBEBCAAwBCyACIARCACAFp2dBIGogBEIgiKdnIARCgICAgBBUGyIDQTFqEOQVIAIpAwAhBiACKQMIQoCAgICAgMAAhUGM+AAgA2utQjCGhAshBCAAIAY3AwAgACAEIAVCgICAgICAgICAf4OENwMIIAJBEGokAAueCwIFfw9+IwBB4ABrIgUkACACQiCGIAFCIIiEIQ4gBEIvhiADQhGIhCELIARC////////P4MiDEIPhiADQjGIhCEQIAIgBIVCgICAgICAgICAf4MhCiACQv///////z+DIg1CIIghESAMQhGIIRIgBEIwiKdB//8BcSEGAkACfyACQjCIp0H//wFxIghBAWtB/f8BTQRAQQAgBkEBa0H+/wFJDQEaCyABUCACQv///////////wCDIg9CgICAgICAwP//AFQgD0KAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCEKDAILIANQIARC////////////AIMiAkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQogAyEBDAILIAEgD0KAgICAgIDA//8AhYRQBEAgAiADhFAEQEKAgICAgIDg//8AIQpCACEBDAMLIApCgICAgICAwP//AIQhCkIAIQEMAgsgAyACQoCAgICAgMD//wCFhFAEQCABIA+EIQJCACEBIAJQBEBCgICAgICA4P//ACEKDAMLIApCgICAgICAwP//AIQhCgwCCyABIA+EUARAQgAhAQwCCyACIAOEUARAQgAhAQwCCyAPQv///////z9YBEAgBUHQAGogASANIAEgDSANUCIHG3kgB0EGdK18pyIHQQ9rEOQVIAUpA1giDUIghiAFKQNQIgFCIIiEIQ4gDUIgiCERQRAgB2shBwsgByACQv///////z9WDQAaIAVBQGsgAyAMIAMgDCAMUCIJG3kgCUEGdK18pyIJQQ9rEOQVIAUpA0giAkIPhiAFKQNAIgNCMYiEIRAgAkIvhiADQhGIhCELIAJCEYghEiAHIAlrQRBqCyEHIAtC/////w+DIgIgAUL/////D4MiBH4iEyADQg+GQoCA/v8PgyIBIA5C/////w+DIgN+fCIOQiCGIgwgASAEfnwiCyAMVK0gAiADfiIVIAEgDUL/////D4MiDH58Ig8gEEL/////D4MiDSAEfnwiECAOIBNUrUIghiAOQiCIhHwiEyACIAx+IhYgASARQoCABIQiDn58IhEgAyANfnwiFCASQv////8Hg0KAgICACIQiASAEfnwiEkIghnwiF3whBCAGIAhqIAdqQf//AGshBgJAIAwgDX4iGCACIA5+fCICIBhUrSACIAEgA358IgMgAlStfCADIA8gFVStIA8gEFatfHwiAiADVK18IAEgDn58IAEgDH4iAyANIA5+fCIBIANUrUIghiABQiCIhHwgAiABQiCGfCIBIAJUrXwgASASIBRUrSARIBZUrSARIBRWrXx8QiCGIBJCIIiEfCIDIAFUrXwgAyAQIBNWrSATIBdWrXx8IgIgA1StfCIBQoCAgICAgMAAg1BFBEAgBkEBaiEGDAELIAtCP4ghAyABQgGGIAJCP4iEIQEgAkIBhiAEQj+IhCECIAtCAYYhCyADIARCAYaEIQQLIAZB//8BTgRAIApCgICAgICAwP//AIQhCkIAIQEMAQsCfiAGQQBMBEBBASAGayIIQYABTwRAQgAhAQwDCyAFQTBqIAsgBCAGQf8AaiIGEOQVIAVBIGogAiABIAYQ5BUgBUEQaiALIAQgCBDnFSAFIAIgASAIEOcVIAUpAzAgBSkDOIRCAFKtIAUpAyAgBSkDEISEIQsgBSkDKCAFKQMYhCEEIAUpAwAhAiAFKQMIDAELIAFC////////P4MgBq1CMIaECyAKhCEKIAtQIARCf1UgBEKAgICAgICAgIB/URtFBEAgCiACQgF8IgEgAlStfCEKDAELIAsgBEKAgICAgICAgIB/hYRQRQRAIAIhAQwBCyAKIAIgAkIBg3wiASACVK18IQoLIAAgATcDACAAIAo3AwggBUHgAGokAAtBAQF/IwBBEGsiBSQAIAUgASACIAMgBEKAgICAgICAgIB/hRDlFSAAIAUpAwA3AwAgACAFKQMINwMIIAVBEGokAAt/AgJ/AX4jAEEQayIDJAAgAAJ+IAFFBEBCAAwBCyADIAEgAUEfdSICaiACcyICrUIAIAJnIgJB0QBqEOQVIAMpAwhCgICAgICAwACFQZ6AASACa61CMIZ8IAFBgICAgHhxrUIghoQhBCADKQMACzcDACAAIAQ3AwggA0EQaiQAC4gRAgV/DH4jAEHAAWsiBSQAIARC////////P4MhEiACQv///////z+DIRAgAiAEhUKAgICAgICAgIB/gyERIARCMIinQf//AXEhBwJAAkACQCACQjCIp0H//wFxIghBAWtB/f8BTQRAIAdBAWtB/v8BSQ0BCyABUCACQv///////////wCDIgtCgICAgICAwP//AFQgC0KAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCERDAILIANQIARC////////////AIMiAkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIREgAyEBDAILIAEgC0KAgICAgIDA//8AhYRQBEAgAyACQoCAgICAgMD//wCFhFAEQEIAIQFCgICAgICA4P//ACERDAMLIBFCgICAgICAwP//AIQhEUIAIQEMAgsgAyACQoCAgICAgMD//wCFhFAEQEIAIQEMAgsgASALhFANAiACIAOEUARAIBFCgICAgICAwP//AIQhEUIAIQEMAgsgC0L///////8/WARAIAVBsAFqIAEgECABIBAgEFAiBht5IAZBBnStfKciBkEPaxDkFUEQIAZrIQYgBSkDuAEhECAFKQOwASEBCyACQv///////z9WDQAgBUGgAWogAyASIAMgEiASUCIJG3kgCUEGdK18pyIJQQ9rEOQVIAYgCWpBEGshBiAFKQOoASESIAUpA6ABIQMLIAVBkAFqIBJCgICAgICAwACEIhRCD4YgA0IxiIQiAkKEyfnOv+a8gvUAIAJ9IgQQ4xUgBUGAAWpCACAFKQOYAX0gBBDjFSAFQfAAaiAFKQOIAUIBhiAFKQOAAUI/iIQiBCACEOMVIAVB4ABqIARCACAFKQN4fRDjFSAFQdAAaiAFKQNoQgGGIAUpA2BCP4iEIgQgAhDjFSAFQUBrIARCACAFKQNYfRDjFSAFQTBqIAUpA0hCAYYgBSkDQEI/iIQiBCACEOMVIAVBIGogBEIAIAUpAzh9EOMVIAVBEGogBSkDKEIBhiAFKQMgQj+IhCIEIAIQ4xUgBSAEQgAgBSkDGH0Q4xUgBiAIIAdraiEHAn5CACAFKQMIQgGGIAUpAwBCP4iEQgF9IgtC/////w+DIgQgAkIgiCIKfiIMIAtCIIgiCyACQv////8PgyIPfnwiAkIgiCACIAxUrUIghoQgCiALfnwgAkIghiIKIAQgD358IgIgClStfCACIAQgA0IRiEL/////D4MiDH4iDyALIANCD4ZCgID+/w+DIg1+fCIKQiCGIg4gBCANfnwgDlStIAsgDH4gCiAPVK1CIIYgCkIgiIR8fHwiCiACVK18IApCAFKtfH0iAkL/////D4MiDCAEfiIPIAsgDH4iDSAEIAJCIIgiDn58IgJCIIZ8IgwgD1StIAsgDn4gAiANVK1CIIYgAkIgiIR8fCAMQgAgCn0iAkIgiCIKIAR+Ig8gAkL/////D4MiDSALfnwiAkIghiIOIAQgDX58IA5UrSAKIAt+IAIgD1StQiCGIAJCIIiEfHx8IgIgDFStfCACQgJ9Ig8gAlStfEIBfSIKQv////8PgyICIBBCAoYgAUI+iIRC/////w+DIgR+IgwgAUIeiEL/////D4MiCyAKQiCIIgp+fCINIAxUrSANIA9CIIgiDCAQQh6IQv//7/8Pg0KAgBCEIhB+fCIOIA1UrXwgCiAQfnwgAiAQfiITIAQgCn58Ig0gE1StQiCGIA1CIIiEfCAOIA1CIIZ8Ig0gDlStfCANIAsgDH4iEyAPQv////8PgyIPIAR+fCIOIBNUrSAOIAIgAUIChkL8////D4MiE358IhUgDlStfHwiDiANVK18IA4gCiATfiINIA8gEH58IgogBCAMfnwiBCACIAt+fCICQiCIIAIgBFStIAogDVStIAQgClStfHxCIIaEfCIKIA5UrXwgCiAVIAwgE34iBCALIA9+fCILQiCIIAQgC1atQiCGhHwiBCAVVK0gBCACQiCGfCAEVK18fCIEIApUrXwiAkL/////////AFgEQCABQjGGIARC/////w+DIgEgA0L/////D4MiC34iCkIAUq19QgAgCn0iDyAEQiCIIgogC34iDSABIANCIIgiDH58IhBCIIYiDlStfSACQv////8PgyALfiABIBJC/////w+DfnwgCiAMfnwgDSAQVq1CIIYgEEIgiIR8IAQgFEIgiH4gAyACQiCIfnwgAiAMfnwgCiASfnxCIIZ8fSELIAdBAWshByAPIA59DAELIARCIYghDCABQjCGIAJCP4YgBEIBiIQiBEL/////D4MiASADQv////8PgyILfiIKQgBSrX1CACAKfSIQIAEgA0IgiCIKfiIPIAwgAkIfhoQiDUL/////D4MiDiALfnwiDEIghiITVK19IAQgFEIgiH4gAyACQiGIfnwgAkIBiCICIAp+fCANIBJ+fEIghiAKIA5+IAJC/////w+DIAt+fCABIBJC/////w+DfnwgDCAPVK1CIIYgDEIgiIR8fH0hCyAQIBN9CyEBIAdBgIABTgRAIBFCgICAgICAwP//AIQhEUIAIQEMAQsgB0H//wBqIQggB0GBgH9MBEACQCAIDQAgBCABQgGGIANWIAtCAYYgAUI/iIQiASAUViABIBRRG618IgEgBFStIAJC////////P4N8IgNCgICAgICAwACDUA0AIAMgEYQhEQwCC0IAIQEMAQsgBCABQgGGIANaIAtCAYYgAUI/iIQiASAUWiABIBRRG618IgEgBFStIAJC////////P4N8IAitQjCGfCARhCERCyAAIAE3AwAgACARNwMIIAVBwAFqJAAPCyAAQgA3AwAgAEKAgICAgIDg//8AIBEgAiADhFAbNwMIIAVBwAFqJAAL2QMCAn8CfiMAQSBrIgIkAAJAIAFC////////////AIMiBEKAgICAgIDAgDx9IARCgICAgICAwP/DAH1UBEAgAUIEhiAAQjyIhCEEIABC//////////8PgyIAQoGAgICAgICACFoEQCAEQoGAgICAgICAwAB8IQUMAgsgBEKAgICAgICAgEB9IQUgAEKAgICAgICAgAiFQgBSDQEgBSAEQgGDfCEFDAELIABQIARCgICAgICAwP//AFQgBEKAgICAgIDA//8AURtFBEAgAUIEhiAAQjyIhEL/////////A4NCgICAgICAgPz/AIQhBQwBC0KAgICAgICA+P8AIQUgBEL///////+//8MAVg0AQgAhBSAEQjCIpyIDQZH3AEkNACACQRBqIAAgAUL///////8/g0KAgICAgIDAAIQiBCADQYH3AGsQ5BUgAiAAIARBgfgAIANrEOcVIAIpAwhCBIYgAikDACIEQjyIhCEFIAIpAxAgAikDGIRCAFKtIARC//////////8Pg4QiBEKBgICAgICAgAhaBEAgBUIBfCEFDAELIARCgICAgICAgIAIhUIAUg0AIAVCAYMgBXwhBQsgAkEgaiQAIAUgAUKAgICAgICAgIB/g4S/C2QCAX8BfiMAQRBrIgIkACAAAn4gAUUEQEIADAELIAIgAa1CACABZyIBQdEAahDkFSACKQMIQoCAgICAgMAAhUGegAEgAWutQjCGfCEDIAIpAwALNwMAIAAgAzcDCCACQRBqJAALNQEBfyMAQRBrIgIkACACIAAtAAA6AA8gACABLQAAOgAAIAEgAkEPai0AADoAACACQRBqJAALNQEBfyMAQRBrIgIkACACIAAoAgA2AgwgACABKAIANgIAIAEgAkEMaigCADYCACACQRBqJAALnwUBBn8DQCABQQRrIQcDQCAAIQMDQAJAAkACQAJAAkACQAJAAkAgASADayIAQQJ1IgUOBgcHAAQBAgMLIAFBBGsiACADEPMVRQ0GIAMgABDxFQ8LIAMgA0EEaiADQQhqIAFBBGsQ9BUaDwsgAyADQQRqIANBCGogA0EMaiABQQRrEPUVGg8LIABB+wBMBEAgAyABEPYVDwsgAyAFQQJtQQJ0aiEEAn8gAEGdH04EQCADIAMgBUEEbUECdCIAaiAEIAAgBGogBxD1FQwBCyAD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fyABQQJxDQEgAEECOgAAQQEFQQALDwsACx4BAX8jAEEQayIBJAAgASAAEP4aEIIbIAFBEGokAAszAQF/IwBBEGsiASQAIAFBCGogACgCBBCTGCgCAEEBOgAAIAAoAghBAToAACABQRBqJAALAwAACw0AQYjVCigCABEOAAALBgBB4c0JCy0BAX8gAEGkzgk2AgAgAEEEaigCAEEMayIBQQhqELwZQX9MBEAgARCiGwsgAAsKACAAEIYbEKIbCw0AIAAQhhsaIAAQohsLCwAgACABQQAQihsLLQAgAkUEQCAAKAIEIAEoAgRGDwsgACABRgRAQQEPCyAAEM0UIAEQzRQQ/xRFC6cBAQF/IwBBQGoiAyQAAn9BASAAIAFBABCKGw0AGkEAIAFFDQAaQQAgAUG8zwlB7M8JEIwbIgFFDQAaIANBCGpBBHJBAEE0EK8bGiADQQE2AjggA0F/NgIUIAMgADYCECADIAE2AgggASADQQhqIAIoAgBBASABKAIAKAIcEQYAIAMoAiAiAEEBRgRAIAIgAygCGDYCAAsgAEEBRgshACADQUBrJAAgAAujAgEDfyMAQUBqIgMkACAAKAIAIgVBBGsoAgAhBCAFQQhrKAIAIQUgA0EANgIUIAMgATYCECADIAA2AgwgAyACNgIIQQAhASADQRhqQQBBJxCvGxogACAFaiEAAkAgBCACQQAQihsEQCADQQE2AjggBCADQQhqIAAgAEEBQQAgBCgCACgCFBENACAAQQAgAygCIEEBRhshAQwBCyAEIANBCGogAEEBQQAgBCgCACgCGBEIAAJAAkAgAygCLA4CAAECCyADKAIcQQAgAygCKEEBRhtBACADKAIkQQFGG0EAIAMoAjBBAUYbIQEMAQsgAygCIEEBRwRAIAMoAjANASADKAIkQQFHDQEgAygCKEEBRw0BCyADKAIYIQELIANBQGskACABC10BAX8gACgCECIDRQRAIABBATYCJCAAIAI2AhggACABNgIQDwsCQCABIANGBEAgACgCGEECRw0BIAAgAjYCGA8LIABBAToANiAAQQI2AhggACAAKAIkQQFqNgIkCwsaACAAIAEoAghBABCKGwRAIAEgAiADEI0bCwszACAAIAEoAghBABCKGwRAIAEgAiADEI0bDwsgACgCCCIAIAEgAiADIAAoAgAoAhwRBgALUgEB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DQA/AEEQdCAASQRAIAAQKkUNAQtBjNUKIAA2AgAgAQ8LQcT9CkEwNgIAQX8LRgAgAL1C////////////AINCgICAgICAgPj/AFgEQCAAIAAgAaUgAb1C////////////AINCgICAgICAgPj/AFYbDwsgAQucBgIEfwN+IwBBgAFrIgUkAAJAAkACQCADIARCAEIAEOEVRQ0AIAMgBBCtGyEHIAJCMIinIghB//8BcSIGQf//AUYNACAHDQELIAVBEGogASACIAMgBBDqFSAFIAUpAxAiBCAFKQMYIgMgBCADEO0VIAUpAwghAiAFKQMAIQQMAQsgASACQv///////z+DIAatQjCGhCIKIAMgBEL///////8/gyAEQjCIp0H//wFxIgetQjCGhCIJEOEVQQBMBEAgASAKIAMgCRDhFQRAIAEhBAwCCyAFQfAAaiABIAJCAEIAEOoVIAUpA3ghAiAFKQNwIQQMAQsgBgR+IAEFIAVB4ABqIAEgCkIAQoCAgICAgMC7wAAQ6hUgBSkDaCIKQjCIp0H4AGshBiAFKQNgCyEEIAdFBEAgBUHQAGogAyAJQgBCgICAgICAwLvAABDqFSAFKQNYIglCMIinQfgAayEHIAUpA1AhAwsgCUL///////8/g0KAgICAgIDAAIQhCyAKQv///////z+DQoCAgICAgMAAhCEKIAYgB0oEQANAAn4gCiALfSADIARWrX0iCUIAWQRAIAkgBCADfSIEhFAEQCAFQSBqIAEgAkIAQgAQ6hUgBSkDKCECIAUpAyAhBAwFCyAJQgGGIARCP4iEDAELIApCAYYgBEI/iIQLIQogBEIBhiEEIAZBAWsiBiAHSg0ACyAHIQYLAkAgCiALfSADIARWrX0iCUIAUwRAIAohCQwBCyAJIAQgA30iBIRCAFINACAFQTBqIAEgAkIAQgAQ6hUgBSkDOCECIAUpAzAhBAwBCyAJQv///////z9YBEADQCAEQj+IIQMgBkEBayEGIARCAYYhBCADIAlCAYaEIglCgICAgICAwABUDQALCyAIQYCAAnEhByAGQQBMBEAgBUFAayAEIAlC////////P4MgBkH4AGogB3KtQjCGhEIAQoCAgICAgMDDPxDqFSAFKQNIIQIgBSkDQCEEDAELIAlC////////P4MgBiAHcq1CMIaEIQILIAAgBDcDACAAIAI3AwggBUGAAWokAAu4AgMCfwF+AnwCQAJ8IAC9IgNCIIinQf////8HcSIBQYDgv4QETwRAAkAgA0IAUw0AIAFBgIDAhARJDQAgAEQAAAAAAADgf6IPCyABQYCAwP8HTwRARAAAAAAAAPC/IACjDwsgAEQAAAAAAMyQwGVBAXMNAkQAAAAAAAAAACADQn9XDQEaDAILIAFB//+/5ANLDQEgAEQAAAAAAADwP6ALDwsgAEQAAAAAAAC4QqAiBL2nQYABaiIBQQR0QfAfcSICQZDWCWorAwAiBSAFIAAgBEQAAAAAAAC4wqChIAJBCHJBkNYJaisDAKEiAKIgACAAIAAgAER0XIcDgNhVP6JEAAT3iKuygz+gokSmoATXCGusP6CiRHXFgv+9v84/oKJE7zn6/kIu5j+goqAgAUGAfnFBgAJtEKwbC6gBAAJAIAFBgAhOBEAgAEQAAAAAAADgf6IhACABQf8PSARAIAFB/wdrIQEMAgsgAEQAAAAAAADgf6IhACABQf0XIAFB/RdIG0H+D2shAQwBCyABQYF4Sg0AIABEAAAAAAAAEACiIQAgAUGDcEoEQCABQf4HaiEBDAELIABEAAAAAAAAEACiIQAgAUGGaCABQYZoShtB/A9qIQELIAAgAUH/B2qtQjSGv6ILRAIBfwF+IAFC////////P4MhAwJ/IAFCMIinQf//AXEiAkH//wFHBEBBBCACDQEaQQJBAyAAIAOEUBsPCyAAIAOEUAsLggQBA38gAkGABE8EQCAAIAEgAhArGiAADwsgACACaiEDAkAgACABc0EDcUUEQAJAIAJBAUgEQCAAIQIMAQsgAEEDcUUEQCAAIQIMAQsgACECA0AgAiABLQAAOgAAIAFBAWohASACQQFqIgIgA08NASACQQNxDQALCwJAIANBfHEiBEHAAEkNACACIARBQGoiBUsNAANAIAIgASgCADYCACACIAEoAgQ2AgQgAiABKAIINgIIIAIgASgCDDYCDCACIAEoAhA2AhAgAiABKAIUNgIUIAIgASgCGDYCGCACIAEoAhw2AhwgAiABKAIgNgIgIAIgASgCJDYCJCACIAEoAig2AiggAiABKAIsNgIsIAIgASgCMDYCMCACIAEoAjQ2AjQgAiABKAI4NgI4IAIgASgCPDYCPCABQUBrIQEgAkFAayICIAVNDQALCyACIARPDQEDQCACIAEoAgA2AgAgAUEEaiEBIAJBBGoiAiAESQ0ACwwBCyADQQRJBEAgACECDAELIAAgA0EEayIESwRAIAAhAgwBCyAAIQIDQCACIAEtAAA6AAAgAiABLQABOgABIAIgAS0AAjoAAiACIAEtAAM6AAMgAUEEaiEBIAJBBGoiAiAETQ0ACwsgAiADSQRAA0AgAiABLQAAOgAAIAFBAWohASACQQFqIgIgA0cNAAsLIAAL8wICAn8BfgJAIAJFDQAgACACaiIDQQFrIAE6AAAgACABOgAAIAJBA0kNACADQQJrIAE6AAAgACABOgABIANBA2sgAToAACAAIAE6AAIgAkEHSQ0AIANBBGsgAToAACAAIAE6AAMgAkEJSQ0AIABBACAAa0EDcSIEaiIDIAFB/wFxQYGChAhsIgE2AgAgAyACIARrQXxxIgRqIgJBBGsgATYCACAEQQlJDQAgAyABNgIIIAMgATYCBCACQQhrIAE2AgAgAkEMayABNgIAIARBGUkNACADIAE2AhggAyABNgIUIAMgATYCECADIAE2AgwgAkEQayABNgIAIAJBFGsgATYCACACQRhrIAE2AgAgAkEcayABNgIAIAQgA0EEcUEYciIEayICQSBJDQAgAa0iBUIghiAFhCEFIAMgBGohAQNAIAEgBTcDGCABIAU3AxAgASAFNwMIIAEgBTcDACABQSBqIQEgAkEgayICQR9LDQALCyAAC+kCAQF/AkAgACABRg0AIAEgAGsgAmtBACACQQF0a00EQCAAIAEgAhCuGxoPCyAAIAFzQQNxIQMCQAJAIAAgAUkEQCADBEAgACEDDAMLIABBA3FFBEAgACEDDAILIAAhAwNAIAJFDQQgAyABLQAAOgAAIAFBAWohASACQQFrIQIgA0EBaiIDQQNxDQALDAELAkAgAw0AIAAgAmpBA3EEQANAIAJFDQUgACACQQFrIgJqIgMgASACai0AADoAACADQQNxDQALCyACQQNNDQADQCAAIAJBBGsiAmogASACaigCADYCACACQQNLDQALCyACRQ0CA0AgACACQQFrIgJqIAEgAmotAAA6AAAgAg0ACwwCCyACQQNNDQADQCADIAEoAgA2AgAgAUEEaiEBIANBBGohAyACQQRrIgJBA0sNAAsLIAJFDQADQCADIAEtAAA6AAAgA0EBaiED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QAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAAKAIAIgMsAAAiBEHMAGsOKQATExMTExMTARMTExMTExMTExMTEwMTBAUGAgcTCBMTCQoLDA0ODxAREgsgABD3GyECDBULIAAQ6BshAgwUCwJAIABBARDDGyICQfAARwRAIAJB/wFxQcwARw0BIABBAhDDG0Ewa0EJSw0BCyAAEK8cIQIMFAsgABCwHCECDBMLAkACQAJAAkACQAJAAkAgAywAASIEQeEAaw4EARkZAgALIARBzgBGDQMgBEHTAEYNBCAEQe4ARg0CIARB9ABGDQUgBEH6AEcNGCAAIANBAmo2AgAgASAAEPYbIgI2AvgEIAJFDRcgAEGZ/gkgAUH4BGoQlxwhAgwYCyAAIANBAmo2AgAgASABQagFakGP/gkQwBspAgA3AxAgACABQRBqELEcIQIMFwsgACADQQJqNgIAIAEgAUGgBWpBkv4JEMAbKQIANwMYIAAgAUEYahCyHCECDBYLIAAgA0ECajYCACABIAFBmAVqQZL+CRDAGykCADcDICAAIAFBIGoQsRwhAgwVCyAAIANBAmo2AgAgASABQZAFakGU/gkQwBspAgA3AyggACABQShqELEcIQIMFAsgACADQQJqNgIAIAEgAUGIBWpBl/4JEMAbKQIANwMwIAAgAUEwahCxHCECDBMLIAAgA0ECajYCACABIAAQyRsiAjYC+AQgAkUNESAAQZn+CSABQfgEahCXHCECDBILAkACQAJAAkACQCADLAABIgRB7ABrDgQBAhYDAAsgBEH2AEYNAyAEQeMARw0VIAAgA0ECajYCACABIAAiAxDJGyICNgL4BCACRQ0UIAEgAxD2GyICNgKEBSACRQ0UIABBoANqQaP+CSABQfgEaiABQYQFahDEHCECDBULIAAgA0ECajYCACABIAAiBBD2GyIDNgKEBSADRQ0UIABBCGoiBRD2ASEGA0AgAEHFABDFG0UEQCABIAQQ9hsiAzYC+AQgA0UNFiAFIAFB+ARqENgbDAELCyABQfgEaiAAIAYQ2RsgAEGgA2ogAUGEBWogAUH4BGoQxRwhAgwUCyAAIANBAmo2AgAgASABQfAEakGu/gkQwBspAgA3AzggACABQThqELEcIQIMEwsgACADQQJqNgIAIAEgAUHoBGpBsP4JEMAbKQIANwNAIAAgAUFAaxCyHCECDBILIAAQsxwhAgwRCwJAAkACQAJAAkACQAJAIAMsAAEiBEHsAGsOCwEXAhcXFxcDBBcFAAsCQAJAAkAgBEHhAGsOBQAZARkCCAsgACADQQJqNgIAIAEgABD2GyICNgL4BCACRQ0XIAFBAToAhAUgACABQfgEaiABQb8FaiABQYQFahC0HCECDBgLIAAgA0ECajYCACABIAAiAxDJGyICNgL4BCACRQ0WIAEgAxD2GyICNgKEBSACRQ0WIABBoANqQbL+CSABQfgEaiABQYQFahDEHCECDBcLIAAgA0ECajYCACABIAFB4ARqQb/+CRDAGykCADcDSCAAIAFByABqELIcIQIMFgsgACADQQJqNgIAIAEgABD2GyICNgL4BCACRQ0UIAFBADoAhAUgACABQfgEaiABQb8FaiABQYQFahC0HCECDBULIAAQtRwhAgwUCyAAIANBAmo2AgAgASAAIgMQ9hsiAjYC+AQgAkUNEiABIAMQ9hsiAjYChAUgAkUNEiAAIAFB+ARqQcH+CSABQYQFahC2HCECDBMLIAAgA0ECajYCACABIAAiAxD2GyICNgL4BCACRQ0RIAEgAxD2GyICNgKEBSACRQ0RIABBoANqIAFB+ARqQcT+CSABQYQFahDMHCECDBILIAAgA0ECajYCACABIAFB2ARqQcb+CRDAGykCADcDUCAAIAFB0ABqELEcIQIMEQsgBEHWAEcNECAAIANBAmo2AgAgASABQdAEakHI/gkQwBspAgA3A1ggACABQdgAahCxHCECDBALAkACQAJAIAMsAAEiBEHvAGsOAwASAgELIAAgA0ECajYCACABIAFByARqQcv+CRDAGykCADcDYCAAIAFB4ABqELEcIQIMEQsgBEHPAEcNECAAIANBAmo2AgAgASABQcAEakHN/gkQwBspAgA3A2ggACABQegAahCxHCECDBALIAAgA0ECajYCACABIAFBuARqQdD+CRDAGykCADcDcCAAIAFB8ABqELEcIQIMDwsgAywAASIEQfQARwRAIARB5QBHDQ8gACADQQJqNgIAIAEgAUGwBGpB0/4JEMAbKQIANwN4IAAgAUH4AGoQsRwhAgwPCyAAIANBAmo2AgAgASABQagEakHW/gkQwBspAgA3A4ABIAAgAUGAAWoQsRwhAgwOCyADLAABIgRB7ABHBEAgBEH4AEcNDiAAIANBAmo2AgAgASAAIgMQ9hsiAjYC+AQgAkUNDSABIAMQ9hsiAjYChAUgAkUNDSAAQaADakEQEPwbIAFB+ARqKAIAIAFBhAVqKAIAEK0dIQIMDgsgACADQQJqNgIAIABBCGoiBBD2ASEFA0AgAEHFABDFG0UEQCABIAAQtxwiAzYC+AQgA0UNDyAEIAFB+ARqENgbDAELCyABQQA2AoQFIAFB+ARqIAAgBRDZGyAAQaADaiABQYQFaiABQfgEahDOHCECDA0LAkACQAJAAkAgAywAASIEQfMAaw4CAQMACyAEQdMARg0BIARB5QBHDQ8gACADQQJqNgIAIAEgAUGgBGpB2P4JEMAbKQIANwOIASAAIAFBiAFqELEcIQIMDwsgACADQQJqNgIAIAEgAUGYBGpB2/4JEMAbKQIANwOQASAAIAFBkAFqELEcIQIMDgsgACADQQJqNgIAIAEgAUGQBGpB3v4JEMAbKQIANwOYASAAIAFBmAFqELEcIQIMDQsgACADQQJqNgIAIAEgAUGIBGpB4v4JEMAbKQIANwOgASAAIAFBoAFqELEcIQIMDAsCQAJAAkACQAJAAkAgAywAASIEQekAaw4FARERAwUACyAEQckAaw4EARAQAxALIAAgA0ECajYCACABIAFBgARqQeT+CRDAGykCADcDqAEgACABQagBahCxHCECDA8LIAAgA0ECajYCACABIAFB+ANqQeb+CRDAGykCADcDsAEgACABQbABahCxHCECDA4LIAAgA0ECajYCACABIAFB8ANqQb/+CRDAGykCADcDuAEgACABQbgBahCxHCECDA0LIAAgA0ECajYCACABIAFB6ANqQen+CRDAGykCADcDwAEgACABQcABahCxHCECDAwLIAAgA0ECajYCACAAQd8AEMUbBEAgASABQeADakHs/gkQwBspAgA3A8gBIAAgAUHIAWoQshwhAgwMCyABIAAQ9hsiAjYC+AQgAkUNCiAAIAFB+ARqQez+CRC4HCECDAsLAkACQAJAAkACQAJAIAMsAAEiBEHhAGsOBwEQEBACEAMACyAEQfQAaw4FAw8PAAQPCyAAELkcIQIMDgsgACADQQJqNgIAIAEgAUHYA2pB7/4JEMAbKQIANwPQASAAIAFB0AFqELEcIQIMDQsgACAD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Amo2AgAgAEGDnAoQ3hshAgwKCyAAIAAoAgBBAmo2AgAgAEGOnAoQ3hshAgwJCwJAAkACQAJAAkACQCAAQQEQwxsiAUHhAGsOBwEODg4CDgMACyABQfQAaw4EAw0NBA0LIAAgACgCAEECajYCACAAQZmcChDeGyECDAwLIAAgACgCAEECajYCACAAQaicChDeGyECDAsLIAAgACgCAEECajYCACAAQe6bChDeGyECDAoLIAAgACgCAEECajYCACAAQbOcChDeGyECDAkLIAAgACgCAEECajYCACAAQb2cChDeGyECDAgLAkACQAJAIABBARDDGyIBQe8Aaw4EAAoKAQILIAAgACgCAEECajYCACAAQcqcChDeGyECDAkLIAAgACgCAEECajYCACAAQdWcChDeGyECDAgLIAFB0gBHDQcgACAAKAIAQQJqNgIAIABB35wKEN4bIQIMBwsCQAJAAkACQAJAAkAgAEEBEMMbIgFB7ABrDgkBAAwMAwwMBAUCCyAAIAAoAgBBAmo2AgAgAEHqnAoQ3hshAgwLCyAAIAAoAgBBAmo2AgAgAEH2nAoQ3hshAgwKCyABQcwARw0JIAAgACgCAEECajYCACAAQYCdChDeGyECDAkLIAAgACgCAEECajYCACAAQYudChDeGyECDAgLIAAgACgCAEECajYCACAAQfacChDeGyECDAcLIAAgACgCAEECajYCACAAQZadChDeGyECDAYLIABBARDDG0H1AEcNBSAAIAAoAgBBAmo2AgAgAEGhnQoQ3hshAgwFCwJAAkAgAEEBEMMbIgFBzQBHBEAgAUHTAEYNAiABQfMARg0BIAFB7QBHDQcgACAAKAIAQQJqNgIAIABBq50KEN4bIQIMBwsgACAAKAIAQQJqNgIAIABBtZ0KEN4bIQIMBgsgACAAKAIAQQJqNgIAIABBwJ0KEN4bIQIMBQsgACAAKAIAQQJqNgIAIABBy50KEN4bIQIMBAsgAEEBEMMbQfMARw0DIAAgACgCAEECajYCACAAQdedChDeGyECDAMLIABBARDDG0Ewa0EJSw0CIAAgACgCAEECajYCACADIAAQmhwiAjYCGCACRQ0BIAAgA0EYahCjHSECDAILIAAgACgCAEECajYCACAAQfiZChDeGyECDAELQQAhAgsgA0EgaiQAIAILJAAgAEEHQQFBAUEBEIAcIABBvPsJNgIAIAAgASkCADcCCCAACzACAX8BfiMAQRBrIgIkACACIAApAggiAzcDACACIAM3AwggASACEIIcIAJBEGokAAsoACAAQRdBAUEBQQEQgBwgACACNgIMIAAgATYCCCAAQaD8CTYCACAAC0MBAX8jAEEQayICJAAgACgCCCABELwbIAIgAkEIakGA/QkQwBspAgA3AwAgASACEIIcIAAoAgwgARC8GyACQRBqJAALFgAgACABKAIMIgEgASgCACgCGBECAAsuAQF/An9BACAAKAIAIgEgACgCBEYNABogACABQQFqNgIAIAEtAAALQRh0QRh1Cy8AIABBJEECQQJBAhCAHCAAQQA6ABAgAEEANgIMIAAgATYCCCAAQZD9CTYCACAAC0EBA38jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARCkHCEEIAAoAgwgARClHCEDIAQQphwLIAJBEGokACADC0kBAX8jAEEQayIDJAAgAyACOgAPIAAgATYCACABLQAAIQEgAEEBOgAFIAAgAToABCAAKAIAIANBD2otAAA6AAAgA0EQaiQAIAALJAEBfyAALQAFIgJBAkcEQCACRQ8LIAAgASAAKAIAKAIAEQMACxoAIAAtAAUEQCAAKAIAIABBBGotAAA6AAALC0EBA38jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARCkHCEEIAAoAgwgARCoHCEDIAQQphwLIAJBEGokACADCyQBAX8gAC0ABiICQQJHBEAgAkUPCyAAIAEgACgCACgCBBEDAAtBAQN/IwBBEGsiAiQAIAAtABBFBEAgAkEIaiAAQRBqQQEQpBwhBCAAKAIMIAEQqhwhAyAEEKYcCyACQRBqJAAgAwskAQF/IAAtAAciAkECRwRAIAJFDwsgACABIAAoAgAoAggRAwALSwECfyMAQRBrIgIkACAALQAQRQRAIAJBCGogAEEQakEBEKQcIQMgACgCDCIAIAEgACgCACgCDBEDACEAIAMQphwLIAJBEGokACAAC0cBAn8jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARCkHCEDIAAoAgwiACABIAAoAgAoAhARAgAgAxCmHAsgAkEQaiQAC0cBAn8jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARCkHCEDIAAoAgwiACABIAAoAgAoAhQRAgAgAxCmHAsgAkEQaiQACxUAIAEgAGsiAQRAIAIgACABELAbCwvQAQECfyMAQTBrIgEkACABIAFBKGpBtI8KEMAbKQIANwMQAkAgACABQRBqEMEbBEAgABCGHBogAUEgaiAAQQAQxhsgAEHfABDFG0UNASAAIAFBIGoQwhwhAgwBCyABIAFBGGpBt48KEMAbKQIANwMIIAAgAUEIahDBG0UNACABQSBqIABBABDGGyABQSBqEMcbDQAgAEHwABDFG0UNACAAEIYcGiABQSBqIABBABDGGyAAQd8AEMUbRQ0AIAAgAUEgahDCHCECCyABQTBqJAAgAgusEQEGfyMAQZAEayIBJAACQCAAQeYAEMUbRQ0AIAECf0EBIABBABDDGyIEQcwARg0AGiAEQf8BcSIDQfIARwRAQQEgA0HsAEYNARogA0HSAEcNAgtBAAs6AI8EIAAgACgCAEEBajYCACABQYAEahDaGyEDIAEgAUH4A2pBqJAKEMAbKQIANwPwAQJAIAAgAUHwAWoQwRsEQCABQfADakGP/gkQwBsaIAEgASkD8AM3A4AEDAELIAEgAUHoA2pBq5AKEMAbKQIANwPoASAAIAFB6AFqEMEbBEAgAUHwA2pBkv4JEMAbGiABIAEpA/ADNwOABAwBCyABIAFB4ANqQa6QChDAGykCADcD4AEgACABQeABahDBGwRAIAFB8ANqQZT+CRDAGxogASABKQPwAzcDgAQMAQsgASABQdgDakGxkAoQwBspAgA3A9gBIAAgAUHYAWoQwRsEQCABQfADakGX/gkQwBsaIAEgASkD8AM3A4AEDAELIAEgAUHQA2pBtJAKEMAbKQIANwPQASAAIAFB0AFqEMEbBEAgAUHwA2pBrv4JEMAbGiABIAEpA/ADNwOABAwBCyABIAFByANqQbeQChDAGykCADcDyAEgACABQcgBahDBGwRAIAFB8ANqQcH+CRDAGxogASABKQPwAzcDgAQMAQsgASABQcADakG6kAoQwBspAgA3A8ABIAAgAUHAAWoQwRsEQCABQfADakHG/gkQwBsaIAEgASkD8AM3A4AEDAELIAEgAUG4A2pBvZAKEMAbKQIANwO4ASAAIAFBuAFqEMEbBEAgAUHwA2pByP4JEMAbGiABIAEpA/ADNwOABAwBCyABIAFBsANqQcCQChDAGykCADcDsAEgACABQbABahDBGwRAIAFB8ANqQcv+CRDAGxogASABKQPwAzcDgAQMAQsgASABQagDakHDkAoQwBspAgA3A6gBIAAgAUGoAWoQwRsEQCABQfADakHN/gkQwBsaIAEgASkD8AM3A4AEDAELIAEgAUGgA2pBxpAKEMAbKQIANwOgASAAIAFBoAFqEMEbBEAgAUHwA2pB0P4JEMAbGiABIAEpA/ADNwOABAwBCyABIAFBmANqQcmQChDAGykCADcDmAEgACABQZgBahDBGwRAIAFB8ANqQdP+CRDAGxogASABKQPwAzcDgAQMAQsgASABQZADakHMkAoQwBspAgA3A5ABIAAgAUGQAWoQwRsEQCABQfADakHW/gkQwBsaIAEgASkD8AM3A4AEDAELIAEgAUGIA2pBz5AKEMAbKQIANwOIASAAIAFBiAFqEMEbBEAgAUHwA2pB2P4JEMAbGiABIAEpA/ADNwOABAwBCyABIAFBgANqQdKQChDAGykCADcDgAEgACABQYABahDBGwRAIAFB8ANqQdv+CRDAGxogASABKQPwAzcDgAQMAQsgASABQfgCakHVkAoQwBspAgA3A3ggACABQfgAahDBGwRAIAFB8ANqQd7+CRDAGxogASABKQPwAzcDgAQMAQsgASABQfACakHYkAoQwBspAgA3A3AgACABQfAAahDBGwRAIAFB8ANqQeL+CRDAGxogASABKQPwAzcDgAQMAQsgASABQegCakHbkAoQwBspAgA3A2ggACABQegAahDBGwRAIAFB8ANqQeT+CRDAGxogASABKQPwAzcDgAQMAQsgASABQeACakHekAoQwBspAgA3A2AgACABQeAAahDBGwRAIAFB8ANqQeb+CRDAGxogASABKQPwAzcDgAQMAQsgASABQdgCakHhkAoQwBspAgA3A1ggACABQdgAahDBGwRAIAFB8ANqQb/+CRDAGxogASABKQPwAzcDgAQMAQsgASABQdACakHkkAoQwBspAgA3A1AgACABQdAAahDBGwRAIAFB8ANqQen+CRDAGxogASABKQPwAzcDgAQMAQsgASABQcgCakHnkAoQwBspAgA3A0ggACABQcgAahDBGwRAIAFB8ANqQe/+CRDAGxogASABKQPwAzcDgAQMAQsgASABQcACakHqkAoQwBspAgA3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ahDHGw0AIABBxQAQxRtFDQAgAEGgA2ogASACQQhqEN8cIQMLIAJBEGokACADCzkAIABBoANqQQwQ/BshACABKAIAQQBHIQEgAEHBAEEBQQFBARCAHCAAIAE6AAggAEHwgQo2AgAgAAuWAQEFfyMAQRBrIgIkAAJ/QQAgABDEG0EJSQ0AGiACQQhqIAAoAgAiASABQQhqEJAZIgMoAgAhASADKAIEIQQCQANAIAEgBEYNASABLAAAIQUgAUEBaiEBIAUQoBcNAAtBAAwBCyAAIAAoAgBBCGo2AgBBACAAQcUAEMUbRQ0AGiAAQaADaiADEOQcCyEBIAJBEGokACABC5YBAQV/IwBBEGsiAiQAAn9BACAAEMQbQRFJDQAaIAJBCGogACgCACIBIAFBEGoQkBkiAygCACEBIAMoAgQhBAJAA0AgASAERg0BIAEsAAAhBSABQQFqIQEgBRCgFw0AC0EADAELIAAgACgCAEEQajYCAEEAIABBxQAQxRtFDQAaIABBoANqIAMQ5hwLIQEgAkEQaiQAIAELlgEBBX8jAEEQayICJAACf0EAIAAQxBtBIUkNABogAkEIaiAAKAIAIgEgAUEgahCQGSIDKAIAIQEgAygCBCEEAkADQCABIARGDQEgASwAACEFIAFBAWohASAFEKAXDQALQQAMAQsgACAAKAIAQSBqNgIAQQAgAEHFABDFG0UNABogAEGgA2ogAxDoHAshASACQRBqJAAgAQsNACAAQaADaiABEIcdCxwBAX8gACgCACECIAAgASgCADYCACABIAI2AgALUAEBfyMAQRBrIgQkACAAQRgQ/BshACAEQQhqIAEQwBshASADKAIAIQMgAigCACECIAQgASkCADcDACAAIAQgAiADEJcdIQIgBEEQaiQAIAILRgIBfwF+IwBBEGsiAyQAIABBFBD8GyEAIAEoAgAhASADIAIpAgAiBDcDACADIAQ3AwggACABIAMQmR0hAiADQRBqJAAgAgsPACAAQaADaiABIAIQmx0LgQEBAn8jAEEQayICJAACQAJAIABBABDDGyIBQcQARwRAIAFB/wFxQdQARw0BIAIgABDoGyIBNgIMIAFFDQIgAEGUAWogAkEMahDYGwwCCyACIAAQ4RsiATYCCCABRQ0BIABBlAFqIAJBCGoQ2BsMAQsgABDsGyEBCyACQRBqJAAg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IwBBEGsiAiQAIAIgATYCDCAAKAIAIgAgAUECdGpBjANqIgEgASgCACIBQQFqNgIAIAIgATYCCCACIABBoANqQRAQ/BsgAkEMaigCACACQQhqKAIAEPIcIgE2AgQgAEHMAmoQkxwoAgAgAkEEahDYGyACQRBqJAAgAQttAgF/A34jAEEwayIEJAAgAEEgEPwbIQAgBCABKQIAIgU3AyggBCACKQIAIgY3AyAgBCADKQIAIgc3AxggBCAFNwMQIAQgBjcDCCAEIAc3AwAgACAEQRBqIARBCGogBBCBHSEDIARBMGokACADC2wCAX8BfiMAQTBrIgIkACACIAJBKGpBuIcKEMAbKQIANwMQIAEgAkEQahCCHCACIAApAggiAzcDCCACIAM3AyAgASACQQhqEIIcIAIgAkEYakHBhwoQwBspAgA3AwAgASACEIIcIAJBMGokAAsxACAAQQwQ/BshACABKAIAIQEgAEEcQQBBAUEBEIAcIAAgATYCCCAAQeCICjYCACAAC0YCAX8BfiMAQRBrIgMkACAAQRQQ/BshACABKAIAIQEgAyACKQIAIgQ3AwAgAyAENwMIIAAgASADEPwcIQIgA0EQaiQAIAILMQAgAEEMEPwbIQAgASgCACEBIABBH0EAQQFBARCAHCAAIAE2AgggAEHwiwo2AgAgAAsoACAAQRtBAUEBQQEQgBwgACACNgIMIAAgATYCCCAAQdyHCjYCACAAC3oBAX8jAEEgayICJAACQCACAn8CQAJAAkAgACgCCA4DAAECBAsgAkEYakHMiAoQwBsMAgsgAkEQakHPiAoQwBsMAQsgAkEIakHSiAoQwBsLKQIANwMAIAEgAhCCHAsgACgCDCIABEAgASAAQQFrrRD0HAsgAkEgaiQAC3gBAn8jAEEwayICJAACQCABUARAIABBMBC9GwwBCyACQRBqEPUcIQMDQCABUEUEQCADQQFrIgMgASABQgqAIgFCCn59p0EwcjoAAAwBCwsgAiACQQhqIAMgAkEQahD1HBCQGSkCADcDACAAIAIQ9hwLIAJBMGokAAsHACAAQRVqCzACAX8BfiMAQRBrIgIkACACIAEpAgAiAzcDACACIAM3AwggACACEIIcIAJBEGokAAstACMAQRBrIgAkACAAIABBCGpBzIkKEMAbKQIANwMAIAEgABCCHCAAQRBqJAALDAAgACgCCCABELwbCygAIABBHUEAQQFBARCAHCAAIAI2AgwgACABNgIIIABB4IkKNgIAIAALUQECfyMAQRBrIgIkACAAKAIMIgMgASADKAIAKAIQEQIAIAAoAgwgARClHEUEQCACIAJBCGpB0IoKEMAbKQIANwMAIAEgAhCCHAsgAkEQaiQACyAAIAAoAgggARC8GyAAKAIMIgAgASAAKAIAKAIUEQIACysAIABBHkEAQQFBARCAHCAAIAE2AgggAEHcigo2AgAgACACKQIANwIMIAALVwEBfyMAQSBrIgIkACACIAJBGGpBzIsKEMAbKQIANwMIIAEgAkEIahCCHCAAQQxqIAEQ/hwgAiACQRBqQdaLChDAGykCADcDACABIAIQghwgAkEgaiQAC40BAQV/IwBBEGsiAiQAQQEhAwNAIAAoAgQgBEcEQCABKAIEIQUgA0EBcUUEQCACIAJBCGpB4osKEMAbKQIANwMAIAEgAhCCHAsgASgCBCEGIAAoAgAgBEECdGooAgAgARC8GyAEQQFqIQQgBiABKAIERgR/IAEgBRCRCyADBUEACyEDDAELCyACQRBqJAALQwEBfyMAQRBrIgIkACAAKAIIIgAgASAAKAIAKAIQEQIAIAIgAkEIakHcjAoQwBspAgA3AwAgASACEIIcIAJBEGokAAsWACAAKAIIIgAgASAAKAIAKAIUEQIACzgAIABBLUEBQQFBARCAHCAAQeiMCjYCACAAIAEpAgA3AgggACACKQIANwIQIAAgAykCADcCGCAAC3MCAX8BfiMAQTBrIgIkACACIAJBKGpBzI0KEMAbKQIANwMQIAEgAkEQahCCHCACIAApAhgiAzcDCCACIAM3AyAgASACQQhqEIIcIAIgAkEYakHBhwoQwBspAgA3AwAgASACEIIcIAAgARCDHSACQTBqJAALqAEBAn8jAEFAaiICJAAgAEEIaiIDENocRQRAIAIgAkE4akHi/gkQwBspAgA3AxggASACQRhqEIIcIAMgARD+HCACIAJBMGpB1v4JEMAbKQIANwMQIAEgAkEQahCCHAsgAiACQShqQeSBChDAGykCADcDCCABIAJBCGoQghwgAEEQaiABEP4cIAIgAkEgakGK/gkQwBspAgA3AwAgASACEIIcIAJBQGskAAtkAQF/IwBBIGsiAiQAIAIgAkEYakG8jgoQwBspAgA3AwggASACQQhqEIIcIAAoAggiAC0ABEEtRgRAIAAgARCDHQsgAiACQRBqQb+OChDAGykCADcDACABIAIQghwgAkEgaiQACywAIABBxABBAUEBQQEQgBwgACABNgIIIABB0I4KNgIAIAAgAikCADcCDCAAC3YCAX8BfiMAQTBrIgIkACACIAJBKGpB5IEKEMAbKQIANwMQIAEgAkEQahCCHCAAKAIIIAEQvBsgAiACQSBqQYr+CRDAGykCADcDCCABIAJBCGoQghwgAiAAKQIMIgM3AwAgAiADNwMYIAEgAhCCHCACQTBqJAALVAIBfwF+IwBBEGsiAiQAIABBEBD8GyEAIAIgASkCACIDNwMAIAIgAzcDCCAAQTtBAUEBQQEQgBwgAEHEjwo2AgAgACACKQIANwIIIAJBEGokACAAC04CAX8BfiMAQSBrIgIkACACIAJBGGpBtI8KEMAbKQIANwMIIAEgAkEIahCCHCACIAApAggiAzcDACACIAM3AxAgASACEIIcIAJBIGokAAtYAgF/AX4jAEEQayIFJAAgAEEcEPwbIQAgAS0AACEBIAUgAikCACIGNwMIIAQoAgAhBCADKAIAIQMgBSAGNwMAIAAgASAFIAMgBBCKHSEDIAVBEGokACADCz8BAX4gAEE+QQFBAUEBEIAcIAAgBDYCDCAAIAM2AgggAEGQkQo2AgAgAikCACEFIAAgAToAGCAAIAU3AhAgAAvRAgICfwF+IwBB8ABrIgIkACACIAA2AmwgAiABNgJoIAFBKBC9GwJAIAAtABgEQCAAKAIMIgMEQCADIAEQvBsgAUEgEL0bIAIgACkCECIENwMwIAIgBDcDYCABIAJBMGoQghwgAUEgEL0bCyACIAJB2ABqQeyRChDAGykCADcDKCABIAJBKGoQghwgAiAAKQIQIgQ3AyAgAiAENwNQIAEgAkEgahCCHCABQSAQvRsgAkHoAGoQjB0MAQsgAkHoAGoQjB0gAUEgEL0bIAIgACkCECIENwMYIAIgBDcDSCABIAJBGGoQghwgAiACQUBrQfGRChDAGykCADcDECABIAJBEGoQghwgACgCDEUNACABQSAQvRsgAiAAKQIQIgQ3AwggAiAENwM4IAEgAkEIahCCHCABQSAQvRsgACgCDCABELwbCyABQSkQvRsgAkHwAGokAAtBAQJ/IwBBEGsiASQAIAAoAgQhAiAAKAIAQSgQvRsgASACKAIIEI0dIAAoAgAQvBsgACgCAEEpEL0bIAFBEGokAAshACAAQSJBAUEBQQEQgBwgACABNgIIIABBgJIKNgIAIAAL3wEBBX8jAEFAaiICJAAgAkEwaiABQQxqEI8dIQUgAkEgaiABQRBqEI8dIQYgASgCBCEEIAAoAgggARC8GwJAAkACQAJAIAEoAhAiA0EBag4CAgABCyABIAQQkQsMAgsgA0EBIANBAUsbIQRBASEDA0AgAyAERg0CIAIgAkEQakHiiwoQwBspAgA3AwAgASACEIIcIAEgAzYCDCAAKAIIIAEQvBsgA0EBaiEDDAALAAsgAiACQRhqQdyMChDAGykCADcDCCABIAJBCGoQghwLIAYQ3BwgBRDcHCACQUBrJAALSQEBfyMAQRBrIgIkACACQX82AgwgACABNgIAIAEoAgAhASAAQQE6AAggACABNgIEIAAoAgAgAkEMaigCADYCACACQRBqJAAgAAtPAgF/AX4jAEEQayIEJAAgAEEYEPwbIQAgASgCACEBIAQgAikCACIFNwMIIAMoAgAhAyAEIAU3AwAgACABIAQgAxCRHSEDIARBEGokACADCzgBAX4gAEEvQQFBAUEBEIAcIAAgATYCCCAAQfSSCjYCACACKQIAIQQgACADNgIUIAAgBDcCDCAAC7ECAgJ/AX4jAEGAAWsiAiQAIABBDGoiAyACQfgAakHW/gkQwBsQkx0EQCACIAJB8ABqQeSBChDAGykCADcDOCABIAJBOGoQghwLIAIgAkHoAGpB5IEKEMAbKQIANwMwIAEgAkEwahCCHCAAKAIIIAEQvBsgAiACQeAAakHUkwoQwBspAgA3AyggASACQShqEIIcIAIgACkCDCIENwMgIAIgBDcDWCABIAJBIGoQghwgAiACQdAAakHXkwoQwBspAgA3AxggASACQRhqEIIcIAAoAhQgARC8GyACIAJByABqQYr+CRDAGykCADcDECABIAJBEGoQghwgAyACQfgAakHW/gkQwBsQkx0EQCACIAJBQGtBiv4JEMAbKQIANwMIIAEgAkEIahCCHAsgAkGAAWokAAslACAAEMQbIAEQxBtGBH8gACgCACAAKAIEIAEoAgAQ7hsFQQALC0YCAX8BfiMAQRBrIgMkACAAQRQQ/BshACADIAEpAgAiBDcDCCACKAIAIQIgAyAENwMAIAAgAyACEJUdIQIgA0EQaiQAIAILMQEBfiAAQTpBAUEBQQEQgBwgAEHkkwo2AgAgASkCACEDIAAgAjYCECAAIAM3AgggAAt2AgF/AX4jAEEwayICJAAgAiAAKQIIIgM3AxAgAiADNwMoIAEgAkEQahCCHCACIAJBIGpB5IEKEMAbKQIANwMIIAEgAkEIahCCHCAAKAIQIAEQvBsgAiACQRhqQYr+CRDAGykCADcDACABIAIQghwgAkEwaiQACzgBAX4gAEE1QQFBAUEBEIAcIABBzJQKNgIAIAEpAgAhBCAAIAM2AhQgACACNgIQIAAgBDcCCCAAC7IBAgJ/AX4jAEFAaiICJAAgAiAAKQIIIgQ3AxggAiAENwM4IAEgAkEYahCCHCACIAJBMGpB4v4JEMAbKQIANwMQIAEgAkEQahCCHCAAKAIQIgMgASADKAIAKAIQEQIAIAIgAkEoakGolQoQwBspAgA3AwggASACQQhqEIIcIAAoAhQiACABIAAoAgAoAhARAgAgAiACQSBqQYr+CRDAGykCADcDACABIAIQghwgAkFAayQACysAIABBN0EBQQFBARCAHCAAIAE2AgggAEG0lQo2AgAgACACKQIANwIMIAALYQEBfyMAQSBrIgIkACAAKAIIIAEQvBsgAiACQRhqQeSBChDAGykCADcDCCABIAJBCGoQghwgAEEMaiABEP4cIAIgAkEQakGK/gkQwBspAgA3AwAgASACEIIcIAJBIGokAAtGAgF/AX4jAEEQayIDJAAgAEEUEPwbIQAgASgCACEBIAMgAikCACIENwMAIAMgBDcDCCAAIAEgAxCcHSECIANBEGokACACCysAIABBPEEBQQFBARCAHCAAIAE2AgggAEGclgo2AgAgACACKQIANwIMIAALfwEBfyMAQTBrIgIkACACIAJBKGpB5IEKEMAbKQIANwMQIAEgAkEQahCCHCAAKAIIIAEQvBsgAiACQSBqQYCXChDAGykCADcDCCABIAJBCGoQghwgAEEMaiABEP4cIAIgAkEYakGK/gkQwBspAgA3AwAgASACEIIcIAJBMGokAAsvACAAQTlBAUEBQQEQgBwgACADOgANIAAgAjoADCAAIAE2AgggAEGMlwo2AgAgAAuFAQEBfyMAQTBrIgIkACAALQAMBEAgAiACQShqQYD9CRDAGykCADcDECABIAJBEGoQghwLIAIgAkEgakHslwoQwBspAgA3AwggASACQQhqEIIcIAAtAA0EQCACIAJBGGpB85cKEMAbKQIANwMAIAEgAhCCHAsgACgCCCABELwbIAJBMGokAAtYAQJ/IwBBEGsiAiQAIAAhASACAn8gAEEAEMMbQTBrQQlNBEAgARDIHAwBCyABEMccCyIBNgIMIAEEfyAAQaADaiACQQxqEKQdBUEACyEAIAJBEGokACAACz0CAX8BfiMAQRBrIgIkACAAQRAQ/BshACACIAEpAgAiAzcDACACIAM3AwggACACEJwcIQAgAkEQaiQAIAALKAAgAEEWQQFBAUEBEIAcIAAgAjYCDCAAIAE2AgggAEGomAo2AgAgAAs1ACAAQaADakEMEPwbIQAgASgCACEBIABBBEEBQQFBARCAHCAAIAE2AgggAEHsnQo2AgAgAAsxACAAQQwQ/BshACABKAIAIQEgAEErQQFBAUEBEIAcIAAgATYCCCAAQZyZCjYCACAAC0MBAX8jAEEQayICJAAgAiACQQhqQbD+CRDAGykCADcDACABIAIQghwgACgCCCIAIAEgACgCACgCEBECACACQRBqJAALMQAgAEEMEPwbIQAgASgCACEBIABBE0EBQQFBARCAHCAAIAE2AgggAEHsngo2AgAgAAs5AQF/IwBBEGsiAiQAIAIgAkEIakHYngoQwBspAgA3AwAgASACEIIcIAAoAgggARC8GyACQRBqJAALOQEBfyMAQRBrIgIkACACIAJBCGpB0J8KEMAbKQIANwMAIAEgAhCCHCAAKAIIIAEQvBsgAkEQaiQACzkBAX8jAEEQayICJAAgAiACQQhqQYD9CRDAGykCADcDACABIAIQghwgACgCCCABELwbIAJBEGokAAsWACAAIAEoAggiASABKAIAKAIYEQIACzgBAX4gAEEzQQFBAUEBEIAcIAAgATYCCCAAQdSgCjYCACACKQIAIQQgACADNgIUIAAgBDcCDCAAC0QCAX8BfiMAQRBrIgIkACAAKAIIIAEQvBsgAiAAKQIMIgM3AwAgAiADNwMIIAEgAhCCHCAAKAIUIAEQvBsgAkEQaiQACygAIABBMEEBQQFBARCAHCAAIAI2AgwgACABNgIIIABBvKEKNgIAIAALfwEBfyMAQTBrIgIkACACIAJBKGpB5IEKEMAbKQIANwMQIAEgAkEQahCCHCAAKAIIIAEQvBsgAiACQSBqQaSiChDAGykCADcDCCABIAJBCGoQghwgACgCDCABELwbIAIgAkEYakGnogoQwBspAgA3AwAgASACEIIcIAJBMGokAAswACAAQckAQQFBAUEBEIAcIAAgAzoAECAAIAI2AgwgACABNgIIIABBtKIKNgIAIAALjAEBAn8jAEEQayICJAACQCAALQAQBEAgAUHbABC9GyAAKAIIIAEQvBsgAUHdABC9GwwBCyABQS4QvRsgACgCCCABELwbCyAAKAIMIgMtAARByQBrQf8BcUECTwR/IAIgAkEIakGUowoQwBspAgA3AwAgASACEIIcIAAoAgwFIAMLIAEQvBsgAkEQaiQACzAAIABBygBBAUEBQQEQgBwgACADNgIQIAAgAjYCDCAAIAE2AgggAEGgowo2AgAgAAuWAQECfyMAQSBrIgIkACABQdsAEL0bIAAoAgggARC8GyACIAJBGGpBhKQKEMAbKQIANwMIIAEgAkEIahCCHCAAKAIMIAEQvBsgAUHdABC9GyAAKAIQIgMtAARByQBrQf8BcUECTwR/IAIgAkEQakGUowoQwBspAgA3AwAgASACEIIcIAAoAhAFIAMLIAEQvBsgAkEgaiQACysAIABBPUEBQQFBARCAHCAAIAE2AgggAEGUpAo2AgAgACACKQIANwIMIAALLwEBfyAAKAIIIgIEQCACIAEQvBsLIAFB+wAQvRsgAEEMaiABEP4cIAFB/QAQvRsLKwAgAEExQQFBAUEBEIAcIAAgATYCCCAAQYClCjYCACAAIAIpAgA3AgwgAAtwAQF/IwBBIGsiBiQAIABBIBD8GyEAIAYgASkCADcDGCACKAIAIQIgBiADKQIANwMQIAQtAAAhBCAFLQAAIQUgBiAGKQMYNwMIIAYgBikDEDcDACAAIAZBCGogAiAGIAQgBRC3HSEFIAZBIGokACAFC00BAX4gAEE4QQFBAUEBEIAcIABB9KUKNgIAIAEpAgAhBiAAIAI2AhAgACAGNwIIIAMpAgAhBiAAIAU6AB0gACAEOgAcIAAgBjcCFCAAC7UCAQJ/IwBB8ABrIgIkACAALQAcBEAgAiACQegAakHQpgoQwBspAgA3AzAgASACQTBqEIIcCyACIAJB4ABqQdymChDAGykCADcDKCABIAJBKGoQghwgAC0AHQRAIAIgAkHYAGpBvI4KEMAbKQIANwMgIAEgAkEgahCCHAsgAUEgEL0bIABBCGoiAxDaHEUEQCACIAJB0ABqQeSBChDAGykCADcDGCABIAJBGGoQghwgAyABEP4cIAIgAkHIAGpBiv4JEMAbKQIANwMQIAEgAkEQahCCHAsgACgCECABELwbIABBFGoiABDaHEUEQCACIAJBQGtB5IEKEMAbKQIANwMIIAEgAkEIahCCHCAAIAEQ/hwgAiACQThqQYr+CRDAGykCADcDACABIAIQghwLIAJB8ABqJAALOwEBfiAAQTRBAUEBQQEQgBwgAEHopgo2AgAgASkCACEEIAAgAjYCECAAIAQ3AgggACADKQIANwIUIAALVwIBfwF+IwBBIGsiAiQAIAIgACkCCCIDNwMIIAIgAzcDGCABIAJBCGoQghwgACgCECABELwbIAIgACkCFCIDNwMAIAIgAzcDECABIAIQghwgAkEgaiQACy8AIABBMkEBQQFBARCAHCAAIAM2AhAgACACNgIMIAAgATYCCCAAQdSnCjYCACAAC6cBAQF/IwBBQGoiAiQAIAIgAkE4akHkgQoQwBspAgA3AxggASACQRhqEIIcIAAoAgggARC8GyACIAJBMGpBuKgKEMAbKQIANwMQIAEgAkEQahCCHCAAKAIMIAEQvBsgAiACQShqQb6oChDAGykCADcDCCABIAJBCGoQghwgACgCECABELwbIAIgAkEgakGK/gkQwBspAgA3AwAgASACEIIcIAJBQGskAAtfAQF/IwBBMGsiAiQAIAIgAkEoakG0qQoQwBspAgA3AwggASACQQhqEIIcIAJBGGogACgCCBCNHSABEI4dIAIgAkEQakGK/gkQwBspAgA3AwAgASACEIIcIAJBMGokAAsMACAAQQhqIAEQ/hwLOQEBfyMAQRBrIgIkACACIAJBCGpBlKsKEMAbKQIANwMAIAEgAhCCHCAAKAIIIAEQvBsgAkEQaiQAC1cBAX8jAEEgayICJAAgAiACQRhqQYSsChDAGykCADcDCCABIAJBCGoQ9hwgACgCCCABELwbIAIgAkEQakGK/gkQwBspAgA3AwAgASACEPYcIAJBIGokAAsxACAAQQwQ/BshACABKAIAIQEgAEEoQQFBAUEBEIAcIAAgATYCCCAAQZisCjYCACAAC54BAQF/IwBBQGoiAiQAAkAgAgJ/AkACQAJAAkACQAJAIAAoAggOBgABAgMEBQcLIAJBOGpBiK0KEMAbDAULIAJBMGpBl60KEMAbDAQLIAJBKGpBqa0KEMAbDAMLIAJBIGpB8K0KEMAbDAILIAJBGGpBoq4KEMAbDAELIAJBEGpB1K4KEMAbCykCADcDCCABIAJBCGoQghwLIAJBQGskAAsYACAAIAEoAghBAnRB+MoKaigCABDAGxoLLwAgAEEqQQFBAUEBEIAcIAAgAzYCECAAIAI6AAwgACABNgIIIABB1K8KNgIAIAALYgEBfyMAQSBrIgIkACAALQAMBEAgAiACQRhqQbD+CRDAGykCADcDCCABIAJBCGoQghwLIAJBEGogACgCCCIAIAAoAgAoAhgRAgAgAiACKQMQNwMAIAEgAhCCHCACQSBqJAALRgIBfwF+IwBBEGsiAyQAIABBFBD8GyEAIAEoAgAhASADIAIpAgAiBDcDACADIAQ3AwggACABIAMQxx0hAiADQRBqJAAgAgs0ACAAQQggAS0ABSABLQAGIAEtAAcQgBwgACABNgIIIABBwLAKNgIAIAAgAikCADcCDCAAC4ABAgJ/AX4jAEEwayICJAAgACgCCCIDIAEgAygCACgCEBECACACIAJBKGpBoLEKEMAbKQIANwMQIAEgAkEQahCCHCACIAApAgwiBDcDCCACIAQ3AyAgASACQQhqEIIcIAIgAkEYakGnogoQwBspAgA3AwAgASACEIIcIAJBMGokAAtUAgF/AX4jAEEQayICJAAgAEEQEPwbIQAgAiABKQIAIgM3AwAgAiADNwMIIABBLkEBQQFBARCAHCAAQbSxCjYCACAAIAIpAgA3AgggAkEQaiQAIAALHAAgAUHbABC9GyAAQQhqIAEQ/hwgAUHdABC9GwsoACAAQRhBAUEBQQEQgBwgACACNgIMIAAgATYCCCAAQbiyCjYCACAAC54BAQF/IwBBQGoiAiQAAkAgAgJ/AkACQAJAAkACQAJAIAAoAggOBgABAgMEBQcLIAJBOGpBiK0KEMAbDAULIAJBMGpBl60KEMAbDAQLIAJBKGpBiLQKEMAbDAMLIAJBIGpBlLQKEMAbDAILIAJBGGpBobQKEMAbDAELIAJBEGpBrrQKEMAbCykCADcDCCABIAJBCGoQghwLIAJBQGskAAsYACAAIAEoAghBAnRBkMsKaigCABDAGxoLIQEBfyAAIABBHGo2AgggACAAQQxqIgE2AgQgACABNgIACz0CAX8BfiMAQRBrIgIkACAAQRAQ/BshACACIAEpAgAiAzcDACACIAM3AwggACACENEdIQAgAkEQaiQAIAALVAIBfwF+IwBBEGsiAiQAIABBEBD8GyEAIAIgASkCACIDNwMAIAIgAzcDCCAAQSNBAUEBQQEQgBwgAEHQtQo2AgAgACACKQIANwIIIAJBEGokACAAC4MBAQF+IABBIEEBQQFBARCAHCAAQeS0CjYCACABKQIAIQIgAEECOgAHIAAgAjcCCCAAQYIEOwAFIABBAUECIABBCGoiASgCACABENIdENMdGzoABiABKAIAIAEQ0h0Q1B0EQCAAQQE6AAcLIAEoAgAgARDSHRDVHQRAIABBAToABQsgAAsQACAAKAIAIAAoAgRBAnRqCywBAn8DQCAAIAFGIgJFBEAgACgCACEDIABBBGohACADLQAGQQFGDQELCyACCywBAn8DQCAAIAFGIgJFBEAgACgCACEDIABBBGohACADLQAHQQFGDQELCyACCywBAn8DQCAAIAFGIgJFBEAgACgCACEDIABBBGohACADLQAFQQFGDQELCyACCy8BAX8gACABENcdIAEoAgwiAiAAQQhqIgAoAgRJBH8gACACENgdIAEQpRwFQQALCyIAIAEoAhBBf0YEQCAAKAIMIQAgAUEANgIMIAEgADYCEAsLEAAgACgCACABQQJ0aigCAAsvAQF/IAAgARDXHSABKAIMIgIgAEEIaiIAKAIESQR/IAAgAhDYHSABEKgcBUEACwsvAQF/IAAgARDXHSABKAIMIgIgAEEIaiIAKAIESQR/IAAgAhDYHSABEKocBUEACws5AQJ/IAAgARDXHSABKAIMIgMgAEEIaiICKAIESQR/IAIgAxDYHSIAIAEgACgCACgCDBEDAAUgAAsLNgEBfyAAIAEQ1x0gASgCDCICIABBCGoiACgCBEkEQCAAIAIQ2B0iACABIAAoAgAoAhARAgALCzYBAX8gACABENcdIAEoAgwiAiAAQQhqIgAoAgRJBEAgACACENgdIgAgASAAKAIAKAIUEQIACwuAAQEBfyMAQTBrIgIk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AiACQQhqQdCKChDAGykCADcDACABIAIQghwgAkEQaiQAC9oCAQJ/IwBB8ABrIgIkACACIAJB6ABqQeSBChDAGykCADcDMCABIAJBMGoQghwgAEEMaiABEP4cIAIgAkHgAGpBiv4JEMAbKQIANwMoIAEgAkEoahCCHCAAKAIIIgMgASADKAIAKAIUEQIAAn8gACgCFCIDQQFxBEAgAiACQdgAakGEuwoQwBspAgA3AyAgASACQSBqEIIcIAAoAhQhAwsgA0ECcQsEfyACIAJB0ABqQYu7ChDAGykCADcDGCABIAJBGGoQghwgACgCFAUgAwtBBHEEQCACIAJByABqQZW7ChDAGykCADcDECABIAJBEGoQghwLAkAgAgJ/AkACQCAALQAYQQFrDgIAAQMLIAJBQGtBn7sKEMAbDAELIAJBOGpBorsKEMAbCykCADcDCCABIAJBCGoQghwLIAAoAhwEQCABQSAQvRsgACgCHCABELwbCyACQfAAaiQAC0YCAX8BfiMAQRBrIgMkACAAQRQQ/BshACABKAIAIQEgAyACKQIAIgQ3AwAgAyAENwMIIAAgASADEPgdIQIgA0EQaiQAIAILRgIBfwF+IwBBEGsiAyQAIABBFBD8GyEAIAEoAgAhASADIAIpAgAiBDcDACADIAQ3AwggACABIAMQ+h0hAiADQRBqJAAgAgsrACAAQQpBAUEBQQEQgBwgACABNgIIIABBhMEKNgIAIAAgAikCADcCDCAAC3YCAX8BfiMAQTBrIgIkACAAKAIIIAEQvBsgAiACQShqQeL+CRDAGykCADcDECABIAJBEGoQghwgAiAAKQIMIgM3AwggAiADNwMgIAEgAkEIahCCHCACIAJBGGpB1v4JEMAbKQIANwMAIAEgAhCCHCACQTBqJAALKwAgAEECQQFBAUEBEIAcIAAgATYCCCAAQfDBCjYCACAAIAIpAgA3AgwgAAtYAgF/AX4jAEEgayICJAAgACgCCCABELwbIAIgAkEYakHQigoQwBspAgA3AwggASACQQhqEIIcIAIgACkCDCIDNwMAIAIgAzcDECABIAIQghwgAkEgaiQACzEAIABBAyABLQAFIAEtAAYgAS0ABxCAHCAAIAE2AgwgACACNgIIIABB4MIKNgIAIAALDAAgACgCDCABEKUcCwwAIAAoAgwgARCoHAsMACAAKAIMIAEQqhwLHwEBfyAAKAIMIgIgASACKAIAKAIQEQIAIAAgARCBHguYAQECfyMAQTBrIgIkAAJ/IAAoAggiA0EBcQRAIAIgAkEoakGEuwoQwBspAgA3AxAgASACQRBqEIIcIAAoAgghAwsgA0ECcQsEfyACIAJBIGpBi7sKEMAbKQIANwMIIAEgAkEIahCCHCAAKAIIBSADC0EEcQRAIAIgAkEYakGVuwoQwBspAgA3AwAgASACEIIcCyACQTBqJAALFgAgACgCDCIAIAEgACgCACgCFBECAAsxACAAQQwQ/BshACABKAIAIQEgAEEaQQFBAUEBEIAcIAAgATYCCCAAQcjDCjYCACAAC1cBAX8jAEEgayICJAAgAiACQRhqQazEChDAGykCADcDCCABIAJBCGoQghwgACgCCCABELwbIAIgAkEQakGnogoQwBspAgA3AwAgASACEIIcIAJBIGokAAsoACAAQRlBAUEBQQEQgBwgACACNgIMIAAgATYCCCAAQcTECjYCACAAC2gBAX8jAEEgayICJAAgACgCCCABELwbIAIgAkEYakGkxQoQwBspAgA3AwggASACQQhqEIIcIAAoAgwiAARAIAAgARC8GwsgAiACQRBqQaeiChDAGykCADcDACABIAIQghwgAkEgaiQACygAIABBDkEAQQBBARCAHCAAIAI2AgwgACABNgIIIABBuMUKNgIAIAALFgAgACgCCCIAIAEgACgCACgCEBECAAucAQECfyMAQTBrIgIkACABEN8dQd0ARwRAIAIgAkEoakHQigoQwBspAgA3AxAgASACQRBqEIIcCyACIAJBIGpBmMYKEMAbKQIANwMIIAEgAkEIahCCHCAAKAIMIgMEQCADIAEQvBsLIAIgAkEYakGnogoQwBspAgA3AwAgASACEIIcIAAoAggiACABIAAoAgAoAhQRAgAgAkEwaiQACysAIABBDSACLQAFQQFBARCAHCAAIAI2AgwgACABNgIIIABBpMYKNgIAIAALnQEBAn8jAEEwayICJAAgACgCDCIDIAEgAygCACgCEBECACACAn8CQCAAKAIMIAEQqBxFBEAgACgCDCABEKocRQ0BCyACQShqQeSBChDAGwwBCyACQSBqQdCKChDAGwspAgA3AxAgASACQRBqEIIcIAAoAgggARC8GyACIAJBGGpBjMcKEMAbKQIANwMIIAEgAkEIahCCHCACQTBqJAALYQEBfyMAQRBrIgIkAAJAIAAoAgwgARCoHEUEQCAAKAIMIAEQqhxFDQELIAIgAkEIakGK/gkQwBspAgA3AwAgASACEIIcCyAAKAIMIgAgASAAKAIAKAIUEQIAIAJBEGokAAtGAgF/AX4jAEEQayIDJAAgAEEUEPwbIQAgAyABKQIAIgQ3AwggAigCACECIAMgBDcDACAAIAMgAhCOHiECIANBEGokACACCzEBAX4gAEEGQQFBAUEBEIAcIABBtMcKNgIAIAEpAgAhAyAAIAI2AhAgACADNwIIIAALQQIBfwF+IwBBEGsiAiQAIAIgACkCCCIDNwMAIAIgAzcDCCABIAIQghwgAUEgEL0bIAAoAhAgARC8GyACQRBqJAALDAAgACgCCCABEKUcC6YCAgJ/AX4jAEHgAGsiAiQAIAICfwJAAn8gACgCCCIDLQAEQQpGBEAgAxCSHg0CIAAoAgghAwsgAwsgASADKAIAKAIQEQIAIAAoAgggARCoHARAIAIgAkHYAGpB0IoKEMAbKQIANwMoIAEgAkEoahCCHAsCQCAAKAIIIAEQqBxFBEAgACgCCCABEKocRQ0BCyACIAJB0ABqQeSBChDAGykCADcDICABIAJBIGoQghwLIAJByABqQb/+CRDAGwwBCyAAKAIIIQAgAiACQUBrQYjJChDAGykCADcDGCABIAJBGGoQghwgAiAAKQIMIgQ3AxAgAiAENwM4IAEgAkEQahCCHCACQTBqQdb+CRDAGwspAgA3AwggASACQQhqEIIcIAJB4ABqJAALQwECfyMAQRBrIgEkACAAKAIIIgAtAARBB0YEQCABQQhqIAAQkhwgAUEIaiABQYzJChDAGxCTHSECCyABQRBqJAAgAgt+AQJ/IwBBEGsiAiQAAkACQCAAKAIIIgMtAARBCkYEfyADEJIeDQIgACgCCAUgAwsgARCoHEUEQCAAKAIIIAEQqhxFDQELIAIgAkEIakGK/gkQwBspAgA3AwAgASACEIIcCyAAKAIIIgAgASAAKAIAKAIUEQIACyACQRBqJAALMgAgAEEMIAEtAAVBAUEBEIAcIABBADoAECAAIAI2AgwgACABNgIIIABBoMkKNgIAIAAL3wEBAn8jAEFAaiICJAAgAC0AEEUEQCACQThqIABBEGpBARCkHCEDIAJBMGogACABEJYeIAIoAjQiACABIAAoAgAoAhARAgAgAigCNCABEKgcBEAgAiACQShqQdCKChDAGykCADcDECABIAJBEGoQghwLAkAgAigCNCABEKgcRQRAIAIoAjQgARCqHEUNAQsgAiACQSBqQeSBChDAGykCADcDCCABIAJBCGoQghwLIAIgAkEYakGP/glBkv4JIAIoAjAbEMAbKQIANwMAIAEgAhCCHCADEKYcCyACQUBrJAALbQEBfyAAIAFBDGooAgA2AgAgACABQQhqKAIANgIEIAAoAgQhAQNAIAEgAiABKAIAKAIMEQMAIgMtAARBDEYEQCAAIAMoAggiATYCBCAAIANBDGoiAyAAIAMoAgAgACgCAEgbKAIANgIADAELCwuMAQECfyMAQSBrIgIkACAALQAQRQRAIAJBGGogAEEQakEBEKQcIQMgAkEQaiAAIAEQlh4CQCACKAIUIAEQqBxFBEAgAigCFCABEKocRQ0BCyACIAJBCGpBiv4JEMAbKQIANwMAIAEgAhCCHAsgAigCFCIAIAEgACgCACgCFBECACADEKYcCyACQSBqJAALKwAgAEEFQQFBAUEBEIAcIAAgATYCCCAAQYzKCjYCACAAIAIpAgA3AgwgAAtEAgJ/AX4jAEEQayICJAAgACgCCCIDIAEgAygCACgCEBECACACIAApAgwiBDcDACACIAQ3AwggASACEIIcIAJBEGokAAsEACMACwYAIAAkAAsQACMAIABrQXBxIgAkACAACx8AQfCqCygCAEUEQEH0qgsgATYCAEHwqgsgADYCAAsLGQAgASACIAOtIAStQiCGhCAFIAYgABEsAAsWAQF+IAEgABEdACICQiCIpxAsIAKnCxMAIAEgAq0gA61CIIaEIAARJgALIgEBfiABIAKtIAOtQiCGhCAEIAARHgAiBUIgiKcQLCAFpwsZACABIAIgAyAEIAWtIAatQiCGhCAAEScACyMAIAEgAiADIAQgBa0gBq1CIIaEIAetIAitQiCGhCAAETgACyUAIAEgAiADIAQgBSAGrSAHrUIghoQgCK0gCa1CIIaEIAARNwALEwAgACABpyABQiCIpyACIAMQLQsLm6oKhAEAQYAIC7COAXB1c2gAeAB5AHdpZHRoAGhlaWdodABJbnRWZWN0b3IARmxvYXRWZWN0b3IARG91YmxlVmVjdG9yAFBvaW50VmVjdG9yAE1hdFZlY3RvcgBSZWN0VmVjdG9yAEtleVBvaW50VmVjdG9yAERNYXRjaFZlY3RvcgBETWF0Y2hWZWN0b3JWZWN0b3IATWF0AGV5ZQBvbmVzAHplcm9zAHJvd3MAY29scwBtYXRTaXplAHN0ZXAAZGF0YQBkYXRhOFMAZGF0YTE2VQBkYXRhMTZTAGRhdGEzMlMAZGF0YTMyRgBkYXRhNjRGAGVsZW1TaXplAGVsZW1TaXplMQBjaGFubmVscwBjb252ZXJ0VG8AdG90YWwAcm93AGNyZWF0ZQByb3dSYW5nZQBjb3B5VG8AdHlwZQBlbXB0eQBjb2xSYW5nZQBzdGVwMQBjbG9uZQBkZXB0aABjb2wAZG90AG11bABpbnYAdAByb2kAZGlhZwBpc0NvbnRpbnVvdXMAc2V0VG8Ac2l6ZQBwdHIAdWNoYXJQdHIAY2hhclB0cgBzaG9ydFB0cgB1c2hvcnRQdHIAaW50UHRyAGZsb2F0UHRyAGRvdWJsZVB0cgBjaGFyQXQAdWNoYXJBdABzaG9ydEF0AHVzaG9ydEF0AGludEF0AGZsb2F0QXQAZG91YmxlQXQAUmFuZ2UAc3RhcnQAZW5kAFRlcm1Dcml0ZXJpYQBtYXhDb3VudABlcHNpbG9uACN0eXBlAFJlY3QAUmVjdDJmAFJvdGF0ZWRSZWN0AGNlbnRlcgBhbmdsZQByb3RhdGVkUmVjdFBvaW50cwByb3RhdGVkUmVjdEJvdW5kaW5nUmVjdAByb3RhdGVkUmVjdEJvdW5kaW5nUmVjdDJmAEtleVBvaW50AGNsYXNzX2lkAG9jdGF2ZQBwdAByZXNwb25zZQBETWF0Y2gAcXVlcnlJZHgAdHJhaW5JZHgAaW1nSWR4AGRpc3RhbmNlAFNjYWxhcgBNaW5NYXhMb2MAbWluVmFsAG1heFZhbABtaW5Mb2MAbWF4TG9jAENpcmNsZQByYWRpdXMATW9tZW50cwBtMDAAbTEwAG0wMQBtMjAAbTExAG0wMgBtMzAAbTIxAG0xMgBtMDMAbXUyMABtdTExAG11MDIAbXUzMABtdTIxAG11MTIAbXUwMwBudTIwAG51MTEAbnUwMgBudTMwAG51MjEAbnUxMgBudTAzAEV4Y2VwdGlvbgBjb2RlAG1zZwBleGNlcHRpb25Gcm9tUHRyAG1pbkVuY2xvc2luZ0NpcmNsZQBmbG9vZEZpbGwAbWluTWF4TG9jAG1vcnBob2xvZ3lEZWZhdWx0Qm9yZGVyVmFsdWUAQ1ZfTUFUX0RFUFRIAENhbVNoaWZ0AG1lYW5TaGlmdABUcmFja2VyAGluaXQAdXBkYXRlAGdldEJ1aWxkSW5mb3JtYXRpb24AQ1ZfOFVDMQBDVl84VUMyAENWXzhVQzMAQ1ZfOFVDNABDVl84U0MxAENWXzhTQzIAQ1ZfOFNDMwBDVl84U0M0AENWXzE2VUMxAENWXzE2VUMyAENWXzE2VUMzAENWXzE2VUM0AENWXzE2U0MxAENWXzE2U0MyAENWXzE2U0MzAENWXzE2U0M0AENWXzMyU0MxAENWXzMyU0MyAENWXzMyU0MzAENWXzMyU0M0AENWXzMyRkMxAENWXzMyRkMyAENWXzMyRkMzAENWXzMyRkM0AENWXzY0RkMxAENWXzY0RkMyAENWXzY0RkMzAENWXzY0RkM0AENWXzhVAENWXzhTAENWXzE2VQBDVl8xNlMAQ1ZfMzJTAENWXzMyRgBDVl82NEYASU5UX01JTgBJTlRfTUFYAFJvZHJpZ3VlcwBTVkRlY29tcABzb2x2ZVBuUABBQ0NFU1NfRkFTVABBQ0NFU1NfTUFTSwBBQ0NFU1NfUkVBRABBQ0NFU1NfUlcAQUNDRVNTX1dSSVRFAEFEQVBUSVZFX1RIUkVTSF9HQVVTU0lBTl9DAEFEQVBUSVZFX1RIUkVTSF9NRUFOX0MAQUtBWkVfREVTQ1JJUFRPUl9LQVpFAEFLQVpFX0RFU0NSSVBUT1JfS0FaRV9VUFJJR0hUAEFLQVpFX0RFU0NSSVBUT1JfTUxEQgBBS0FaRV9ERVNDUklQVE9SX01MREJfVVBSSUdIVABBZ2FzdEZlYXR1cmVEZXRlY3Rvcl9BR0FTVF81XzgAQWdhc3RGZWF0dXJlRGV0ZWN0b3JfQUdBU1RfN18xMmQAQWdhc3RGZWF0dXJlRGV0ZWN0b3JfQUdBU1RfN18xMnMAQWdhc3RGZWF0dXJlRGV0ZWN0b3JfTk9OTUFYX1NVUFBSRVNTSU9OAEFnYXN0RmVhdHVyZURldGVjdG9yX09BU1RfOV8xNgBBZ2FzdEZlYXR1cmVEZXRlY3Rvcl9USFJFU0hPTEQAQk9SREVSX0NPTlNUQU5UAEJPUkRFUl9ERUZBVUxUAEJPUkRFUl9JU09MQVRFRABCT1JERVJfUkVGTEVDVABCT1JERVJfUkVGTEVDVDEwMQBCT1JERVJfUkVGTEVDVF8xMDEAQk9SREVSX1JFUExJQ0FURQBCT1JERVJfVFJBTlNQQVJFTlQAQk9SREVSX1dSQVAAQ0FMSUJfQ0JfQUNDVVJBQ1kAQ0FMSUJfQ0JfQURBUFRJVkVfVEhSRVNIAENBTElCX0NCX0FTWU1NRVRSSUNfR1JJRABDQUxJQl9DQl9DTFVTVEVSSU5HAENBTElCX0NCX0VYSEFVU1RJVkUAQ0FMSUJfQ0JfRkFTVF9DSEVDSwBDQUxJQl9DQl9GSUxURVJfUVVBRFMAQ0FMSUJfQ0JfTEFSR0VSAENBTElCX0NCX01BUktFUgBDQUxJQl9DQl9OT1JNQUxJWkVfSU1BR0UAQ0FMSUJfQ0JfU1lNTUVUUklDX0dSSUQAQ0FMSUJfRklYX0FTUEVDVF9SQVRJTwBDQUxJQl9GSVhfRk9DQUxfTEVOR1RIAENBTElCX0ZJWF9JTlRSSU5TSUMAQ0FMSUJfRklYX0sxAENBTElCX0ZJWF9LMgBDQUxJQl9GSVhfSzMAQ0FMSUJfRklYX0s0AENBTElCX0ZJWF9LNQBDQUxJQl9GSVhfSzYAQ0FMSUJfRklYX1BSSU5DSVBBTF9QT0lOVABDQUxJQl9GSVhfUzFfUzJfUzNfUzQAQ0FMSUJfRklYX1RBTkdFTlRfRElTVABDQUxJQl9GSVhfVEFVWF9UQVVZAENBTElCX0hBTkRfRVlFX0FORFJFRkYAQ0FMSUJfSEFORF9FWUVfREFOSUlMSURJUwBDQUxJQl9IQU5EX0VZRV9IT1JBVUQAQ0FMSUJfSEFORF9FWUVfUEFSSwBDQUxJQl9IQU5EX0VZRV9UU0FJAENBTElCX05JTlRSSU5TSUMAQ0FMSUJfUkFUSU9OQUxfTU9ERUwAQ0FMSUJfUk9CT1RfV09STERfSEFORF9FWUVfTEkAQ0FMSUJfUk9CT1RfV09STERfSEFORF9FWUVfU0hBSABDQUxJQl9TQU1FX0ZPQ0FMX0xFTkdUSABDQUxJQl9USElOX1BSSVNNX01PREVMAENBTElCX1RJTFRFRF9NT0RFTABDQUxJQl9VU0VfRVhUUklOU0lDX0dVRVNTAENBTElCX1VTRV9JTlRSSU5TSUNfR1VFU1MAQ0FMSUJfVVNFX0xVAENBTElCX1VTRV9RUgBDQUxJQl9aRVJPX0RJU1BBUklUWQBDQUxJQl9aRVJPX1RBTkdFTlRfRElTVABDQVNDQURFX0RPX0NBTk5ZX1BSVU5JTkcAQ0FTQ0FERV9ET19ST1VHSF9TRUFSQ0gAQ0FTQ0FERV9GSU5EX0JJR0dFU1RfT0JKRUNUAENBU0NBREVfU0NBTEVfSU1BR0UAQ0NMX0JCRFQAQ0NMX0JPTEVMTEkAQ0NMX0RFRkFVTFQAQ0NMX0dSQU5BAENDTF9TQVVGAENDTF9TUEFHSEVUVEkAQ0NMX1dVAENDX1NUQVRfQVJFQQBDQ19TVEFUX0hFSUdIVABDQ19TVEFUX0xFRlQAQ0NfU1RBVF9NQVgAQ0NfU1RBVF9UT1AAQ0NfU1RBVF9XSURUSABDSEFJTl9BUFBST1hfTk9ORQBDSEFJTl9BUFBST1hfU0lNUExFAENIQUlOX0FQUFJPWF9UQzg5X0tDT1MAQ0hBSU5fQVBQUk9YX1RDODlfTDEAQ01QX0VRAENNUF9HRQBDTVBfR1QAQ01QX0xFAENNUF9MVABDTVBfTkUAQ09MT1JNQVBfQVVUVU1OAENPTE9STUFQX0JPTkUAQ09MT1JNQVBfQ0lWSURJUwBDT0xPUk1BUF9DT09MAENPTE9STUFQX0RFRVBHUkVFTgBDT0xPUk1BUF9IT1QAQ09MT1JNQVBfSFNWAENPTE9STUFQX0lORkVSTk8AQ09MT1JNQVBfSkVUAENPTE9STUFQX01BR01BAENPTE9STUFQX09DRUFOAENPTE9STUFQX1BBUlVMQQBDT0xPUk1BUF9QSU5LAENPTE9STUFQX1BMQVNNQQBDT0xPUk1BUF9SQUlOQk9XAENPTE9STUFQX1NQUklORwBDT0xPUk1BUF9TVU1NRVIAQ09MT1JNQVBfVFVSQk8AQ09MT1JNQVBfVFdJTElHSFQAQ09MT1JNQVBfVFdJTElHSFRfU0hJRlRFRABDT0xPUk1BUF9WSVJJRElTAENPTE9STUFQX1dJTlRFUgBDT0xPUl9CR1IyQkdSNTU1AENPTE9SX0JHUjJCR1I1NjUAQ09MT1JfQkdSMkJHUkEAQ09MT1JfQkdSMkdSQVkAQ09MT1JfQkdSMkhMUwBDT0xPUl9CR1IySExTX0ZVTEwAQ09MT1JfQkdSMkhTVgBDT0xPUl9CR1IySFNWX0ZVTEwAQ09MT1JfQkdSMkxhYgBDT0xPUl9CR1IyTHV2AENPTE9SX0JHUjJSR0IAQ09MT1JfQkdSMlJHQkEAQ09MT1JfQkdSMlhZWgBDT0xPUl9CR1IyWUNyQ2IAQ09MT1JfQkdSMllVVgBDT0xPUl9CR1IyWVVWX0k0MjAAQ09MT1JfQkdSMllVVl9JWVVWAENPTE9SX0JHUjJZVVZfWVYxMgBDT0xPUl9CR1I1NTUyQkdSAENPTE9SX0JHUjU1NTJCR1JBAENPTE9SX0JHUjU1NTJHUkFZAENPTE9SX0JHUjU1NTJSR0IAQ09MT1JfQkdSNTU1MlJHQkEAQ09MT1JfQkdSNTY1MkJHUgBDT0xPUl9CR1I1NjUyQkdSQQBDT0xPUl9CR1I1NjUyR1JBWQBDT0xPUl9CR1I1NjUyUkdCAENPTE9SX0JHUjU2NTJSR0JBAENPTE9SX0JHUkEyQkdSAENPTE9SX0JHUkEyQkdSNTU1AENPTE9SX0JHUkEyQkdSNTY1AENPTE9SX0JHUkEyR1JBWQBDT0xPUl9CR1JBMlJHQgBDT0xPUl9CR1JBMlJHQkEAQ09MT1JfQkdSQTJZVVZfSTQyMABDT0xPUl9CR1JBMllVVl9JWVVWAENPTE9SX0JHUkEyWVVWX1lWMTIAQ09MT1JfQmF5ZXJCRzJCR1IAQ09MT1JfQmF5ZXJCRzJCR1JBAENPTE9SX0JheWVyQkcyQkdSX0VBAENPTE9SX0JheWVyQkcyQkdSX1ZORwBDT0xPUl9CYXllckJHMkdSQVkAQ09MT1JfQmF5ZXJCRzJSR0IAQ09MT1JfQmF5ZXJCRzJSR0JBAENPTE9SX0JheWVyQkcyUkdCX0VBAENPTE9SX0JheWVyQkcyUkdCX1ZORwBDT0xPUl9CYXllckJHR1IyQkdSAENPTE9SX0JheWVyQkdHUjJCR1JBAENPTE9SX0JheWVyQkdHUjJCR1JfRUEAQ09MT1JfQmF5ZXJCR0dSMkJHUl9WTkcAQ09MT1JfQmF5ZXJCR0dSMkdSQVkAQ09MT1JfQmF5ZXJCR0dSMlJHQgBDT0xPUl9CYXllckJHR1IyUkdCQQBDT0xPUl9CYXllckJHR1IyUkdCX0VBAENPTE9SX0JheWVyQkdHUjJSR0JfVk5HAENPTE9SX0JheWVyR0IyQkdSAENPTE9SX0JheWVyR0IyQkdSQQBDT0xPUl9CYXllckdCMkJHUl9FQQBDT0xPUl9CYXllckdCMkJHUl9WTkcAQ09MT1JfQmF5ZXJHQjJHUkFZAENPTE9SX0JheWVyR0IyUkdCAENPTE9SX0JheWVyR0IyUkdCQQBDT0xPUl9CYXllckdCMlJHQl9FQQBDT0xPUl9CYXllckdCMlJHQl9WTkcAQ09MT1JfQmF5ZXJHQlJHMkJHUgBDT0xPUl9CYXllckdCUkcyQkdSQQBDT0xPUl9CYXllckdCUkcyQkdSX0VBAENPTE9SX0JheWVyR0JSRzJCR1JfVk5HAENPTE9SX0JheWVyR0JSRzJHUkFZAENPTE9SX0JheWVyR0JSRzJSR0IAQ09MT1JfQmF5ZXJHQlJHMlJHQkEAQ09MT1JfQmF5ZXJHQlJHMlJHQl9FQQBDT0xPUl9CYXllckdCUkcyUkdCX1ZORwBDT0xPUl9CYXllckdSMkJHUgBDT0xPUl9CYXllckdSMkJHUkEAQ09MT1JfQmF5ZXJHUjJCR1JfRUEAQ09MT1JfQmF5ZXJHUjJCR1JfVk5HAENPTE9SX0JheWVyR1IyR1JBWQBDT0xPUl9CYXllckdSMlJHQgBDT0xPUl9CYXllckdSMlJHQkEAQ09MT1JfQmF5ZXJHUjJSR0JfRUEAQ09MT1JfQmF5ZXJHUjJSR0JfVk5HAENPTE9SX0JheWVyR1JCRzJCR1IAQ09MT1JfQmF5ZXJHUkJHMkJHUkEAQ09MT1JfQmF5ZXJHUkJHMkJHUl9FQQBDT0xPUl9CYXllckdSQkcyQkdSX1ZORwBDT0xPUl9CYXllckdSQkcyR1JBWQBDT0xPUl9CYXllckdSQkcyUkdCAENPTE9SX0JheWVyR1JCRzJSR0JBAENPTE9SX0JheWVyR1JCRzJSR0JfRUEAQ09MT1JfQmF5ZXJHUkJHMlJHQl9WTkcAQ09MT1JfQmF5ZXJSRzJCR1IAQ09MT1JfQmF5ZXJSRzJCR1JBAENPTE9SX0JheWVyUkcyQkdSX0VBAENPTE9SX0JheWVyUkcyQkdSX1ZORwBDT0xPUl9CYXllclJHMkdSQVkAQ09MT1JfQmF5ZXJSRzJSR0IAQ09MT1JfQmF5ZXJSRzJSR0JBAENPTE9SX0JheWVyUkcyUkdCX0VBAENPTE9SX0JheWVyUkcyUkdCX1ZORwBDT0xPUl9CYXllclJHR0IyQkdSAENPTE9SX0JheWVyUkdHQjJCR1JBAENPTE9SX0JheWVyUkdHQjJCR1JfRUEAQ09MT1JfQmF5ZXJSR0dCMkJHUl9WTkcAQ09MT1JfQmF5ZXJSR0dCMkdSQVkAQ09MT1JfQmF5ZXJSR0dCMlJHQgBDT0xPUl9CYXllclJHR0IyUkdCQQBDT0xPUl9CYXllclJHR0IyUkdCX0VBAENPTE9SX0JheWVyUkdHQjJSR0JfVk5HAENPTE9SX0NPTE9SQ1ZUX01BWABDT0xPUl9HUkFZMkJHUgBDT0xPUl9HUkFZMkJHUjU1NQBDT0xPUl9HUkFZMkJHUjU2NQBDT0xPUl9HUkFZMkJHUkEAQ09MT1JfR1JBWTJSR0IAQ09MT1JfR1JBWTJSR0JBAENPTE9SX0hMUzJCR1IAQ09MT1JfSExTMkJHUl9GVUxMAENPTE9SX0hMUzJSR0IAQ09MT1JfSExTMlJHQl9GVUxMAENPTE9SX0hTVjJCR1IAQ09MT1JfSFNWMkJHUl9GVUxMAENPTE9SX0hTVjJSR0IAQ09MT1JfSFNWMlJHQl9GVUxMAENPTE9SX0xCR1IyTGFiAENPTE9SX0xCR1IyTHV2AENPTE9SX0xSR0IyTGFiAENPTE9SX0xSR0IyTHV2AENPTE9SX0xhYjJCR1IAQ09MT1JfTGFiMkxCR1IAQ09MT1JfTGFiMkxSR0IAQ09MT1JfTGFiMlJHQgBDT0xPUl9MdXYyQkdSAENPTE9SX0x1djJMQkdSAENPTE9SX0x1djJMUkdCAENPTE9SX0x1djJSR0IAQ09MT1JfUkdCMkJHUgBDT0xPUl9SR0IyQkdSNTU1AENPTE9SX1JHQjJCR1I1NjUAQ09MT1JfUkdCMkJHUkEAQ09MT1JfUkdCMkdSQVkAQ09MT1JfUkdCMkhMUwBDT0xPUl9SR0IySExTX0ZVTEwAQ09MT1JfUkdCMkhTVgBDT0xPUl9SR0IySFNWX0ZVTEwAQ09MT1JfUkdCMkxhYgBDT0xPUl9SR0IyTHV2AENPTE9SX1JHQjJSR0JBAENPTE9SX1JHQjJYWVoAQ09MT1JfUkdCMllDckNiAENPTE9SX1JHQjJZVVYAQ09MT1JfUkdCMllVVl9JNDIwAENPTE9SX1JHQjJZVVZfSVlVVgBDT0xPUl9SR0IyWVVWX1lWMTIAQ09MT1JfUkdCQTJCR1IAQ09MT1JfUkdCQTJCR1I1NTUAQ09MT1JfUkdCQTJCR1I1NjUAQ09MT1JfUkdCQTJCR1JBAENPTE9SX1JHQkEyR1JBWQBDT0xPUl9SR0JBMlJHQgBDT0xPUl9SR0JBMllVVl9JNDIwAENPTE9SX1JHQkEyWVVWX0lZVVYAQ09MT1JfUkdCQTJZVVZfWVYxMgBDT0xPUl9SR0JBMm1SR0JBAENPTE9SX1hZWjJCR1IAQ09MT1JfWFlaMlJHQgBDT0xPUl9ZQ3JDYjJCR1IAQ09MT1JfWUNyQ2IyUkdCAENPTE9SX1lVVjJCR1IAQ09MT1JfWVVWMkJHUkFfSTQyMABDT0xPUl9ZVVYyQkdSQV9JWVVWAENPTE9SX1lVVjJCR1JBX05WMTIAQ09MT1JfWVVWMkJHUkFfTlYyMQBDT0xPUl9ZVVYyQkdSQV9VWU5WAENPTE9SX1lVVjJCR1JBX1VZVlkAQ09MT1JfWVVWMkJHUkFfWTQyMgBDT0xPUl9ZVVYyQkdSQV9ZVU5WAENPTE9SX1lVVjJCR1JBX1lVWTIAQ09MT1JfWVVWMkJHUkFfWVVZVgBDT0xPUl9ZVVYyQkdSQV9ZVjEyAENPTE9SX1lVVjJCR1JBX1lWWVUAQ09MT1JfWVVWMkJHUl9JNDIwAENPTE9SX1lVVjJCR1JfSVlVVgBDT0xPUl9ZVVYyQkdSX05WMTIAQ09MT1JfWVVWMkJHUl9OVjIxAENPTE9SX1lVVjJCR1JfVVlOVgBDT0xPUl9ZVVYyQkdSX1VZVlkAQ09MT1JfWVVWMkJHUl9ZNDIyAENPTE9SX1lVVjJCR1JfWVVOVgBDT0xPUl9ZVVYyQkdSX1lVWTIAQ09MT1JfWVVWMkJHUl9ZVVlWAENPTE9SX1lVVjJCR1JfWVYxMgBDT0xPUl9ZVVYyQkdSX1lWWVUAQ09MT1JfWVVWMkdSQVlfNDIwAENPTE9SX1lVVjJHUkFZX0k0MjAAQ09MT1JfWVVWMkdSQVlfSVlVVgBDT0xPUl9ZVVYyR1JBWV9OVjEyAENPTE9SX1lVVjJHUkFZX05WMjEAQ09MT1JfWVVWMkdSQVlfVVlOVgBDT0xPUl9ZVVYyR1JBWV9VWVZZAENPTE9SX1lVVjJHUkFZX1k0MjIAQ09MT1JfWVVWMkdSQVlfWVVOVgBDT0xPUl9ZVVYyR1JBWV9ZVVkyAENPTE9SX1lVVjJHUkFZX1lVWVYAQ09MT1JfWVVWMkdSQVlfWVYxMgBDT0xPUl9ZVVYyR1JBWV9ZVllVAENPTE9SX1lVVjJSR0IAQ09MT1JfWVVWMlJHQkFfSTQyMABDT0xPUl9ZVVYyUkdCQV9JWVVWAENPTE9SX1lVVjJSR0JBX05WMTIAQ09MT1JfWVVWMlJHQkFfTlYyMQBDT0xPUl9ZVVYyUkdCQV9VWU5WAENPTE9SX1lVVjJSR0JBX1VZVlkAQ09MT1JfWVVWMlJHQkFfWTQyMgBDT0xPUl9ZVVYyUkdCQV9ZVU5WAENPTE9SX1lVVjJSR0JBX1lVWTIAQ09MT1JfWVVWMlJHQkFfWVVZVgBDT0xPUl9ZVVYyUkdCQV9ZVjEyAENPTE9SX1lVVjJSR0JBX1lWWVUAQ09MT1JfWVVWMlJHQl9JNDIwAENPTE9SX1lVVjJSR0JfSVlVVgBDT0xPUl9ZVVYyUkdCX05WMTIAQ09MT1JfWVVWMlJHQl9OVjIxAENPTE9SX1lVVjJSR0JfVVlOVgBDT0xPUl9ZVVYyUkdCX1VZVlkAQ09MT1JfWVVWMlJHQl9ZNDIyAENPTE9SX1lVVjJSR0JfWVVOVgBDT0xPUl9ZVVYyUkdCX1lVWTIAQ09MT1JfWVVWMlJHQl9ZVVlWAENPTE9SX1lVVjJSR0JfWVYxMgBDT0xPUl9ZVVYyUkdCX1lWWVUAQ09MT1JfWVVWNDIwcDJCR1IAQ09MT1JfWVVWNDIwcDJCR1JBAENPTE9SX1lVVjQyMHAyR1JBWQBDT0xPUl9ZVVY0MjBwMlJHQgBDT0xPUl9ZVVY0MjBwMlJHQkEAQ09MT1JfWVVWNDIwc3AyQkdSAENPTE9SX1lVVjQyMHNwMkJHUkEAQ09MT1JfWVVWNDIwc3AyR1JBWQBDT0xPUl9ZVVY0MjBzcDJSR0IAQ09MT1JfWVVWNDIwc3AyUkdCQQBDT0xPUl9tUkdCQTJSR0JBAENPTlRPVVJTX01BVENIX0kxAENPTlRPVVJTX01BVENIX0kyAENPTlRPVVJTX01BVENIX0kzAENPVkFSX0NPTFMAQ09WQVJfTk9STUFMAENPVkFSX1JPV1MAQ09WQVJfU0NBTEUAQ09WQVJfU0NSQU1CTEVEAENPVkFSX1VTRV9BVkcAQ2lyY2xlc0dyaWRGaW5kZXJQYXJhbWV0ZXJzX0FTWU1NRVRSSUNfR1JJRABDaXJjbGVzR3JpZEZpbmRlclBhcmFtZXRlcnNfU1lNTUVUUklDX0dSSUQARENUX0lOVkVSU0UARENUX1JPV1MAREVDT01QX0NIT0xFU0tZAERFQ09NUF9FSUcAREVDT01QX0xVAERFQ09NUF9OT1JNQUwAREVDT01QX1FSAERFQ09NUF9TVkQAREZUX0NPTVBMRVhfSU5QVVQAREZUX0NPTVBMRVhfT1VUUFVUAERGVF9JTlZFUlNFAERGVF9SRUFMX09VVFBVVABERlRfUk9XUwBERlRfU0NBTEUARElTT3B0aWNhbEZsb3dfUFJFU0VUX0ZBU1QARElTT3B0aWNhbEZsb3dfUFJFU0VUX01FRElVTQBESVNPcHRpY2FsRmxvd19QUkVTRVRfVUxUUkFGQVNUAERJU1RfQwBESVNUX0ZBSVIARElTVF9IVUJFUgBESVNUX0wxAERJU1RfTDEyAERJU1RfTDIARElTVF9MQUJFTF9DQ09NUABESVNUX0xBQkVMX1BJWEVMAERJU1RfTUFTS18zAERJU1RfTUFTS181AERJU1RfTUFTS19QUkVDSVNFAERJU1RfVVNFUgBESVNUX1dFTFNDSABEZXNjcmlwdG9yTWF0Y2hlcl9CUlVURUZPUkNFAERlc2NyaXB0b3JNYXRjaGVyX0JSVVRFRk9SQ0VfSEFNTUlORwBEZXNjcmlwdG9yTWF0Y2hlcl9CUlVURUZPUkNFX0hBTU1JTkdMVVQARGVzY3JpcHRvck1hdGNoZXJfQlJVVEVGT1JDRV9MMQBEZXNjcmlwdG9yTWF0Y2hlcl9CUlVURUZPUkNFX1NMMgBEZXNjcmlwdG9yTWF0Y2hlcl9GTEFOTkJBU0VEAERyYXdNYXRjaGVzRmxhZ3NfREVGQVVMVABEcmF3TWF0Y2hlc0ZsYWdzX0RSQVdfT1ZFUl9PVVRJTUcARHJhd01hdGNoZXNGbGFnc19EUkFXX1JJQ0hfS0VZUE9JTlRTAERyYXdNYXRjaGVzRmxhZ3NfTk9UX0RSQVdfU0lOR0xFX1BPSU5UUwBGSUxMRUQARklMVEVSX1NDSEFSUgBGTE9PREZJTExfRklYRURfUkFOR0UARkxPT0RGSUxMX01BU0tfT05MWQBGTV83UE9JTlQARk1fOFBPSU5UAEZNX0xNRURTAEZNX1JBTlNBQwBGT05UX0hFUlNIRVlfQ09NUExFWABGT05UX0hFUlNIRVlfQ09NUExFWF9TTUFMTABGT05UX0hFUlNIRVlfRFVQTEVYAEZPTlRfSEVSU0hFWV9QTEFJTgBGT05UX0hFUlNIRVlfU0NSSVBUX0NPTVBMRVgARk9OVF9IRVJTSEVZX1NDUklQVF9TSU1QTEVYAEZPTlRfSEVSU0hFWV9TSU1QTEVYAEZPTlRfSEVSU0hFWV9UUklQTEVYAEZPTlRfSVRBTElDAEZhY2VSZWNvZ25pemVyU0ZfRlJfQ09TSU5FAEZhY2VSZWNvZ25pemVyU0ZfRlJfTk9STV9MMgBGYXN0RmVhdHVyZURldGVjdG9yX0ZBU1RfTgBGYXN0RmVhdHVyZURldGVjdG9yX05PTk1BWF9TVVBQUkVTU0lPTgBGYXN0RmVhdHVyZURldGVjdG9yX1RIUkVTSE9MRABGYXN0RmVhdHVyZURldGVjdG9yX1RZUEVfNV84AEZhc3RGZWF0dXJlRGV0ZWN0b3JfVFlQRV83XzEyAEZhc3RGZWF0dXJlRGV0ZWN0b3JfVFlQRV85XzE2AEZpbGVOb2RlX0VNUFRZAEZpbGVOb2RlX0ZMT0FUAEZpbGVOb2RlX0ZMT1cARmlsZU5vZGVfSU5UAEZpbGVOb2RlX01BUABGaWxlTm9kZV9OQU1FRABGaWxlTm9kZV9OT05FAEZpbGVOb2RlX1JFQUwARmlsZU5vZGVfU0VRAEZpbGVOb2RlX1NUUgBGaWxlTm9kZV9TVFJJTkcARmlsZU5vZGVfVFlQRV9NQVNLAEZpbGVOb2RlX1VOSUZPUk0ARmlsZVN0b3JhZ2VfQVBQRU5EAEZpbGVTdG9yYWdlX0JBU0U2NABGaWxlU3RvcmFnZV9GT1JNQVRfQVVUTwBGaWxlU3RvcmFnZV9GT1JNQVRfSlNPTgBGaWxlU3RvcmFnZV9GT1JNQVRfTUFTSwBGaWxlU3RvcmFnZV9GT1JNQVRfWE1MAEZpbGVTdG9yYWdlX0ZPUk1BVF9ZQU1MAEZpbGVTdG9yYWdlX0lOU0lERV9NQVAARmlsZVN0b3JhZ2VfTUVNT1JZAEZpbGVTdG9yYWdlX05BTUVfRVhQRUNURUQARmlsZVN0b3JhZ2VfUkVBRABGaWxlU3RvcmFnZV9VTkRFRklORUQARmlsZVN0b3JhZ2VfVkFMVUVfRVhQRUNURUQARmlsZVN0b3JhZ2VfV1JJVEUARmlsZVN0b3JhZ2VfV1JJVEVfQkFTRTY0AEZvcm1hdHRlcl9GTVRfQwBGb3JtYXR0ZXJfRk1UX0NTVgBGb3JtYXR0ZXJfRk1UX0RFRkFVTFQARm9ybWF0dGVyX0ZNVF9NQVRMQUIARm9ybWF0dGVyX0ZNVF9OVU1QWQBGb3JtYXR0ZXJfRk1UX1BZVEhPTgBHQ19CR0QAR0NfRVZBTABHQ19FVkFMX0ZSRUVaRV9NT0RFTABHQ19GR0QAR0NfSU5JVF9XSVRIX01BU0sAR0NfSU5JVF9XSVRIX1JFQ1QAR0NfUFJfQkdEAEdDX1BSX0ZHRABHRU1NXzFfVABHRU1NXzJfVABHRU1NXzNfVABISVNUQ01QX0JIQVRUQUNIQVJZWUEASElTVENNUF9DSElTUVIASElTVENNUF9DSElTUVJfQUxUAEhJU1RDTVBfQ09SUkVMAEhJU1RDTVBfSEVMTElOR0VSAEhJU1RDTVBfSU5URVJTRUNUAEhJU1RDTVBfS0xfRElWAEhPR0Rlc2NyaXB0b3JfREVGQVVMVF9OTEVWRUxTAEhPR0Rlc2NyaXB0b3JfREVTQ1JfRk9STUFUX0NPTF9CWV9DT0wASE9HRGVzY3JpcHRvcl9ERVNDUl9GT1JNQVRfUk9XX0JZX1JPVwBIT0dEZXNjcmlwdG9yX0wySHlzAEhPVUdIX0dSQURJRU5UAEhPVUdIX0dSQURJRU5UX0FMVABIT1VHSF9NVUxUSV9TQ0FMRQBIT1VHSF9QUk9CQUJJTElTVElDAEhPVUdIX1NUQU5EQVJEAElOUEFJTlRfTlMASU5QQUlOVF9URUxFQQBJTlRFUlNFQ1RfRlVMTABJTlRFUlNFQ1RfTk9ORQBJTlRFUlNFQ1RfUEFSVElBTABJTlRFUl9BUkVBAElOVEVSX0JJVFMASU5URVJfQklUUzIASU5URVJfQ1VCSUMASU5URVJfTEFOQ1pPUzQASU5URVJfTElORUFSAElOVEVSX0xJTkVBUl9FWEFDVABJTlRFUl9NQVgASU5URVJfTkVBUkVTVABJTlRFUl9ORUFSRVNUX0VYQUNUAElOVEVSX1RBQl9TSVpFAElOVEVSX1RBQl9TSVpFMgBLQVpFX0RJRkZfQ0hBUkJPTk5JRVIAS0FaRV9ESUZGX1BNX0cxAEtBWkVfRElGRl9QTV9HMgBLQVpFX0RJRkZfV0VJQ0tFUlQAS01FQU5TX1BQX0NFTlRFUlMAS01FQU5TX1JBTkRPTV9DRU5URVJTAEtNRUFOU19VU0VfSU5JVElBTF9MQUJFTFMATERSX1NJWkUATElORV80AExJTkVfOABMSU5FX0FBAExNRURTAExPQ0FMX09QVElNX0dDAExPQ0FMX09QVElNX0lOTkVSX0FORF9JVEVSX0xPAExPQ0FMX09QVElNX0lOTkVSX0xPAExPQ0FMX09QVElNX05VTEwATE9DQUxfT1BUSU1fU0lHTUEATFNEX1JFRklORV9BRFYATFNEX1JFRklORV9OT05FAExTRF9SRUZJTkVfU1REAE1BUktFUl9DUk9TUwBNQVJLRVJfRElBTU9ORABNQVJLRVJfU1FVQVJFAE1BUktFUl9TVEFSAE1BUktFUl9USUxURURfQ1JPU1MATUFSS0VSX1RSSUFOR0xFX0RPV04ATUFSS0VSX1RSSUFOR0xFX1VQAE1JWEVEX0NMT05FAE1PTk9DSFJPTUVfVFJBTlNGRVIATU9SUEhfQkxBQ0tIQVQATU9SUEhfQ0xPU0UATU9SUEhfQ1JPU1MATU9SUEhfRElMQVRFAE1PUlBIX0VMTElQU0UATU9SUEhfRVJPREUATU9SUEhfR1JBRElFTlQATU9SUEhfSElUTUlTUwBNT1JQSF9PUEVOAE1PUlBIX1JFQ1QATU9SUEhfVE9QSEFUAE1PVElPTl9BRkZJTkUATU9USU9OX0VVQ0xJREVBTgBNT1RJT05fSE9NT0dSQVBIWQBNT1RJT05fVFJBTlNMQVRJT04ATWF0X0FVVE9fU1RFUABNYXRfQ09OVElOVU9VU19GTEFHAE1hdF9ERVBUSF9NQVNLAE1hdF9NQUdJQ19NQVNLAE1hdF9NQUdJQ19WQUwATWF0X1NVQk1BVFJJWF9GTEFHAE1hdF9UWVBFX01BU0sATkVJR0hfRkxBTk5fS05OAE5FSUdIX0ZMQU5OX1JBRElVUwBORUlHSF9HUklEAE5PUk1BTF9DTE9ORQBOT1JNQ09OVl9GSUxURVIATk9STV9IQU1NSU5HAE5PUk1fSEFNTUlORzIATk9STV9JTkYATk9STV9MMQBOT1JNX0wyAE5PUk1fTDJTUVIATk9STV9NSU5NQVgATk9STV9SRUxBVElWRQBOT1JNX1RZUEVfTUFTSwBPUFRGTE9XX0ZBUk5FQkFDS19HQVVTU0lBTgBPUFRGTE9XX0xLX0dFVF9NSU5fRUlHRU5WQUxTAE9QVEZMT1dfVVNFX0lOSVRJQUxfRkxPVwBPUkJfRkFTVF9TQ09SRQBPUkJfSEFSUklTX1NDT1JFAFBDQV9EQVRBX0FTX0NPTABQQ0FfREFUQV9BU19ST1cAUENBX1VTRV9BVkcAUFJPSl9TUEhFUklDQUxfRVFSRUNUAFBST0pfU1BIRVJJQ0FMX09SVEhPAFBhcmFtX0FMR09SSVRITQBQYXJhbV9CT09MRUFOAFBhcmFtX0ZMT0FUAFBhcmFtX0lOVABQYXJhbV9NQVQAUGFyYW1fTUFUX1ZFQ1RPUgBQYXJhbV9SRUFMAFBhcmFtX1NDQUxBUgBQYXJhbV9TVFJJTkcAUGFyYW1fVUNIQVIAUGFyYW1fVUlOVDY0AFBhcmFtX1VOU0lHTkVEX0lOVABRUkNvZGVFbmNvZGVyX0NPUlJFQ1RfTEVWRUxfSABRUkNvZGVFbmNvZGVyX0NPUlJFQ1RfTEVWRUxfTABRUkNvZGVFbmNvZGVyX0NPUlJFQ1RfTEVWRUxfTQBRUkNvZGVFbmNvZGVyX0NPUlJFQ1RfTEVWRUxfUQBRUkNvZGVFbmNvZGVyX0VDSV9VVEY4AFFSQ29kZUVuY29kZXJfTU9ERV9BTFBIQU5VTUVSSUMAUVJDb2RlRW5jb2Rlcl9NT0RFX0FVVE8AUVJDb2RlRW5jb2Rlcl9NT0RFX0JZVEUAUVJDb2RlRW5jb2Rlcl9NT0RFX0VDSQBRUkNvZGVFbmNvZGVyX01PREVfS0FOSkkAUVJDb2RlRW5jb2Rlcl9NT0RFX05VTUVSSUMAUVJDb2RlRW5jb2Rlcl9NT0RFX1NUUlVDVFVSRURfQVBQRU5EAFFVQVRfQVNTVU1FX05PVF9VTklUAFFVQVRfQVNTVU1FX1VOSVQAUXVhdEVudW1fRVVMRVJfQU5HTEVTX01BWF9WQUxVRQBRdWF0RW51bV9FWFRfWFlYAFF1YXRFbnVtX0VYVF9YWVoAUXVhdEVudW1fRVhUX1haWABRdWF0RW51bV9FWFRfWFpZAFF1YXRFbnVtX0VYVF9ZWFkAUXVhdEVudW1fRVhUX1lYWgBRdWF0RW51bV9FWFRfWVpYAFF1YXRFbnVtX0VYVF9ZWlkAUXVhdEVudW1fRVhUX1pYWQBRdWF0RW51bV9FWFRfWlhaAFF1YXRFbnVtX0VYVF9aWVgAUXVhdEVudW1fRVhUX1pZWgBRdWF0RW51bV9JTlRfWFlYAFF1YXRFbnVtX0lOVF9YWVoAUXVhdEVudW1fSU5UX1haWABRdWF0RW51bV9JTlRfWFpZAFF1YXRFbnVtX0lOVF9ZWFkAUXVhdEVudW1fSU5UX1lYWgBRdWF0RW51bV9JTlRfWVpYAFF1YXRFbnVtX0lOVF9ZWlkAUXVhdEVudW1fSU5UX1pYWQBRdWF0RW51bV9JTlRfWlhaAFF1YXRFbnVtX0lOVF9aWVgAUXVhdEVudW1fSU5UX1pZWgBSQU5TQUMAUkVDVVJTX0ZJTFRFUgBSRURVQ0VfQVZHAFJFRFVDRV9NQVgAUkVEVUNFX01JTgBSRURVQ0VfU1VNAFJFVFJfQ0NPTVAAUkVUUl9FWFRFUk5BTABSRVRSX0ZMT09ERklMTABSRVRSX0xJU1QAUkVUUl9UUkVFAFJITwBSTkdfTk9STUFMAFJOR19VTklGT1JNAFJPVEFURV8xODAAUk9UQVRFXzkwX0NMT0NLV0lTRQBST1RBVEVfOTBfQ09VTlRFUkNMT0NLV0lTRQBTQU1QTElOR19OQVBTQUMAU0FNUExJTkdfUFJPR1JFU1NJVkVfTkFQU0FDAFNBTVBMSU5HX1BST1NBQwBTQU1QTElOR19VTklGT1JNAFNDT1JFX01FVEhPRF9MTUVEUwBTQ09SRV9NRVRIT0RfTUFHU0FDAFNDT1JFX01FVEhPRF9NU0FDAFNDT1JFX01FVEhPRF9SQU5TQUMAU09MVkVMUF9NVUxUSQBTT0xWRUxQX1NJTkdMRQBTT0xWRUxQX1VOQk9VTkRFRABTT0xWRUxQX1VORkVBU0lCTEUAU09MVkVQTlBfQVAzUABTT0xWRVBOUF9ETFMAU09MVkVQTlBfRVBOUABTT0xWRVBOUF9JUFBFAFNPTFZFUE5QX0lQUEVfU1FVQVJFAFNPTFZFUE5QX0lURVJBVElWRQBTT0xWRVBOUF9NQVhfQ09VTlQAU09MVkVQTlBfUDNQAFNPTFZFUE5QX1NRUE5QAFNPTFZFUE5QX1VQTlAAU09SVF9BU0NFTkRJTkcAU09SVF9ERVNDRU5ESU5HAFNPUlRfRVZFUllfQ09MVU1OAFNPUlRfRVZFUllfUk9XAFNWRF9GVUxMX1VWAFNWRF9NT0RJRllfQQBTVkRfTk9fVVYAU3BhcnNlTWF0X0hBU0hfQklUAFNwYXJzZU1hdF9IQVNIX1NDQUxFAFNwYXJzZU1hdF9NQUdJQ19WQUwAU3BhcnNlTWF0X01BWF9ESU0AU3RlcmVvQk1fUFJFRklMVEVSX05PUk1BTElaRURfUkVTUE9OU0UAU3RlcmVvQk1fUFJFRklMVEVSX1hTT0JFTABTdGVyZW9NYXRjaGVyX0RJU1BfU0NBTEUAU3RlcmVvTWF0Y2hlcl9ESVNQX1NISUZUAFN0ZXJlb1NHQk1fTU9ERV9ISABTdGVyZW9TR0JNX01PREVfSEg0AFN0ZXJlb1NHQk1fTU9ERV9TR0JNAFN0ZXJlb1NHQk1fTU9ERV9TR0JNXzNXQVkAU3ViZGl2MkRfTkVYVF9BUk9VTkRfRFNUAFN1YmRpdjJEX05FWFRfQVJPVU5EX0xFRlQAU3ViZGl2MkRfTkVYVF9BUk9VTkRfT1JHAFN1YmRpdjJEX05FWFRfQVJPVU5EX1JJR0hUAFN1YmRpdjJEX1BSRVZfQVJPVU5EX0RTVABTdWJkaXYyRF9QUkVWX0FST1VORF9MRUZUAFN1YmRpdjJEX1BSRVZfQVJPVU5EX09SRwBTdWJkaXYyRF9QUkVWX0FST1VORF9SSUdIVABTdWJkaXYyRF9QVExPQ19FUlJPUgBTdWJkaXYyRF9QVExPQ19JTlNJREUAU3ViZGl2MkRfUFRMT0NfT05fRURHRQBTdWJkaXYyRF9QVExPQ19PVVRTSURFX1JFQ1QAU3ViZGl2MkRfUFRMT0NfVkVSVEVYAFRIUkVTSF9CSU5BUlkAVEhSRVNIX0JJTkFSWV9JTlYAVEhSRVNIX01BU0sAVEhSRVNIX09UU1UAVEhSRVNIX1RPWkVSTwBUSFJFU0hfVE9aRVJPX0lOVgBUSFJFU0hfVFJJQU5HTEUAVEhSRVNIX1RSVU5DAFRNX0NDT0VGRgBUTV9DQ09FRkZfTk9STUVEAFRNX0NDT1JSAFRNX0NDT1JSX05PUk1FRABUTV9TUURJRkYAVE1fU1FESUZGX05PUk1FRABUZXJtQ3JpdGVyaWFfQ09VTlQAVGVybUNyaXRlcmlhX0VQUwBUZXJtQ3JpdGVyaWFfTUFYX0lURVIAVU1hdERhdGFfQVNZTkNfQ0xFQU5VUABVTWF0RGF0YV9DT1BZX09OX01BUABVTWF0RGF0YV9ERVZJQ0VfQ09QWV9PQlNPTEVURQBVTWF0RGF0YV9ERVZJQ0VfTUVNX01BUFBFRABVTWF0RGF0YV9IT1NUX0NPUFlfT0JTT0xFVEUAVU1hdERhdGFfVEVNUF9DT1BJRURfVU1BVABVTWF0RGF0YV9URU1QX1VNQVQAVU1hdERhdGFfVVNFUl9BTExPQ0FURUQAVU1hdF9BVVRPX1NURVAAVU1hdF9DT05USU5VT1VTX0ZMQUcAVU1hdF9ERVBUSF9NQVNLAFVNYXRfTUFHSUNfTUFTSwBVTWF0X01BR0lDX1ZBTABVTWF0X1NVQk1BVFJJWF9GTEFHAFVNYXRfVFlQRV9NQVNLAFVTQUNfQUNDVVJBVEUAVVNBQ19ERUZBVUxUAFVTQUNfRkFTVABVU0FDX0ZNXzhQVFMAVVNBQ19NQUdTQUMAVVNBQ19QQVJBTExFTABVU0FDX1BST1NBQwBVU0FHRV9BTExPQ0FURV9ERVZJQ0VfTUVNT1JZAFVTQUdFX0FMTE9DQVRFX0hPU1RfTUVNT1JZAFVTQUdFX0FMTE9DQVRFX1NIQVJFRF9NRU1PUlkAVVNBR0VfREVGQVVMVABXQVJQX0ZJTExfT1VUTElFUlMAV0FSUF9JTlZFUlNFX01BUABXQVJQX1BPTEFSX0xJTkVBUgBXQVJQX1BPTEFSX0xPRwBfSW5wdXRBcnJheV9DVURBX0dQVV9NQVQAX0lucHV0QXJyYXlfQ1VEQV9IT1NUX01FTQBfSW5wdXRBcnJheV9FWFBSAF9JbnB1dEFycmF5X0ZJWEVEX1NJWkUAX0lucHV0QXJyYXlfRklYRURfVFlQRQBfSW5wdXRBcnJheV9LSU5EX01BU0sAX0lucHV0QXJyYXlfS0lORF9TSElGVABfSW5wdXRBcnJheV9NQVQAX0lucHV0QXJyYXlfTUFUWABfSW5wdXRBcnJheV9OT05FAF9JbnB1dEFycmF5X09QRU5HTF9CVUZGRVIAX0lucHV0QXJyYXlfU1REX0FSUkFZAF9JbnB1dEFycmF5X1NURF9BUlJBWV9NQVQAX0lucHV0QXJyYXlfU1REX0JPT0xfVkVDVE9SAF9JbnB1dEFycmF5X1NURF9WRUNUT1IAX0lucHV0QXJyYXlfU1REX1ZFQ1RPUl9DVURBX0dQVV9NQVQAX0lucHV0QXJyYXlfU1REX1ZFQ1RPUl9NQVQAX0lucHV0QXJyYXlfU1REX1ZFQ1RPUl9VTUFUAF9JbnB1dEFycmF5X1NURF9WRUNUT1JfVkVDVE9SAF9JbnB1dEFycmF5X1VNQVQAX091dHB1dEFycmF5X0RFUFRIX01BU0tfMTZGAF9PdXRwdXRBcnJheV9ERVBUSF9NQVNLXzE2UwBfT3V0cHV0QXJyYXlfREVQVEhfTUFTS18xNlUAX091dHB1dEFycmF5X0RFUFRIX01BU0tfMzJGAF9PdXRwdXRBcnJheV9ERVBUSF9NQVNLXzMyUwBfT3V0cHV0QXJyYXlfREVQVEhfTUFTS182NEYAX091dHB1dEFycmF5X0RFUFRIX01BU0tfOFMAX091dHB1dEFycmF5X0RFUFRIX01BU0tfOFUAX091dHB1dEFycmF5X0RFUFRIX01BU0tfQUxMAF9PdXRwdXRBcnJheV9ERVBUSF9NQVNLX0FMTF8xNkYAX091dHB1dEFycmF5X0RFUFRIX01BU0tfQUxMX0JVVF84UwBfT3V0cHV0QXJyYXlfREVQVEhfTUFTS19GTFQAX19VTUFUX1VTQUdFX0ZMQUdTXzMyQklUAEJhZEFsaWduAEJhZEFscGhhQ2hhbm5lbABCYWRDT0kAQmFkQ2FsbEJhY2sAQmFkRGF0YVB0cgBCYWREZXB0aABCYWRJbWFnZVNpemUAQmFkTW9kZWxPckNoU2VxAEJhZE51bUNoYW5uZWwxVQBCYWROdW1DaGFubmVscwBCYWRPZmZzZXQAQmFkT3JkZXIAQmFkT3JpZ2luAEJhZFJPSVNpemUAQmFkU3RlcABCYWRUaWxlU2l6ZQBHcHVBcGlDYWxsRXJyb3IAR3B1Tm90U3VwcG9ydGVkAEhlYWRlcklzTnVsbABNYXNrSXNUaWxlZABPcGVuQ0xBcGlDYWxsRXJyb3IAT3BlbkNMRG91YmxlTm90U3VwcG9ydGVkAE9wZW5DTEluaXRFcnJvcgBPcGVuQ0xOb0FNREJsYXNGZnQAT3BlbkdsQXBpQ2FsbEVycm9yAE9wZW5HbE5vdFN1cHBvcnRlZABTdHNBc3NlcnQAU3RzQXV0b1RyYWNlAFN0c0JhY2tUcmFjZQBTdHNCYWRBcmcAU3RzQmFkRmxhZwBTdHNCYWRGdW5jAFN0c0JhZE1hc2sAU3RzQmFkTWVtQmxvY2sAU3RzQmFkUG9pbnQAU3RzQmFkU2l6ZQBTdHNEaXZCeVplcm8AU3RzRXJyb3IAU3RzRmlsdGVyT2Zmc2V0RXJyAFN0c0ZpbHRlclN0cnVjdENvbnRlbnRFcnIAU3RzSW5wbGFjZU5vdFN1cHBvcnRlZABTdHNJbnRlcm5hbABTdHNLZXJuZWxTdHJ1Y3RDb250ZW50RXJyAFN0c05vQ29udgBTdHNOb01lbQBTdHNOb3RJbXBsZW1lbnRlZABTdHNOdWxsUHRyAFN0c09iamVjdE5vdEZvdW5kAFN0c09rAFN0c091dE9mUmFuZ2UAU3RzUGFyc2VFcnJvcgBTdHNVbm1hdGNoZWRGb3JtYXRzAFN0c1VubWF0Y2hlZFNpemVzAFN0c1Vuc3VwcG9ydGVkRm9ybWF0AFN0c1ZlY0xlbmd0aEVycgBURVNUX0NVU1RPTQBURVNUX0VRAFRFU1RfR0UAVEVTVF9HVABURVNUX0xFAFRFU1RfTFQAVEVTVF9ORQBUcmFja2VyU2FtcGxlckNTQ19NT0RFX0RFVEVDVABUcmFja2VyU2FtcGxlckNTQ19NT0RFX0lOSVRfTkVHAFRyYWNrZXJTYW1wbGVyQ1NDX01PREVfSU5JVF9QT1MAVHJhY2tlclNhbXBsZXJDU0NfTU9ERV9UUkFDS19ORUcAVHJhY2tlclNhbXBsZXJDU0NfTU9ERV9UUkFDS19QT1MARE5OX0JBQ0tFTkRfQ1VEQQBETk5fQkFDS0VORF9ERUZBVUxUAEROTl9CQUNLRU5EX0hBTElERQBETk5fQkFDS0VORF9JTkZFUkVOQ0VfRU5HSU5FAEROTl9CQUNLRU5EX09QRU5DVgBETk5fQkFDS0VORF9WS0NPTQBETk5fQkFDS0VORF9XRUJOTgBETk5fVEFSR0VUX0NQVQBETk5fVEFSR0VUX0NVREEARE5OX1RBUkdFVF9DVURBX0ZQMTYARE5OX1RBUkdFVF9GUEdBAEROTl9UQVJHRVRfSERETABETk5fVEFSR0VUX01ZUklBRABETk5fVEFSR0VUX09QRU5DTABETk5fVEFSR0VUX09QRU5DTF9GUDE2AEROTl9UQVJHRVRfVlVMS0FOAFNvZnROTVNNZXRob2RfU09GVE5NU19HQVVTU0lBTgBTb2Z0Tk1TTWV0aG9kX1NPRlROTVNfTElORUFSAENBTElCX0NIRUNLX0NPTkQAQ0FMSUJfRklYX1NLRVcAQ0FMSUJfUkVDT01QVVRFX0VYVFJJTlNJQwBFTlVNX0xPR19MRVZFTF9GT1JDRV9JTlQATE9HX0xFVkVMX0RFQlVHAExPR19MRVZFTF9FUlJPUgBMT0dfTEVWRUxfRkFUQUwATE9HX0xFVkVMX0lORk8ATE9HX0xFVkVMX1NJTEVOVABMT0dfTEVWRUxfVkVSQk9TRQBMT0dfTEVWRUxfV0FSTklORwAAHGkCAHxpAgAcaQIAoGkCABxpAgDoSAAATjJjdjZQb2ludF9JZkVFABRqAgDYSAAAHGkCAAxJAABOMmN2MTFSb3RhdGVkUmVjdEUAABRqAgD4SAAAHGkCACxJAABOMmN2NVJlY3RfSWlFRQAAFGoCABxJAAAcaQIAfGkCABxpAgA0aQIAcHVzaF9iYWNrAHJlc2l6ZQBnZXQAc2V0AGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUATlN0M19fMjZ2ZWN0b3JJaU5TXzlhbGxvY2F0b3JJaUVFRUUATlN0M19fMjEzX192ZWN0b3JfYmFzZUlpTlNfOWFsbG9jYXRvcklpRUVFRQBOU3QzX18yMjBfX3ZlY3Rvcl9iYXNlX2NvbW1vbklMYjFFRUUAAAAUagIA8UkAAJhqAgDFSQAAAAAAAAEAAAAYSgAAAAAAAJhqAgChSQAAAAAAAAEAAAAgSgAAAAAAAFBOU3QzX18yNnZlY3RvcklpTlNfOWFsbG9jYXRvcklpRUVFRQAAAAD0agIAUEoAAAAAAAA4SgAAUEtOU3QzX18yNnZlY3RvcklpTlNfOWFsbG9jYXRvcklpRUVFRQAAAPRqAgCISgAAAQAAADhKAABpaQB2AHZpAHhKAAAcaQIAeEoAAHxpAgB2aWlpAAAAABxpAgB4SgAAoGkCAHxpAgB2aWlpaQAAAKBpAgCwSgAAaWlpACRLAAA4SgAAoGkCAE4xMGVtc2NyaXB0ZW4zdmFsRQAAFGoCABBLAABpaWlpAEHAlgELswg0aQIAOEoAAKBpAgB8aQIAaWlpaWkATlN0M19fMjZ2ZWN0b3JJZk5TXzlhbGxvY2F0b3JJZkVFRUUATlN0M19fMjEzX192ZWN0b3JfYmFzZUlmTlNfOWFsbG9jYXRvcklmRUVFRQAAAJhqAgB6SwAAAAAAAAEAAAAYSgAAAAAAAJhqAgBWSwAAAAAAAAEAAACoSwAAAAAAAFBOU3QzX18yNnZlY3RvcklmTlNfOWFsbG9jYXRvcklmRUVFRQAAAAD0agIA2EsAAAAAAADASwAAUEtOU3QzX18yNnZlY3RvcklmTlNfOWFsbG9jYXRvcklmRUVFRQAAAPRqAgAQTAAAAQAAAMBLAAAATAAAHGkCAABMAACsaQIAdmlpZgAAAAAcaQIAAEwAAKBpAgCsaQIAdmlpaWYAAACgaQIAOEwAACRLAADASwAAoGkCAAAAAAA0aQIAwEsAAKBpAgCsaQIAaWlpaWYATlN0M19fMjZ2ZWN0b3JJZE5TXzlhbGxvY2F0b3JJZEVFRUUATlN0M19fMjEzX192ZWN0b3JfYmFzZUlkTlNfOWFsbG9jYXRvcklkRUVFRQAAAJhqAgDKTAAAAAAAAAEAAAAYSgAAAAAAAJhqAgCmTAAAAAAAAAEAAAD4TAAAAAAAAFBOU3QzX18yNnZlY3RvcklkTlNfOWFsbG9jYXRvcklkRUVFRQAAAAD0agIAKE0AAAAAAAAQTQAAUEtOU3QzX18yNnZlY3RvcklkTlNfOWFsbG9jYXRvcklkRUVFRQAAAPRqAgBgTQAAAQAAABBNAABQTQAAHGkCAFBNAAC4aQIAdmlpZAAAAAAcaQIAUE0AAKBpAgC4aQIAdmlpaWQAAACgaQIAiE0AACRLAAAQTQAAoGkCAAAAAAA0aQIAEE0AAKBpAgC4aQIAaWlpaWQATlN0M19fMjZ2ZWN0b3JJTjJjdjZQb2ludF9JaUVFTlNfOWFsbG9jYXRvcklTM19FRUVFAE5TdDNfXzIxM19fdmVjdG9yX2Jhc2VJTjJjdjZQb2ludF9JaUVFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAmGoCACpOAAAAAAAAAQAAABhKAAAAAAAAmGoCAPZNAAAAAAAAAQAAAGhOAAAAAAAAUE5TdDNfXzI2dmVjdG9ySU4yY3Y2UG9pbnRfSWlFRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAAAD0agIAmE4AAAAAAACATgAAUEtOU3QzX18yNnZlY3RvcklOMmN2NlBvaW50X0lpRUVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAD0agIA4E4AAAEAAACATgAA0E4AABxpAgDQTgAASE8AAE4yY3Y2UG9pbnRfSWlFRQAUagIAOE8AABxpAgDQTgAAoGkCAEhPAACgaQIAGE8AACRLAACATgAAoGkCAEGAnwELxgI0aQIAgE4AAKBpAgBITwAATlN0M19fMjZ2ZWN0b3JJTjJjdjNNYXRFTlNfOWFsbG9jYXRvcklTMl9FRUVFAE5TdDNfXzIxM19fdmVjdG9yX2Jhc2VJTjJjdjNNYXRFTlNfOWFsbG9jYXRvcklTMl9FRUVFAJhqAgC+TwAAAAAAAAEAAAAYSgAAAAAAAJhqAgCQTwAAAAAAAAEAAAD0TwAAAAAAAFBOU3QzX18yNnZlY3RvcklOMmN2M01hdEVOU185YWxsb2NhdG9ySVMyX0VFRUUAAPRqAgAkUAAAAAAAAAxQAABQS05TdDNfXzI2dmVjdG9ySU4yY3YzTWF0RU5TXzlhbGxvY2F0b3JJUzJfRUVFRQD0agIAZFAAAAEAAAAMUAAAVFAAABxpAgBUUAAAwFAAAE4yY3YzTWF0RQAAABRqAgC0UABB0KEBCyMcaQIAVFAAAKBpAgDAUAAAoGkCAJRQAAAkSwAADFAAAKBpAgBBgKIBC/MCNGkCAAxQAACgaQIAwFAAAE5TdDNfXzI2dmVjdG9ySU4yY3Y1UmVjdF9JaUVFTlNfOWFsbG9jYXRvcklTM19FRUVFAE5TdDNfXzIxM19fdmVjdG9yX2Jhc2VJTjJjdjVSZWN0X0lpRUVOU185YWxsb2NhdG9ySVMzX0VFRUUAAACYagIAQ1EAAAAAAAABAAAAGEoAAAAAAACYagIAEFEAAAAAAAABAAAAgFEAAAAAAABQTlN0M19fMjZ2ZWN0b3JJTjJjdjVSZWN0X0lpRUVOU185YWxsb2NhdG9ySVMzX0VFRUUA9GoCALBRAAAAAAAAmFEAAFBLTlN0M19fMjZ2ZWN0b3JJTjJjdjVSZWN0X0lpRUVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAA9GoCAPRRAAABAAAAmFEAAORRAAAcaQIA5FEAACxJAAAAAAAAHGkCAORRAACgaQIALEkAAKBpAgAsUgAAJEsAAJhRAACgaQIAQYClAQviAjRpAgCYUQAAoGkCACxJAABOU3QzX18yNnZlY3RvcklOMmN2OEtleVBvaW50RU5TXzlhbGxvY2F0b3JJUzJfRUVFRQBOU3QzX18yMTNfX3ZlY3Rvcl9iYXNlSU4yY3Y4S2V5UG9pbnRFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAmGoCAMNSAAAAAAAAAQAAABhKAAAAAAAAmGoCAJBSAAAAAAAAAQAAAABTAAAAAAAAUE5TdDNfXzI2dmVjdG9ySU4yY3Y4S2V5UG9pbnRFTlNfOWFsbG9jYXRvcklTMl9FRUVFAPRqAgAwUwAAAAAAABhTAABQS05TdDNfXzI2dmVjdG9ySU4yY3Y4S2V5UG9pbnRFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAAPRqAgB0UwAAAQAAABhTAABkUwAAHGkCAGRTAADcUwAATjJjdjhLZXlQb2ludEUAABRqAgDMUwBB8KcBCyMcaQIAZFMAAKBpAgDcUwAAoGkCAKxTAAAkSwAAGFMAAKBpAgBBoKgBC4MDNGkCABhTAACgaQIA3FMAAE5TdDNfXzI2dmVjdG9ySU4yY3Y2RE1hdGNoRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQBOU3QzX18yMTNfX3ZlY3Rvcl9iYXNlSU4yY3Y2RE1hdGNoRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAAJhqAgBhVAAAAAAAAAEAAAAYSgAAAAAAAJhqAgAwVAAAAAAAAAEAAACcVAAAAAAAAFBOU3QzX18yNnZlY3RvcklOMmN2NkRNYXRjaEVOU185YWxsb2NhdG9ySVMyX0VFRUUAAAD0agIAzFQAAAAAAAC0VAAAUEtOU3QzX18yNnZlY3RvcklOMmN2NkRNYXRjaEVO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Yy9tb2R1bGVzL2NvcmUvc3JjL2FsbG9jLmNwcAAvc3JjL21vZHVsZXMvY29yZS9zcmMvYXJyYXkuY3BwAE5vbi1wb3NpdGl2ZSB3aWR0aCBvciBoZWlnaHQAY3ZDcmVhdGVNYXRIZWFkZXIASW52YWxpZCBtYXRyaXggdHlwZQAAY3ZJbml0TWF0SGVhZGVyAE5vbi1wb3NpdGl2ZSBjb2xzIG9yIHJvd3MAY3ZSZWxlYXNlTWF0AEJhZCBDdk1hdCBoZWFkZXIAY3ZDbG9uZU1hdABJbnZhbGlkIHNwYXJzZSBtYXRyaXggaGVhZGVyAGN2SW5pdFNwYXJzZU1hdEl0ZXJhdG9yAE5VTEwgaXRlcmF0b3IgcG9pbnRlcgBEYXRhIGlzIGFscmVhZHkgYWxsb2NhdGVkAGN2Q3JlYXRlRGF0YQBUb28gYmlnIGJ1ZmZlciBpcyBhbGxvY2F0ZWQAT3ZlcmZsb3cgZm9yIGltYWdlU2l6ZQB1bnJlY29nbml6ZWQgb3IgdW5zdXBwb3J0ZWQgYXJyYXkgdHlwZQBPbmx5IGNvbnRpbnVvdXMgbkQgYXJyYXlzIGFyZSBzdXBwb3J0ZWQgaGVyZQBjdkdldENvbHMATlVMTCBhcnJheSBwb2ludGVyIGlzIHBhc3NlZABjdkdldE1hdABUaGUgbWF0cml4IGhhcyBOVUxMIGRhdGEgcG9pbnRlcgBUaGUgaW1hZ2UgaGFzIE5VTEwgZGF0YSBwb2ludGVyAEltYWdlcyB3aXRoIHBsYW5hciBkYXRhIGxheW91dCBzaG91bGQgYmUgdXNlZCB3aXRoIENPSSBzZWxlY3RlZABUaGUgaW1hZ2UgaXMgaW50ZXJsZWF2ZWQgYW5kIGhhcyBvdmVyIENWX0NOX01BWCBjaGFubmVscwBQaXhlbCBvcmRlciBzaG91bGQgYmUgdXNlZCB3aXRoIGNvaSA9PSAwAElucHV0IGFycmF5IGhhcyBOVUxMIGRhdGEgcG9pbnRlcgBVbnJlY29nbml6ZWQgb3IgdW5zdXBwb3J0ZWQgYXJyYXkgdHlwZQBUaGUgdG90YWwgbnVtYmVyIG9mIG1hdHJpeCBlbGVtZW50cyBpcyBub3QgZGl2aXNpYmxlIGJ5IHRoZSBuZXcgbnVtYmVyIG9mIHJvd3MAY3ZSZXNoYXBlAENPSSBpcyBub3Qgc3VwcG9ydGVkAFRoZSBtYXRyaXggaXMgbm90IGNvbnRpbnVvdXMsIHRodXMgaXRzIG51bWJlciBvZiByb3dzIGNhbiBub3QgYmUgY2hhbmdlZABCYWQgbmV3IG51bWJlciBvZiByb3dzAFRoZSB0b3RhbCB3aWR0aCBpcyBub3QgZGl2aXNpYmxlIGJ5IHRoZSBuZXcgbnVtYmVyIG9mIGNoYW5uZWxzAGN2R2V0SW1hZ2VDT0kAc3JjICYmIG5zcmNzID4gMCAmJiBkc3QgJiYgbmRzdHMgPiAwICYmIGZyb21UbyAmJiBucGFpcnMgPiAwAG1peENoYW5uZWxzAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9jaGFubmVscy5jcHAAaiA8IG5zcmNzICYmIHNyY1tqXS5kZXB0aCgpID09IGRlcHRoAGkxID49IDAgJiYgaiA8IG5kc3RzICYmIGRzdFtqXS5kZXB0aCgpID09IGRlcHRoAEGQ2AELmiFDAgAAQwIAAEQCAABEAgAARQIAAEUCAABGAgAAAAAAAGNuIDw9IDQAc2NhbGFyVG9SYXdEYXRhAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9jb3B5LmNwcAAAY3Z0Rm4AY29udmVydEFuZFVucm9sbFNjYWxhcgBzY24gPT0gMQBjaGFubmVscygpID09IENWX01BVF9DTihkdHlwZSkAY29weVRvAGRzdC51ICE9IE5VTEwAZGltcyA+IDAgJiYgZGltcyA8IENWX01BWF9ESU0A/GwAAEhsAABmAQAABQAAAGdsAAAobQAAMW0AAHZvaWQgY3Y6Ok1hdDo6Y29weVRvKGN2OjpPdXRwdXRBcnJheSkgY29uc3QAc3oud2lkdGgAMABtYXNrLmRlcHRoKCkgPT0gQ1ZfOFUgJiYgKG1jbiA9PSAxIHx8IG1jbiA9PSBjbikAc2l6ZSgpID09IG1hc2suc2l6ZSgpAHN6IDw9IHNpemVvZihzY2FsYXIpAG9wZXJhdG9yPQBjaGVja1NjYWxhcih2YWx1ZSwgdHlwZSgpLCBfdmFsdWUua2luZCgpLCBfSW5wdXRBcnJheTo6TUFUICkAc2V0VG8AbWFzay5lbXB0eSgpIHx8IChtYXNrLmRlcHRoKCkgPT0gQ1ZfOFUgJiYgKG1jbiA9PSAxIHx8IG1jbiA9PSBjbikgJiYgc2l6ZSA9PSBtYXNrLnNpemUpAF9zcmMuZ2V0T2JqKCkgIT0gX2RzdC5nZXRPYmooKQByZXBlYXQAX3NyYy5kaW1zKCkgPD0gMgBueSA+IDAgJiYgbnggPiAwAG1hc2thcnIgPT0gMABjdkNvcHkAc3JjLmRlcHRoKCkgPT0gZHN0LmRlcHRoKCkgJiYgc3JjLnNpemUgPT0gZHN0LnNpemUAKGNvaTEgIT0gMCB8fCBzcmMuY2hhbm5lbHMoKSA9PSAxKSAmJiAoY29pMiAhPSAwIHx8IGRzdC5jaGFubmVscygpID09IDEpAHNyYy5jaGFubmVscygpID09IGRzdC5jaGFubmVscygpAAAvc3JjL21vZHVsZXMvY29yZS9zcmMvZGF0YXN0cnVjdHMuY3BwAGN2UmVzdG9yZU1lbVN0b3JhZ2VQb3MATlVMTCBzdG9yYWdlIHBvaW50ZXIAY3ZNZW1TdG9yYWdlQWxsb2MAVG9vIGxhcmdlIG1lbW9yeSBibG9jayBpcyByZXF1ZXN0ZWQAc3RvcmFnZS0+ZnJlZV9zcGFjZSAlIENWX1NUUlVDVF9BTElHTiA9PSAwAHJlcXVlc3RlZCBzaXplIGlzIG5lZ2F0aXZlIG9yIHRvbyBiaWcAKHNpemVfdClwdHIgJSBDVl9TVFJVQ1RfQUxJR04gPT0gMABjdlNldFNlcUJsb2NrU2l6ZQBTdG9yYWdlIGJsb2NrIHNpemUgaXMgdG9vIHNtYWxsIHRvIGZpdCB0aGUgc2VxdWVuY2UgZWxlbWVudHMAY3ZDdnRTZXFUb0FycmF5AGN2U2V0U2VxUmVhZGVyUG9zAE5VTEwgc2VxdWVuY2UgcG9pbnRlcgBudW1iZXIgb2YgcmVtb3ZlZCBlbGVtZW50cyBpcyBuZWdhdGl2ZQBjdlNlcVBvcE11bHRpAGRlbHRhID4gMABjdkNsZWFyU2VxAGN2U2V0QWRkAGNvdW50IDw9IENWX1NFVF9FTEVNX0lEWF9NQVNLKzEAaWN2R29OZXh0TWVtQmxvY2sAcGFyZW50LT5ib3R0b20gPT0gYmxvY2sAaWN2R3Jvd1NlcQBUaGUgc2VxdWVuY2UgaGFzIE5VTEwgc3RvcmFnZSBwb2ludGVyAHN0b3JhZ2UtPmZyZWVfc3BhY2UgPj0gZGVsdGEAYmxvY2stPmNvdW50ICUgc2VxLT5lbGVtX3NpemUgPT0gMCAmJiBibG9jay0+Y291bnQgPiAwAHNlcS0+Zmlyc3QtPnN0YXJ0X2luZGV4ID09IDAAKGluX2Zyb250X29mID8gYmxvY2sgOiBibG9jay0+cHJldiktPmNvdW50ID09IDAAaWN2RnJlZVNlcUJsb2NrAHNlcS0+cHRyID09IGJsb2NrLT5kYXRhAGJsb2NrLT5jb3VudCA+IDAgJiYgYmxvY2stPmNvdW50ICUgc2VxLT5lbGVtX3NpemUgPT0gMAAvc3JjL21vZHVsZXMvY29yZS9zcmMvbGFwYWNrLmNwcAAhbWF0LmVtcHR5KCkAZGV0ZXJtaW5hbnQAbWF0LnJvd3MgPT0gbWF0LmNvbHMgJiYgKHR5cGUgPT0gQ1ZfMzJGIHx8IHR5cGUgPT0gQ1ZfNjRGKQB0eXBlID09IENWXzMyRiB8fCB0eXBlID09IENWXzY0RgBpbnZlcnQAbSA9PSBuAG1ldGhvZCA9PSBERUNPTVBfTFUgfHwgbWV0aG9kID09IERFQ09NUF9DSE9MRVNLWQBuID09IDEAdHlwZSA9PSBfc3JjMi50eXBlKCkgJiYgKHR5cGUgPT0gQ1ZfMzJGIHx8IHR5cGUgPT0gQ1ZfNjRGKQBzb2x2ZQC4cwAAf3IAAEgEAAAAAAAA/XMAACJ0AAApdAAAYm9vbCBjdjo6c29sdmUoY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXksIGludCkAVW5zdXBwb3J0ZWQgbWV0aG9kLCBzZWUgI0RlY29tcFR5cGVzAG1ldGhvZABtZXRob2QgPT0gREVDT01QX0xVIHx8IG1ldGhvZCA9PSBERUNPTVBfU1ZEIHx8IG1ldGhvZCA9PSBERUNPTVBfRUlHIHx8IG1ldGhvZCA9PSBERUNPTVBfQ0hPTEVTS1kgfHwgbWV0aG9kID09IERFQ09NUF9RUgAobWV0aG9kICE9IERFQ09NUF9MVSAmJiBtZXRob2QgIT0gREVDT01QX0NIT0xFU0tZKSB8fCBpc19ub3JtYWwgfHwgc3JjLnJvd3MgPT0gc3JjLmNvbHMAc3JjLnJvd3MgPT0gMQBUaGUgZnVuY3Rpb24gY2FuIG5vdCBzb2x2ZSB1bmRlci1kZXRlcm1pbmVkIGxpbmVhciBzeXN0ZW1zAHNyYy5yb3dzID09IHNyYy5jb2xzAGVpZ2VuAHcudHlwZSgpID09IHUudHlwZSgpICYmIHUudHlwZSgpID09IHZ0LnR5cGUoKSAmJiB1LmRhdGEgJiYgdnQuZGF0YSAmJiB3LmRhdGEAYmFja1N1YnN0AHUuY29scyA+PSBubSAmJiB2dC5yb3dzID49IG5tICYmICh3LnNpemUoKSA9PSBTaXplKG5tLCAxKSB8fCB3LnNpemUoKSA9PSBTaXplKDEsIG5tKSB8fCB3LnNpemUoKSA9PSBTaXplKHZ0LnJvd3MsIHUuY29scykpAHJocy5kYXRhID09IDAgfHwgKHJocy50eXBlKCkgPT0gdHlwZSAmJiByaHMucm93cyA9PSBtKQAAcm93cyA9PSBtYXQtPmNvbHMAY3ZEZXQAc3JjLnR5cGUoKSA9PSBkc3QudHlwZSgpICYmIHNyYy5yb3dzID09IGRzdC5jb2xzICYmIHNyYy5jb2xzID09IGRzdC5yb3dzAGN2SW52ZXJ0AEEudHlwZSgpID09IHgudHlwZSgpICYmIEEuY29scyA9PSB4LnJvd3MgJiYgeC5jb2xzID09IGIuY29scwBjdlNvbHZlAHcudHlwZSgpID09IHR5cGUgJiYgKHcuc2l6ZSgpID09IGN2OjpTaXplKG5tLDEpIHx8IHcuc2l6ZSgpID09IGN2OjpTaXplKDEsIG5tKSB8fCB3LnNpemUoKSA9PSBjdjo6U2l6ZShubSwgbm0pIHx8IHcuc2l6ZSgpID09IGN2OjpTaXplKG4sIG0pKQBjdlNWRAB1LnR5cGUoKSA9PSB0eXBlAHYudHlwZSgpID09IHR5cGUAdS5zaXplKCkgPT0gc3ZkLnUuc2l6ZSgpAHYuc2l6ZSgpID09IHN2ZC52dC5zaXplKCkAX1NWRGNvbXB1dGUAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL2FyaXRobS5zaW1kLmhwcABjbXBvcCA9PSBDTVBfTkUAY21wX2xvb3Bfbm9zaW1kAGNtcF9sb29wAG9wID09IENNUF9MVCB8fCBvcCA9PSBDTVBfTEUgfHwgb3AgPT0gQ01QX0VRIHx8IG9wID09IENNUF9ORSB8fCBvcCA9PSBDTVBfR0UgfHwgb3AgPT0gQ01QX0dUAGNvbXBhcmUAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL2FyaXRobS5jcHAAX3NyYzEuZW1wdHkoKSA9PSBfc3JjMi5lbXB0eSgpAFRoZSBvcGVyYXRpb24gaXMgbmVpdGhlciAnYXJyYXkgb3AgYXJyYXknICh3aGVyZSBhcnJheXMgaGF2ZSB0aGUgc2FtZSBzaXplIGFuZCB0aGUgc2FtZSB0eXBlKSwgbm9yICdhcnJheSBvcCBzY2FsYXInLCBub3IgJ3NjYWxhciBvcCBhcnJheScAVW5zdXBwb3J0ZWQgZGVwdGggdmFsdWUgQ1ZfMTZGAGZ1bmMAY3Z0Rm4Ac3JjMS5zaXplID09IGRzdC5zaXplICYmIHNyYzEuY2hhbm5lbHMoKSA9PSBkc3QuY2hhbm5lbHMoKQBjdlN1YgBiaW5hcnlfb3AAVGhlIG9wZXJhdGlvbiBpcyBuZWl0aGVyICdhcnJheSBvcCBhcnJheScgKHdoZXJlIGFycmF5cyBoYXZlIHRoZSBzYW1lIHNpemUgYW5kIHR5cGUpLCBub3IgJ2FycmF5IG9wIHNjYWxhcicsIG5vciAnc2NhbGFyIG9wIGFycmF5JwBwc3JjMS0+c2FtZVNpemUoKnBzcmMyKSAmJiB0eXBlMSA9PSB0eXBlMgAobXR5cGUgPT0gQ1ZfOFUgfHwgbXR5cGUgPT0gQ1ZfOFMpICYmIF9tYXNrLnNhbWVTaXplKCpwc3JjMSkAVGhlIG9wZXJhdGlvbiBpcyBuZWl0aGVyICdhcnJheSBvcCBhcnJheScgKHdoZXJlIGFycmF5cyBoYXZlIHRoZSBzYW1lIHNpemUgYW5kIHRoZSBzYW1lIG51bWJlciBvZiBjaGFubmVscyksIG5vciAnYXJyYXkgb3Agc2NhbGFyJywgbm9yICdzY2FsYXIgb3AgYXJyYXknAGFyaXRobV9vcAB0eXBlMiA9PSBDVl82NEYgJiYgKHN6Mi5oZWlnaHQgPT0gMSB8fCBzejIuaGVpZ2h0ID09IDQpAFdoZW4gdGhlIGlucHV0IGFycmF5cyBpbiBhZGQvc3VidHJhY3QvbXVsdGlwbHkvZGl2aWRlIGZ1bmN0aW9ucyBoYXZlIGRpZmZlcmVudCB0eXBlcywgdGhlIG91dHB1dCBhcnJheSB0eXBlIG11c3QgYmUgZXhwbGljaXRseSBzcGVjaWZpZWQAKG10eXBlID09IENWXzhVQzEgfHwgbXR5cGUgPT0gQ1ZfOFNDMSkgJiYgX21hc2suc2FtZVNpemUoKnBzcmMxKQCVAgAAlgIAAJcCAACYAgAAmQIAAJoCAACbAgBBvvkBCwJgwABBzvkBCxrgwAAAAAAAAODBAAAA4P//78f////////v/wBB9fkBC9UI4G9AAAAAAADAX0AAAAAA4P/vQAAAAADA/99AAADA////30EAAADg///vR////////+9/AAAAAAAAAAAEAAAAAQAAAAIAAAAwICYmICJOb3Qgc3VwcG9ydGVkIgAvc3JjL21vZHVsZXMvY29yZS9zcmMvbWF0bXVsLnNpbWQuaHBwAGdldFNjYWxlQWRkRnVuYwBmdW5jICYmICJOb3Qgc3VwcG9ydGVkIgBnZXRNdWxUcmFuc3Bvc2VkRnVuYwAvc3JjL21vZHVsZXMvY29yZS9zcmMvbWF0bXVsLmRpc3BhdGNoLmNwcAB0eXBlID09IEIudHlwZSgpAGdlbW0AKHR5cGUgPT0gKCgoNSkgJiAoKDEgPDwgMykgLSAxKSkgKyAoKCgxKS0xKSA8PCAzKSkgfHwgdHlwZSA9PSAoKCg2KSAmICgoMSA8PCAzKSAtIDEpKSArICgoKDEpLTEpIDw8IDMpKSB8fCB0eXBlID09ICgoKDUpICYgKCgxIDw8IDMpIC0gMSkpICsgKCgoMiktMSkgPDwgMykpIHx8IHR5cGUgPT0gKCgoNikgJiAoKDEgPDwgMykgLSAxKSkgKyAoKCgyKS0xKSA8PCAzKSkpAGFfc2l6ZS53aWR0aCA9PSBsZW4AYV9zaXplLmhlaWdodCA9PSBsZW4AQy50eXBlKCkgPT0gdHlwZQAoKChmbGFncyZHRU1NXzNfVCkgPT0gMCAmJiBDLnJvd3MgPT0gZF9zaXplLmhlaWdodCAmJiBDLmNvbHMgPT0gZF9zaXplLndpZHRoKSB8fCAoKGZsYWdzJkdFTU1fM19UKSAhPSAwICYmIEMucm93cyA9PSBkX3NpemUud2lkdGggJiYgQy5jb2xzID09IGRfc2l6ZS5oZWlnaHQpKQB0eXBlID09IENWXzY0RkMyAGZ1bmMgIT0gMAB0eXBlID09IF9zcmMyLnR5cGUoKQBzY2FsZUFkZABzcmMxLnNpemUgPT0gc3JjMi5zaXplAHNyYy5jaGFubmVscygpID09IDEAbXVsVHJhbnNwb3NlZABkZWx0YS5jaGFubmVscygpID09IDEAKGRlbHRhLnJvd3MgPT0gc3JjLnJvd3MgfHwgZGVsdGEucm93cyA9PSAxKQAoZGVsdGEuY29scyA9PSBzcmMuY29scyB8fCBkZWx0YS5jb2xzID09IDEpAABtYXQudHlwZSgpID09IHR5cGUoKQBkb3QAbWF0LnNpemUgPT0gc2l6ZQAoRC5yb3dzID09ICgoZmxhZ3MgJiAxKSA9PSAwID8gQS5yb3dzIDogQS5jb2xzKSkAY3ZHRU1NAChELmNvbHMgPT0gKChmbGFncyAmIDIpID09IDAgPyBCLmNvbHMgOiBCLnJvd3MpKQBELnR5cGUoKSA9PSBBLnR5cGUoKQAAAAAAAAAAvAIAAL0CAAC+AgAAvwIAAMACAADBAgAAwgIAQYCDAguILGdlbW1JbXBsADAAR0VNTV9UcmFuc3Bvc2VCbG9jawBkZWx0YV9jb2xzID09IDEATXVsVHJhbnNwb3NlZFIAc3pbaV0gPD0gKHNpemVfdClJTlRfTUFYAGRvd25sb2FkAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9tYXRyaXguY3BwAHVwbG9hZABjb3B5ADAgPD0gX2RpbXMgJiYgX2RpbXMgPD0gQ1ZfTUFYX0RJTQBzZXRTaXplAHMgPj0gMABTdGVwICV6dSBmb3IgZGltZW5zaW9uICVkIG11c3QgYmUgYSBtdWx0aXBsZSBvZiBlc3oxICV6dQBUaGUgdG90YWwgbWF0cml4IHNpemUgZG9lcyBub3QgZml0IHRvICJzaXplX3QiIHR5cGUAdG90YWwoKSA9PSAwIHx8IGRhdGEgIT0gTlVMTABNYXQAX3N0ZXAgPj0gbWluc3RlcABTdGVwIG11c3QgYmUgYSBtdWx0aXBsZSBvZiBlc3oxAAAAAByDAADggQAA0gEAAAUAAABIgwAASYMAAE+DAABjdjo6TWF0OjpNYXQoY3Y6OlNpemUsIGludCwgdm9pZCAqLCBzaXplX3QpAABfc3RlcABtaW5zdGVwAG0uc3RlcC5wICE9IG0uc3RlcC5idWYAb3BlcmF0b3I9ADAgPD0gZCAmJiBkIDw9IENWX01BWF9ESU0gJiYgX3NpemVzAGNyZWF0ZQB1ICE9IDAAc3RlcFtkaW1zLTFdID09IChzaXplX3QpQ1ZfRUxFTV9TSVpFKGZsYWdzKQBtLmRpbXMgPj0gMgAwIDw9IF9yb3dSYW5nZS5zdGFydCAmJiBfcm93UmFuZ2Uuc3RhcnQgPD0gX3Jvd1JhbmdlLmVuZCAmJiBfcm93UmFuZ2UuZW5kIDw9IG0ucm93cwAwIDw9IF9jb2xSYW5nZS5zdGFydCAmJiBfY29sUmFuZ2Uuc3RhcnQgPD0gX2NvbFJhbmdlLmVuZCAmJiBfY29sUmFuZ2UuZW5kIDw9IG0uY29scwBtLmRpbXMgPD0gMgAwIDw9IHJvaS54ICYmIDAgPD0gcm9pLndpZHRoICYmIHJvaS54ICsgcm9pLndpZHRoIDw9IG0uY29scyAmJiAwIDw9IHJvaS55ICYmIDAgPD0gcm9pLmhlaWdodCAmJiByb2kueSArIHJvaS5oZWlnaHQgPD0gbS5yb3dzAHJhbmdlcwByID09IFJhbmdlOjphbGwoKSB8fCAoMCA8PSByLnN0YXJ0ICYmIHIuc3RhcnQgPCByLmVuZCAmJiByLmVuZCA8PSBtLnNpemVbaV0pAGRpbXMgPD0gMgBkaWFnAGRpbXMgPD0gMiAmJiBzdGVwWzBdID4gMABsb2NhdGVST0kAYWRqdXN0Uk9JAHJlc2hhcGUAVGhlIG1hdHJpeCBpcyBub3QgY29udGludW91cywgdGh1cyBpdHMgbnVtYmVyIG9mIHJvd3MgY2FuIG5vdCBiZSBjaGFuZ2VkAEJhZCBuZXcgbnVtYmVyIG9mIHJvd3MAVGhlIHRvdGFsIG51bWJlciBvZiBtYXRyaXggZWxlbWVudHMgaXMgbm90IGRpdmlzaWJsZSBieSB0aGUgbmV3IG51bWJlciBvZiByb3dzAFRoZSB0b3RhbCB3aWR0aCBpcyBub3QgZGl2aXNpYmxlIGJ5IHRoZSBuZXcgbnVtYmVyIG9mIGNoYW5uZWxzAF9jbiA+PSAwICYmIF9uZXduZGltcyA+IDAgJiYgX25ld25kaW1zIDw9IENWX01BWF9ESU0gJiYgX25ld3N6AF9jbiA8PSBDVl9DTl9NQVgAX25ld3N6W2ldID49IDAAQ29weSBkaW1lbnNpb24gKHdoaWNoIGhhcyB6ZXJvIHNpemUpIGlzIG5vdCBwcmVzZW50IGluIHNvdXJjZSBtYXRyaXgAUmVxdWVzdGVkIGFuZCBzb3VyY2UgbWF0cmljZXMgaGF2ZSBkaWZmZXJlbnQgY291bnQgb2YgZWxlbWVudHMAUmVzaGFwaW5nIG9mIG4tZGltZW5zaW9uYWwgbm9uLWNvbnRpbnVvdXMgbWF0cmljZXMgaXMgbm90IHN1cHBvcnRlZCB5ZXQA4IcAAOCBAAAXBQAAAwAAAEiDAAARiAAAGYgAAGN2OjpTaXplIGN2OjpnZXRDb250aW51b3VzU2l6ZTJEKGN2OjpNYXQgJiwgaW50KQBtMS5kaW1zADIAADiIAADggQAAHQUAAAMAAABIgwAAEYgAABmIAABjdjo6U2l6ZSBjdjo6Z2V0Q29udGludW91c1NpemUyRChjdjo6TWF0ICYsIGN2OjpNYXQgJiwgaW50KQA4iAAA4IEAAB4FAAADAAAASIMAAJCIAAAZiAAAbTIuZGltcwA4iAAA4IEAACMFAAABAAAASIMAALSIAAC9iAAAdG90YWxfc3oAbTIudG90YWwoKQBpc19tMV92ZWN0b3IAZ2V0Q29udGludW91c1NpemUyRABpc19tMl92ZWN0b3IAbTEuY29scyA9PSBtMi5jb2xzICYmIG0xLnJvd3MgPT0gbTIucm93cwAAPIkAAOCBAAA3BQAAAwAAAEiDAAARiAAAGYgAAGN2OjpTaXplIGN2OjpnZXRDb250aW51b3VzU2l6ZTJEKGN2OjpNYXQgJiwgY3Y6Ok1hdCAmLCBjdjo6TWF0ICYsIGludCkAADyJAADggQAAOAUAAAMAAABIgwAAkIgAABmIAAA8iQAA4IEAADkFAAADAAAASIMAALyJAAAZiAAAbTMuZGltcwA8iQAA4IEAAD4FAAABAAAASIMAALSIAAC9iAAAPIkAAOCBAAA/BQAAAQAAAEiDAAC0iAAA/IkAAG0zLnRvdGFsKCkAaXNfbTNfdmVjdG9yAG0xLmNvbHMgPT0gbTIuY29scyAmJiBtMS5yb3dzID09IG0yLnJvd3MgJiYgbTEuY29scyA9PSBtMy5jb2xzICYmIG0xLnJvd3MgPT0gbTMucm93cwBOMmN2MTJNYXRBbGxvY2F0b3JFAAAAABRqAgBpigAAAAAAAPCKAADDAgAAxAIAAMUCAADGAgAAxwIAAMgCAABOMmN2MjVEdW1teUJ1ZmZlclBvb2xDb250cm9sbGVyRQBOMmN2MjBCdWZmZXJQb29sQ29udHJvbGxlckUAAAAAFGoCAMmKAAA8agIAqIoAAOiKAAAAAAAASIsAAMkCAADKAgAAywIAAMwCAADNAgAAzgIAAM8CAADQAgAA0QIAANICAADTAgAATjJjdjE1U3RkTWF0QWxsb2NhdG9yRQAAPGoCADCLAACAigAAdG90YWwgPD0gc3RlcFtpXQBhbGxvY2F0ZQB1LT51cmVmY291bnQgPT0gMABkZWFsbG9jYXRlAHUtPnJlZmNvdW50ID09IDAAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL21hdHJpeF9jLmNwcABDT0kgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgZnVuY3Rpb24AY3ZhcnJUb01hdAB0b3RhbCA+IDAgJiYgQ1ZfRUxFTV9TSVpFKHNlcS0+ZmxhZ3MpID09IGVzegBVbmtub3duIGFycmF5IHR5cGUAQ1ZfSVNfSU1BR0UoYXJyKQBleHRyYWN0SW1hZ2VDT0kAMCA8PSBjb2kgJiYgY29pIDwgbWF0LmNoYW5uZWxzKCkAc3JjLnJvd3MgPT0gZHN0LmNvbHMgJiYgc3JjLmNvbHMgPT0gZHN0LnJvd3MgJiYgc3JjLnR5cGUoKSA9PSBkc3QudHlwZSgpAGN2VHJhbnNwb3NlAHNyY0Euc2l6ZSgpID09IGRzdC5zaXplKCkgJiYgc3JjQS50eXBlKCkgPT0gZHN0LnR5cGUoKQBjdkNyb3NzUHJvZHVjdABpbWctPmRhdGFPcmRlciA9PSBJUExfREFUQV9PUkRFUl9QSVhFTABpcGxJbWFnZVRvTWF0AGltZy0+ZGF0YU9yZGVyID09IElQTF9EQVRBX09SREVSX1BJWEVMIHx8IGltZy0+cm9pLT5jb2kgIT0gMABnbG9iYWwAJWRAJTAuM2YAJWRAJWxsdQAlZABbRkFUQUw6AF0gAFtFUlJPUjoAWyBXQVJOOgBbIElORk86AFtERUJVRzoAIAAoACkgAE9QRU5DVl9MT0dfTEVWRUwAAE9QRU5DVl9MT0dfVElNRVNUQU1QAE9QRU5D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KXZ2LnNpemUoKQAwIDw9IGkgJiYgaSA8IChpbnQpdi5zaXplKCkAMCA8PSBpICYmIGkgPCBzei5oZWlnaHQAWW91IHNob3VsZCBleHBsaWNpdGx5IGNhbGwgbWFwSG9zdC91bm1hcEhvc3QgbWV0aG9kcyBmb3Igb2dsOjpCdWZmZXIgb2JqZWN0AFlvdSBzaG91bGQgZXhwbGljaXRseSBjYWxsIGRvd25sb2FkIG1ldGhvZCBmb3IgY3VkYTo6R3B1TWF0IG9iamVjdABVbmtub3duL3Vuc3VwcG9ydGVkIGFycmF5IHR5cGUAZ2V0VU1hdABnZXRNYXRWZWN0b3IAZ2V0VU1hdFZlY3RvcgBDVURBIHN1cHBvcnQgaXMgbm90IGVuYWJsZWQgaW4gdGhpcyBPcGVuQ1YgYnVpbGQgKG1pc3NpbmcgSEFWRV9DVURBKQBzaXplAGkgPCAoaW50KXZ2LnNpemUoKQBpIDwgc3ouaGVpZ2h0AHNpemVuZAComgAA0pgAADcCAAADAAAA1poAAOSaAADsmgAAaW50IGN2OjpfSW5wdXRBcnJheTo6c2l6ZW5kKGludCAqLCBpbnQpIGNvbnN0AE5vdCBzdXBwb3J0ZWQAZGltcyhpKQAyAGRpbXMAKGZsYWdzICYgRklYRURfVFlQRSkgIT0gMAB0eXBlAGVtcHR5AGkgPj0gMCAmJiAoc2l6ZV90KWkgPCB2di5zaXplKCkAaXNDb250aW51b3VzAGkgPj0gMCAmJiBpIDwgc3ouaGVpZ2h0AABjb3B5VG8AIWZpeGVkU2l6ZSgpIHx8ICgoTWF0KilvYmopLT5zaXplLm9wZXJhdG9yKCkoKSA9PSBfc3oAY3JlYXRlACFmaXhlZFR5cGUoKSB8fCAoKE1hdCopb2JqKS0+dHlwZSgpID09IG10eXBlACFmaXhlZFNpemUoKSB8fCAoKFVNYXQqKW9iaiktPnNpemUub3BlcmF0b3IoKSgpID09IF9zegAhZml4ZWRUeXBlKCkgfHwgKChVTWF0KilvYmopLT50eXBlKCkgPT0gbXR5cGUAIWZpeGVkU2l6ZSgpIHx8ICgoY3VkYTo6R3B1TWF0KilvYmopLT5zaXplKCkgPT0gX3N6ACFmaXhlZFR5cGUoKSB8fCAoKGN1ZGE6OkdwdU1hdCopb2JqKS0+dHlwZSgpID09IG10eXBlACFmaXhlZFNpemUoKSB8fCAoKG9nbDo6QnVmZmVyKilvYmopLT5zaXplKCkgPT0gX3N6ACFmaXhlZFR5cGUoKSB8fCAoKG9nbDo6QnVmZmVyKilvYmopLT50eXBlKCkgPT0gbXR5cGUAT3BlbkdMIHN1cHBvcnQgaXMgbm90IGVuYWJsZWQgaW4gdGhpcyBPcGVuQ1YgYnVpbGQgKG1pc3NpbmcgSEFWRV9PUEVOR0wpACFmaXhlZFNpemUoKSB8fCAoKGN1ZGE6Okhvc3RNZW0qKW9iaiktPnNpemUoKSA9PSBfc3oAIWZpeGVkVHlwZSgpIHx8ICgoY3VkYTo6SG9zdE1lbSopb2JqKS0+dHlwZSgpID09IG10eXBlACFmaXhlZFNpemUoKSB8fCAoKE1hdCopb2JqKS0+c2l6ZS5vcGVyYXRvcigpKCkgPT0gU2l6ZShfY29scywgX3Jvd3MpACFmaXhlZFNpemUoKSB8fCAoKFVNYXQqKW9iaiktPnNpemUub3BlcmF0b3IoKSgpID09IFNpemUoX2NvbHMsIF9yb3dzKQAhZml4ZWRTaXplKCkgfHwgKChjdWRhOjpHcHVNYXQqKW9iaiktPnNpemUoKSA9PSBTaXplKF9jb2xzLCBfcm93cykAIWZpeGVkU2l6ZSgpIHx8ICgob2dsOjpCdWZmZXIqKW9iaiktPnNpemUoKSA9PSBTaXplKF9jb2xzLCBfcm93cykAIWZpeGVkU2l6ZSgpIHx8ICgoY3VkYTo6SG9zdE1lbSopb2JqKS0+c2l6ZSgpID09IFNpemUoX2NvbHMsIF9yb3dzKQAhKG0uZW1wdHkoKSAmJiBmaXhlZFR5cGUoKSAmJiBmaXhlZFNpemUoKSkgJiYgIkNhbid0IHJlYWxsb2NhdGUgZW1wdHkgTWF0IHdpdGggbG9ja2VkIGxheW91dCAocHJvYmFibHkgZHVlIHRvIG1pc3VzZWQgJ2NvbnN0JyBtb2RpZmllcikiALSfAADSmAAAFAUAAAEAAAAToAAAZKAAAG2gAAB2b2lkIGN2OjpfT3V0cHV0QXJyYXk6OmNyZWF0ZShpbnQsIGNvbnN0IGludCAqLCBpbnQsIGludCwgYm9vbCwgX091dHB1dEFycmF5OjpEZXB0aE1hc2spIGNvbnN0AENhbid0IHJlYWxsb2NhdGUgTWF0IHdpdGggbG9ja2VkIHR5cGUgKHByb2JhYmx5IGR1ZSB0byBtaXN1c2VkICdjb25zdCcgbW9kaWZpZXIpAG0udHlwZSgpAENWX01BVF9UWVBFKG10eXBlKQC0nwAA0pgAABgFAAABAAAAnKAAAO2gAAD0oAAAQ2FuJ3QgcmVhbGxvY2F0ZSBNYXQgd2l0aCBsb2NrZWQgc2l6ZSAocHJvYmFibHkgZHVlIHRvIG1pc3VzZWQgJ2NvbnN0JyBtb2RpZmllcikAbS5kaW1zAGQAAAC0nwAA0pgAABoFAAABAAAAnKAAABShAAAeoQAAbS5zaXplW2pdAHNpemVzW2pdACEobS5lbXB0eSgpICYmIGZpeGVkVHlwZSgpICYmIGZpeGVkU2l6ZSgpKSAmJiAiQ2FuJ3QgcmVhbGxvY2F0ZSBlbXB0eSBVTWF0IHdpdGggbG9ja2VkIGxheW91dCAocHJvYmFibHkgZHVlIHRvIG1pc3VzZWQgJ2NvbnN0JyBtb2RpZmllcikiAAAAALSfAADSmAAAMgUAAAEAAADQoQAAZKAAAG2gAABDYW4ndCByZWFsbG9jYXRlIFVNYXQgd2l0aCBsb2NrZWQgdHlwZSAocHJvYmFibHkgZHVlIHRvIG1pc3VzZWQgJ2NvbnN0JyBtb2RpZmllcikAAAC0nwAA0pgAADYFAAABAAAAQKIAAO2gAAD0oAAAQ2FuJ3QgcmVhbGxvY2F0ZSBVTWF0IHdpdGggbG9ja2VkIHNpemUgKHByb2JhYmx5IGR1ZSB0byBtaXN1c2VkICdjb25zdCcgbW9kaWZpZXIpAAAAtJ8AANKYAAA4BQAAAQAAAECiAAAUoQAAHqEAAG10eXBlID09IHR5cGUwIHx8IChDVl9NQVRfQ04obXR5cGUpID09IDEgJiYgKCgxIDw8IHR5cGUwKSAmIGZpeGVkRGVwdGhNYXNrKSAhPSAwKQAAALSfAADSmAAAQwUAAAMAAABdmwAA9KAAAOyaAAC0nwAA0pgAAEkFAAAAAAAAXZsAADyjAABLowAAcmVxdWVzdGVkX3NpemUAc3RkOjptYXgocmVxdWVzdGVkX3NpemUud2lkdGgsIHJlcXVlc3RlZF9zaXplLmhlaWdodCkgPT0gdG90YWxfMWQAAAAAtJ8AANKYAABPBQAAAQAAAF2bAAA8owAArKMAAHN6AAC0nwAA0pgAAFUFAAAAAAAAXZsAADyjAADMowAAKHJlcXVlc3RlZF9zaXplID09IHN6IHx8IChyZXF1ZXN0ZWRfc2l6ZS5oZWlnaHQgPT0gc3oud2lkdGggJiYgcmVxdWVzdGVkX3NpemUud2lkdGggPT0gc3ouaGVpZ2h0KSkAZCA9PSAyICYmIChzaXplc1swXSA9PSAxIHx8IHNpemVzWzFdID09IDEgfHwgc2l6ZXNbMF0qc2l6ZXNbMV0gPT0gMCkAIWZpeGVkU2l6ZSgpIHx8IGxlbiA9PSB2di5zaXplKCkAbXR5cGUgPT0gdHlwZTAgfHwgKENWX01BVF9DTihtdHlwZSkgPT0gQ1ZfTUFUX0NOKHR5cGUwKSAmJiAoKDEgPDwgdHlwZTApICYgZml4ZWREZXB0aE1hc2spICE9IDApACFmaXhlZFNpemUoKSB8fCBsZW4gPT0gKChzdGQ6OnZlY3Rvcjx1Y2hhcj4qKXYpLT5zaXplKCkgLyBlc3oAVmVjdG9ycyB3aXRoIGVsZW1lbnQgc2l6ZSAlZCBhcmUgbm90IHN1cHBvcnRlZC4gUGxlYXNlLCBtb2RpZnkgT3V0cHV0QXJyYXk6OmNyZWF0ZSgpCgBjcmVhdGUoKSBjYWxsZWQgZm9yIHRoZSBtaXNzaW5nIG91dHB1dCBhcnJheQAhZml4ZWRTaXplKCkgfHwgbGVuID09IGxlbjAAdltqXS5lbXB0eSgpAGkgPCAoaW50KXYuc2l6ZSgpACFmaXhlZFR5cGUoKSAmJiAhZml4ZWRTaXplKCkAQ1ZfTUFUX1RZUEUobXR5cGUpID09IG0udHlwZSgpAG0uZGltcyA9PSBkAG0uc2l6ZVtqXSA9PSBzaXplc1tqXQBsZW4gPT0gbGVuMAAhZml4ZWRTaXplKCkAcmVsZWFzZQBrID09IE1BVABnZXRNYXRSZWYAayA9PSBTVERfVkVDVE9SX01BVCB8fCBrID09IFNURF9BUlJBWV9NQVQAc2V0VG8AYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAoY24gPT0gMSAmJiAoX21hc2suZW1wdHkoKSB8fCBfbWFzay50eXBlKCkgPT0gQ1ZfOFUpKSB8fCAoY24gPiAxICYmIF9tYXNrLmVtcHR5KCkgJiYgIW1pbklkeCAmJiAhbWF4SWR4KQBtaW5NYXhJZHgAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL21pbm1heC5jcHAAZnVuYyAhPSAwAF9pbWcuZGltcygpIDw9IDIAbWluTWF4TG9jAEHAzwIL3SgtAwAALgMAAC8DAAAwAwAAMQMAADIDAAAzAwAAAAAAAAABAQIBAgIDAQICAwIDAwQBAgIDAgMDBAIDAwQDBAQFAQICAwIDAwQCAwMEAwQEBQIDAwQDBAQFAwQEBQQFBQYBAgIDAgMDBAIDAwQDBAQFAgMDBAMEBAUDBAQFBAUFBgIDAwQDBAQFAwQEBQQFBQYDBAQFBAUFBgQFBQYFBgYHAQICAwIDAwQCAwMEAwQEBQIDAwQDBAQFAwQEBQQFBQYCAwMEAwQEBQMEBAUEBQUGAwQEBQQFBQYEBQUGBQYGBwIDAwQDBAQFAwQEBQQFBQYDBAQFBAUFBgQFBQYFBgYHAwQEBQQFBQYEBQUGBQYGBwQFBQYFBgYHBQYGBwYHBwgAAQEBAQICAgECAgIBAgICAQICAgIDAwMCAwMDAgMDAwECAgICAwMDAgMDAwIDAwMBAgICAgMDAwIDAwMCAwMDAQICAgIDAwMCAwMDAgMDAwIDAwMDBAQEAwQEBAMEBAQCAwMDAwQEBAMEBAQDBAQEAgMDAwMEBAQDBAQEAwQEBAECAgICAwMDAgMDAwIDAwMCAwMDAwQEBAMEBAQDBAQEAgMDAwMEBAQDBAQEAwQEBAIDAwMDBAQEAwQEBAMEBAQBAgICAgMDAwIDAwMCAwMDAgMDAwMEBAQDBAQEAwQEBAIDAwMDBAQEAwQEBAMEBAQCAwMDAwQEBAMEBAQDBAQEAAEBAQEBAQEBAQEBAQEBAQECAgICAgICAgICAgICAgIBAgICAgICAgICAgICAgICAQICAgICAgICAgICAgICAgECAgICAgICAgICAgICAgIBAgICAgICAgICAgICAgICAQICAgICAgICAgICAgICAgECAgICAgICAgICAgICAgIBAgICAgICAgICAgICAgICAQICAgICAgICAgICAgICAgECAgICAgICAgICAgICAgIBAgICAgICAgICAgICAgICAQICAgICAgICAgICAgICAgECAgICAgICAgICAgICAgIBAgICAgICAgICAgICAgICAQICAgICAgICAgICAgICAm5vcm1UeXBlID09IE5PUk1fSU5GIHx8IG5vcm1UeXBlID09IE5PUk1fTDEgfHwgbm9ybVR5cGUgPT0gTk9STV9MMiB8fCBub3JtVHlwZSA9PSBOT1JNX0wyU1FSIHx8ICgobm9ybVR5cGUgPT0gTk9STV9IQU1NSU5HIHx8IG5vcm1UeXBlID09IE5PUk1fSEFNTUlORzIpICYmIF9zcmMudHlwZSgpID09IENWXzhVKQBub3JtAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9ub3JtLmNwcABtYXNrLmVtcHR5KCkgfHwgbWFzay50eXBlKCkgPT0gQ1ZfOFUAZnVuYyAhPSAwAAAAAASsAACXqwAAxwIAAAQAAAA5rAAAOqwAAEqsAABkb3VibGUgY3Y6Om5vcm0oY3Y6OklucHV0QXJyYXksIGludCwgY3Y6OklucHV0QXJyYXkpAAAoc2l6ZV90KWl0LnNpemUAKHNpemVfdClJTlRfTUFYAAAAeKwAAJerAAA5BAAAAQAAAL2sAADRrAAA3qwAAGRvdWJsZSBjdjo6bm9ybShjdjo6SW5wdXRBcnJheSwgY3Y6OklucHV0QXJyYXksIGludCwgY3Y6OklucHV0QXJyYXkpAElucHV0IHR5cGUgbWlzbWF0Y2gAX3NyYzEudHlwZSgpAF9zcmMyLnR5cGUoKQBfc3JjMS5zYW1lU2l6ZShfc3JjMikAbm9ybVR5cGUgPT0gTk9STV9JTkYgfHwgbm9ybVR5cGUgPT0gTk9STV9MMSB8fCBub3JtVHlwZSA9PSBOT1JNX0wyIHx8IG5vcm1UeXBlID09IE5PUk1fTDJTUVIgfHwgKChub3JtVHlwZSA9PSBOT1JNX0hBTU1JTkcgfHwgbm9ybVR5cGUgPT0gTk9STV9IQU1NSU5HMikgJiYgc3JjMS50eXBlKCkgPT0gQ1ZfOFUpAAB4rAAAl6sAAKUEAAAEAAAAOawAADqsAABKrAAANAMAADUDAAA2AwAANwMAADgDAAA5AwAAOgMAAAAAAAA7AwAAPAMAAD0DAAA+AwAAPwMAAEADAABBAwAAAAAAAEIDAABDAwAARAMAAEUDAABGAwAARwMAAEgDAAAAAAAASQMAAEoDAABLAwAATAMAAE0DAABOAwAATwMAAAAAAABQAwAAUQMAAFIDAABTAwAAVAMAAFUDAABWAwAAAAAAAFcDAABYAwAAWQMAAFoDAABbAwAAXAMAAF0DAAAAAAAATjJjdjE2UGFyYWxsZWxMb29wQm9keUUAFGoCAJCuAAAAAAAA9K4AAF8DAABgAwAAYQMAAE4yY3YxMl9HTE9CQUxfX05fMTIzUGFyYWxsZWxMb29wQm9keVdyYXBwZXJFAAAAADxqAgDErgAAqK4AAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9wYXJhbGxlbC9wYXJhbGxlbC5jcHAAY29yZShwYXJhbGxlbCk6IEJ1aWx0aW4gYmFja2VuZHMoACk6IAAvc3JjL21vZHVsZXMvY29yZS9zcmMvcGFyYWxsZWwvcmVnaXN0cnlfcGFyYWxsZWwuaW1wbC5ocHAAUGFyYWxsZWxCYWNrZW5kUmVnaXN0cnkAY29yZShwYXJhbGxlbCk6IFVwZGF0ZWQgYmFja2VuZHMgcHJpb3JpdGllczogAE9QRU5DVl9QQVJBTExFTF9QUklPUklUWV8lcwBjb3JlKHBhcmFsbGVsKTogRGlzYWJsZSBiYWNrZW5kOiAAY29yZShwYXJhbGxlbCk6IEF2YWlsYWJsZSBiYWNrZW5kcygAY29yZShwYXJhbGxlbCk6IEVuYWJsZWQgYmFja2VuZHMoACwgc29ydGVkIGJ5IHByaW9yaXR5KTogAE4vQQBhbGxvY2F0b3I8VD46OmFsbG9jYXRlKHNpemVfdCBuKSAnbicgZXhjZWVkcyBtYXhpbXVtIHN1cHBvcnRlZCBzaXplADsgAE9QRU5DVl9QQVJBTExFTF9QUklPUklUWV9MSVNUAGNvcmUocGFyYWxsZWwpOiBDb25maWd1cmVkIHByaW9yaXR5IGxpc3QgKE9QRU5DVl9QQVJBTExFTF9QUklPUklUWV9MSVNUKTogAHJlYWRQcmlvcml0eVNldHRpbmdzAGNvcmUocGFyYWxsZWwpOiBOZXcgYmFja2VuZCBwcmlvcml0eTogJwAnID0+IABjb3JlKHBhcmFsbGVsKTogQWRkaW5nIHBhcmFsbGVsIGJhY2tlbmQgKHBsdWdpbik6ICcAJwBjb3JlKHBhcmFsbGVsKTogSW5pdGlhbGl6aW5nIHBhcmFsbGVsIGJhY2tlbmQuLi4AY3JlYXRlRGVmYXVsdFBhcmFsbGVsRm9yQVBJAE9QRU5DVl9QQVJBTExFTF9CQUNLRU5EAABjb3JlKHBhcmFsbGVsKTogcmVxdWVzdGVkIGJhY2tlbmQgbmFtZTogAGNyZWF0ZVBhcmFsbGVsRm9yQVBJAGNvcmUocGFyYWxsZWwpOiB0cnlpbmcgYmFja2VuZDogACAocHJpb3JpdHk9ACkAY29yZShwYXJhbGxlbCk6IGZhY3RvcnkgaXMgbm90IGF2YWlsYWJsZSAocGx1Z2lucyByZXF1aXJlIGZpbGVzeXN0ZW0gc3VwcG9ydCk6IABjb3JlKHBhcmFsbGVsKTogdXNpbmcgYmFja2VuZDogAGNvcmUocGFyYWxsZWwpOiBmYWxsYmFjayBvbiBidWlsdGluIGNvZGUAY29yZShwYXJhbGxlbCk6IHVua25vd24gYmFja2VuZDogAAAlZC4wACVkLgAlLjE2ZQAuTmFuAC0uSW5mAC5JbmYAZm10X3BhaXJzICE9IDAgJiYgbWF4X2xlbiA+IDAAZGVjb2RlRm9ybWF0AC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9wZXJzaXN0ZW5jZS5jcHAASW52YWxpZCBkYXRhIHR5cGUgc3BlY2lmaWNhdGlvbgBUb28gbG9uZyBkYXRhIHR5cGUgc3BlY2lmaWNhdGlvbgAAAAAAANC/AABnAwAAaAMAAGkDAABqAwAAawMAAGwDAABtAwAAbgMAAG8DAABwAwAAcQMAAHIDAABzAwAAdAMAAHUDAAB2AwAAdwMAAHgDAAB5AwAAegMAAHsDAAB8AwAAfQMAAH4DAAB/AwAAgAMAAIEDAACCAwAAPC9vcGVuY3Zfc3RvcmFnZT4KAH0KAGJhc2U2NABOVUxMIG9yIGVtcHR5IGZpbGVuYW1lAG9wZW4ARmlsZVN0b3JhZ2U6OkFQUEVORCBhbmQgRmlsZVN0b3JhZ2U6Ok1FTU9SWSBhcmUgbm90IGN1cnJlbnRseSBjb21wYXRpYmxlAEFwcGVuZGluZyBkYXRhIHRvIGNvbXByZXNzZWQgZmlsZSBpcyBub3QgaW1wbGVtZW50ZWQAcnQAd3QAYSt0AC5negAueG1sAC54bWwuZ3oALmpzb24ALmpzb24uZ3oAVVRGLTE2AFVURi0xNiBYTUwgZW5jb2RpbmcgaXMgbm90IHN1cHBvcnRlZCEgVXNlIDgtYml0IGVuY29kaW5nCgBzdHJsZW4oZW5jb2RpbmcpIDwgMTAwMAA8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSIlcyI/PgoAPD94bWwgdmVyc2lvbj0iMS4wIj8+CgA8b3BlbmN2X3N0b3JhZ2U+CgAAAAAAPC9vcGVuY3Zfc3RvcmFnZT4AQ291bGQgbm90IGZpbmQgPC9vcGVuY3Zfc3RvcmFnZT4gaW4gdGhlIGVuZCBvZiBmaWxlLgoAcit0AGZpbGUgIT0gMAAgPCEtLSByZXN1bWVkIC0tPgAKACVZQU1MOjEuMAotLS0KAC4uLgotLS0KAGZtdCA9PSBGaWxlU3RvcmFnZTo6Rk9STUFUX0pTT04AewoAQ291bGQgbm90IGZpbmQgJ30nIGluIHRoZSBlbmQgb2YgZmlsZS4KACVZQU1MADw/eG1sAGJ1ZgBJbnB1dCBmaWxlIGlzIGludmFsaWQAVW5zdXBwb3J0ZWQgZmlsZSBzdG9yYWdlIGZvcm1hdAAhZnNfZGF0YV9wdHJzLmVtcHR5KCkAd3JpdGVfbW9kZQBwdXRzAFRoZSBzdG9yYWdlIGlzIG5vdCBvcGVuZWQAZ2V0c0Zyb21GaWxlAG1heENvdW50IDwgTUFYX0JMT0NLX1NJWkUAZ2V0cwB3cml0dGVuX2xlbiA8PSAoaW50KSBidWZmZXIuc2l6ZSgpAHJlc2l6ZVdyaXRlQnVmZmVyAGVuZFdyaXRlU3RydWN0ACF3cml0ZV9zdGFjay5lbXB0eSgpAHN0YXJ0V3JpdGVTdHJ1Y3RfaGVscGVyAFNvbWUgY29sbGVjdGlvbiB0eXBlOiBGaWxlTm9kZTo6U0VRIG9yIEZpbGVOb2RlOjpNQVAgbXVzdCBiZSBzcGVjaWZpZWQAdHlwZV9pZABiaW5hcnkAbXVzdCBzZXQgJ3N0cnVjdF9mbGFncyB8PSBDVl9OT0RFX1NFUScgaWYgdXNpbmcgQmFzZTY0LgBzdGFydFdyaXRlU3RydWN0AGZ1bmN0aW9uICdjdlN0YXJ0V3JpdGVTdHJ1Y3QnIGNhbGxzIGNhbm5vdCBiZSBuZXN0ZWQgaWYgdXNpbmcgQmFzZTY0LgBBdCB0aGUgZW5kIG9mIHRoZSBvdXRwdXQgQmFzZTY0LCBgY3ZFbmRXcml0ZVN0cnVjdGAgaXMgbmVlZGVkLgB3cml0ZQBVbnN1cHBvcnRlZCB0eXBlAFVuZXhwZWN0ZWQgZXJyb3IsIHVuYWJsZSB0byBkZXRlcm1pbmUgdGhlIEJhc2U2NCBzdGF0ZS4AVW5leHBlY3RlZCBlcnJvciwgdW5hYmxlIHRvIHN3aXRjaCB0byB0aGlzIHN0YXRlLgAiJGJhc2U2NCQAc3dpdGNoX3RvX0Jhc2U2NF9zdGF0ZQAiAGlzX3dyaXRlX3N0cnVjdF9kZWxheWVkID09IGZhbHNlAG1ha2Vfd3JpdGVfc3RydWN0X2RlbGF5ZWQAcHRyID49IGJ1ZmZlcnN0YXJ0ICYmIHB0ciA8PSBidWZmZXJFbmQoKQBzZXRCdWZmZXJQdHIAZ2V0Q3VycmVudFN0cnVjdABwcm9jZXNzU3BlY2lhbERvdWJsZQBCYWQgZm9ybWF0IG9mIGZsb2F0aW5nLXBvaW50IGNvbnN0YW50AHR5cGUgPT0gRmlsZU5vZGU6OlNFUSB8fCB0eXBlID09IEZpbGVOb2RlOjpNQVAAY29udmVydFRvQ29sbGVjdGlvbgB0eXBlID09IEZpbGVOb2RlOjpTRVEAVGhlIG5vZGUgb2YgdHlwZSAlZCBjYW5ub3QgYmUgY29udmVydGVkIHRvIGNvbGxlY3Rpb24AYmxvY2tJZHggPT0gZnNfZGF0YV9wdHJzLnNpemUoKSAtIDEAcmVzZXJ2ZU5vZGVTcGFjZQBvZnMgPD0gZnNfZGF0YV9ibGtzeltibG9ja0lkeF0AZnJlZVNwYWNlT2ZzIDw9IGZzX2RhdGFfYmxrc3pbYmxvY2tJZHhdAHB0ciA+PSBmc19kYXRhX3B0cnNbYmxvY2tJZHhdICYmIHB0ciA8PSBibG9ja0VuZABfAGFkZE5vZGUATWFwIGVsZW1lbnQgc2hvdWxkIGhhdmUgYSBuYW1lAFNlcXVlbmNlIGVsZW1lbnQgc2hvdWxkIG5vdCBoYXZlIG5hbWUgKHVzZSA8Xz48L18+KQBvZnMgPT0gZnNfZGF0YV9ibGtzeltibG9ja0lkeF0Abm9ybWFsaXplTm9kZU9mcwBBy/gCC1A+AAAAPzQ1Njc4OTo7PD0AAAAAAAAAAAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkAAAAAAAAaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMwBBoPoCC9EIb2ZzIDw9IHN6AHJlYWRNb3JlACFwYXJzZXIuZW1wdHkoKSAmJiBwdHIAIWJhc2U2NGRlY29kZXIuZW5kT2ZTdHJlYW0oKQBwYXJzZUJhc2U2NAAlcyglZCk6ICVzAGJsb2NrSWR4IDwgZnNfZGF0YV9wdHJzLnNpemUoKQBnZXROb2RlUHRyAG9mcyA8IGZzX2RhdGFfYmxrc3pbYmxvY2tJZHhdAAAAAAAAAPC/AACDAwAAhAMAAIUDAACGAwAAhwMAAIgDAABFeHRyYSBjbG9zaW5nICclYycAb3BlcmF0b3I8PABUaGUgY2xvc2luZyAnJWMnIGRvZXMgbm90IG1hdGNoIHRoZSBvcGVuaW5nICclYycAIWZzX2ltcGwtPndyaXRlX3N0YWNrLmVtcHR5KCkASW5jb3JyZWN0IGVsZW1lbnQgbmFtZSAlczsgc2hvdWxkIHN0YXJ0IHdpdGggYSBsZXR0ZXIgb3IgJ18nAEludmFsaWQgZnMuc3RhdGUAaXNNYXAoKQBvcGVyYXRvcltdAGtleTIgPCBmcy0+c3RyX2hhc2hfZGF0YS5zaXplKCkAaXNTZXEoKQAwIDw9IGkgJiYgaSA8IHN6AHRwID09IFNUUklORyB8fCB0cCA9PSBTRVEgfHwgdHAgPT0gTUFQAHJhd1NpemUAcCAhPSAwAHNldFZhbHVlAGN1cnJlbnRfdHlwZSA9PSBOT05FIHx8IGN1cnJlbnRfdHlwZSA9PSB0eXBlAE9ubHkgc2NhbGFyIHR5cGVzIGNhbiBiZSBkeW5hbWljYWxseSBhc3NpZ25lZCB0byBhIGZpbGUgbm9kZQBOMmN2MTVGaWxlU3RvcmFnZV9BUElFAAAUagIAmL8AAE4yY3YxMUZpbGVTdG9yYWdlNEltcGxFADxqAgC4vwAAsL8AAE4yY3YxMUZpbGVTdG9yYWdlRQAAFGoCANy/AAB1Y3dzaWZkaABzeW1ib2xUb1R5cGUAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAAAAAAAAC8wAAAiQMAAIoDAACLAwAAjAMAAI0DAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOU182dmVjdG9ySWhOU185YWxsb2NhdG9ySWhFRUVFTlMyX0lTNF9FRUVFAAAAPGoCAHDAAADEZQIAAAAAADDBAACOAwAAjwMAAJADAACMAwAAkQMAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3YxMUZpbGVTdG9yYWdlNEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAA8agIA5MAAAMRlAgAvc3JjL21vZHVsZXMvY29yZS9zcmMvcGVyc2lzdGVuY2VfYmFzZTY0X2VuY29kaW5nLmNwcABBgIMDC5YvQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLwBmcy53cml0ZV9tb2RlAEJhc2U2NFdyaXRlcgBCYXNlNjRDb250ZXh0RW1pdHRlcgAAAAAAAAAAWMIAAJIDAACTAwAAlAMAAIwDAACVAwAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjExSlNPTkVtaXR0ZXJFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAPGoCABDCAADEZQIAAAAAAMzCAACWAwAAlwMAAJgDAACZAwAAmgMAAJsDAACcAwAAnQMAAJ4DAACfAwAATjJjdjExSlNPTkVtaXR0ZXJFAE4yY3YxOEZpbGVTdG9yYWdlRW1pdHRlckUAAAAAFGoCAKfCAAA8agIAlMIAAMTCAABTb21lIGNvbGxlY3Rpb24gdHlwZSAtIEZpbGVOb2RlOjpTRVEgb3IgRmlsZU5vZGU6Ok1BUCwgbXVzdCBiZSBzcGVjaWZpZWQAc3RhcnRXcml0ZVN0cnVjdAAvc3JjL21vZHVsZXMvY29yZS9zcmMvcGVyc2lzdGVuY2VfanNvbi5jcHAAYmluYXJ5AE51bGwgc3RyaW5nIHBvaW50ZXIAd3JpdGUAVGhlIHdyaXR0ZW4gc3RyaW5nIGlzIHRvbyBsb25nAEF0IHByZXNlbnQsIG91dHB1dCBCYXNlNjQgZGF0YSBvbmx5LgB3cml0ZVNjYWxhcgBUaGUga2V5IGlzIGFuIGVtcHR5AFRoZSBrZXkgaXMgdG9vIGxvbmcAQW4gYXR0ZW1wdCB0byBhZGQgZWxlbWVudCB3aXRob3V0IGEga2V5IHRvIGEgbWFwLCBvciBhZGQgZWxlbWVudCB3aXRoIGtleSB0byBzZXF1ZW5jZQBLZXkgbXVzdCBzdGFydCB3aXRoIGEgbGV0dGVyIG9yIF8AS2V5IG5hbWVzIG1heSBvbmx5IGNvbnRhaW4gYWxwaGFudW1lcmljIGNoYXJhY3RlcnMgW2EtekEtWjAtOV0sICctJywgJ18nIGFuZCAnICcATnVsbCBjb21tZW50AHdyaXRlQ29tbWVudAAuLi4KAC0tLQoAAAAAAABIxQAAoAMAAKEDAACiAwAAjAMAAKMDAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2MTBKU09OUGFyc2VyRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAAAA8agIAAMUAAMRlAgAAAAAAoMUAAKQDAAClAwAApgMAAKcDAABOMmN2MTBKU09OUGFyc2VyRQBOMmN2MTdGaWxlU3RvcmFnZVBhcnNlckUAABRqAgB+xQAAPGoCAGzFAACYxQAAcGFyc2UASW52YWxpZCBpbnB1dABsZWZ0LWJyYWNlIG9mIHRvcCBsZXZlbCBpcyBtaXNzaW5nAHNraXBTcGFjZXMATm90IHN1cHBvcnRlZCBlc2NhcGUgY2hhcmFjdGVyAEludmFsaWQgY2hhcmFjdGVyIGluIHRoZSBzdHJlYW0AcHRyAEFib3J0IGF0IHBhcnNlIHRpbWUAcGFyc2VNYXAAcHRyIGlzIE5VTEwAJ3snIC0gbGVmdC1icmFjZSBvZiBtYXAgaXMgbWlzc2luZwBVbmV4cGVjdGVkIGNoYXJhY3RlcgAnfScgLSByaWdodC1icmFjZSBvZiBtYXAgaXMgbWlzc2luZwBwYXJzZUtleQBLZXkgbXVzdCBzdGFydCB3aXRoICciJwBPcGVuQ1YgcGVyc2lzdGVuY2UgZG9lc24ndCBzdXBwb3J0IHZlcnkgbG9uZyBsaW5lcwBLZXkgbXVzdCBlbmQgd2l0aCAnIicAS2V5IGlzIGVtcHR5AE1pc3NpbmcgJzonIGJldHdlZW4ga2V5IGFuZCB2YWx1ZQBwYXJzZVZhbHVlAEludmFsaWQgdmFsdWUgaW5wdXQAVW5leHBlY3RlZCBFbmQtT2YtRmlsZQAnIicgLSByaWdodC1xdW90ZSBvZiBzdHJpbmcgaXMgbWlzc2luZwBzdHJpbmcgaXMgdG9vIGxvbmcAJ1x1WFhYWCcgY3VycmVudGx5IG5vdCBzdXBwb3J0ZWQASW52YWxpZCBlc2NhcGUgY2hhcmFjdGVyAEludmFsaWQgbnVtZXJpYyB2YWx1ZSAoaW5jb25zaXN0ZW50IGV4cGxpY2l0IHR5cGUgc3BlY2lmaWNhdGlvbj8pAFZhbHVlICdudWxsJyBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgcGFyc2VyAGZhbHNlAFVucmVjb2duaXplZCB2YWx1ZQBwYXJzZVNlcQAnWycgLSBsZWZ0LWJyYWNlIG9mIHNlcSBpcyBtaXNzaW5nACddJyAtIHJpZ2h0LWJyYWNlIG9mIHNlcSBpcyBtaXNzaW5nAGdldEJhc2U2NFJvdwBVbmV4cGVjdGVkIGVuZCBvZiBsaW5lAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAAAAAAAAAAKDJAACoAwAAqQMAAKoDAACMAwAAqwMAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3YxMFhNTEVtaXR0ZXJFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAADxqAgBYyQAAxGUCAAAAAADwyQAAlgMAAKwDAACtAwAArgMAAK8DAACwAwAAsQMAALIDAACzAwAAtAMAAE4yY3YxMFhNTEVtaXR0ZXJFAAAAPGoCANzJAADEwgAAdHlwZV9pZABBbiBhdHRlbXB0IHRvIGFkZCBlbGVtZW50IHdpdGhvdXQgYSBrZXkgdG8gYSBtYXAsIG9yIGFkZCBlbGVtZW50IHdpdGgga2V5IHRvIHNlcXVlbmNlAHdyaXRlVGFnAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9wZXJzaXN0ZW5jZV94bWwuY3BwAF8AQSBzaW5nbGUgXyBpcyBhIHJlc2VydmVkIHRhZyBuYW1lAENsb3NpbmcgdGFnIHNob3VsZCBub3QgaW5jbHVkZSBhbnkgYXR0cmlidXRlcwBLZXkgc2hvdWxkIHN0YXJ0IHdpdGggYSBsZXR0ZXIgb3IgXwBLZXkgbmFtZSBtYXkgb25seSBjb250YWluIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIFthLXpBLVowLTldLCAnLScgYW5kICdfJwBuYXR0ciAlIDIgPT0gMABsZW4wID4gMABOdWxsIHN0cmluZyBwb2ludGVyAHdyaXRlAFRoZSB3cml0dGVuIHN0cmluZyBpcyB0b28gbG9uZwBhbXAAI3glMDJ4AEF0IHByZXNlbnQsIG91dHB1dCBCYXNlNjQgZGF0YSBvbmx5LgB3cml0ZVNjYWxhcgBlbGVtZW50cyB3aXRoIGtleXMgY2FuIG5vdCBiZSB3cml0dGVuIHRvIHNlcXVlbmNlAE51bGwgY29tbWVudAB3cml0ZUNvbW1lbnQALS0ARG91YmxlIGh5cGhlbiAnLS0nIGlzIG5vdCBhbGxvd2VkIGluIHRoZSBjb21tZW50cwA8IS0tICVzIC0tPgA8IS0tAAo8IS0tIG5leHQgc3RyZWFtIC0tPgoAAAAAAOTMAAC1AwAAtgMAALcDAACMAwAAuAMAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y5WE1MUGFyc2VyRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAPGoCAKDMAADEZQIAAAAAABjNAACkAwAAuQMAALoDAAC7AwAATjJjdjlYTUxQYXJzZXJFADxqAgAIzQAAmMUAAGZzICE9IDAAcGFyc2UASW52YWxpZCBpbnB1dAA8P3htbABWYWxpZCBYTUwgc2hvdWxkIHN0YXJ0IHdpdGggJzw/eG1sIC4uLj8+JwBvcGVuY3Zfc3RvcmFnZQA8b3BlbmN2X3N0b3JhZ2U+IHRhZyBpcyBtaXNzaW5nADwvb3BlbmN2X3N0b3JhZ2U+IHRhZyBpcyBtaXNzaW5nAGZzLT5lb2YoKQBza2lwU3BhY2VzAENvbW1lbnRzIGFyZSBub3QgYWxsb3dlZCBoZXJlAEludmFsaWQgY2hhcmFjdGVyIGluIHRoZSBzdHJlYW0AcGFyc2VUYWcASW52YWxpZCB0YWcgaW5wdXQAVW5leHBlY3RlZCBlbmQgb2YgdGhlIHN0cmVhbQBUYWcgc2hvdWxkIHN0YXJ0IHdpdGggJzwnAE9wZW5DViBwZXJzaXN0ZW5jZSBkb2Vzbid0IHN1cHBvcnQgdmVyeSBsb25nIGxpbmVzAHB0clsxXSAhPSAnLScgfHwgcHRyWzJdICE9ICctJwBVbmtub3duIHRhZyB0eXBlAE5hbWUgc2hvdWxkIHN0YXJ0IHdpdGggYSBsZXR0ZXIgb3IgdW5kZXJzY29yZQBDbG9zaW5nIHRhZyBzaG91bGQgbm90IGNvbnRhaW4gYW55IGF0dHJpYnV0ZXMASW52YWxpZCBhdHRyaWJ1dGUAQXR0cmlidXRlIG5hbWUgc2hvdWxkIGJlIGZvbGxvd2VkIGJ5ICc9JwBBdHRyaWJ1dGUgdmFsdWUgc2hvdWxkIGJlIHB1dCBpbnRvIHNpbmdsZSBvciBkb3VibGUgcXVvdGVzAFVuZXhwZWN0ZWQgZW5kIG9mIGxpbmUAdHlwZV9uYW1lLmVtcHR5KCkASW52YWxpZCBjbG9zaW5nIHRhZyBmb3IgPD94bWwgLi4uAFRoZXJlIHNob3VsZCBiZSBzcGFjZSBiZXR3ZWVuIGF0dHJpYnV0ZXMAcGFyc2VWYWx1ZQBEaXJlY3RpdmUgdGFncyBhcmUgbm90IGFsbG93ZWQgaGVyZQBFbXB0eSB0YWdzIGFyZSBub3Qgc3VwcG9ydGVkAHRhZ190eXBlID09IENWX1hNTF9PUEVOSU5HX1RBRwBzdHIAbWFwAHNlcQBiaW5hcnkATWlzbWF0Y2hlZCBjbG9zaW5nIHRhZwBUaGVyZSBzaG91bGQgYmUgc3BhY2UgYmV0d2VlbiBsaXRlcmFscwBJbnZhbGlkIG51bWVyaWMgdmFsdWUgKGluY29uc2lzdGVudCBleHBsaWNpdCB0eXBlIHNwZWNpZmljYXRpb24/KQBMaXRlcmFsICIgaXMgbm90IGFsbG93ZWQgd2l0aGluIGEgc3RyaW5nLiBVc2UgJnF1b3Q7AENsb3NpbmcgIiBpcyBleHBlY3RlZABMaXRlcmFsICcgb3IgPiBhcmUgbm90IGFsbG93ZWQuIFVzZSAmYXBvczsgb3IgJmd0OwBJbnZhbGlkIG51bWVyaWMgdmFsdWUgaW4gdGhlIHN0cmluZwBJbnZhbGlkIGNoYXJhY3RlciBpbiB0aGUgc3ltYm9sIGVudGl0eSBuYW1lAHN0cmluZyBpcyB0b28gbG9uZwBUb28gbG9uZyBzdHJpbmcgbGl0ZXJhbABnZXRCYXNlNjRSb3cAAAAAAAAAeNIAALwDAAC9AwAAvgMAAIwDAAC/AwAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjExWUFNTEVtaXR0ZXJFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAPGoCADDSAADEZQIAAAAAAMjSAACWAwAAwAMAAMEDAADCAwAAwwMAAMQDAADFAwAAxgMAAMcDAADIAwAATjJjdjExWUFNTEVtaXR0ZXJFAAA8agIAtNIAAMTCAABTb21lIGNvbGxlY3Rpb24gdHlwZSAtIEZpbGVOb2RlOjpTRVEgb3IgRmlsZU5vZGU6Ok1BUCwgbXVzdCBiZSBzcGVjaWZpZWQAc3RhcnRXcml0ZVN0cnVjdAAvc3JjL21vZHVsZXMvY29yZS9zcmMvcGVyc2lzdGVuY2VfeW1sLmNwcABiaW5hcnkAISFiaW5hcnkgfAAhISVzICVjACEhJXMATnVsbCBzdHJpbmcgcG9pbnRlcgB3cml0ZQBUaGUgd3JpdHRlbiBzdHJpbmcgaXMgdG9vIGxvbmcAeCUwMngAQXQgcHJlc2VudCwgb3V0cHV0IEJhc2U2NCBkYXRhIG9ubHkuAHdyaXRlU2NhbGFyAEFuIGF0dGVtcHQgdG8gYWRkIGVsZW1lbnQgd2l0aG91dCBhIGtleSB0byBhIG1hcCwgb3IgYWRkIGVsZW1lbnQgd2l0aCBrZXkgdG8gc2VxdWVuY2UAVGhlIGtleSBpcyBhbiBlbXB0eQBUaGUga2V5IGlzIHRvbyBsb25nAEtleSBtdXN0IHN0YXJ0IHdpdGggYSBsZXR0ZXIgb3IgXwBLZXkgbmFtZXMgbWF5IG9ubHkgY29udGFpbiBhbHBoYW51bWVyaWMgY2hhcmFjdGVycyBbYS16QS1aMC05XSwgJy0nLCAnXycgYW5kICcgJwBOdWxsIGNvbW1lbnQAd3JpdGVDb21tZW50AC4uLgoALS0tCgAAAAAAYNUAAMkDAADKAwAAywMAAIwDAADMAwAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjEwWUFNTFBhcnNlckVOU185YWxsb2NhdG9ySVMyX0VFRUUAAAAAPGoCABjVAADEZQIAAAAAAJjVAACkAwAAzQMAAM4DAADPAwAATjJjdjEwWUFNTFBhcnNlckUAAAA8agIAhNUAAJjFAABwYXJzZQBJbnZhbGlkIGlucHV0ACVZQU1MAFVuc3VwcG9ydGVkIFlBTUwgdmVyc2lvbiAoaXQgbXVzdCBiZSAxLngpAC0tLQBUaGUgWUFNTCBzdHJlYW1zIG11c3Qgc3RhcnQgd2l0aCAnLS0tJywgZXhjZXB0IHRoZSBmaXJzdCBvbmUASW52YWxpZCBvciB1bnN1cHBvcnRlZCBzeW50YXgALi4uAE9ubHkgY29sbGVjdGlvbnMgYXMgWUFNTCBzdHJlYW1zIGFyZSBzdXBwb3J0ZWQgYnkgdGhpcyBwYXJzZXIAc2tpcFNwYWNlcwBJbmNvcnJlY3QgaW5kZW50YXRpb24AVG9vIGxvbmcgc3RyaW5nIG9yIGEgbGFzdCBzdHJpbmcgdy9vIG5ld2xpbmUAVGFicyBhcmUgcHJvaGliaXRlZCBpbiBZQU1MIQBJbnZhbGlkIGNoYXJhY3RlcgBwYXJzZVZhbHVlADx0YWc6eWFtbC5vcmcsMjAwMjoARW1wdHkgdHlwZSBuYW1lAHN0cgBpbnQAc2VxAG1hcABmbG9hdABJbnZhbGlkIG51bWVyaWMgdmFsdWUgKGluY29uc2lzdGVudCBleHBsaWNpdCB0eXBlIHNwZWNpZmljYXRpb24/KQBPcGVuQ1YgcGVyc2lzdGVuY2UgZG9lc24ndCBzdXBwb3J0IHZlcnkgbG9uZyBsaW5lcwBUb28gbG9uZyBzdHJpbmcgbGl0ZXJhbABUaGUgd3JvbmcgY2xvc2luZyBicmFja2V0AE1pc3NpbmcgLCBiZXR3ZWVuIHRoZSBlbGVtZW50cwBDb21wbGV4IGtleXMgYXJlIG5vdCBzdXBwb3J0ZWQATXVsdGktbGluZSB0ZXh0IGxpdGVyYWxzIGFyZSBub3Qgc3VwcG9ydGVkAEJsb2NrIHNlcXVlbmNlIGVsZW1lbnRzIG11c3QgYmUgcHJlY2VkZWQgd2l0aCAnLScAcGFyc2VLZXkAS2V5IG1heSBub3Qgc3RhcnQgd2l0aCAnLScATWlzc2luZyAnOicAQW4gZW1wdHkga2V5AGdldEJhc2U2NFJvdwBVbmV4cGVjdGVkIGVuZCBvZiBsaW5lAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9yYW5kLmNwcABmdW5jICE9IDAAQaSyAwse0AMAANEDAADSAwAA0wMAAAAAAADUAwAAAAAAANUDAEHQsgMLAtYDAEHgsgMLAtcDAEGAswMLAtgDAEGgswMLQNkDAABkc3QuZWxlbVNpemUoKSA8PSAzMgByYW5kU2h1ZmZsZQBfYXJyLmRpbXMgPD0gMgByYW5kU2h1ZmZsZV8AQfCzAwv6OtoDAADbAwAA3AMAAN0DAADeAwAA3wMAAOADAAAAAAAAT1BFTkNWX0RVTVBfRVJST1JTAAAAAAAA1O0AAOMDAADmAwAA5wMAAD4gAE9wZW5DViglcykgJXM6JWQ6IGVycm9yOiAoJWQ6JXMpIGluIGZ1bmN0aW9uICclcycKJXMANC41LjUtZGV2AE9wZW5DViglcykgJXM6JWQ6IGVycm9yOiAoJWQ6JXMpICVzIGluIGZ1bmN0aW9uICclcycKAE9wZW5DViglcykgJXM6JWQ6IGVycm9yOiAoJWQ6JXMpICVzJXMAAAoACkdlbmVyYWwgY29uZmlndXJhdGlvbiBmb3IgT3BlbkNWIDQuNS41LWRldiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgVmVyc2lvbiBjb250cm9sOiAgICAgICAgICAgICAgIDQuNS41LTIwLWdhMTE0M2M0ZWEwLWRpcnR5CgogIFBsYXRmb3JtOgogICAgVGltZXN0YW1wOiAgICAgICAgICAgICAgICAgICAyMDIyLTAxLTExVDAzOjE1OjQxWgogICAgSG9zdDogICAgICAgICAgICAgICAgICAgICAgICBMaW51eCA0LjkuOTMtbGludXhraXQtYXVmcyB4ODZfNjQKICAgIFRhcmdldDogICAgICAgICAgICAgICAgICAgICAgRW1zY3JpcHRlbiAxIHg4NgogICAgQ01ha2U6ICAgICAgICAgICAgICAgICAgICAgICAzLjEzLjQKICAgIENNYWtlIGdlbmVyYXRvcjogICAgICAgICAgICAgVW5peCBNYWtlZmlsZXMKICAgIENNYWtlIGJ1aWxkIHRvb2w6ICAgICAgICAgICAgL3Vzci9iaW4vbWFrZQogICAgQ29uZmlndXJhdGlvbjogICAgICAgICAgICAgICBSZWxlYXNlCgogIENQVS9IVyBmZWF0dXJlczoKICAgIEJhc2VsaW5lOgoKICBDL0MrKzoKICAgIEJ1aWx0IGFzIGR5bmFtaWMgbGlicz86ICAgICAgTk8KICAgIEMrKyBzdGFuZGFyZDogICAgICAgICAgICAgICAgMTEKICAgIEMrKyBDb21waWxlcjogICAgICAgICAgICAgICAgL2Vtc2RrL3Vwc3RyZWFtL2Vtc2NyaXB0ZW4vZW0rKyAgKHZlciAxMi4wLjApCiAgICBDKysgZmxhZ3MgKFJlbGVhc2UpOiAgICAgICAgIC1zIFVTRV9QVEhSRUFEUz0wICAgIC1mc2lnbmVkLWNoYXIgLVcgLVdhbGwgLVdlcnJvcj1yZXR1cm4tdHlwZSAtV2Vycm9yPW5vbi12aXJ0dWFsLWR0b3IgLVdlcnJvcj1hZGRyZXNzIC1XZXJyb3I9c2VxdWVuY2UtcG9pbnQgLVdmb3JtYXQgLVdlcnJvcj1mb3JtYXQtc2VjdXJpdHkgLVdtaXNzaW5nLWRlY2xhcmF0aW9ucyAtV21pc3NpbmctcHJvdG90eXBlcyAtV3N0cmljdC1wcm90b3R5cGVzIC1XdW5kZWYgLVdpbml0LXNlbGYgLVdwb2ludGVyLWFyaXRoIC1Xc2hhZG93IC1Xc2lnbi1wcm9tbyAtV3VuaW5pdGlhbGl6ZWQgLVdpbmNvbnNpc3RlbnQtbWlzc2luZy1vdmVycmlkZSAtV25vLWRlbGV0ZS1ub24tdmlydHVhbC1kdG9yIC1Xbm8tdW5uYW1lZC10eXBlLXRlbXBsYXRlLWFyZ3MgLVduby1jb21tZW50IC1Xbm8tZGVwcmVjYXRlZC1lbnVtLWVudW0tY29udmVyc2lvbiAtV25vLWRlcHJlY2F0ZWQtYW5vbi1lbnVtLWVudW0tY29udmVyc2lvbiAtZmRpYWdub3N0aWNzLXNob3ctb3B0aW9uIC1RdW51c2VkLWFyZ3VtZW50cyAtZmZ1bmN0aW9uLXNlY3Rpb25zIC1mZGF0YS1zZWN0aW9ucyAgLWZ2aXNpYmlsaXR5PWhpZGRlbiAtZnZpc2liaWxpdHktaW5saW5lcy1oaWRkZW4gLUROREVCVUcgLU8yICAtRE5ERUJVRwogICAgQysrIGZsYWdzIChEZWJ1Zyk6ICAgICAgICAgICAtcyBVU0VfUFRIUkVBRFM9MCAgICAtZnNpZ25lZC1jaGFyIC1XIC1XYWxsIC1XZXJyb3I9cmV0dXJuLXR5cGUgLVdlcnJvcj1ub24tdmlydHVhbC1kdG9yIC1XZXJyb3I9YWRkcmVzcyAtV2Vycm9yPXNlcXVlbmNlLXBvaW50IC1XZm9ybWF0IC1XZXJyb3I9Zm9ybWF0LXNlY3VyaXR5IC1XbWlzc2luZy1kZWNsYXJhdGlvbnMgLVdtaXNzaW5nLXByb3RvdHlwZXMgLVdzdHJpY3QtcHJvdG90eXBlcyAtV3VuZGVmIC1XaW5pdC1zZWxmIC1XcG9pbnRlci1hcml0aCAtV3NoYWRvdyAtV3NpZ24tcHJvbW8gLVd1bmluaXRpYWxpemVkIC1XaW5jb25zaXN0ZW50LW1pc3Npbmctb3ZlcnJpZGUgLVduby1kZWxldGUtbm9uLXZpcnR1YWwtZHRvciAtV25vLXVubmFtZWQtdHlwZS10ZW1wbGF0ZS1hcmdzIC1Xbm8tY29tbWVudCAtV25vLWRlcHJlY2F0ZWQtZW51bS1lbnVtLWNvbnZlcnNpb24gLVduby1kZXByZWNhdGVkLWFub24tZW51bS1lbnVtLWNvbnZlcnNpb24gLWZkaWFnbm9zdGljcy1zaG93LW9wdGlvbiAtUXVudXNlZC1hcmd1bWVudHMgLWZmdW5jdGlvbi1zZWN0aW9ucyAtZmRhdGEtc2VjdGlvbnMgIC1mdmlzaWJpbGl0eT1oaWRkZW4gLWZ2aXNpYmlsaXR5LWlubGluZXMtaGlkZGVuIC1nICAtTzAgLURERUJVRyAtRF9ERUJVRwogICAgQyBDb21waWxlcjogICAgICAgICAgICAgICAgICAvZW1zZGsvdXBzdHJlYW0vZW1zY3JpcHRlbi9lbWNjCiAgICBDIGZsYWdzIChSZWxlYXNlKTogICAgICAgICAgIC1zIFVTRV9QVEhSRUFEUz0wICAgIC1mc2lnbmVkLWNoYXIgLVcgLVdhbGwgLVdlcnJvcj1yZXR1cm4tdHlwZSAtV2Vycm9yPW5vbi12aXJ0dWFsLWR0b3IgLVdlcnJvcj1hZGRyZXNzIC1XZXJyb3I9c2VxdWVuY2UtcG9pbnQgLVdmb3JtYXQgLVdlcnJvcj1mb3JtYXQtc2VjdXJpdHkgLVdtaXNzaW5nLWRlY2xhcmF0aW9ucyAtV21pc3NpbmctcHJvdG90eXBlcyAtV3N0cmljdC1wcm90b3R5cGVzIC1XdW5kZWYgLVdpbml0LXNlbGYgLVdwb2ludGVyLWFyaXRoIC1Xc2hhZG93IC1Xc2lnbi1wcm9tbyAtV3VuaW5pdGlhbGl6ZWQgLVdpbmNvbnNpc3RlbnQtbWlzc2luZy1vdmVycmlkZSAtV25vLWRlbGV0ZS1ub24tdmlydHVhbC1kdG9yIC1Xbm8tdW5uYW1lZC10eXBlLXRlbXBsYXRlLWFyZ3MgLVduby1jb21tZW50IC1Xbm8tZGVwcmVjYXRlZC1lbnVtLWVudW0tY29udmVyc2lvbiAtV25vLWRlcHJlY2F0ZWQtYW5vbi1lbnVtLWVudW0tY29udmVyc2lvbiAtZmRpYWdub3N0aWNzLXNob3ctb3B0aW9uIC1RdW51c2VkLWFyZ3VtZW50cyAtZmZ1bmN0aW9uLXNlY3Rpb25zIC1mZGF0YS1zZWN0aW9ucyAgLWZ2aXNpYmlsaXR5PWhpZGRlbiAtZnZpc2liaWxpdHktaW5saW5lcy1oaWRkZW4gLUROREVCVUcgLU8yICAtRE5ERUJVRwogICAgQyBmbGFncyAoRGVidWcpOiAgICAgICAgICAgICAtcyBVU0VfUFRIUkVBRFM9MCAgICAtZnNpZ25lZC1jaGFyIC1XIC1XYWxsIC1XZXJyb3I9cmV0dXJuLXR5cGUgLVdlcnJvcj1ub24tdmlydHVhbC1kdG9yIC1XZXJyb3I9YWRkcmVzcyAtV2Vycm9yPXNlcXVlbmNlLXBvaW50IC1XZm9ybWF0IC1XZXJyb3I9Zm9ybWF0LXNlY3VyaXR5IC1XbWlzc2luZy1kZWNsYXJhdGlvbnMgLVdtaXNzaW5nLXByb3RvdHlwZXMgLVdzdHJpY3QtcHJvdG90eXBlcyAtV3VuZGVmIC1XaW5pdC1zZWxmIC1XcG9pbnRlci1hcml0aCAtV3NoYWRvdyAtV3NpZ24tcHJvbW8gLVd1bmluaXRpYWxpemVkIC1XaW5jb25zaXN0ZW50LW1pc3Npbmctb3ZlcnJpZGUgLVduby1kZWxldGUtbm9uLXZpcnR1YWwtZHRvciAtV25vLXVubmFtZWQtdHlwZS10ZW1wbGF0ZS1hcmdzIC1Xbm8tY29tbWVudCAtV25vLWRlcHJlY2F0ZWQtZW51bS1lbnVtLWNvbnZlcnNpb24gLVduby1kZXByZWNhdGVkLWFub24tZW51bS1lbnVtLWNvbnZlcnNpb24gLWZkaWFnbm9zdGljcy1zaG93LW9wdGlvbiAtUXVudXNlZC1hcmd1bWVudHMgLWZmdW5jdGlvbi1zZWN0aW9ucyAtZmRhdGEtc2VjdGlvbnMgIC1mdmlzaWJpbGl0eT1oaWRkZW4gLWZ2aXNpYmlsaXR5LWlubGluZXMtaGlkZGVuIC1nICAtTzAgLURERUJVRyAtRF9ERUJVRwogICAgTGlua2VyIGZsYWdzIChSZWxlYXNlKTogICAgICAtV2wsLS1nYy1zZWN0aW9ucyAtTzIgCiAgICBMaW5rZXIgZmxhZ3MgKERlYnVnKTogICAgICAgIC1XbCwtLWdjLXNlY3Rpb25zICAKICAgIGNjYWNoZTogICAgICAgICAgICAgICAgICAgICAgTk8KICAgIFByZWNvbXBpbGVkIGhlYWRlcnM6ICAgICAgICAgTk8KICAgIEV4dHJhIGRlcGVuZGVuY2llczoKICAgIDNyZHBhcnR5IGRlcGVuZGVuY2llczogICAgICAgemxpYiBsaWJwcm90b2J1ZiBxdWlyYwoKICBPcGVuQ1YgbW9kdWxlczoKICAgIFRvIGJlIGJ1aWx0OiAgICAgICAgICAgICAgICAgY2FsaWIzZCBjb3JlIGRubiBmZWF0dXJlczJkIGZsYW5uIGltZ3Byb2MganMgb2JqZGV0ZWN0IHBob3RvIHZpZGVvCiAgICBEaXNhYmxlZDogICAgICAgICAgICAgICAgICAgIGhpZ2hndWkgaW1nY29kZWNzIG1sIHN0aXRjaGluZyB2aWRlb2lvIHdvcmxkCiAgICBEaXNhYmxlZCBieSBkZXBlbmRlbmN5OiAgICAgIHRzCiAgICBVbmF2YWlsYWJsZTogICAgICAgICAgICAgICAgIGdhcGkgamF2YSBweXRob24yIHB5dGhvbjMKICAgIEFwcGxpY2F0aW9uczogICAgICAgICAgICAgICAgZXhhbXBsZXMKICAgIERvY3VtZW50YXRpb246ICAgICAgICAgICAgICAganMKICAgIE5vbi1mcmVlIGFsZ29yaXRobXM6ICAgICAgICAgTk8KCiAgR1VJOiAKCiAgTWVkaWEgSS9POiAKICAgIFpMaWI6ICAgICAgICAgICAgICAgICAgICAgICAgYnVpbGQgKHZlciAxLjIuMTEpCiAgICBKUEVHIDIwMDA6ICAgICAgICAgICAgICAgICAgIGJ1aWxkICh2ZXIgMi40LjApCiAgICBIRFI6ICAgICAgICAgICAgICAgICAgICAgICAgIFlFUwogICAgU1VOUkFTVEVSOiAgICAgICAgICAgICAgICAgICBZRVMKICAgIFBYTTogICAgICAgICAgICAgICAgICAgICAgICAgWUVTCiAgICBQRk06ICAgICAgICAgICAgICAgICAgICAgICAgIFlFUwoKICBWaWRlbyBJL086CgogIFBhcmFsbGVsIGZyYW1ld29yazogICAgICAgICAgICBub25lCgogIE90aGVyIHRoaXJkLXBhcnR5IGxpYnJhcmllczoKICAgIFZBOiAgICAgICAgICAgICAgICAgICAgICAgICAgTk8KICAgIEN1c3RvbSBIQUw6ICAgICAgICAgICAgICAgICAgTk8KICAgIFByb3RvYnVmOiAgICAgICAgICAgICAgICAgICAgYnVpbGQgKDMuMTkuMSkKCiAgUHl0aG9uIChmb3IgYnVpbGQpOiAgICAgICAgICAgIC91c3IvYmluL3B5dGhvbjMKCiAgSW5zdGFsbCB0bzogICAgICAgICAgICAgICAgICAgIC91c3IvbG9jYWwKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgBsZW4gPj0gMCAmJiAiQ2hlY2sgZm9ybWF0IHN0cmluZyBmb3IgZXJyb3JzIgBmb3JtYXQAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL3N5c3RlbS5jcHAATjJjdjlFeGNlcHRpb25FAAA8agIAw+0AABRnAgBObyBFcnJvcgBCYWNrdHJhY2UAVW5zcGVjaWZpZWQgZXJyb3IASW50ZXJuYWwgZXJyb3IASW5zdWZmaWNpZW50IG1lbW9yeQBCYWQgYXJndW1lbnQASXRlcmF0aW9ucyBkbyBub3QgY29udmVyZ2UAQXV0b3RyYWNlIGNhbGwASW5jb3JyZWN0IHNpemUgb2YgaW5wdXQgYXJyYXkATnVsbCBwb2ludGVyAERpdmlzaW9uIGJ5IHplcm8gb2NjdXJyZWQASW1hZ2Ugc3RlcCBpcyB3cm9uZwBJbnBsYWNlIG9wZXJhdGlvbiBpcyBub3Qgc3VwcG9ydGVkAFJlcXVlc3RlZCBvYmplY3Qgd2FzIG5vdCBmb3VuZABJbnB1dCBpbWFnZSBkZXB0aCBpcyBub3Qgc3VwcG9ydGVkIGJ5IGZ1bmN0aW9uAEZvcm1hdHMgb2YgaW5wdXQgYXJndW1lbnRzIGRvIG5vdCBtYXRjaABTaXplcyBvZiBpbnB1dCBhcmd1bWVudHMgZG8gbm90IG1hdGNoAE9uZSBvZiB0aGUgYXJndW1lbnRzJyB2YWx1ZXMgaXMgb3V0IG9mIHJhbmdlAFVuc3VwcG9ydGVkIGZvcm1hdCBvciBjb21iaW5hdGlvbiBvZiBmb3JtYXRzAElucHV0IENPSSBpcyBub3Qgc3VwcG9ydGVkAEJhZCBudW1iZXIgb2YgY2hhbm5lbHMAQmFkIGZsYWcgKHBhcmFtZXRlciBvciBzdHJ1Y3R1cmUgZmllbGQpAEJhZCBwYXJhbWV0ZXIgb2YgdHlwZSBDdlBvaW50AEJhZCB0eXBlIG9mIG1hc2sgYXJndW1lbnQAUGFyc2luZyBlcnJvcgBUaGUgZnVuY3Rpb24vZmVhdHVyZSBpcyBub3QgaW1wbGVtZW50ZWQATWVtb3J5IGJsb2NrIGhhcyBiZWVuIGNvcnJ1cHRlZABBc3NlcnRpb24gZmFpbGVkAE5vIENVREEgc3VwcG9ydABHcHUgQVBJIGNhbGwATm8gT3BlbkdMIHN1cHBvcnQAT3BlbkdMIEFQSSBjYWxsAFVua25vd24gJXMgY29kZSAlZABzdGF0dXMAZXJyb3IAcHRocmVhZF9rZXlfY3JlYXRlKCZ0bHNLZXksIG9wZW5jdl90bHNfZGVzdHJ1Y3RvcikgPT0gMABUbHNBYnN0cmFjdGlvbgBPcGVuQ1YgRVJST1I6IFRsc0Fic3RyYWN0aW9uOjp+VGxzQWJzdHJhY3Rpb24oKTogcHRocmVhZF9rZXlfZGVsZXRlKCkgY2FsbCBmYWlsZWQKAHB0aHJlYWRfc2V0c3BlY2lmaWModGxzS2V5LCBwRGF0YSkgPT0gMABzZXREYXRhAAAAAAAAjPIAAOgDAADpAwAA6gMAAOoDAABrZXlfID09IC0xAH5UTFNEYXRhQ29udGFpbmVyAGtleV8gIT0gLTEgJiYgIkNhbid0IGZldGNoIGRhdGEgZnJvbSB0ZXJtaW5hdGVkIFRMUyBjb250YWluZXIuIgBnZXREYXRhAE4yY3YxNlRMU0RhdGFDb250YWluZXJFAAAAABRqAgBx8gAAT1BFTkNWX0RVTVBfQ09ORklHAApPcGVuQ1YgYnVpbGQgY29uZmlndXJhdGlvbiBpczoKJXMKAE1NWABTU0UAU1NFMgBTU0UzAFNTU0UzAFNTRTQuMQBTU0U0LjIAUE9QQ05UAEZQMTYAQVZYAEFWWDIARk1BMwBBVlg1MTJGAEFWWDUxMkJXAEFWWDUxMkNEAEFWWDUxMkRRAEFWWDUxMkVSAEFWWDUxMklGTUEAQVZYNTEyUEYAQVZYNTEyVkJNSQBBVlg1MTJWTABBVlg1MTJWQk1JMgBBVlg1MTJWTk5JAEFWWDUxMkJJVEFMRwBBVlg1MTJWUE9QQ05URFEAQVZYNTEyNFZOTklXAEFWWDUxMjRGTUFQUwBORU9OAFZTWABWU1gzAENQVV9NU0EAUklTQ1ZWAEFWWDUxMi1DT01NT04AQVZYNTEyLVNLWABBVlg1MTItS05MAEFWWDUxMi1LTk0AQVZYNTEyLUNOTABBVlg1MTItQ0xYAEFWWDUxMi1JQ0wAUlZWAE9QRU5DVl9DUFVfRElTQUJMRQBmZWF0dXJlLnNpemUoKSA+IDAAcmVhZFNldHRpbmdzAE9QRU5DVjogVHJ5aW5nIHRvIGRpc2FibGUgYmFzZWxpbmUgQ1BVIGZlYXR1cmU6ICclcycuVGhpcyBoYXMgdmVyeSBsaW1pdGVkIGVmZmVjdCwgYmVjYXVzZSBjb2RlIG9wdGltaXphdGlvbnMgZm9yIHRoaXMgZmVhdHVyZSBhcmUgZXhlY3V0ZWQgdW5jb25kaXRpb25hbGx5IGluIHRoZSBtb3N0IGNhc2VzLgoAT1BFTkNWOiBUcnlpbmcgdG8gZGlzYWJsZSB1bmF2YWlsYWJsZSBDUFUgZmVhdHVyZSBvbiB0aGUgY3VycmVudCBwbGF0Zm9ybTogJyVzJy4KAE9QRU5DVjogVHJ5aW5nIHRvIGRpc2FibGUgdW5rbm93biBDUFUgZmVhdHVyZTogJyVzJy4KAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAVW5rbm93biBmZWF0dXJlAE9wZW5DViglcykgRXJyb3I6ICVzICglcykgaW4gJXMsIGZpbGUgJXMsIGxpbmUgJWQAdW5rbm93biBmdW5jdGlvbgAlcwoAT3BlbkNWIEVSUk9SOiBUTFM6IGNvbnRhaW5lciBmb3Igc2xvdElkeD0lZCBpcyBOVUxMLiBDYW4ndCByZWxlYXNlIHRocmVhZCBkYXRhCgBPcGVuQ1YgV0FSTklORzogVExTOiBDYW4ndCByZWxlYXNlIHRocmVhZCBUTFMgZGF0YSAodW5rbm93biBwb2ludGVyIG9yIGRhdGEgcmFjZSk6ICVwCgB0bHNTbG90c1NpemUgPT0gdGxzU2xvdHMuc2l6ZSgpAHJlc2VydmVTbG90AHRsc1Nsb3RzU2l6ZSA+IHNsb3RJZHgAcmVsZWFzZVNsb3QAAAAAAAAAWPcAAOsDAADsAwAA7QMAAO4DAABOMmN2N1RMU0RhdGFJTlNfMTFDb3JlVExTRGF0YUVFRQAAAACYagIANPcAAAAAAAABAAAAjPIAQfTuAwusDbT3AADvAwAA8AMAAPEDAADyAwAATjJjdjdUTFNEYXRhSU5TXzEyX0dMT0JBTF9fTl8xOFRocmVhZElERUVFAACYagIAiPcAAAAAAAABAAAAjPIAAAAAAABOMmN2MTBQYXJzZUVycm9yRQAAABRqAgDM9wAAMQBUcnVlAHRydWUAVFJVRQAwAEZhbHNlAGZhbHNlAEZBTFNFAE1CAE1iAG1iAEtCAEtiAGtiAAAAAADDAAD+wgAA/MIAAPrCAAD4wgAA9sIAAPTCAADywgAA8MIAAO7CAADswgAA6sIAAOjCAADmwgAA5MIAAOLCAADgwgAA3sIAANzCAADawgAA2MIAANbCAADUwgAA0sIAANDCAADOwgAAzMIAAMrCAADIwgAAxsIAAMTCAADCwgAAwMIAAL7CAAC8wgAAusIAALjCAAC2wgAAtMIAALLCAACwwgAArsIAAKzCAACqwgAAqMIAAKbCAACkwgAAosIAAKDCAACewgAAnMIAAJrCAACYwgAAlsIAAJTCAACSwgAAkMIAAI7CAACMwgAAisIAAIjCAACGwgAAhMIAAILCAACAwgAAfMIAAHjCAAB0wgAAcMIAAGzCAABowgAAZMIAAGDCAABcwgAAWMIAAFTCAABQwgAATMIAAEjCAABEwgAAQMIAADzCAAA4wgAANMIAADDCAAAswgAAKMIAACTCAAAgwgAAHMIAABjCAAAUwgAAEMIAAAzCAAAIwgAABMIAAADCAAD4wQAA8MEAAOjBAADgwQAA2MEAANDBAADIwQAAwMEAALjBAACwwQAAqMEAAKDBAACYwQAAkMEAAIjBAACAwQAAcMEAAGDBAABQwQAAQMEAADDBAAAgwQAAEMEAAADBAADgwAAAwMAAAKDAAACAwAAAQMAAAADAAACAvwAAAAAAAIA/AAAAQAAAQEAAAIBAAACgQAAAwEAAAOBAAAAAQQAAEEEAACBBAAAwQQAAQEEAAFBBAABgQQAAcEEAAIBBAACIQQAAkEEAAJhBAACgQQAAqEEAALBBAAC4QQAAwEEAAMhBAADQQQAA2EEAAOBBAADoQQAA8EEAAPhBAAAAQgAABEIAAAhCAAAMQgAAEEIAABRCAAAYQgAAHEIAACBCAAAkQgAAKEIAACxCAAAwQgAANEIAADhCAAA8QgAAQEIAAERCAABIQgAATEIAAFBCAABUQgAAWEIAAFxCAABgQgAAZEIAAGhCAABsQgAAcEIAAHRCAAB4QgAAfEIAAIBCAACCQgAAhEIAAIZCAACIQgAAikIAAIxCAACOQgAAkEIAAJJCAACUQgAAlkIAAJhCAACaQgAAnEIAAJ5CAACgQgAAokIAAKRCAACmQgAAqEIAAKpCAACsQgAArkIAALBCAACyQgAAtEIAALZCAAC4QgAAukIAALxCAAC+QgAAwEIAAMJCAADEQgAAxkIAAMhCAADKQgAAzEIAAM5CAADQQgAA0kIAANRCAADWQgAA2EIAANpCAADcQgAA3kIAAOBCAADiQgAA5EIAAOZCAADoQgAA6kIAAOxCAADuQgAA8EIAAPJCAAD0QgAA9kIAAPhCAAD6QgAA/EIAAP5CAAAAQwAAAUMAAAJDAAADQwAABEMAAAVDAAAGQwAAB0MAAAhDAAAJQwAACkMAAAtDAAAMQwAADUMAAA5DAAAPQwAAEEMAABFDAAASQwAAE0MAABRDAAAVQwAAFkMAABdDAAAYQwAAGUMAABpDAAAbQwAAHEMAAB1DAAAeQwAAH0MAACBDAAAhQwAAIkMAACNDAAAkQwAAJUMAACZDAAAnQwAAKEMAAClDAAAqQwAAK0MAACxDAAAtQwAALkMAAC9DAAAwQwAAMUMAADJDAAAzQwAANEMAADVDAAA2QwAAN0MAADhDAAA5QwAAOkMAADtDAAA8QwAAPUMAAD5DAAA/QwAAQEMAAEFDAABCQwAAQ0MAAERDAABFQwAARkMAAEdDAABIQwAASUMAAEpDAABLQwAATEMAAE1DAABOQwAAT0MAAFBDAABRQwAAUkMAAFNDAABUQwAAVUMAAFZDAABXQwAAWEMAAFlDAABaQwAAW0MAAFxDAABdQwAAXkMAAF9DAABgQwAAYUMAAGJDAABjQwAAZEMAAGVDAABmQwAAZ0MAAGhDAABpQwAAakMAAGtDAABsQwAAbUMAAG5DAABvQwAAcEMAAHFDAAByQwAAc0MAAHRDAAB1QwAAdkMAAHdDAAB4QwAAeUMAAHpDAAB7QwAAfEMAAH1DAAB+QwAAf0MAQaH+Awv2GQECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXm5+jp6uvs7e7v8PHy8/T19vf4+fr7/P3+////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////bWFwY291bnQgPT0gMAB+VU1hdERhdGEAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL3VtYXRyaXguY3BwADAgPD0gX2RpbXMgJiYgX2RpbXMgPD0gQ1ZfTUFYX0RJTQBzZXRTaXplAHMgPj0gMABUaGUgdG90YWwgbWF0cml4IHNpemUgZG9lcyBub3QgZml0IHRvICJzaXplX3QiIHR5cGUAZGF0YSA9PSBkYXRhc3RhcnQAZ2V0VU1hdABhbGxvY2F0ZWQAMCA8PSBkICYmIGQgPD0gQ1ZfTUFYX0RJTSAmJiBfc2l6ZXMAY3JlYXRlAHUgIT0gMABzdGVwW2RpbXMtMV0gPT0gKHNpemVfdClDVl9FTEVNX1NJWkUoZmxhZ3MpAG0uZGltcyA+PSAyAFVNYXQAMCA8PSBfcm93UmFuZ2Uuc3RhcnQgJiYgX3Jvd1JhbmdlLnN0YXJ0IDw9IF9yb3dSYW5nZS5lbmQgJiYgX3Jvd1JhbmdlLmVuZCA8PSBtLnJvd3MAMCA8PSBfY29sUmFuZ2Uuc3RhcnQgJiYgX2NvbFJhbmdlLnN0YXJ0IDw9IF9jb2xSYW5nZS5lbmQgJiYgX2NvbFJhbmdlLmVuZCA8PSBtLmNvbHMAbS5kaW1zIDw9IDIAMCA8PSByb2kueCAmJiAwIDw9IHJvaS53aWR0aCAmJiByb2kueCArIHJvaS53aWR0aCA8PSBtLmNvbHMgJiYgMCA8PSByb2kueSAmJiAwIDw9IHJvaS5oZWlnaHQgJiYgcm9pLnkgKyByb2kuaGVpZ2h0IDw9IG0ucm93cwByYW5nZXMAciA9PSBSYW5nZTo6YWxsKCkgfHwgKDAgPD0gci5zdGFydCAmJiByLnN0YXJ0IDwgci5lbmQgJiYgci5lbmQgPD0gbS5zaXplW2ldKQB1LT5kYXRhICE9IDAgJiYgIkVycm9yIG1hcHBpbmcgb2YgVU1hdCB0byBob3N0IG1lbW9yeS4iAGdldE1hdABjaGFubmVscygpID09IENWX01BVF9DTihkdHlwZSkAY29weVRvAGRzdC51AAAAAAAAhAQBAPQDAAD1AwAA9gMAAPcDAABOMmN2N1RMU0RhdGFJTlNfMThVTWF0RGF0YUF1dG9Mb2NrZXJFRUUAmGoCAFwEAQAAAAAAAQAAAIzyAAAAAAAAdXNhZ2VfY291bnQgPT0gMABsb2NrAHVzYWdlX2NvdW50ID09IDEAcmVsZWFzZQBnbG9iYWwAREVCVUcARElTQUJMRQBESVNBQkxFRABFUlJPUgBGQVRBTABJTkZPAE9GRgBTSUxFTlQAVkVSQk9TRQBXQVJOAFdBUk5JTkcAV0FSTklOR1MAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQBnbG9iYWwAZnVsbE5hbWVSZXN1bHQubV9maW5kQ3Jvc3NSZWZlcmVuY2VzAGludGVybmFsX2FwcGx5TmFtZVBhcnRDb25maWdUb1NwZWNpZmljVGFnAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy91dGlscy9sb2d0YWdtYW5hZ2VyLmNwcABuYW1lUGFydFJlc3VsdC5tX2ZpbmRDcm9zc1JlZmVyZW5jZXMAaW50ZXJuYWxfYXBwbHlOYW1lUGFydENvbmZpZ1RvTWF0Y2hpbmdUYWdzAHNjb3BlICE9IE1hdGNoaW5nU2NvcGU6OkZ1bGwAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAAAAAAFAcBAPgDAAD5AwAA+gMAAIwDAAD7AwAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjV1dGlsczdsb2dnaW5nMThMb2dUYWdDb25maWdQYXJzZXJFTlNfOWFsbG9jYXRvcklTNF9FRUVFAAA8agIAuAYBAMRlAgBOdW1iZXIgb2YgY2hhbm5lbHMgaW4gaW5wdXQgaW1hZ2UgbXVzdCBiZSAxIG9yIDMAZmxvb2RGaWxsAC9zcmMvbW9kdWxlcy9pbWdwcm9jL3NyYy9mbG9vZGZpbGwuY3BwAENvbm5lY3Rpdml0eSBtdXN0IGJlIDQsIDAoPTQpIG9yIDgAbG9fZGlmZiBhbmQgdXBfZGlmZiBtdXN0IGJlIG5vbi1uZWdhdGl2ZQBTZWVkIHBvaW50IGlzIG91dHNpZGUgb2YgaW1hZ2UAAG1hc2sucm93cyA9PSBzaXplLmhlaWdodCsyICYmIG1hc2suY29scyA9PSBzaXplLndpZHRoKzIAbWFzay50eXBlKCkgPT0gQ1ZfOFUAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQBJbnZhbGlkIGltYWdlIHR5cGUgKG11c3QgYmUgc2luZ2xlLWNoYW5uZWwpAG1vbWVudHMAL3NyYy9tb2R1bGVzL2ltZ3Byb2Mvc3JjL21vbWVudHMuY3BwAABjb250b3VyLmRlcHRoKCkgPT0gQ1ZfMzJTIHx8IGNvbnRvdXIuZGVwdGgoKSA9PSBDVl8zMkYAY29udG91ck1vbWVudHMAAP0DAAD+AwAA/QMAAP8DAAAABAAATjJjdjlGb3JtYXR0ZWRFABRqAgA0CQEATjJjdjlGb3JtYXR0ZXJFABRqAgBMCQEAAAAAAMwJAQAJBAAACgQAAAsEAACMAwAADAQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3YxNkRlZmF1bHRGb3JtYXR0ZXJFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAA8agIAgAkBAMRlAgAAAAAAOAoBAA0EAAAOBAAADwQAABAEAAARBAAAEgQAABMEAABOMmN2MTZEZWZhdWx0Rm9ybWF0dGVyRQBOMmN2MTNGb3JtYXR0ZXJCYXNlRQAAAAA8agIAFAoBAFwJAQA8agIA/AkBACwKAQBbAF0AAAAAAKwKAQAUBAAAFQQAABYEAACMAwAAFwQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3YxM0Zvcm1hdHRlZEltcGxFTlNfOWFsbG9jYXRvcklTMl9FRUVFADxqAgBkCgEAxGUCAAAAAAAkCwEAGAQAABkEAAAaBAAAGwQAAG0uZGltcyA8PSAyAEZvcm1hdHRlZEltcGwAL3NyYy9tb2R1bGVzL2NvcmUvc3JjL291dC5jcHAAJSUuJWRnAE4yY3YxM0Zvcm1hdHRlZEltcGxFADxqAgAPCwEARAkBACUzZAAlZAAKKDosIDosICVkKSA9IAoAKDosIDosICVkKSA9IAoAAAAAAAAAwAsBABwEAAAdBAAAHgQAAIwDAAAfBAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjE1TWF0bGFiRm9ybWF0dGVyRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAADxqAgB0CwEAxGUCAAAAAAAIDAEADQQAACAEAAAhBAAAEAQAABEEAAASBAAAEwQAAE4yY3YxNU1hdGxhYkZvcm1hdHRlckUAADxqAgDwCwEALAoBAAAAOwBBoJgEC6spgAwBACIEAAAjBAAAJAQAAIwDAAAlBAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjEyQ1NWRm9ybWF0dGVyRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAPGoCADgMAQDEZQIAAAAAAMQMAQANBAAAJgQAACcEAAAQBAAAEQQAABIEAAATBAAATjJjdjEyQ1NWRm9ybWF0dGVyRQA8agIAsAwBACwKAQAAAAAAOA0BACgEAAApBAAAKgQAAIwDAAArBAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjE1UHl0aG9uRm9ybWF0dGVyRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAADxqAgDsDAEAxGUCAAAAAACADQEADQQAACwEAAAtBAAAEAQAABEEAAASBAAAEwQAAE4yY3YxNVB5dGhvbkZvcm1hdHRlckUAADxqAgBoDQEALAoBAAAAAAD0DQEALgQAAC8EAAAwBAAAjAMAADEEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2MTROdW1weUZvcm1hdHRlckVOU185YWxsb2NhdG9ySVMyX0VFRUUAAAAAPGoCAKgNAQDEZQIAAAAAADwOAQANBAAAMgQAADMEAAAQBAAAEQQAABIEAAATBAAATjJjdjE0TnVtcHlGb3JtYXR0ZXJFAAAAPGoCACQOAQAsCgEAdWludDgAaW50OAB1aW50MTYAaW50MTYAaW50MzIAZmxvYXQzMgBmbG9hdDY0AGZsb2F0MTYAW10sW11hcnJheShbAF0sIGR0eXBlPSclcycpAAAAAAAAAAAPAQA0BAAANQQAADYEAACMAwAANwQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3YxMENGb3JtYXR0ZXJFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAADxqAgC4DgEAxGUCAAAAAABEDwEADQQAADgEAAA5BAAAEAQAABEEAAASBAAAEwQAAE4yY3YxMENGb3JtYXR0ZXJFAAAAPGoCADAPAQAsCgEAAAAsAAB7AH0AL3NyYy9tb2R1bGVzL2NvcmUvc3JjL21hdGhmdW5jcy5jcHAAcHQgPT0gTlVMTABjaGVja1JhbmdlAHRoZSB2YWx1ZSBhdCAoJWQsICVkKT0lcyBpcyBvdXQgb2YgcmFuZ2UgWyVmLCAlZikAY3R5cGUgPT0gQ1ZfMzJGIHx8IGN0eXBlID09IENWXzY0RgBzb2x2ZUN1YmljAChjb2VmZnMuc2l6ZSgpID09IFNpemUobjAsIDEpIHx8IGNvZWZmcy5zaXplKCkgPT0gU2l6ZShuMCsxLCAxKSB8fCBjb2VmZnMuc2l6ZSgpID09IFNpemUoMSwgbjApIHx8IGNvZWZmcy5zaXplKCkgPT0gU2l6ZSgxLCBuMCsxKSkAY291bnQgPj0gMCAmJiAoZGVwdGggPT0gQ1ZfMzJGIHx8IGRlcHRoID09IENWXzMyUykAbWluRW5jbG9zaW5nQ2lyY2xlAC9zcmMvbW9kdWxlcy9pbWdwcm9jL3NyYy9zaGFwZWRlc2NyLmNwcAAvc3JjL21vZHVsZXMvY29yZS9zcmMvY29udmVydF9jLmNwcABzcmMuc2l6ZSA9PSBkc3Quc2l6ZSAmJiBzcmMuY2hhbm5lbHMoKSA9PSBkc3QuY2hhbm5lbHMoKQBjdkNvbnZlcnRTY2FsZQA/BAAAPwQAAEAEAABABAAAQQQAAEIEAABDBAAAAAAAAGNuID09IDEAY291bnROb25aZXJvAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9jb3VudF9ub25femVyby5kaXNwYXRjaC5jcHAAZnVuYyAhPSAwAG1hc2suZW1wdHkoKSB8fCBtYXNrLnR5cGUoKSA9PSBDVl84VQBtZWFuAC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9tZWFuLmRpc3BhdGNoLmNwcABjbiA8PSA0ICYmIGZ1bmMgIT0gMAAwIDwgY29pICYmIGNvaSA8PSA0AC9zcmMvbW9kdWxlcy9jb3JlL3NyYy9zdGF0X2MuY3BwAGN2QXZnAC9zcmMvbW9kdWxlcy9jYWxpYjNkL3NyYy9jYWxpYnJhdGlvbi5jcHAASW5wdXQgYXJndW1lbnQgaXMgbm90IGEgdmFsaWQgbWF0cml4AGN2Um9kcmlndWVzMgBUaGUgZmlyc3Qgb3V0cHV0IGFyZ3VtZW50IGlzIG5vdCBhIHZhbGlkIG1hdHJpeABUaGUgbWF0cmljZXMgbXVzdCBoYXZlIDMyZiBvciA2NGYgZGF0YSB0eXBlAEFsbCB0aGUgbWF0cmljZXMgbXVzdCBoYXZlIHRoZSBzYW1lIGRhdGEgdHlwZQBKYWNvYmlhbiBpcyBub3QgYSB2YWxpZCBtYXRyaXgASmFjb2JpYW4gbXVzdCBoYXZlIDMyZkMxIG9yIDY0ZkMxIGRhdGF0eXBlAEphY29iaWFuIG11c3QgYmUgM3g5IG9yIDl4MwBJbnB1dCBtYXRyaXggbXVzdCBiZSAxeDMsIDN4MSBvciAzeDMAT3V0cHV0IG1hdHJpeCBtdXN0IGJlIDN4Mywgc2luZ2xlLWNoYW5uZWwgZmxvYXRpbmcgcG9pbnQgbWF0cml4AE91dHB1dCBtYXRyaXggbXVzdCBiZSAxeDMgb3IgM3gxAElucHV0IG1hdHJpeCBtdXN0IGJlIDF4MyBvciAzeDEgZm9yIGEgcm90YXRpb24gdmVjdG9yLCBvciAzeDMgZm9yIGEgcm90YXRpb24gbWF0cml4AENWX0lTX01BVChvYmplY3RQb2ludHMpICYmIENWX0lTX01BVChpbWFnZVBvaW50cykgJiYgQ1ZfSVNfTUFUKEEpICYmIENWX0lTX01BVChydmVjKSAmJiBDVl9JU19NQVQodHZlYykAY3ZGaW5kRXh0cmluc2ljQ2FtZXJhUGFyYW1zMgAoQ1ZfTUFUX0RFUFRIKHJ2ZWMtPnR5cGUpID09IENWXzY0RiB8fCBDVl9NQVRfREVQVEgocnZlYy0+dHlwZSkgPT0gQ1ZfMzJGKSAmJiAocnZlYy0+cm93cyA9PSAxIHx8IHJ2ZWMtPmNvbHMgPT0gMSkgJiYgcnZlYy0+cm93cypydmVjLT5jb2xzKkNWX01BVF9DTihydmVjLT50eXBlKSA9PSAzAChDVl9NQVRfREVQVEgodHZlYy0+dHlwZSkgPT0gQ1ZfNjRGIHx8IENWX01BVF9ERVBUSCh0dmVjLT50eXBlKSA9PSBDVl8zMkYpICYmICh0dmVjLT5yb3dzID09IDEgfHwgdHZlYy0+Y29scyA9PSAxKSAmJiB0dmVjLT5yb3dzKnR2ZWMtPmNvbHMqQ1ZfTUFUX0NOKHR2ZWMtPnR5cGUpID09IDMAKGNvdW50ID49IDQpIHx8IChjb3VudCA9PSAzICYmIHVzZUV4dHJpbnNpY0d1ZXNzKQAAAACsFgEAYxIBAJUEAAAFAAAAIRcBAH0XAQCDFwEAdm9pZCBjdkZpbmRFeHRyaW5zaWNDYW1lcmFQYXJhbXMyKGNvbnN0IEN2TWF0ICosIGNvbnN0IEN2TWF0ICosIGNvbnN0IEN2TWF0ICosIGNvbnN0IEN2TWF0ICosIEN2TWF0ICosIEN2TWF0ICosIGludCkARExUIGFsZ29yaXRobSBuZWVkcyBhdCBsZWFzdCA2IHBvaW50cyBmb3IgcG9zZSBlc3RpbWF0aW9uIGZyb20gM0QtMkQgcG9pbnQgY29ycmVzcG9uZGVuY2VzLgBjb3VudAA2AGZhYnMoc2MpID4gREJMX0VQU0lMT04AuBcBAGMSAQCXDQAAAAAAADQUAQD9FwEAAxgBAHZvaWQgY3Y6OlJvZHJpZ3Vlcyhjdjo6SW5wdXRBcnJheSwgY3Y6Ok91dHB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXkpAHNyY1N6AHNyY1N6ID09IFNpemUoMywgMSkgfHwgc3JjU3ogPT0gU2l6ZSgxLCAzKSB8fCAoc3JjU3ogPT0gU2l6ZSgxLCAxKSAmJiBzcmMuY2hhbm5lbHMoKSA9PSAzKSB8fCBzcmNTeiA9PSBTaXplKDMsIDMpAG5wb2ludHMgPj0gMCAmJiAoZGVwdGggPT0gQ1ZfMzJGIHx8IGRlcHRoID09IENWXzY0RikAcHJvamVjdFBvaW50cwBfaXBvaW50cy5uZWVkZWQoKQBPbmUgb2YgcmVxdWlyZWQgYXJndW1lbnRzIGlzIG5vdCBhIHZhbGlkIG1hdHJpeABjdlByb2plY3RQb2ludHMySW50ZXJuYWwASG9tb2dlbmVvdXMgY29vcmRpbmF0ZXMgYXJlIG5vdCBzdXBwb3J0ZWQAUm90YXRpb24gbXVzdCBiZSByZXByZXNlbnRlZCBieSAxeDMgb3IgM3gxIGZsb2F0aW5nLXBvaW50IHJvdGF0aW9uIHZlY3Rvciwgb3IgM3gzIHJvdGF0aW9uIG1hdHJpeABUcmFuc2xhdGlvbiB2ZWN0b3IgbXVzdCBiZSAxeDMgb3IgM3gxIGZsb2F0aW5nLXBvaW50IHZlY3RvcgBJbnRyaW5zaWMgcGFyYW1ldGVycyBtdXN0IGJlIDN4MyBmbG9hdGluZy1wb2ludCBtYXRyaXgAZHAvZHJvdCBtdXN0IGJlIDJOeDMgZmxvYXRpbmctcG9pbnQgbWF0cml4AGRwL2RUIG11c3QgYmUgMk54MyBmbG9hdGluZy1wb2ludCBtYXRyaXgAZHAvZGYgbXVzdCBiZSAyTngyIGZsb2F0aW5nLXBvaW50IG1hdHJpeABkcC9kYyBtdXN0IGJlIDJOeDIgZmxvYXRpbmctcG9pbnQgbWF0cml4AGRwL2RmIG11c3QgYmUgMk54MTQsIDJOeDEyLCAyTng4LCAyTng1LCAyTng0IG9yIDJOeDIgZmxvYXRpbmctcG9pbnQgbWF0cml4AGRpc3RDb2VmZnMgaXMgTlVMTCB3aGlsZSBkcGRrIGlzIG5vdABkcC9kbyBtdXN0IGJlIDJOeDNOIGZsb2F0aW5nLXBvaW50IG1hdHJpeABEaXN0b3J0aW9uIGNvZWZmaWNpZW50cyBtdXN0IGJlIDF4NCwgNHgxLCAxeDUsIDV4MSwgMXg4LCA4eDEsIDF4MTIsIDEyeDEsIDF4MTQgb3IgMTR4MSBmbG9hdGluZy1wb2ludCB2ZWN0b3IAAAAAAAA0HAEARAQAAEUEAABGBAAARwQAAEgEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQNUN2TWF0TjJjdjE0RGVmYXVsdERlbGV0ZXJJUzFfRUVOU185YWxsb2NhdG9ySVMxX0VFRUUAAAAAPGoCANwbAQDEZQIATjJjdjE0RGVmYXVsdERlbGV0ZXJJNUN2TWF0RUUAZGF0YSAmJiBkaW1zIDw9IDIgJiYgcm93cyA9PSBtICYmIGNvbHMgPT0gbiAmJiBjaGFubmVscygpID09IDEAb3BlcmF0b3IgTWF0eAAvc3JjL21vZHVsZXMvY29yZS9pbmNsdWRlL29wZW5jdjIvY29yZS9tYXQuaW5sLmhwcABfdy5kYXRhID09ICh1Y2hhciopJncudmFsWzBdICYmIF91LmRhdGEgPT0gKHVjaGFyKikmdS52YWxbMF0gJiYgX3Z0LmRhdGEgPT0gKHVjaGFyKikmdnQudmFsWzBdAGNvbXB1dGUAL3NyYy9tb2R1bGVzL2NvcmUvaW5jbHVkZS9vcGVuY3YyL2NvcmUvb3BlcmF0aW9ucy5ocHAAIWVyci5lbXB0eSgpAHVwZGF0ZQAvc3JjL21vZHVsZXMvY2FsaWIzZC9zcmMvY29tcGF0X3B0c2V0cmVnLmNwcABzdGF0ZSA9PSBDSEVDS19FUlIAZHN0LnJvd3MgPT0gZHN0MC5jb2xzICYmIGRzdC5jb2xzID09IGRzdDAucm93cwBjdkNvbnZlcnRQb2ludHNIb21vZ2VuZW91cwBkc3Quc2l6ZSgpID09IGRzdDAuc2l6ZSgpAFRoZSBpbnB1dCBhcnJheXMgc2hvdWxkIGJlIDJEIG9yIDNEIHBvaW50IHNldHMAZmluZEhvbW9ncmFwaHkAL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL2Z1bmRhbS5jcHAAVGhlIGlucHV0IGFycmF5cyBzaG91bGQgaGF2ZSBhdCBsZWFzdCA0IGNvcnJlc3BvbmRpbmcgcG9pbnQgc2V0cyB0byBjYWxjdWxhdGUgSG9tb2dyYXBoeQBzcmMuY2hlY2tWZWN0b3IoMikgPT0gZHN0LmNoZWNrVmVjdG9yKDIpAFVua25vd24gZXN0aW1hdGlvbiBtZXRob2QAbnBvaW50cyA+PSAwAGNvbnZlcnRQb2ludHNGcm9tSG9tb2dlbmVvdXMAbnBvaW50cyA+PSAwICYmIChkZXB0aCA9PSBDVl8zMlMgfHwgZGVwdGggPT0gQ1ZfMzJGIHx8IGRlcHRoID09IENWXzY0RikAZHN0LmlzQ29udGludW91cygpAABjb252ZXJ0UG9pbnRzVG9Ib21vZ2VuZW91cwAAAAAAAABIIAEASQQAAEoEAABLBAAAjAMAAEwEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2MjdIb21vZ3JhcGh5RXN0aW1hdG9yQ2FsbGJhY2tFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAPGoCAPAfAQDEZQIAAAAAAMAgAQBNBAAATgQAAE8EAABQBAAAUQQAAE4yY3YyN0hvbW9ncmFwaHlFc3RpbWF0b3JDYWxsYmFja0UATjJjdjE5UG9pbnRTZXRSZWdpc3RyYXRvcjhDYWxsYmFja0UAABRqAgCTIAEAPGoCAHAgAQC4IAEAQdTBBAuD6AEBAAAAAgAAAAEAAAACAAAAAwAAAAAAAAACAAAAAwAAAAAAAAABAAAAAwAAAAAAAABwIQEAUgQAAFMEAABUBAAAjAMAAFUEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2MjRIb21vZ3JhcGh5UmVmaW5lQ2FsbGJhY2tFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAA8agIAHCEBAMRlAgAAAAAA0CEBAFYEAABXBAAAWAQAAE4yY3YyNEhvbW9ncmFwaHlSZWZpbmVDYWxsYmFja0UATjJjdjhMTVNvbHZlcjhDYWxsYmFja0UAFGoCALAhAQA8agIAkCEBAMghAQBKLmlzQ29udGludW91cygpICYmIEouY29scyA9PSA4AGNvbXB1dGUAAAAAAFAiAQBZBAAAWgQAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAG15X29iamVjdABmb3JtYXQATjJjdjlBbGdvcml0aG1FAAAAABRqAgA9IgEATm8gZWxlbWVudCBuYW1lIGhhcyBiZWVuIGdpdmVuAG9wZXJhdG9yPDwAL3NyYy9tb2R1bGVzL2NvcmUvaW5jbHVkZS9vcGVuY3YyL2NvcmUvcGVyc2lzdGVuY2UuaHBwAAAAAAAAAAAgIwEAYQQAAGIEAABjBAAAjAMAAGQEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2MTJMTVNvbHZlckltcGxFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAA8agIA2CIBAMRlAgAAAAAAkCMBAGUEAABmBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAZwQAAGgEAABpBAAATjJjdjEyTE1Tb2x2ZXJJbXBsRQBOMmN2OExNU29sdmVyRQAAPGoCAHQjAQBQIgEAPGoCAGAjAQCEIwEAKHBhcmFtMC5jb2xzID09IDEgfHwgcGFyYW0wLnJvd3MgPT0gMSkgJiYgKHB0eXBlID09IENWXzMyRiB8fCBwdHlwZSA9PSBDVl82NEYpAHJ1bgAvc3JjL21vZHVsZXMvY2FsaWIzZC9zcmMvbGV2bWFycS5jcHAAY2IAQS50eXBlKCkgPT0gQ1ZfNjRGICYmIEEucm93cyA9PSBseAAlYyUxMGQgJTEwZCAlMTUuNGUgJTE2LjRlICUxNy40ZSAlMTYuNGUgJTE3LjRlCgBpdGVycyA+IDAAc2V0TWF4SXRlcnMACWl0cgluZkoJCVNVTShyXjIpCQl4CQlkeAkJbAkJbGMAKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqAHRoZSBudW1iZXIgb2YgbW9kZWwgcG9pbnRzIHNob3VsZCBiZSBwb3NpdGl2ZQBSQU5TQUNVcGRhdGVOdW1JdGVycwAvc3JjL21vZHVsZXMvY2FsaWIzZC9zcmMvcHRzZXRyZWcuY3BwAAAAAAAA2CUBAGoEAABrBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAbAQAAG0EAABOMmN2MjVSQU5TQUNQb2ludFNldFJlZ2lzdHJhdG9yRQBOMmN2MTlQb2ludFNldFJlZ2lzdHJhdG9yRQA8agIAsSUBAFAiAQA8agIAkCUBAMwlAQBjYgBydW4AY29uZmlkZW5jZSA+IDAgJiYgY29uZmlkZW5jZSA8IDEAY291bnQgPj0gMCAmJiBjb3VudDIgPT0gY291bnQAKGJlc3RNYXNrLmNvbHMgPT0gMSB8fCBiZXN0TWFzay5yb3dzID09IDEpICYmIChpbnQpYmVzdE1hc2sudG90YWwoKSA9PSBjb3VudABtb2RlbC5yb3dzICUgbm1vZGVscyA9PSAwAChlc3oxICUgc2l6ZW9mKGludCkpID09IDAgJiYgKGVzejIgJSBzaXplb2YoaW50KSkgPT0gMABnZXRTdWJzZXQAY291bnQgPj0gbW9kZWxQb2ludHMgJiYgY291bnQgPT0gY291bnQyAGVyci5pc0NvbnRpbnVvdXMoKSAmJiBlcnIudHlwZSgpID09IENWXzMyRiAmJiBtYXNrLmlzQ29udGludW91cygpICYmIG1hc2sudHlwZSgpID09IENWXzhVAGZpbmRJbmxpZXJzAAAAAACwJwEAagQAAG4EAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAABsBAAAbwQAAE4yY3YyNExNZURTUG9pbnRTZXRSZWdpc3RyYXRvckUAPGoCAJAnAQDYJQEAKG1hc2suY29scyA9PSAxIHx8IG1hc2sucm93cyA9PSAxKSAmJiAoaW50KW1hc2sudG90YWwoKSA9PSBjb3VudABlcnJmLmlzQ29udGludW91cygpICYmIGVycmYudHlwZSgpID09IENWXzMyRiAmJiAoaW50KWVycmYudG90YWwoKSA9PSBjb3VudAAAAAAA1CgBAEQEAABwBAAAcQQAAHIEAABzBAAATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUE4yY3YyNVJBTlNBQ1BvaW50U2V0UmVnaXN0cmF0b3JFTlNfMTRkZWZhdWx0X2RlbGV0ZUlTMl9FRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAADxqAgBkKAEAxGUCAE5TdDNfXzIxNGRlZmF1bHRfZGVsZXRlSU4yY3YyNVJBTlNBQ1BvaW50U2V0UmVnaXN0cmF0b3JFRUUAAAAAAACoKQEARAQAAHQEAAB1BAAAdgQAAHcEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQTjJjdjI0TE1lRFNQb2ludFNldFJlZ2lzdHJhdG9yRU5TXzE0ZGVmYXVsdF9kZWxldGVJUzJfRUVOU185YWxsb2NhdG9ySVMyX0VFRUUAAAAAPGoCADgpAQDEZQIATlN0M19fMjE0ZGVmYXVsdF9kZWxldGVJTjJjdjI0TE1lRFNQb2ludFNldFJlZ2lzdHJhdG9yRUVFAE9QRU5DVl9CVUZGRVJfQVJFQV9BTFdBWVNfU0FGRQB0b3RhbFNpemUgPiAwAGNvbW1pdAAvc3JjL21vZHVsZXMvY29yZS9zcmMvYnVmZmVyX2FyZWEuY3BwAG9uZUJ1ZiA9PSBOVUxMACFibG9ja3MuZW1wdHkoKQBwdHIgJiYgKnB0ciA9PSBOVUxMAEJsb2NrAHJlYWxfYWxsb2NhdGUAcmVpbnRlcnByZXRfY2FzdDxzaXplX3Q+KCpwdHIpICUgYWxpZ25tZW50ID09IDAAc3RhdGljX2Nhc3Q8dWNoYXIqPigqcHRyKSArIHR5cGVfc2l6ZSAqIGNvdW50IDw9IHN0YXRpY19jYXN0PHVjaGFyKj4ocmF3X21lbSkgKyB0eXBlX3NpemUgKiBhbGxvY2F0ZWRfY291bnQAcHRyICYmICpwdHIAZmFzdF9hbGxvY2F0ZQByZWludGVycHJldF9jYXN0PHNpemVfdD4oYnVmKSAlIGFsaWdubWVudCA9PSAwAGNsZWFudXAAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAAAAAAFCwBAHgEAAB5BAAAegQAAHsEAAB8BAAAfQQAAH4EAAB/BAAATjJjdjEzUkhPX0hFU1RfUkVGQ0UATjJjdjhSSE9fSEVTVEUAFGoCAP0rAQA8agIA6CsBAAwsAQBwdHIgPT0gTlVMTABhbGxvY2F0ZQAvc3JjL21vZHVsZXMvY29yZS9pbmNsdWRlL29wZW5jdjIvY29yZS91dGlscy9idWZmZXJfYXJlYS5wcml2YXRlLmhwcABjb3VudCA+IDAAYWxpZ25tZW50ID4gMABhbGlnbm1lbnQgJSBzaXplb2YoVCkgPT0gMAAoYWxpZ25tZW50ICYgKGFsaWdubWVudCAtIDEpKSA9PSAwAHB0ciAhPSBOVUxMAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAAAAAAKAtAQBEBAAAgAQAAIEEAACCBAAAgwQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9wb2ludGVySVBOMmN2MTNSSE9fSEVTVF9SRUZDRU5TXzE0ZGVmYXVsdF9kZWxldGVJUzJfRUVOU185YWxsb2NhdG9ySVMyX0VFRUUAAAA8agIAPC0BAMRlAgBOU3QzX18yMTRkZWZhdWx0X2RlbGV0ZUlOMmN2MTNSSE9fSEVTVF9SRUZDRUVFAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAADwuAQCmLgEAVQAAAAAAAADILgEA+y4BAAMvAQB2b2lkIGN2OjpJUFBFOjpQb3NlU29sdmVyOjpzb2x2ZUdlbmVyaWMoY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXksIGN2OjpPdXRwdXRBcnJheSkAL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL2lwcGUuY3BwAFR5cGUgb2YgX29iamVjdFBvaW50cyBtdXN0IGJlIENWXzMyRkMzIG9yIENWXzY0RkMzAG9ialR5cGUAb2JqVHlwZSA9PSBDVl8zMkZDMyB8fCBvYmpUeXBlID09IENWXzY0RkMzAAAAPC4BAKYuAQBXAAAAAAAAAEwvAQCILwEAky8BAFR5cGUgb2YgX25vcm1hbGl6ZWRJbnB1dFBvaW50cyBtdXN0IGJlIENWXzMyRkMyIG9yIENWXzY0RkMyAHR5cGVfaW5wdXQAdHlwZV9pbnB1dCA9PSBDVl8zMkZDMiB8fCB0eXBlX2lucHV0ID09IENWXzY0RkMyAF9vYmplY3RQb2ludHMucm93cygpID09IDEgfHwgX29iamVjdFBvaW50cy5jb2xzKCkgPT0gMQBzb2x2ZUdlbmVyaWMAX29iamVjdFBvaW50cy5yb3dzKCkgPj0gNCB8fCBfb2JqZWN0UG9pbnRzLmNvbHMoKSA+PSA0AF9ub3JtYWxpemVkSW5wdXRQb2ludHMucm93cygpID09IDEgfHwgX25vcm1hbGl6ZWRJbnB1dFBvaW50cy5jb2xzKCkgPT0gMQBzdGF0aWNfY2FzdDxzaXplX3Q+KF9vYmplY3RQb2ludHMucm93cygpKSAqIHN0YXRpY19jYXN0PHNpemVfdD4oX29iamVjdFBvaW50cy5jb2xzKCkpID09IG4AX29iamVjdFBvaW50cy50eXBlKCkAFDEBAKYuAQAoAQAAAAAAAFgxAQB0MQEAfjEBAHZvaWQgY3Y6OklQUEU6OlBvc2VTb2x2ZXI6OnJvdDJ2ZWMoY3Y6OklucHV0QXJyYXksIGN2OjpPdXRwdXRBcnJheSkAVHlwZSBvZiBfUiBtdXN0IGJlIENWXzY0RkMxAF9SLnR5cGUoKQBfUi50eXBlKCkgPT0gQ1ZfNjRGQzEAX1Iucm93cygpID09IDMAcm90MnZlYwBfUi5jb2xzKCkgPT0gMwAAANgxAQCmLgEASwEAAAAAAABHMgEA4zABAG4yAQB2b2lkIGN2OjpJUFBFOjpQb3NlU29sdmVyOjpjb21wdXRlVHJhbnNsYXRpb24oY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6SW5wdXRBcnJheSwgY3Y6Ok91dHB1dEFycmF5KQBUeXBlIG9mIF9vYmplY3RQb2ludHMgbXVzdCBiZSBDVl82NEZDMgBfb2JqZWN0UG9pbnRzLnR5cGUoKSA9PSBDVl82NEZDMgAA2DEBAKYuAQBNAQAAAAAAAKwyAQDaMgEA9jIBAFR5cGUgb2YgX25vcm1hbGl6ZWRJbWdQb2ludHMgbXVzdCBiZSBDVl82NEZDMgBfbm9ybWFsaXplZEltZ1BvaW50cy50eXBlKCkAX25vcm1hbGl6ZWRJbWdQb2ludHMudHlwZSgpID09IENWXzY0RkMyAAAA2DEBAKYuAQBPAQAAAAAAAFgxAQB0MQEAfjEBAF9SLnJvd3MoKSA9PSAzICYmIF9SLmNvbHMoKSA9PSAzAGNvbXB1dGVUcmFuc2xhdGlvbgBfbm9ybWFsaXplZEltZ1BvaW50cy5yb3dzKCkgPT0gMSB8fCBfbm9ybWFsaXplZEltZ1BvaW50cy5jb2xzKCkgPT0gMQBuID09IHN0YXRpY19jYXN0PHNpemVfdD4oX29iamVjdFBvaW50cy5yb3dzKCkgKiBfb2JqZWN0UG9pbnRzLmNvbHMoKSkAY29tcHV0ZVJvdGF0aW9ucwBnYW1tYSBpcyB6ZXJvLgAAODQBAKYuAQACAgAAAAAAAJc0AQDKNAEA3zQBAHZvaWQgY3Y6OklQUEU6OlBvc2VTb2x2ZXI6OmhvbW9ncmFwaHlGcm9tU3F1YXJlUG9pbnRzKGN2OjpJbnB1dEFycmF5LCBkb3VibGUsIGN2OjpPdXRwdXRBcnJheSkAVHlwZSBvZiBfdGFyZ2V0UG9pbnRzIG11c3QgYmUgQ1ZfMzJGQzIgb3IgQ1ZfNjRGQzIAX3RhcmdldFBvaW50cy50eXBlKCkAX3RhcmdldFBvaW50cy50eXBlKCkgPT0gQ1ZfMzJGQzIgfHwgX3RhcmdldFBvaW50cy50eXBlKCkgPT0gQ1ZfNjRGQzIARGV0ZXJtaW5hbnQgaXMgemVybyEAaG9tb2dyYXBoeUZyb21TcXVhcmVQb2ludHMAcDUBAKYuAQBAAgAAAAAAAMguAQD7LgEAAy8BAHZvaWQgY3Y6OklQUEU6OlBvc2VTb2x2ZXI6Om1ha2VDYW5vbmljYWxPYmplY3RQb2ludHMoY3Y6OklucHV0QXJyYXksIGN2OjpPdXRwdXRBcnJheSwgY3Y6Ok91dHB1dEFycmF5KQBDYW5ub3QgdHJhbnNmb3JtIG9iamVjdCBwb2ludHMgdG8gdGhlIHBsYW5lIHo9MCEAbWFrZUNhbm9uaWNhbE9iamVjdFBvaW50cwBzMyAvIHMyIDwgSVBQRV9TTUFMTABjb21wdXRlT2JqZXh0U3BhY2VSU3ZEAERhdGEucm93cyA9PSAxIHx8IERhdGEuY29scyA9PSAxAG5vcm1hbGl6ZURhdGFJc290cm9waWMARGF0YS5jaGFubmVscygpID09IDIgfHwgRGF0YS5jaGFubmVscygpID09IDMAbnVtUG9pbnRzID49IDQAAADgNgEApi4BAG0DAAAAAAAAUTcBAJU3AQCeNwEAdm9pZCBjdjo6SG9tb2dyYXBoeUhPOjpub3JtYWxpemVEYXRhSXNvdHJvcGljKGN2OjpJbnB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXksIGN2OjpPdXRwdXRBcnJheSwgY3Y6Ok91dHB1dEFycmF5KQBUeXBlIG9mIF9EYXRhIG11c3QgYmUgb25lIG9mIENWXzMyRkMyLCBDVl8zMkZDMywgQ1ZfNjRGQzIsIENWXzY0RkMzAGRhdGFUeXBlAGRhdGFUeXBlID09IENWXzMyRkMyIHx8IGRhdGFUeXBlID09IENWXzMyRkMzIHx8IGRhdGFUeXBlID09IENWXzY0RkMyIHx8IGRhdGFUeXBlID09IENWXzY0RkMzAG4gPT0gRGF0YUIuY29scwBob21vZ3JhcGh5SE8AL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL3NvbHZlcG5wLmNwcABucG9pbnRzID09IHN0ZDo6bWF4KGlwb2ludHMuY2hlY2tWZWN0b3IoMiwgQ1ZfMzJGKSwgaXBvaW50cy5jaGVja1ZlY3RvcigyLCBDVl82NEYpKQBzb2x2ZVAzUABucG9pbnRzID09IDMgfHwgbnBvaW50cyA9PSA0AGZsYWdzID09IFNPTFZFUE5QX1AzUCB8fCBmbGFncyA9PSBTT0xWRVBOUF9BUDNQACggKG5wb2ludHMgPj0gNCkgfHwgKG5wb2ludHMgPT0gMyAmJiBmbGFncyA9PSBTT0xWRVBOUF9JVEVSQVRJVkUgJiYgdXNlRXh0cmluc2ljR3Vlc3MpIHx8IChucG9pbnRzID49IDMgJiYgZmxhZ3MgPT0gU09MVkVQTlBfU1FQTlApICkgJiYgbnBvaW50cyA9PSBzdGQ6Om1heChpcG9pbnRzLmNoZWNrVmVjdG9yKDIsIENWXzMyRiksIGlwb2ludHMuY2hlY2tWZWN0b3IoMiwgQ1ZfNjRGKSkAc29sdmVQblBHZW5lcmljACFfcnZlYy5lbXB0eSgpICYmICFfdHZlYy5lbXB0eSgpAChydHlwZSA9PSBDVl8zMkZDMSB8fCBydHlwZSA9PSBDVl82NEZDMSkgJiYgKHR0eXBlID09IENWXzMyRkMxIHx8IHR0eXBlID09IENWXzY0RkMxKQAocnNpemUgPT0gU2l6ZSgxLCAzKSB8fCByc2l6ZSA9PSBTaXplKDMsIDEpKSAmJiAodHNpemUgPT0gU2l6ZSgxLCAzKSB8fCB0c2l6ZSA9PSBTaXplKDMsIDEpKQBucG9pbnRzID09IDQAVGhlIGZsYWdzIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIFNPTFZFUE5QX0lURVJBVElWRSwgU09MVkVQTlBfUDNQLCBTT0xWRVBOUF9FUE5QLCBTT0xWRVBOUF9ETFMsIFNPTFZFUE5QX1VQTlAsIFNPTFZFUE5QX0FQM1AsIFNPTFZFUE5QX0lQUEUsIFNPTFZFUE5QX0lQUEVfU1FVQVJFIG9yIFNPTFZFUE5QX1NRUE5QAHZlY19ydmVjcy5zaXplKCkgPT0gdmVjX3R2ZWNzLnNpemUoKQAArDsBABg4AQBbBAAAAAAAAIE8AQC5PAEA0jwBAGludCBjdjo6c29sdmVQblBHZW5lcmljKGN2OjpJbnB1dEFycmF5LCBjdjo6SW5wdXRBcnJheSwgY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXlPZkFycmF5cywgY3Y6Ok91dHB1dEFycmF5T2ZBcnJheXMsIGJvb2wsIGN2OjpTb2x2ZVBuUE1ldGhvZCwgY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXkpAFR5cGUgb2YgcmVwcm9qZWN0aW9uRXJyb3IgbXVzdCBiZSBDVl8zMkZDMSBvciBDVl82NEZDMSEAcmVwcm9qZWN0aW9uRXJyb3IudHlwZSgpAHR5cGUgPT0gQ1ZfMzJGQzEgfHwgdHlwZSA9PSBDVl82NEZDMQBhbGxvY2F0b3I8VD46OmFsbG9jYXRlKHNpemVfdCBuKSAnbicgZXhjZWVkcyBtYXhpbXVtIHN1cHBvcnRlZCBzaXplAC9zcmMvbW9kdWxlcy9jb3JlL2luY2x1ZGUvb3BlbmN2Mi9jb3JlL21hdC5pbmwuaHBwAERhdGFUeXBlPF9UcD46OmNoYW5uZWxzID09IG0uY2hhbm5lbHMoKSB8fCBtLmVtcHR5KCkAb3BlcmF0b3I9AAAAAMw9AQBAPgEAVgAAAAAAAABjPgEAlT4BAJ0+AQB2b2lkIGN2OjpzcXBucDo6UG9zZVNvbHZlcjo6c29sdmUoY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6T3V0cHV0QXJyYXlPZkFycmF5cywgY3Y6Ok91dHB1dEFycmF5T2ZBcnJheXMpAC9zcmMvbW9kdWxlcy9jYWxpYjNkL3NyYy9zcXBucC5jcHAAVHlwZSBvZiBvYmplY3RQb2ludHMgbXVzdCBiZSBDVl8zMkZDMyBvciBDVl82NEZDMwBvYmpUeXBlAG9ialR5cGUgPT0gQ1ZfMzJGQzMgfHwgb2JqVHlwZSA9PSBDVl82NEZDMwDMPQEAQD4BAFoAAAAAAAAA5D4BABU/AQAdPwEAVHlwZSBvZiBpbWFnZVBvaW50cyBtdXN0IGJlIENWXzMyRkMyIG9yIENWXzY0RkMyAGltZ1R5cGUAaW1nVHlwZSA9PSBDVl8zMkZDMiB8fCBpbWdUeXBlID09IENWXzY0RkMyAG9iamVjdFBvaW50cy5yb3dzKCkgPT0gMSB8fCBvYmplY3RQb2ludHMuY29scygpID09IDEAc29sdmUAb2JqZWN0UG9pbnRzLnJvd3MoKSA+PSAzIHx8IG9iamVjdFBvaW50cy5jb2xzKCkgPj0gMwBpbWFnZVBvaW50cy5yb3dzKCkgPT0gMSB8fCBpbWFnZVBvaW50cy5jb2xzKCkgPT0gMQBpbWFnZVBvaW50cy5yb3dzKCkgKiBpbWFnZVBvaW50cy5jb2xzKCkgPT0gb2JqZWN0UG9pbnRzLnJvd3MoKSAqIG9iamVjdFBvaW50cy5jb2xzKCkAcG9pbnRfY29vcmRpbmF0ZV92YXJpYW5jZSA+PSBQT0lOVF9WQVJJQU5DRV9USFJFU0hPTEQAY29tcHV0ZU9tZWdhAHNfKDApID49IDFlLTcAKytudW1fbnVsbF92ZWN0b3JzXyA8PSA2AGRhdGEgJiYgZGltcyA8PSAyICYmIChyb3dzID09IDEgfHwgY29scyA9PSAxKSAmJiByb3dzICsgY29scyAtIDEgPT0gbiAmJiBjaGFubmVscygpID09IDEAb3BlcmF0b3IgVmVjAC9zcmMvbW9kdWxlcy9jb3JlL2luY2x1ZGUvb3BlbmN2Mi9jb3JlL21hdC5pbmwuaHBwAGRhdGEgJiYgZGltcyA8PSAyICYmIHJvd3MgPT0gbSAmJiBjb2xzID09IG4gJiYgY2hhbm5lbHMoKSA9PSAxAG9wZXJhdG9yIE1hdHgAL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL3VuZGlzdG9ydC5kaXNwYXRjaC5jcHAAbnBvaW50cyA+PSAwICYmIHNyYy5pc0NvbnRpbnVvdXMoKSAmJiAoZGVwdGggPT0gQ1ZfMzJGIHx8IGRlcHRoID09IENWXzY0RikAdW5kaXN0b3J0UG9pbnRzAGNyaXRlcmlhLmlzVmFsaWQoKQBjdlVuZGlzdG9ydFBvaW50c0ludGVybmFsAENWX0lTX01BVChfc3JjKSAmJiBDVl9JU19NQVQoX2RzdCkgJiYgKF9zcmMtPnJvd3MgPT0gMSB8fCBfc3JjLT5jb2xzID09IDEpICYmIChfZHN0LT5yb3dzID09IDEgfHwgX2RzdC0+Y29scyA9PSAxKSAmJiBfc3JjLT5jb2xzICsgX3NyYy0+cm93cyAtIDEgPT0gX2RzdC0+cm93cyArIF9kc3QtPmNvbHMgLSAxICYmIChDVl9NQVRfVFlQRShfc3JjLT50eXBlKSA9PSBDVl8zMkZDMiB8fCBDVl9NQVRfVFlQRShfc3JjLT50eXBlKSA9PSBDVl82NEZDMikgJiYgKENWX01BVF9UWVBFKF9kc3QtPnR5cGUpID09IENWXzMyRkMyIHx8IENWX01BVF9UWVBFKF9kc3QtPnR5cGUpID09IENWXzY0RkMyKQBDVl9JU19NQVQoX2NhbWVyYU1hdHJpeCkgJiYgX2NhbWVyYU1hdHJpeC0+cm93cyA9PSAzICYmIF9jYW1lcmFNYXRyaXgtPmNvbHMgPT0gMwBDVl9JU19NQVQoX2Rpc3RDb2VmZnMpICYmIChfZGlzdENvZWZmcy0+cm93cyA9PSAxIHx8IF9kaXN0Q29lZmZzLT5jb2xzID09IDEpICYmIChfZGlzdENvZWZmcy0+cm93cypfZGlzdENvZWZmcy0+Y29scyA9PSA0IHx8IF9kaXN0Q29lZmZzLT5yb3dzKl9kaXN0Q29lZmZzLT5jb2xzID09IDUgfHwgX2Rpc3RDb2VmZnMtPnJvd3MqX2Rpc3RDb2VmZnMtPmNvbHMgPT0gOCB8fCBfZGlzdENvZWZmcy0+cm93cypfZGlzdENvZWZmcy0+Y29scyA9PSAxMiB8fCBfZGlzdENvZWZmcy0+cm93cypfZGlzdENvZWZmcy0+Y29scyA9PSAxNCkAQ1ZfSVNfTUFUKG1hdFIpICYmIG1hdFItPnJvd3MgPT0gMyAmJiBtYXRSLT5jb2xzID09IDMAQ1ZfSVNfTUFUKG1hdFApICYmIG1hdFAtPnJvd3MgPT0gMyAmJiAobWF0UC0+Y29scyA9PSAzIHx8IG1hdFAtPmNvbHMgPT0gNCkAAAAAAAxGAQCEBAAAhQQAAIYEAACMAwAAhwQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzIzSG9tb2dyYXBoeUVzdGltYXRvckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAA8agIAtEUBAMRlAgAAAAAA0EYBAIgEAACJBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAigQAAIsEAACMBAAAjQQAAI4EAACPBAAAkAQAAE4yY3Y0dXNhYzIzSG9tb2dyYXBoeUVzdGltYXRvckltcGxFAE4yY3Y0dXNhYzE5SG9tb2dyYXBoeUVzdGltYXRvckUATjJjdjR1c2FjOUVzdGltYXRvckUAAAAAPGoCAKBGAQBQIgEAPGoCAIBGAQC4RgEAPGoCAFxGAQDERgEAAAAAAFBHAQCRBAAAkgQAAJMEAACMAwAAlAQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzI0RnVuZGFtZW50YWxFc3RpbWF0b3JJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIA+EYBAMRlAgAAAAAA9EcBAJUEAACWBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAlwQAAJgEAACZBAAAmgQAAJsEAACcBAAAnQQAAE4yY3Y0dXNhYzI0RnVuZGFtZW50YWxFc3RpbWF0b3JJbXBsRQBOMmN2NHVzYWMyMEZ1bmRhbWVudGFsRXN0aW1hdG9yRQAAADxqAgDFRwEAuEYBADxqAgCgRwEA6EcBAAAAAAB0SAEAngQAAJ8EAACgBAAAjAMAAKEEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyMkVzc2VudGlhbEVzdGltYXRvckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCABxIAQDEZQIAAAAAABRJAQCiBAAAowQAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAKQEAAClBAAApgQAAKcEAACoBAAAqQQAAKoEAABOMmN2NHVzYWMyMkVzc2VudGlhbEVzdGltYXRvckltcGxFAE4yY3Y0dXNhYzE4RXNzZW50aWFsRXN0aW1hdG9yRQAAADxqAgDnSAEAuEYBADxqAgDESAEACEkBAAAAAACQSQEAqwQAAKwEAACtBAAAjAMAAK4EAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxOUFmZmluZUVzdGltYXRvckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAA8agIAPEkBAMRlAgAAAAAAKEoBAK8EAACwBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAsQQAALIEAACzBAAAtAQAALUEAAC2BAAAtwQAAE4yY3Y0dXNhYzE5QWZmaW5lRXN0aW1hdG9ySW1wbEUATjJjdjR1c2FjMTVBZmZpbmVFc3RpbWF0b3JFADxqAgAASgEAuEYBADxqAgDgSQEAHEoBAAAAAACgSgEAuAQAALkEAAC6BAAAjAMAALsEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxNlBuUEVzdGltYXRvckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFADxqAgBQSgEAxGUCAAAAAAA0SwEAvAQAAL0EAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAAC+BAAAvwQAAMAEAADBBAAAwgQAAMMEAADEBAAATjJjdjR1c2FjMTZQblBFc3RpbWF0b3JJbXBsRQBOMmN2NHVzYWMxMlBuUEVzdGltYXRvckUAAAA8agIADUsBALhGAQA8agIA8EoBAChLAQAAAAAAvEsBAMUEAADGBAAAxwQAAIwDAADIBAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMzBSZXByb2plY3Rpb25FcnJvclN5bW1ldHJpY0ltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCAFxLAQDEZQIAAAAAAHxMAQDJBAAAygQAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAMsEAADMBAAAzQQAAM4EAABOMmN2NHVzYWMzMFJlcHJvamVjdGlvbkVycm9yU3ltbWV0cmljSW1wbEUATjJjdjR1c2FjMjZSZXByb2plY3Rpb25FcnJvclN5bW1ldHJpY0UATjJjdjR1c2FjNUVycm9yRQAAPGoCAFJMAQBQIgEAPGoCACtMAQBkTAEAPGoCAABMAQBwTAEAIW1vZGVsLmVtcHR5KCkAc2V0TW9kZWxQYXJhbWV0ZXJzAC9zcmMvbW9kdWxlcy9jYWxpYjNkL3NyYy91c2FjL2VzdGltYXRvci5jcHAAAAD0TAEAqkwBAPIAAAABAAAAT00BAFBNAQBeTQEAdmlydHVhbCB2b2lkIGN2Ojp1c2FjOjpSZXByb2plY3Rpb25FcnJvclN5bW1ldHJpY0ltcGw6OnNldE1vZGVsUGFyYW1ldGVycyhjb25zdCBjdjo6TWF0ICYpAABtb2RlbC5kZXB0aCgpAENWXzY0RgAAAAD0TAEAqkwBAPoAAAABAAAAT00BAIRNAQBeTQEAbW9kZWxfaW52LmRlcHRoKCkAAAAAAAAAEE4BAM8EAADQBAAA0QQAAIwDAADSBAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjhSZXByb2plY3Rpb25FcnJvckZvcndhcmRJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIAtE0BAMRlAgAAAAAAsE4BANMEAADUBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAA1QQAANYEAADXBAAA2AQAAE4yY3Y0dXNhYzI4UmVwcm9qZWN0aW9uRXJyb3JGb3J3YXJkSW1wbEUATjJjdjR1c2FjMjRSZXByb2plY3Rpb25FcnJvckZvcndhcmRFAAAAPGoCAH1OAQBkTAEAPGoCAFROAQCkTgEA2E4BAKpMAQA2AQAAAQAAAE9NAQBQTQEAXk0BAHZpcnR1YWwgdm9pZCBjdjo6dXNhYzo6UmVwcm9qZWN0aW9uRXJyb3JGb3J3YXJkSW1wbDo6c2V0TW9kZWxQYXJhbWV0ZXJzKGNvbnN0IGN2OjpNYXQgJikAAAAAAAAAAKBPAQDZBAAA2gQAANsEAACMAwAA3AQAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzE2U2FtcHNvbkVycm9ySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAPGoCAFBPAQDEZQIAAAAAAChQAQDdBAAA3gQAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAN8EAADgBAAA4QQAAOIEAABOMmN2NHVzYWMxNlNhbXBzb25FcnJvckltcGxFAE4yY3Y0dXNhYzEyU2FtcHNvbkVycm9yRQAAADxqAgABUAEAZEwBADxqAgDkTwEAHFABAFBQAQCqTAEAbAEAAAEAAABPTQEAUE0BAF5NAQB2aXJ0dWFsIHZvaWQgY3Y6OnVzYWM6OlNhbXBzb25FcnJvckltcGw6OnNldE1vZGVsUGFyYW1ldGVycyhjb25zdCBjdjo6TWF0ICYpAAAAAAAAAAAcUQEA4wQAAOQEAADlBAAAjAMAAOYEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMzMFN5bW1ldHJpY0dlb21ldHJpY0Rpc3RhbmNlSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAA8agIAvFABAMRlAgAAAAAAwFEBAOcEAADoBAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAA6QQAAOoEAADrBAAA7AQAAE4yY3Y0dXNhYzMwU3ltbWV0cmljR2VvbWV0cmljRGlzdGFuY2VJbXBsRQBOMmN2NHVzYWMyNlN5bW1ldHJpY0dlb21ldHJpY0Rpc3RhbmNlRQAAADxqAgCLUQEAZEwBADxqAgBgUQEAtFEBAOhRAQCqTAEAswEAAAEAAABPTQEAUE0BAF5NAQB2aXJ0dWFsIHZvaWQgY3Y6OnVzYWM6OlN5bW1ldHJpY0dlb21ldHJpY0Rpc3RhbmNlSW1wbDo6c2V0TW9kZWxQYXJhbWV0ZXJzKGNvbnN0IGN2OjpNYXQgJikAAAAAAAC8UgEA7QQAAO4EAADvBAAAjAMAAPAEAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyOFJlcHJvamVjdGlvbkVycm9yUG1hdHJpeEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFADxqAgBgUgEAxGUCAAAAAABcUwEA8QQAAPIEAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAADzBAAA9AQAAPUEAAD2BAAATjJjdjR1c2FjMjhSZXByb2plY3Rpb25FcnJvclBtYXRyaXhJbXBsRQBOMmN2NHVzYWMyNFJlcHJvamVjdGlvbkVycm9yUG1hdHJpeEUAAAA8agIAKVMBAGRMAQA8agIAAFMBAFBTAQCEUwEAqkwBAPMBAAABAAAAT00BAFBNAQBeTQEAdmlydHVhbCB2b2lkIGN2Ojp1c2FjOjpSZXByb2plY3Rpb25FcnJvclBtYXRyaXhJbXBsOjpzZXRNb2RlbFBhcmFtZXRlcnMoY29uc3QgY3Y6Ok1hdCAmKQAAAAAAAAAAXFQBAPcEAAD4BAAA+QQAAIwDAAD6BAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMzBSZXByb2plY3Rpb25EaXN0YW5jZUFmZmluZUltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCAPxTAQDEZQIAAAAAAPxUAQD7BAAA/AQAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAP0EAAD+BAAA/wQAAAAFAABOMmN2NHVzYWMzMFJlcHJvamVjdGlvbkRpc3RhbmNlQWZmaW5lSW1wbEUATjJjdjR1c2FjMjNSZXByb2plY3Rpb25FcnJvckFmZmluZUUAADxqAgDLVAEAZEwBADxqAgCgVAEA8FQBACRVAQCqTAEAMgIAAAEAAABPTQEAUE0BAF5NAQB2aXJ0dWFsIHZvaWQgY3Y6OnVzYWM6OlJlcHJvamVjdGlvbkRpc3RhbmNlQWZmaW5lSW1w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dWFsaXR5RQBOMmN2NHVzYWM3UXVhbGl0eUUAADxqAgBoXAEAUCIBADxqAgBOXAEAfFwBADxqAgAwXAEAiFwBAGdldFNjb3JlKGVycm9ycykAZ2V0U2NvcmUAL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL3VzYWMvLi4vdXNhYy5ocHAAAAAAAFBdAQAWBQAAFwUAABgFAACMAwAAGQUAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzE1TXNhY1F1YWxpdHlJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAPGoCAABdAQDEZQIAAAAAAORdAQAaBQAAGwUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAABwFAAAPBQAAHQUAAB4FAAAfBQAAIAUAACEFAAAiBQAATjJjdjR1c2FjMTVNc2FjUXVhbGl0eUltcGxFAE4yY3Y0dXNhYzExTXNhY1F1YWxpdHlFADxqAgDAXQEAfFwBADxqAgCkXQEA2F0BAAAAAABgXgEAIwUAACQFAAAlBQAAjAMAACYFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxN01hZ3NhY1F1YWxpdHlJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAAAA8agIADF4BAMRlAgAAAAAA+F4BACcFAAAoBQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAKQUAACoFAAArBQAALAUAAC0FAAAuBQAALwUAADAFAABOMmN2NHVzYWMxN01hZ3NhY1F1YWxpdHlJbXBsRQBOMmN2NHVzYWMxM01hZ3NhY1F1YWxpdHlFADxqAgDSXgEAfFwBADxqAgC0XgEA7F4BAAAAAABwXwEAMQUAADIFAAAzBQAAjAMAADQFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxNkxNZWRzUXVhbGl0eUltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFADxqAgAgXwEAxGUCAAAAAAAIYAEANQUAADYFAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAAA3BQAADwUAADgFAAA5BQAAOgUAADsFAAA8BQAAPQUAAE4yY3Y0dXNhYzE2TE1lZHNRdWFsaXR5SW1wbEUATjJjdjR1c2FjMTJMTWVkc1F1YWxpdHlFAAAAPGoCAOFfAQB8XAEAPGoCAMRfAQD8XwEAAAAAAIRgAQA+BQAAPwUAAEAFAACMAwAAQQUAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzE3TW9kZWxWZXJpZmllckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAADxqAgAwYAEAxGUCAAAAAAAUYQEAQgUAAEMFAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAABEBQAARQUAAEYFAABHBQAASAUAAEkFAABOMmN2NHVzYWMxN01vZGVsVmVyaWZpZXJJbXBsRQBOMmN2NHVzYWMxM01vZGVsVmVyaWZpZXJFADxqAgDuYAEAUCIBADxqAgDQYAEACGEBAAAAAACEYQEASgUAAEsFAABMBQAAjAMAAE0FAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWM4U1BSVEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAA8agIAPGEBAMRlAgAAAAAABGIBAE4FAABPBQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAUAUAAFEFAABSBQAAUwUAAFQFAABVBQAAVgUAAE4yY3Y0dXNhYzhTUFJUSW1wbEUATjJjdjR1c2FjNFNQUlRFADxqAgDoYQEACGEBADxqAgDUYQEA+GEBAAAAAACQYgEAVwUAAFgFAABZBQAAjAMAAFoFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMzNEhvbW9ncmFwaHlNaW5pbWFsU29sdmVyNHB0c0dFTUltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCACxiAQDEZQIAAAAAAGBjAQBZBAAAWwUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAFwFAABdBQAAXgUAAF8FAABOMmN2NHVzYWMzNEhvbW9ncmFwaHlNaW5pbWFsU29sdmVyNHB0c0dFTUltcGxFAE4yY3Y0dXNhYzMwSG9tb2dyYXBoeU1pbmltYWxTb2x2ZXI0cHRzR0VNRQBOMmN2NHVzYWMxM01pbmltYWxTb2x2ZXJFADxqAgAuYwEAUCIBADxqAgADYwEASGMBADxqAgDUYgEAVGMBAAAAAADoYwEAYAUAAGEFAABiBQAAjAMAAGMFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMzMEhvbW9ncmFwaHlOb25NaW5pbWFsU29sdmVySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAA8agIAiGMBAMRlAgAAAAAAtGQBAGQFAABlBQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAZgUAAGcFAABoBQAAaQUAAE4yY3Y0dXNhYzMwSG9tb2dyYXBoeU5vbk1pbmltYWxTb2x2ZXJJbXBsRQBOMmN2NHVzYWMyNkhvbW9ncmFwaHlOb25NaW5pbWFsU29sdmVyRQBOMmN2NHVzYWMxNk5vbk1pbmltYWxTb2x2ZXJFAAA8agIAfmQBAFAiAQA8agIAV2QBAJxkAQA8agIALGQBAKhkAQAAAAAANGUBAGoFAABrBQAAbAUAAIwDAABtBQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjNBZmZpbmVNaW5pbWFsU29sdmVySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAADxqAgDcZAEAxGUCAAAAAADIZQEAWQQAAG4FAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAABvBQAAcAUAAHEFAAByBQAATjJjdjR1c2FjMjNBZmZpbmVNaW5pbWFsU29sdmVySW1wbEUATjJjdjR1c2FjMTlBZmZpbmVNaW5pbWFsU29sdmVyRQA8agIAnGUBAEhjAQA8agIAeGUBALxlAQAAAAAATGYBAHMFAAB0BQAAdQUAAIwDAAB2BQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjZBZmZpbmVOb25NaW5pbWFsU29sdmVySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAA8agIA8GUBAMRlAgAAAAAA6GYBAFkEAAB3BQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAeAUAAHkFAAB6BQAAewUAAE4yY3Y0dXNhYzI2QWZmaW5lTm9uTWluaW1hbFNvbHZlckltcGxFAE4yY3Y0dXNhYzIyQWZmaW5lTm9uTWluaW1hbFNvbHZlckUAAAA8agIAt2YBAJxkAQA8agIAkGYBANxmAQBhbGxvY2F0b3I8VD46OmFsbG9jYXRlKHNpemVfdCBuKSAnbicgZXhjZWVkcyBtYXhpbXVtIHN1cHBvcnRlZCBzaXplAAAAAAC0ZwEAfAUAAH0FAAB+BQAAjAMAAH8FAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMzMEVwaXBvbGFyR2VvbWV0cnlEZWdlbmVyYWN5SW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAA8agIAVGcBAMRlAgAAAAAAWGgBAFkEAACABQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAgQUAAIIFAACDBQAAhAUAAE4yY3Y0dXNhYzMwRXBpcG9sYXJHZW9tZXRyeURlZ2VuZXJhY3lJbXBsRQBOMmN2NHVzYWMyNkVwaXBvbGFyR2VvbWV0cnlEZWdlbmVyYWN5RQAAADxqAgAjaAEAIIMBADxqAgD4ZwEATGgBAGRhdGEgJiYgZGltcyA8PSAyICYmIChyb3dzID09IDEgfHwgY29scyA9PSAxKSAmJiByb3dzICsgY29scyAtIDEgPT0gbiAmJiBjaGFubmVscygpID09IDEAb3BlcmF0b3IgVmVjAC9zcmMvbW9kdWxlcy9jb3JlL2luY2x1ZGUvb3BlbmN2Mi9jb3JlL21hdC5pbmwuaHBwAAAAAAAAAAB0aQEAhQUAAIYFAACHBQAAjAMAAIgFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyNEhvbW9ncmFwaHlEZWdlbmVyYWN5SW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAPGoCABxpAQDEZQIAAAAAAAxqAQBZBAAAiQUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAIoFAACLBQAAgwUAAIwFAABOMmN2NHVzYWMyNEhvbW9ncmFwaHlEZWdlbmVyYWN5SW1wbEUATjJjdjR1c2FjMjBIb21vZ3JhcGh5RGVnZW5lcmFjeUUAAAA8agIA3WkBACCDAQA8agIAuGkBAABqAQAAAAAAkGoBAI0FAACOBQAAjwUAAIwDAACQBQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjVGdW5kYW1lbnRhbERlZ2VuZXJhY3lJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAAAA8agIANGoBAMRlAgAAAAAAKGsBAJEFAACSBQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAgQUAAJMFAACUBQAAlQUAAE4yY3Y0dXNhYzI1RnVuZGFtZW50YWxEZWdlbmVyYWN5SW1wbEUATjJjdjR1c2FjMjFGdW5kYW1lbnRhbERlZ2VuZXJhY3lFADxqAgD6agEATGgBADxqAgDUagEAHGsBAAAAAACoawEAlgUAAJcFAACYBQAAjAMAAJkFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyM0Vzc2VudGlhbERlZ2VuZXJhY3lJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAPGoCAFBrAQDEZQIAAAAAADxsAQCaBQAAmwUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAIEFAACcBQAAgwUAAJ0FAABOMmN2NHVzYWMyM0Vzc2VudGlhbERlZ2VuZXJhY3lJbXBsRQBOMmN2NHVzYWMxOUVzc2VudGlhbERlZ2VuZXJhY3lFADxqAgAQbAEATGgBADxqAgDsawEAMGwBAAAAAADEbAEAngUAAJ8FAACgBQAAjAMAAKEFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMzMkZ1bmRhbWVudGFsTWluaW1hbFNvbHZlcjdwdHNJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIAZGwBAMRlAgAAAAAAbG0BAFkEAACiBQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAowUAAKQFAAClBQAApgUAAE4yY3Y0dXNhYzMyRnVuZGFtZW50YWxNaW5pbWFsU29sdmVyN3B0c0ltcGxFAE4yY3Y0dXNhYzI4RnVuZGFtZW50YWxNaW5pbWFsU29sdmVyN3B0c0UAAAA8agIANW0BAEhjAQA8agIACG0BAGBtAQAAAAAA9G0BAKcFAACoBQAAqQUAAIwDAACqBQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMzJGdW5kYW1lbnRhbE1pbmltYWxTb2x2ZXI4cHRzSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAPGoCAJRtAQDEZQIAAAAAAJxuAQBZBAAAqwUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAKwFAACtBQAArgUAAK8FAABOMmN2NHVzYWMzMkZ1bmRhbWVudGFsTWluaW1hbFNvbHZlcjhwdHNJbXBsRQBOMmN2NHVzYWMyOEZ1bmRhbWVudGFsTWluaW1hbFNvbHZlcjhwdHNFAAAAPGoCAGVuAQBIYwEAPGoCADhuAQCQbgEAAAAAACRvAQCwBQAAsQUAALIFAACMAwAAswUAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzMxRnVuZGFtZW50YWxOb25NaW5pbWFsU29sdmVySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAADxqAgDEbgEAxGUCAAAAAADIbwEAtAUAALUFAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAAC2BQAAtwUAALgFAAC5BQAATjJjdjR1c2FjMzFGdW5kYW1lbnRhbE5vbk1pbmltYWxTb2x2ZXJJbXBsRQBOMmN2NHVzYWMyN0Z1bmRhbWVudGFsTm9uTWluaW1hbFNvbHZlckUAPGoCAJRvAQCcZAEAPGoCAGhvAQC8bwEAAAAAAFhwAQC6BQAAuwUAALwFAACMAwAAvQUAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzM5RXNzZW50aWFsTWluaW1hbFNvbHZlclN0ZXdlbml1czVwdHNJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAPGoCAPBvAQDEZQIAAAAAAAxxAQBZBAAAvgUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAL8FAADABQAAwQUAAMIFAABOMmN2NHVzYWMzOUVzc2VudGlhbE1pbmltYWxTb2x2ZXJTdGV3ZW5pdXM1cHRzSW1wbEUATjJjdjR1c2FjMzVFc3NlbnRpYWxNaW5pbWFsU29sdmVyU3Rld2VuaXVzNXB0c0UAPGoCANBwAQBIYwEAPGoCAJxwAQAAcQEAVG8gdXNlIGVzc2VudGlhbCBtYXRyaXggc29sdmVyIExBUEFDSyBvciBFaWdlbiBoYXMgdG8gYmUgaW5zdGFsbGVkIQBlc3RpbWF0ZQAvc3JjL21vZHVsZXMvY2FsaWIzZC9zcmMvdXNhYy9lc3NlbnRpYWxfc29sdmVyLmNwcAAAAAAAFHIBAMMFAADEBQAAxQUAAIwDAADGBQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjlFc3NlbnRpYWxOb25NaW5pbWFsU29sdmVySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAAPGoCALRxAQDEZQIAAAAAALRyAQBZBAAAxwUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAMgFAADJBQAAygUAAMsFAABOMmN2NHVzYWMyOUVzc2VudGlhbE5vbk1pbmltYWxTb2x2ZXJJbXBsRQBOMmN2NHVzYWMyNUVzc2VudGlhbE5vbk1pbmltYWxTb2x2ZXJFADxqAgCCcgEAnGQBADxqAgBYcgEAqHIBAAAAAAAocwEAzAUAAM0FAADOBQAAjAMAAM8FAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxMERMU1BuUEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCANxyAQDEZQIAAAAAAKRzAQBZBAAA0AUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAANEFAADSBQAA0wUAANQFAABOMmN2NHVzYWMxMERMU1BuUEltcGxFAE4yY3Y0dXNhYzZETFNQblBFAAAAADxqAgCDcwEAnGQBADxqAgBscwEAmHMBAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAAAAAAGh0AQDVBQAA1gUAANcFAACMAwAA2AUAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzI0UG5QTWluaW1hbFNvbHZlcjZQdHNJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIAEHQBAMRlAgAAAAAAAHUBAFkEAADZBQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAA2gUAANsFAADcBQAA3QUAAE4yY3Y0dXNhYzI0UG5QTWluaW1hbFNvbHZlcjZQdHNJbXBsRQBOMmN2NHVzYWMyMFBuUE1pbmltYWxTb2x2ZXI2UHRzRQAAADxqAgDRdAEASGMBADxqAgCsdAEA9HQBAAAAAACAdQEA3gUAAN8FAADgBQAAjAMAAOEFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyM1BuUE5vbk1pbmltYWxTb2x2ZXJJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAPGoCACh1AQDEZQIAAAAAABR2AQBZBAAA4gUAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAOMFAADkBQAA5QUAAOYFAABOMmN2NHVzYWMyM1BuUE5vbk1pbmltYWxTb2x2ZXJJbXBsRQBOMmN2NHVzYWMxOVBuUE5vbk1pbmltYWxTb2x2ZXJFADxqAgDodQEAnGQBADxqAgDEdQEACHYBAAAAAACMdgEA5wUAAOgFAADpBQAAjAMAAOoFAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxM1AzUFNvbHZlckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAADxqAgA8dgEAxGUCAAAAAAAMdwEAWQQAAOsFAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAADsBQAA7QUAAO4FAADvBQAATjJjdjR1c2FjMTNQM1BTb2x2ZXJJbXBsRQBOMmN2NHVzYWM5UDNQU29sdmVyRQAAPGoCAOp2AQBIYwEAPGoCANB2AQAAdwEAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAAAAAAxHcBAPAFAADxBQAA8gUAAIwDAADzBQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMTJHcmFwaEN1dEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFADxqAgB4dwEAxGUCAAAAAABkeAEA9AUAAPUFAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAAD2BQAA9wUAAE4yY3Y0dXNhYzEyR3JhcGhDdXRJbXBsRQBOMmN2NHVzYWM4R3JhcGhDdXRFAE4yY3Y0dXNhYzE3TG9jYWxPcHRpbWl6YXRpb25FAAA8agIALXgBAFAiAQA8agIAGXgBAEx4AQA8agIAAHgBAFh4AQBpPj0wICYmIGk8KGludCl2dGNzLnNpemUoKQBhZGRUZXJtV2VpZ2h0cwAvc3JjL21vZHVsZXMvaW1ncHJvYy9pbmNsdWRlL29wZW5jdjIvaW1ncHJvYy9kZXRhaWwvZ2NncmFwaC5ocHAAYWRkRWRnZXMAaj49MCAmJiBqPChpbnQpdnRjcy5zaXplKCkAdz49MCAmJiByZXZ3Pj0wAGkgIT0gagAhdnRjcy5lbXB0eSgpAG1heEZsb3cAIWVkZ2VzLmVtcHR5KCkAbWluV2VpZ2h0ID4gMABpblNvdXJjZVNlZ21lbnQAAAAAANh5AQD4BQAA+QUAAPoFAACMAwAA+wUAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzM1SW5uZXJJdGVyYXRpdmVMb2NhbE9wdGltaXphdGlvbkltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAA8agIAdHkBAMRlAgAAAAAAfHoBAPwFAAD9BQAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAA/gUAAP8FAABOMmN2NHVzYWMzNUlubmVySXRlcmF0aXZlTG9jYWxPcHRpbWl6YXRpb25JbXBsRQBOMmN2NHVzYWMzMUlubmVySXRlcmF0aXZlTG9jYWxPcHRpbWl6YXRpb25FADxqAgBEegEATHgBADxqAgAUegEAcHoBAAAAAAD4egEAAAYAAAEGAAACBgAAjAMAAAMGAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxOFNpZ21hQ29uc2Vuc3VzSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAA8agIApHoBAMRlAgAAAAAAfHsBAAQGAAAFBgAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAABgYAAAcGAABOMmN2NHVzYWMxOFNpZ21hQ29uc2Vuc3VzSW1wbEUATjJjdjR1c2FjMTRTaWdtYUNvbnNlbnN1c0UAAAA8agIAU3sBAEx4AQA8agIANHsBAHB7AQAAAAAAAHwBAAgGAAAJBgAACgYAAIwDAAALBgAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjVMZWFzdFNxdWFyZXNQb2xpc2hpbmdJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAAAA8agIApHsBAMRlAgAAAAAAuHwBAAwGAAANBgAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAADgYAAE4yY3Y0dXNhYzI1TGVhc3RTcXVhcmVzUG9saXNoaW5nSW1wbEUATjJjdjR1c2FjMjFMZWFzdFNxdWFyZXNQb2xpc2hpbmdFAE4yY3Y0dXNhYzE4RmluYWxNb2RlbFBvbGlzaGVyRQAAPGoCAIB8AQBQIgEAPGoCAF58AQCgfAEAPGoCADh8AQCsfAEASW5jb3JyZWN0IGZsYWcgZm9yIFVTQUMhAHNldFBhcmFtZXRlcnMAL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL3VzYWMvcmFuc2FjX3NvbHZlcnMuY3BwADh9AQDrfAEAIAMAAAEAAADzfQEAF34BADt+AQBib29sIGN2Ojp1c2FjOjpydW4oY29uc3QgUHRyPGNvbnN0IGN2Ojp1c2FjOjpNb2RlbD4gJiwgY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBpbnQsIFB0cjxjdjo6dXNhYzo6UmFuc2FjT3V0cHV0PiAmLCBjdjo6SW5wdXRBcnJheSwgY3Y6OklucHV0QXJyYXksIGN2OjpJbnB1dEFycmF5LCBjdjo6SW5wdXRBcnJheSkASW50cmluc2ljIG1hdHJpeCBtdXN0IG5vdCBiZSBlbXB0eSEAKGludCkoIUsxXy5lbXB0eSgpICYmICFLMl8uZW1wdHkoKSkAMQBHcmFwaCB0eXBlIGlzIG5vdCBpbXBsZW1lbnRlZCEAcnVuADh9AQDrfAEASQMAAAEAAAB8fgEAqn4BAL9+AQBQcm9ncmVzc2l2ZU5BUFNBQyBmb3IgUG5QIGlzIG5vdCBpbXBsZW1lbnRlZCEAKGludClwYXJhbXMtPmlzUG5QKCkAMABQcm9ncmVzc2l2ZSBOQVBTQUMgc2FtcGxlcjogQ2VsbCBudW1iZXIgaW4gbGF5ZXJzIG11c3QgYmUgaW4gZGVjcmVhc2luZyBvcmRlciEARXJyb3IgbWV0cmljIGlzIG5vdCBpbXBsZW1lbnRlZCEAU2NvcmUgaXMgbm90IGltZXBsZW1ldGVkIQBFc3RpbWF0b3Igbm90IGltcGxlbWVudGVkIQBTYW1wbGVyIGlzIG5vdCBpbXBsZW1lbnRlZCEAVmVyaWZpZXIgaXMgbm90IGltZXBsZW1lbnRlZCEATG9jYWwgT3B0aW1pemF0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCEAAOR/AQDrfAEAigEAAAUAAABlgAEAgIABAIyAAQBhdXRvIGN2Ojp1c2FjOjptZXJnZVBvaW50cyhjdjo6SW5wdXRBcnJheSwgY3Y6OklucHV0QXJyYXksIGN2OjpNYXQgJiwgYm9vbCk6Oihhbm9ueW1vdXMgY2xhc3MpOjpvcGVyYXRvcigpKGN2OjpNYXQgJiwgaW50KSBjb25zdABJbnZhbGlkIGRpbWVuc2lvbiBvZiBwb2ludABwb2ludHMuY29scwBwdF9kaW0AYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAAAAAAABSBAQAQBgAAEQYAABIGAABOMmN2MjlQYXJhbGxlbExvb3BCb2R5TGFtYmRhV3JhcHBlckUAAAAAPGoCAOyAAQCorgAAAAAAAACCAQATBgAAFAYAABUGAAAWBgAAFwYAABgGAAAZBgAAGgYAABsGAABOU3QzX18yMTBfX2Z1bmN0aW9uNl9fZnVuY0laTjJjdjR1c2FjNlJhbnNhYzNydW5FUk5TMl8zUHRySU5TM18xMlJhbnNhY091dHB1dEVFRUVVbFJLTlMyXzVSYW5nZUVFX05TXzlhbGxvY2F0b3JJU0NfRUVGdlNCX0VFRQBOU3QzX18yMTBfX2Z1bmN0aW9uNl9fYmFzZUlGdlJLTjJjdjVSYW5nZUVFRUUAFGoCAMqBAQA8agIATIEBAPiBAQBaTjJjdjR1c2FjNlJhbnNhYzNydW5FUk5TXzNQdHJJTlMwXzEyUmFuc2FjT3V0cHV0RUVFRVVsUktOU181UmFuZ2VFRV8AAAAUagIADIIBAAAAAADEggEAHAYAAB0GAAAeBgAAjAMAAB8GAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMxMERlZ2VuZXJhY3lFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCAHiCAQDEZQIAAAAAACCDAQBZBAAAIAYAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAIEFAACLBQAAgwUAACEGAABOMmN2NHVzYWMxMERlZ2VuZXJhY3lFAAA8agIACIMBAFAiAQAAAAAAmIMBACIGAAAjBgAAJAYAAIwDAAAlBgAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMTZSYW5zYWNPdXRwdXRJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIASIMBAMRlAgAAAAAAPIQBACYGAAAnBgAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAKAYAACkGAAAqBgAAKwYAACwGAAAtBgAALgYAAC8GAAAwBgAAMQYAADIGAABOMmN2NHVzYWMxNlJhbnNhY091dHB1dEltcGxFAE4yY3Y0dXNhYzEyUmFuc2FjT3V0cHV0RQAAADxqAgAVhAEAUCIBADxqAgD4gwEAMIQBAAAAAACshAEAMwYAADQGAAA1BgAAjAMAADYGAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWM5TW9kZWxJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIAZIQBAMRlAgAAAAAAJIYBADcGAAA4BgAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAOQYAADoGAAA7BgAAPAYAAD0GAAA+BgAAPwYAAEAGAABBBgAAQgYAAEMGAABEBgAARQYAAEYGAABHBgAASAYAAEkGAABKBgAASwYAAEwGAABNBgAATgYAAE8GAABQBgAAUQYAAFIGAABTBgAAVAYAAFUGAABWBgAAVwYAAFgGAABZBgAAWgYAAFsGAABcBgAAXQYAAF4GAABfBgAAYAYAAGEGAABiBgAAYwYAAGQGAABlBgAAZgYAAGcGAABoBgAAaQYAAGoGAABrBgAAbAYAAG0GAABuBgAAbwYAAHAGAABxBgAARXN0aW1hdG9yIGhhcyBub3QgaW1wbGVtZW50ZWQgeWV0IQBNb2RlbEltcGwATjJjdjR1c2FjOU1vZGVsSW1wbEUATjJjdjR1c2FjNU1vZGVsRQAAPGoCAAaGAQBQIgEAPGoCAPGFAQAYhgEATjJjdjR1c2FjN1NhbXBsZXJFAAA8agIAMIYBAFAiAQBOMmN2NHVzYWMxM1Byb3NhY1NhbXBsZXJFAAAAPGoCAFCGAQBEhgEAAAAAAOiGAQByBgAAcwYAAHQGAACMAwAAdQYAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzE4VW5pZm9ybVNhbXBsZXJJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAADxqAgCUhgEAxGUCAAAAAABwhwEAdgYAAHcGAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAAB4BgAAeQYAAHoGAABOMmN2NHVzYWMxOFVuaWZvcm1TYW1wbGVySW1wbEUATjJjdjR1c2FjMTRVbmlmb3JtU2FtcGxlckUAAAA8agIAR4cBAESGAQA8agIAKIcBAGSHAQBzYW1wbGVfc2l6ZSA8PSBwb2ludHNfc2l6ZV8Ac2V0UG9pbnRzU2l6ZQAvc3JjL21vZHVsZXMvY2FsaWIzZC9zcmMvdXNhYy9zYW1wbGVyLmNwcABzYW1wbGVfc2l6ZV8gPD0gcG9pbnRzX3NpemVfAHNldE5ld1BvaW50c1NpemUAAAAAAAAAcIgBAHsGAAB8BgAAfQYAAIwDAAB+BgAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMTdQcm9zYWNTYW1wbGVySW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAAPGoCAByIAQDEZQIAAAAAAOyIAQB/BgAAgAYAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAIEGAACCBgAAgwYAAIQGAACFBgAAhgYAAFByb3NhY1NhbXBsZXJJbXBsAE4yY3Y0dXNhYzE3UHJvc2FjU2FtcGxlckltcGxFADxqAgDOiAEAbIYBAENoYW5naW5nIHBvaW50cyBzaXplIGluIFBST1NBQyByZXF1aXJlcyB0byBjaGFuZ2UgYWxzbyB0ZXJtaW5hdGlvbiBjcml0ZXJpYSEgVXNlIFBST1NBQyBzaW1wbGVyIHZlcnNpb24AAAAAANSJAQCHBgAAiAYAAIkGAACMAwAAigYAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzIxUHJvZ3Jlc3NpdmVOYXBzYWNJbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAAAA8agIAfIkBAMRlAgAAAAAAeIoBAIsGAACMBgAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAjQYAAI4GAACPBgAAUHJvZ3Jlc3NpdmVOYXBzYWNJbXBsAE4yY3Y0dXNhYzIxUHJvZ3Jlc3NpdmVOYXBzYWNJbXBsRQBOMmN2NHVzYWMxN1Byb2dyZXNzaXZlTmFwc2FjRQAAADxqAgBMigEARIYBADxqAgAqigEAbIoBAENoYW5naW5nIHBvaW50cyBzaXplIHJlcXVpcmVzIGNoYW5naW5nIG5laWdoYm9yaG9vZCBncmFwaCEgWW91IG11c3QgcmVpbml0aWFsaXplIFAtTkFQU0FDIQAAAAAAAFCLAQCQBgAAkQYAAJIGAACMAwAAkwYAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzE3TmFwc2FjU2FtcGxlckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAADxqAgD8igEAxGUCAAAAAAAEjAEAlAYAAJUGAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAACWBgAAlwYAAJgGAABwb2ludHNfc2l6ZV8gPj0gc2FtcGxlX3NpemVfAE5hcHNhY1NhbXBsZXJJbXBsAE4yY3Y0dXNhYzE3TmFwc2FjU2FtcGxlckltcGxFAE4yY3Y0dXNhYzEzTmFwc2FjU2FtcGxlckUAADxqAgDdiwEARIYBADxqAgC/iwEA+IsBAENoYW5naW5nIHBvaW50cyBzaXplIHJlcXVpcmVzIGNoYW5naW5nIG5laWdoYm9yaG9vZCBncmFwaCEgWW91IG11c3QgcmVpbml0aWFsaXplIE5BUFNBQyEAAAAAAAAAAOiMAQCZBgAAmgYAAJsGAACMAwAAnAYAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzMxU3RhbmRhcmRUZXJtaW5hdGlvbkNyaXRlcmlhSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAADxqAgCIjAEAxGUCAAAAAACwjQEAWQQAAJ0GAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAACeBgAAnwYAAE4yY3Y0dXNhYzMxU3RhbmRhcmRUZXJtaW5hdGlvbkNyaXRlcmlhSW1wbEUATjJjdjR1c2FjMjdTdGFuZGFyZFRlcm1pbmF0aW9uQ3JpdGVyaWFFAE4yY3Y0dXNhYzE5VGVybWluYXRpb25Dcml0ZXJpYUUAPGoCAHiNAQBQIgEAPGoCAFCNAQCYjQEAPGoCACSNAQCkjQEAAAAAACyOAQCgBgAAoQYAAKIGAACMAwAAowYAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzE5U1BSVFRlcm1pbmF0aW9uSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAADxqAgDYjQEAxGUCAAAAAACwjgEAWQQAAKQGAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAAClBgAApgYAAE4yY3Y0dXNhYzE5U1BSVFRlcm1pbmF0aW9uSW1wbEUATjJjdjR1c2FjMTVTUFJUVGVybWluYXRpb25FADxqAgCIjgEAmI0BADxqAgBojgEApI4BAAAAAAA0jwEApwYAAKgGAACpBgAAjAMAAKoGAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyNlNQUlRQTmFwc2FjVGVybWluYXRpb25JbXBsRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAADxqAgDYjgEAxGUCAAAAAADIjwEAqwYAAKwGAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAACtBgAArgYAAE4yY3Y0dXNhYzI2U1BSVFBOYXBzYWNUZXJtaW5hdGlvbkltcGxFAE4yY3Y0dXNhYzIyU1BSVFBOYXBzYWNUZXJtaW5hdGlvbkUAAAA8agIAl48BAJiNAQA8agIAcI8BALyPAQAAAAAAUJABAK8GAACwBgAAsQYAAIwDAACyBgAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjR1c2FjMjlQcm9zYWNUZXJtaW5hdGlvbkNyaXRlcmlhSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAAPGoCAPCPAQDEZQIAAAAAAOiQAQCzBgAAtAYAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAALUGAAC2BgAATjJjdjR1c2FjMjlQcm9zYWNUZXJtaW5hdGlvbkNyaXRlcmlhSW1wbEUATjJjdjR1c2FjMjVQcm9zYWNUZXJtaW5hdGlvbkNyaXRlcmlhRQA8agIAtpABAJiNAQA8agIAjJABANyQAQBhbGdvcml0aG0AdHJlZXMAYnJhbmNoaW5nAGl0ZXJhdGlvbnMAY2VudGVyc19pbml0AHRhcmdldF9wcmVjaXNpb24AYnVpbGRfd2VpZ2h0AG1lbW9yeV93ZWlnaHQAc2FtcGxlX2ZyYWN0aW9uAGxlYWZfc2l6ZQB0YWJsZV9udW1iZXIAbXVsdGlfcHJvYmVfbGV2ZWwAY2hlY2tzAGVwcwBzb3J0ZWQAZXhwbG9yZV9hbGxfdHJlZXMAAAAAAADMkwEA3QYAAN4GAADfBgAA4AYAAOEGAADiBgAA4wYAAOQGAABVbmtub3duL3Vuc3VwcG9ydGVkIGRpc3RhbmNlIHR5cGUAYnVpbGQAL3NyYy9tb2R1bGVzL2ZsYW5uL3NyYy9taW5pZmxhbm4uY3BwAHJlbGVhc2UAa25uU2VhcmNoAG1heFJlc3VsdHMgPiAwAHJhZGl1c1NlYXJjaABMU0ggaW5kZXggZG9lcyBub3Qgc3VwcG9ydCByYWRpdXNTZWFyY2ggb3BlcmF0aW9uAHdiAENhbiBub3Qgb3BlbiBmaWxlICVzIGZvciB3cml0aW5nIEZMQU5OIGluZGV4CgBzYXZlAHJiAFJlYWRpbmcgRkxBTk4gaW5kZXggZXJyb3I6IHRoZSBzYXZlZCBkYXRhIHNpemUgKCVkLCAlZCkgb3IgdHlwZSAoJWQpIGlzIGRpZmZlcmVudCBmcm9tIHRoZSBwYXNzZWQgb25lICglZCwgJWQpLCAlZAoAUmVhZGluZyBGTEFOTiBpbmRleCBlcnJvcjogdW5zdXBwb3J0ZWQgZmVhdHVyZSB0eXBlICVkIGZvciB0aGUgaW5kZXggdHlwZSAlZAoAUmVhZGluZyBGTEFOTiBpbmRleCBlcnJvcjogdW5zdXBwb3J0ZWQgZGlzdGFuY2UgdHlwZSAlZAoATjJjdjVmbGFubjVJbmRleEUAABRqAgC5kwEASW52YWxpZCBpbmRleCBmaWxlLCBjYW5ub3QgcmVhZABON2N2Zmxhbm4xNEZMQU5ORXhjZXB0aW9uRQAAPGoCAPSTAQDU7QAARkxBTk5fSU5ERVgASW52YWxpZCBpbmRleCBmaWxlLCB3cm9uZyBzaWduYXR1cmUAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9nZW5lcmFsLmgAAAAAAAAQlAEA4wMAAOUGAADnAwAAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQBB4KkGC9MZuJUBAOYGAADnBgAA6AYAAOkGAADqBgAA6wYAAOwGAADtBgAA7gYAAO8GAADwBgAATjdjdmZsYW5uN2FueWltcGwxNGJpZ19hbnlfcG9saWN5SU5TMF85ZW1wdHlfYW55RUVFAE43Y3ZmbGFubjdhbnlpbXBsMjF0eXBlZF9iYXNlX2FueV9wb2xpY3lJTlMwXzllbXB0eV9hbnlFRUUATjdjdmZsYW5uN2FueWltcGwxNWJhc2VfYW55X3BvbGljeUUAABRqAgB/lQEAPGoCAESVAQCklQEAPGoCABCVAQCslQEATjdjdmZsYW5uN2FueWltcGw5ZW1wdHlfYW55RQAAAAAUagIAxJUBAFtlbXB0eV9hbnldAAAAAACQlgEA8QYAAPIGAADzBgAA9AYAAPUGAAD2BgAA9wYAAPgGAAD5BgAA7wYAAPoGAABON2N2Zmxhbm43YW55aW1wbDE2c21hbGxfYW55X3BvbGljeUlpRUUATjdjdmZsYW5uN2FueWltcGwyMXR5cGVkX2Jhc2VfYW55X3BvbGljeUlpRUUAAAAAPGoCAFSWAQCklQEAPGoCACyWAQCElgEAAAAAADSXAQD7BgAA/AYAAP0GAAD+BgAA/wYAAAAHAAABBwAAAgcAAAMHAADvBgAABAcAAE43Y3ZmbGFubjdhbnlpbXBsMTZzbWFsbF9hbnlfcG9saWN5SWZFRQBON2N2Zmxhbm43YW55aW1wbDIxdHlwZWRfYmFzZV9hbnlfcG9saWN5SWZFRQAAAAA8agIA+JYBAKSVAQA8agIA0JYBACiXAQAAAAAA2JcBAAUHAAAGBwAABwcAAAgHAAAJBwAACgcAAAsHAAAMBwAADQcAAO8GAAAOBwAATjdjdmZsYW5uN2FueWltcGwxNnNtYWxsX2FueV9wb2xpY3lJYkVFAE43Y3ZmbGFubjdhbnlpbXBsMjF0eXBlZF9iYXNlX2FueV9wb2xpY3lJYkVFAAAAADxqAgCclwEApJUBADxqAgB0lwEAzJcBAAAAAACkmAEADwcAABAHAAARBwAAEgcAABMHAAAUBwAAFQcAABYHAAAXBwAA7wYAABgHAABON2N2Zmxhbm43YW55aW1wbDE0YmlnX2FueV9wb2xpY3lJTlNfMTdmbGFubl9hbGdvcml0aG1fdEVFRQBON2N2Zmxhbm43YW55aW1wbDIxdHlwZWRfYmFzZV9hbnlfcG9saWN5SU5TXzE3Zmxhbm5fYWxnb3JpdGhtX3RFRUUAADxqAgBUmAEApJUBADxqAgAYmAEAmJgBAE43Y3ZmbGFubjE3Zmxhbm5fYWxnb3JpdGhtX3RFAAAAyGkCALCYAQAAAAAAoJkBABkHAAAaBwAAGwcAABwHAAAdBwAAHgcAAB8HAAAgBwAAIQcAAO8GAAAiBwAATjdjdmZsYW5uN2FueWltcGwxNGJpZ19hbnlfcG9saWN5SU5TXzIwZmxhbm5fY2VudGVyc19pbml0X3RFRUUATjdjdmZsYW5uN2FueWltcGwyMXR5cGVkX2Jhc2VfYW55X3BvbGljeUlOU18yMGZsYW5uX2NlbnRlcnNfaW5pdF90RUVFAAAAADxqAgBLmQEApJUBADxqAgAMmQEAlJkBAE43Y3ZmbGFubjIwZmxhbm5fY2VudGVyc19pbml0X3RFAAAAAMhpAgCsmQEAAAAAAOyaAQAjBwAAJAcAACUHAAAmBwAAJwcAACgHAAApBwAAKgcAACsHAADvBgAALAcAAE43Y3ZmbGFubjdhbnlpbXBsMTRiaWdfYW55X3BvbGljeUlOU3QzX18yMTJiYXNpY19zdHJpbmdJY05TMl8xMWNoYXJfdHJhaXRzSWNFRU5TMl85YWxsb2NhdG9ySWNFRUVFRUUATjdjdmZsYW5uN2FueWltcGwyMXR5cGVkX2Jhc2VfYW55X3BvbGljeUlOU3QzX18yMTJiYXNpY19zdHJpbmdJY05TMl8xMWNoYXJfdHJhaXRzSWNFRU5TMl85YWxsb2NhdG9ySWNFRUVFRUUAAAAAPGoCAHGaAQCklQEAPGoCAAyaAQDgmgEATjdjdmZsYW5uN2FueWltcGwxMmJhZF9hbnlfY2FzdEUAAAAAFGoCAPiaAQAAAAAAuJsBAC0HAAAuBwAALwcAADAHAAAxBwAAMgcAADMHAAA0BwAANQcAAO8GAAA2BwAATjdjdmZsYW5uN2FueWltcGwxNGJpZ19hbnlfcG9saWN5SWRFRQBON2N2Zmxhbm43YW55aW1wbDIxdHlwZWRfYmFzZV9hbnlfcG9saWN5SWRFRQAAPGoCAH6bAQCklQEAPGoCAFibAQCsmwEAdHlwZT0lZAoAYnVpbGRJbmRleF8AT25seSBjb250aW51b3VzIGFycmF5cyBhcmUgc3VwcG9ydGVkAAAAAAAAAIycAQA3BwAAOAcAADkHAAA6BwAAOwcAADwHAAA9BwAAPgcAAD8HAABABwAAQQcAAEIHAABDBwAATjdjdmZsYW5uNUluZGV4SU5TXzEwSGFtbWluZ0xVVEVFRQBON2N2Zmxhbm43Tk5JbmRleElOU18xMEhhbW1pbmdMVVRFRUUAFGoCAF+cAQA8agIAPJwBAIScAQBxdWVyaWVzLmNvbHMgPT0gdmVjbGVuKCkAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9ubl9pbmRleC5oAGluZGljZXMucm93cyA+PSBxdWVyaWVzLnJvd3MAZGlzdHMucm93cyA+PSBxdWVyaWVzLnJvd3MAaW50KGluZGljZXMuY29scykgPj0ga25uAGludChkaXN0cy5jb2xzKSA+PSBrbm4AAAAAAAAAAOidAQBEBwAARQcAAEYHAABHBwAASAcAAEkHAABKBwAASwcAAE43Y3ZmbGFubjE4S05OVW5pcXVlUmVzdWx0U2V0SWlFRQBON2N2Zmxhbm4xNVVuaXF1ZVJlc3VsdFNldElpRUUATjdjdmZsYW5uOVJlc3VsdFNldElpRUUAAAAAFGoCALmdAQA8agIAmp0BANSdAQA8agIAeJ0BANydAQAAAAAA3J0BAEQHAABMBwAARgcAAOoDAABIBwAA6gMAAEoHAABLBwAASSBjYW4gb25seSBzZWFyY2ggb25lIGZlYXR1cmUgYXQgYSB0aW1lIGZvciByYW5nZSBzZWFyY2gKAHF1ZXJ5LmNvbHMgPT0gdmVjbGVuKCkAaW5kaWNlcy5jb2xzID09IGRpc3RzLmNvbHMAAAAAANieAQBEBwAATQcAAE4HAABPBwAAUAcAAFEHAABKBwAASwcAAE43Y3ZmbGFubjIxUmFkaXVzVW5pcXVlUmVzdWx0U2V0SWlFRQAAAAA8agIAsJ4BANydAQBNaXNzaW5nIHBhcmFtZXRlciAnACcgaW4gdGhlIHBhcmFtZXRlcnMgZ2l2ZW4ARGF0YXR5cGUgb2Ygc2F2ZWQgaW5kZXggaXMgZGlmZmVyZW50IHRoYW4gb2YgdGhlIG9uZSB0byBiZSBjcmVhdGVkLgBUaGUgaW5kZXggc2F2ZWQgYmVsb25ncyB0byBhIGRpZmZlcmVudCBkYXRhc2V0AFVua25vd24gaW5kZXggdHlwZQAAAAAAAKABAFIHAABTBwAAVAcAAFUHAABWBwAAVwcAAFgHAABZBwAAWgcAAFsHAABcBwAAXQcAAF4HAABON2N2Zmxhbm4xMUxpbmVhckluZGV4SU5TXzEwSGFtbWluZ0xVVEVFRQAAADxqAgDUnwEAhJwBAAAAAAAAAQECAQICAwECAgMCAwMEAQICAwIDAwQCAwMEAwQEBQECAgMCAwMEAgMDBAMEBAUCAwMEAwQEBQMEBAUEBQUGAQICAwIDAwQCAwMEAwQEBQIDAwQDBAQFAwQEBQQFBQYCAwMEAwQEBQMEBAUEBQUGAwQEBQQFBQYEBQUGBQYGBwECAgMCAwMEAgMDBAMEBAUCAwMEAwQEBQMEBAUEBQUGAgMDBAMEBAUDBAQFBAUFBgMEBAUEBQUGBAUFBgUGBgcCAwMEAwQEBQMEBAUEBQUGAwQEBQQFBQYEBQUGBQYGBwMEBAUEBQUGBAUFBgUGBgcEBQUGBQYGBwUGBgcGBwcIAAAAAKihAQBfBwAAYAcAAGEHAABVBwAAVgcAAGIHAABjBwAAZAcAAGUHAABmBwAAZwcAAGgHAABpBwAAVW5rbm93biBhbGdvcml0aG0gZm9yIGNob29zaW5nIGluaXRpYWwgY2VudGVycy4ATjdjdmZsYW5uMTFLTWVhbnNJbmRleElOU18xMEhhbW1pbmdMVVRFRUUAAAA8agIAfKEBAIScAQBBwcMGC8ZOAQECAQICAwECAgMCAwMEAQICAwIDAwQCAwMEAwQEBQECAgMCAwMEAgMDBAMEBAUCAwMEAwQEBQMEBAUEBQUGAQICAwIDAwQCAwMEAwQEBQIDAwQDBAQFAwQEBQQFBQYCAwMEAwQEBQMEBAUEBQUGAwQEBQQFBQYEBQUGBQYGBwECAgMCAwMEAgMDBAMEBAUCAwMEAwQEBQMEBAUEBQUGAgMDBAMEBAUDBAQFBAUFBgMEBAUEBQUGBAUFBgUGBgcCAwMEAwQEBQMEBAUEBQUGAwQEBQQFBQYEBQUGBQYGBwMEBAUEBQUGBAUFBgUGBgcEBQUGBQYGBwUGBgcGBwcIQnJhbmNoaW5nIGZhY3RvciBtdXN0IGJlIGF0IGxlYXN0IDIARmFpbGVkIHRvIGFsbG9jYXRlIG1lbW9yeS4KAAABAQIBAgIDAQICAwIDAwQBAgIDAgMDBAIDAwQDBAQFAQICAwIDAwQCAwMEAwQEBQIDAwQDBAQFAwQEBQQFBQYBAgIDAgMDBAIDAwQDBAQFAgMDBAMEBAUDBAQFBAUFBgIDAwQDBAQFAwQEBQQFBQYDBAQFBAUFBgQFBQYFBgYHAQICAwIDAwQCAwMEAwQEBQIDAwQDBAQFAwQEBQQFBQYCAwMEAwQEBQMEBAUEBQUGAwQEBQQFBQYEBQUGBQYGBwIDAwQDBAQFAwQEBQQFBQYDBAQFBAUFBgQFBQYFBgYHAwQEBQQFBQYEBQUGBQYGBwQFBQYFBgYHBQYGBwYHBwgAAAAAXKQBAF8DAABqBwAAawcAAE43Y3ZmbGFubjExS01lYW5zSW5kZXhJTlNfMTBIYW1taW5nTFVURUUyMktNZWFuc0Rpc3RhbmNlQ29tcHV0ZXJJUFBoRUUAADxqAgAUpAEAqK4AAENhbm5vdCByZWFkIGZyb20gZmlsZQByZXN1bHQuZnVsbCgpAGZpbmROZWlnaGJvcnMAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9rbWVhbnNfaW5kZXguaAAAAPCkAQAMpgEA0AAAAAEAAAA8pgEAa6YBAJKmAQBzdGF0aWMgY3Y6OlB0cjxIZWFwPFQ+PiBjdmZsYW5uOjpIZWFwPGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpLTWVhbnNJbmRleDxjdmZsYW5uOjpIYW1taW5nTFVUPjo6S01lYW5zTm9kZSAqLCBpbnQ+Pjo6Z2V0UG9vbGVkSW5zdGFuY2UoY29uc3QgSGFzaGFibGVUICYsIGNvbnN0IGludCwgaW50KSBbVCA9IGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpLTWVhbnNJbmRleDxjdmZsYW5uOjpIYW1taW5nTFVUPjo6S01lYW5zTm9kZSAqLCBpbnQ+LCBIYXNoYWJsZVQgPSBpbnRdAC9zcmMvbW9kdWxlcy9mbGFubi9pbmNsdWRlL29wZW5jdjIvZmxhbm4vaGVhcC5oAEZhaWxlZCB0byBpbnNlcnQgdGhlIGhlYXAgaW50byBpdHMgbWVtb3J5IHBvb2wAc3RhdGljX2Nhc3Q8aW50PihlbXBsYWNlUmVzdWx0LnNlY29uZCkAMQDwpAEADKYBANUAAAABAAAAsKYBAPKmAQCSpgEAQ2Fubm90IG1vZGlmeSBhIGhlYXAgdGhhdCBpcyBjdXJyZW50bHkgYWNjZXNzZWQgYnkgYW5vdGhlciBjYWxsZXIAaGVhcEl0LT5zZWNvbmQuaGVhcFB0ci51c2VfY291bnQoKQBjbGVhbnVwSXQgIT0gaGVhcEl0AGdldFBvb2xlZEluc3RhbmNlAAAAAAAA6KcBAGwHAABtBwAAbgcAAIwDAABvBwAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjdjdmZsYW5uNEhlYXBJTlMxXzEyQnJhbmNoU3RydWN0SVBOUzFfMTFLTWVhbnNJbmRleElOUzFfMTBIYW1taW5nTFVURUUxMEtNZWFuc05vZGVFaUVFRUVOU185YWxsb2NhdG9ySVNBX0VFRUUAAAAAPGoCAFinAQDEZQIAAAAAAGyoAQBwBwAAcQcAAHIHAABVBwAAVgcAAHMHAAB0BwAAdQcAAHYHAAB3BwAAeAcAAHkHAAB6BwAATjdjdmZsYW5uMjdIaWVyYXJjaGljYWxDbHVzdGVyaW5nSW5kZXhJTlNfMTBIYW1taW5nTFVURUVFAAAAPGoCADCoAQCEnAEAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9oaWVyYXJjaGljYWxfY2x1c3RlcmluZ19pbmRleC5oAAAAAOCoAQAMpgEA0AAAAAEAAAA8pgEAa6YBAJKmAQBzdGF0aWMgY3Y6OlB0cjxIZWFwPFQ+PiBjdmZsYW5uOjpIZWFwPGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpIaWVyYXJjaGljYWxDbHVzdGVyaW5nSW5kZXg8Y3ZmbGFubjo6SGFtbWluZ0xVVD46Ok5vZGUgKiwgaW50Pj46OmdldFBvb2xlZEluc3RhbmNlKGNvbnN0IEhhc2hhYmxlVCAmLCBjb25zdCBpbnQsIGludCkgW1QgPSBjdmZsYW5uOjpCcmFuY2hTdHJ1Y3Q8Y3ZmbGFubjo6SGllcmFyY2hpY2FsQ2x1c3RlcmluZ0luZGV4PGN2Zmxhbm46OkhhbW1pbmdMVVQ+OjpOb2RlICosIGludD4sIEhhc2hhYmxlVCA9IGludF0A4KgBAAymAQDVAAAAAQAAALCmAQDypgEAkqYBAAAAAADgqgEAewcAAHwHAAB9BwAAjAMAAH4HAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlON2N2Zmxhbm40SGVhcElOUzFfMTJCcmFuY2hTdHJ1Y3RJUE5TMV8yN0hpZXJhcmNoaWNhbENsdXN0ZXJpbmdJbmRleElOUzFfMTBIYW1taW5nTFVURUU0Tm9kZUVpRUVFRU5TXzlhbGxvY2F0b3JJU0FfRUVFRQAAADxqAgBIqgEAxGUCAAAAAABQqwEAfwcAAIAHAACBBwAAggcAAFYHAACDBwAAhAcAAIUHAACGBwAAhwcAAIgHAACJBwAAigcAAE43Y3ZmbGFubjhMc2hJbmRleElOU18xMEhhbW1pbmdMVVRFRUUAAAA8agIAKKsBAIScAQBJbnZhbGlkIGtleV9zaXplICg9JWQpLiBWYWxpZCB2YWx1ZXMgZm9yIHlvdXIgc3lzdGVtIGFyZSAlZCA8PSBrZXlfc2l6ZSA8ICVkLgBpbml0aWFsaXplAC9zcmMvbW9kdWxlcy9mbGFubi9pbmNsdWRlL29wZW5jdjIvZmxhbm4vbHNoX3RhYmxlLmgAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9sc2hfaW5kZXguaAAAAAAAAKCsAQCLBwAAjAcAAI0HAACOBwAAjwcAAJAHAACRBwAAkgcAAJMHAACUBwAAlQcAAJYHAACXBwAATjdjdmZsYW5uNUluZGV4SU5TXzJMMklmRUVFRQBON2N2Zmxhbm43Tk5JbmRleElOU18yTDJJZkVFRUUAFGoCAHmsAQA8agIAXKwBAJisAQAAAAAARK0BAJgHAACZBwAAmgcAAJsHAACcBwAAnQcAAJ4HAACfBwAATjdjdmZsYW5uMThLTk5VbmlxdWVSZXN1bHRTZXRJZkVFAE43Y3ZmbGFubjE1VW5pcXVlUmVzdWx0U2V0SWZFRQBON2N2Zmxhbm45UmVzdWx0U2V0SWZFRQAAAAAUagIAFa0BADxqAgD2rAEAMK0BADxqAgDUrAEAOK0BAAAAAAA4rQEAmAcAAKAHAACaBwAA6gMAAJwHAADqAwAAngcAAJ8HAAAAAAAAyK0BAJgHAAChBwAAogcAAKMHAACkBwAApQcAAJ4HAACfBwAATjdjdmZsYW5uMjFSYWRpdXNVbmlxdWVSZXN1bHRTZXRJZkVFAAAAADxqAgCgrQEAOK0BAAAAAAA0rgEApgcAAKcHAACoBwAAqQcAAKoHAACrBwAArAcAAK0HAACuBwAArwcAALAHAACxBwAAsgcAAE43Y3ZmbGFubjExTGluZWFySW5kZXhJTlNfMkwySWZFRUVFADxqAgAQrgEAmKwBAAAAAADArgEAswcAALQHAAC1BwAAtgcAAKoHAAC3BwAAuAcAALkHAAC6BwAAuwcAALwHAAC9BwAAvgcAAGRpbQBsZWFmX21heF9zaXplAHJlb3JkZXIATjdjdmZsYW5uMTdLRFRyZWVTaW5nbGVJbmRleElOU18yTDJJZkVFRUUAPGoCAJauAQCYrAEAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9rZHRyZWVfc2luZ2xlX2luZGV4LmgAAAAAAABMrwEAvwcAAMAHAADBBwAAwgcAAMMHAABON2N2Zmxhbm4xOEtOTlNpbXBsZVJlc3VsdFNldElmRUUAAAA8agIAKK8BADCtAQAAAAAAuK8BAMQHAADFBwAAxgcAAKkHAACqBwAAxwcAAMgHAADJBwAAygcAAMsHAADMBwAAzQcAAM4HAABON2N2Zmxhbm4xMUtEVHJlZUluZGV4SU5TXzJMMklmRUVFRQA8agIAlK8BAJisAQAAAAAAoLABAM8HAADQBwAA0QcAANIHAADTBwAA1AcAANUHAADWBwAA1wcAAO8GAADYBwAATjdjdmZsYW5uN2FueWltcGwxNnNtYWxsX2FueV9wb2xpY3lJUFBOU18xMUtEVHJlZUluZGV4SU5TXzJMMklmRUVFNE5vZGVFRUUATjdjdmZsYW5uN2FueWltcGwyMXR5cGVkX2Jhc2VfYW55X3BvbGljeUlQUE5TXzExS0RUcmVlSW5kZXhJTlNfMkwySWZFRUU0Tm9kZUVFRQAAPGoCAEOwAQCklQEAPGoCAPivAQCUsAEAUFBON2N2Zmxhbm4xMUtEVHJlZUluZGV4SU5TXzJMMklmRUVFNE5vZGVFAFBON2N2Zmxhbm4xMUtEVHJlZUluZGV4SU5TXzJMMklmRUVFNE5vZGVFAE43Y3ZmbGFubjExS0RUcmVlSW5kZXhJTlNfMkwySWZFRUU0Tm9kZUUAAAAUagIAAbEBAPRqAgDXsAEAAAAAACyxAQD0agIArLABAAAAAAA0sQEASXQgZG9lc24ndCBtYWtlIGFueSBzZW5zZSB0byB1c2UgbW9yZSB0aGFuIG9uZSB0cmVlIGZvciBleGFjdCBzZWFyY2gAZ2V0RXhhY3ROZWlnaGJvcnMAL3NyYy9tb2R1bGVzL2ZsYW5uL2luY2x1ZGUvb3BlbmN2Mi9mbGFubi9rZHRyZWVfaW5kZXguaABnZXROZWlnaGJvcnMADLIBAAymAQDQAAAAAQAAADymAQBrpgEAkqYBAHN0YXRpYyBjdjo6UHRyPEhlYXA8VD4+IGN2Zmxhbm46OkhlYXA8Y3ZmbGFubjo6QnJhbmNoU3RydWN0PGN2Zmxhbm46OktEVHJlZUluZGV4PGN2Zmxhbm46OkwyPGZsb2F0Pj46Ok5vZGUgKiwgZmxvYXQ+Pjo6Z2V0UG9vbGVkSW5zdGFuY2UoY29uc3QgSGFzaGFibGVUICYsIGNvbnN0IGludCwgaW50KSBbVCA9IGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpLRFRyZWVJbmRleDxjdmZsYW5uOjpMMjxmbG9hdD4+OjpOb2RlICosIGZsb2F0PiwgSGFzaGFibGVUID0gaW50XQAAAAyyAQAMpgEA1QAAAAEAAACwpgEA8qYBAJKmAQAAAAAA2LMBANkHAADaBwAA2wcAAIwDAADcBwAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjdjdmZsYW5uNEhlYXBJTlMxXzEyQnJhbmNoU3RydWN0SVBOUzFfMTFLRFRyZWVJbmRleElOUzFfMkwySWZFRUU0Tm9kZUVmRUVFRU5TXzlhbGxvY2F0b3JJU0JfRUVFRQA8agIAWLMBAMRlAgAAAAAARLQBAN0HAADeBwAA3wcAAKkHAACqBwAA4AcAAOEHAADiBwAA4wcAAOQHAADlBwAA5gcAAOcHAABON2N2Zmxhbm4xMUtNZWFuc0luZGV4SU5TXzJMMklmRUVFRQA8agIAILQBAJisAQAAAAAAsLQBAF8DAADoBwAA6QcAAE43Y3ZmbGFubjExS01lYW5zSW5kZXhJTlNfMkwySWZFRUUyMktNZWFuc0Rpc3RhbmNlQ29tcHV0ZXJJTlNfNk1hdHJpeElkRUVFRQA8agIAZLQBAKiuAADYtAEADKYBANAAAAABAAAAPKYBAGumAQCSpgEAc3RhdGljIGN2OjpQdHI8SGVhcDxUPj4gY3ZmbGFubjo6SGVhcDxjdmZsYW5uOjpCcmFuY2hTdHJ1Y3Q8Y3ZmbGFubjo6S01lYW5zSW5kZXg8Y3ZmbGFubjo6TDI8ZmxvYXQ+Pjo6S01lYW5zTm9kZSAqLCBmbG9hdD4+OjpnZXRQb29sZWRJbnN0YW5jZShjb25zdCBIYXNoYWJsZVQgJiwgY29uc3QgaW50LCBpbnQpIFtUID0gY3ZmbGFubjo6QnJhbmNoU3RydWN0PGN2Zmxhbm46OktNZWFuc0luZGV4PGN2Zmxhbm46OkwyPGZsb2F0Pj46OktNZWFuc05vZGUgKiwgZmxvYXQ+LCBIYXNoYWJsZVQgPSBpbnRdAAAA2LQBAAymAQDVAAAAAQAAALCmAQDypgEAkqYBAAAAAAC4tgEA6gcAAOsHAADsBwAAjAMAAO0HAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlON2N2Zmxhbm40SGVhcElOUzFfMTJCcmFuY2hTdHJ1Y3RJUE5TMV8xMUtNZWFuc0luZGV4SU5TMV8yTDJJZkVFRTEwS01lYW5zTm9kZUVmRUVFRU5TXzlhbGxvY2F0b3JJU0JfRUVFRQAAPGoCADC2AQDEZQIAAAAAACi3AQDuBwAA7wcAAPAHAACpBwAAqgcAAPEHAADyBwAA8wcAAPQHAAD1BwAA9gcAAPcHAAD4BwAATjdjdmZsYW5uMTRDb21wb3NpdGVJbmRleElOU18yTDJJZkVFRUUAADxqAgAAtwEAmKwBAEJ1aWxkaW5nIGttZWFucyB0cmVlLi4uCgBCdWlsZGluZyBrZHRyZWUgdHJlZS4uLgoAAAAAAAAAzLcBAPkHAAD6BwAA+wcAAKkHAACqBwAA/AcAAP0HAAD+BwAA/wcAAAAIAAABCAAAAggAAAMIAABON2N2Zmxhbm4xNEF1dG90dW5lZEluZGV4SU5TXzJMMklmRUVFRQAAPGoCAKS3AQCYrAEALS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoAQXV0b3R1bmVkIHBhcmFtZXRlcnM6CgAlcwBTZWFyY2ggcGFyYW1ldGVyczoKAEVudGVyaW5nIGF1dG90dW5pbmcsIGRhdGFzZXQgc2l6ZTogJWQsIHNhbXBsZVNpemU6ICVkLCB0ZXN0U2FtcGxlU2l6ZTogJWQsIHRhcmdldCBwcmVjaXNpb246ICVnCgBDaG9vc2luZyBsaW5lYXIsIGRhdGFzZXQgdG9vIHNtYWxsCgBDb21wdXRpbmcgZ3JvdW5kIHRydXRoLi4uIAoAQXV0b3R1bmluZyBwYXJhbWV0ZXJzLi4uCgBLTUVBTlMsIFN0ZXAgMTogRXhwbG9yaW5nIHBhcmFtZXRlciBzcGFjZQoAS01lYW5zVHJlZSB1c2luZyBwYXJhbXM6IG1heF9pdGVyYXRpb25zPSVkLCBicmFuY2hpbmc9JWQKAEtNZWFuc1RyZWUgYnVpbGRUaW1lPSVnLCBzZWFyY2hUaW1lPSVnLCBidWlsZF93ZWlnaHQ9JWcKACAgTm9kZXMgIFByZWNpc2lvbiglKSAgIFRpbWUocykgICBUaW1lL3ZlYyhtcykgIE1lYW4gZGlzdAoALS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgBHb3QgYXMgY2xvc2UgYXMgSSBjYW4KAFN0YXJ0IGxpbmVhciBlc3RpbWF0aW9uCgBObyBuZWVkIGZvciBsaW5lYXIgZXN0aW1hdGlvbgoAbWF0Y2hlcy5jb2xzPSVkLCBubj0lZAoAR3JvdW5kIHRydXRoIGlzIG5vdCBjb21wdXRlZCBmb3IgYXMgbWFueSBuZWlnaGJvcnMgYXMgcmVxdWVzdGVkACU4ZCAlMTAuNGcgJTEwLjVnICUxMC41ZyAlMTAuNWcKAAAAAAAADLsBAL8HAAAECAAABQgAAAYIAAAHCAAATjdjdmZsYW5uMTJLTk5SZXN1bHRTZXRJZkVFADxqAgDwugEAMK0BAEtELVRSRUUsIFN0ZXAgMTogRXhwbG9yaW5nIHBhcmFtZXRlciBzcGFjZQoAS0RUcmVlIHVzaW5nIHBhcmFtczogdHJlZXM9JWQKAEtEVHJlZSBidWlsZFRpbWU9JWcsIHNlYXJjaFRpbWU9JWcKACA6IABiZXN0SW5kZXhfICE9IE5VTEwgJiYgIlJlcXVpcmVzIGEgdmFsaWQgaW5kZXgiAGVzdGltYXRlU2VhcmNoUGFyYW1zAC9zcmMvbW9kdWxlcy9mbGFubi9pbmNsdWRlL29wZW5jdjIvZmxhbm4vYXV0b3R1bmVkX2luZGV4LmgAQ29tcHV0aW5nIGdyb3VuZCB0cnV0aAoARXN0aW1hdGluZyBudW1iZXIgb2YgY2hlY2tzCgBLTWVhbnMgYWxnb3JpdGhtLCBlc3RpbWF0aW5nIGNsdXN0ZXIgYm9yZGVyIGZhY3RvcgoAT3B0aW11bSBjYl9pbmRleDogJWcKAFJlcXVpcmVkIG51bWJlciBvZiBjaGVja3M6ICVkIAoAAAAAAAAAABy9AQAICAAACQgAAAoIAACpBwAAqgcAAAsIAAAMCAAADQgAAA4IAAAPCAAAEAgAABEIAAASCAAATjdjdmZsYW5uMjdIaWVyYXJjaGljYWxDbHVzdGVyaW5nSW5kZXhJTlNfMkwySWZFRUVFADxqAgDovAEAmKwBAES9AQAMpgEA0AAAAAEAAAA8pgEAa6YBAJKmAQBzdGF0aWMgY3Y6OlB0cjxIZWFwPFQ+PiBjdmZsYW5uOjpIZWFwPGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpIaWVyYXJjaGljYWxDbHVzdGVyaW5nSW5kZXg8Y3ZmbGFubjo6TDI8ZmxvYXQ+Pjo6Tm9kZSAqLCBmbG9hdD4+OjpnZXRQb29sZWRJbnN0YW5jZShjb25zdCBIYXNoYWJsZVQgJiwgY29uc3QgaW50LCBpbnQpIFtUID0gY3ZmbGFubjo6QnJhbmNoU3RydWN0PGN2Zmxhbm46OkhpZXJhcmNoaWNhbENsdXN0ZXJpbmdJbmRleDxjdmZsYW5uOjpMMjxmbG9hdD4+OjpOb2RlICosIGZsb2F0PiwgSGFzaGFibGVUID0gaW50XQAAAES9AQAMpgEA1QAAAAEAAACwpgEA8qYBAJKmAQAAAAAAQL8BABMIAAAUCAAAFQgAAIwDAAAWCAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjdjdmZsYW5uNEhlYXBJTlMxXzEyQnJhbmNoU3RydWN0SVBOUzFfMjdIaWVyYXJjaGljYWxDbHVzdGVyaW5nSW5kZXhJTlMxXzJMMklmRUVFNE5vZGVFZkVFRUVOU185YWxsb2NhdG9ySVNCX0VFRUUAPGoCALC+AQDEZQIAAAAAAKi/AQAXCAAAGAgAABkIAAAaCAAAqgcAABsIAAAcCAAAHQgAAB4IAAAfCAAAIAgAACEIAAAiCAAATjdjdmZsYW5uOExzaEluZGV4SU5TXzJMMklmRUVFRQA8agIAiL8BAJisAQBMU0ggaXMgbm90IGltcGxlbWVudGVkIGZvciB0aGF0IHR5cGUATHNoVGFibGUAZ2V0S2V5AAAAAAAAAABswAEAIwgAACQIAAAlCAAAJggAACcIAAAoCAAAKQgAACoIAAArCAAALAgAAC0IAAAuCAAALwgAAE43Y3ZmbGFubjVJbmRleElOU18yTDFJZkVFRUUATjdjdmZsYW5uN05OSW5kZXhJTlNfMkwxSWZFRUVFABRqAgBFwAEAPGoCACjAAQBkwAEAAAAAANjAAQAwCAAAMQgAADIIAAAzCAAANAgAADUIAAA2CAAANwgAADgIAAA5CAAAOggAADsIAAA8CAAATjdjdmZsYW5uMTFMaW5lYXJJbmRleElOU18yTDFJZkVFRUUAPGoCALTAAQBkwAEAAAAAAEzBAQA9CAAAPggAAD8IAABACAAANAgAAEEIAABCCAAAQwgAAEQIAABFCAAARggAAEcIAABICAAATjdjdmZsYW5uMTdLRFRyZWVTaW5nbGVJbmRleElOU18yTDFJZkVFRUUAAAA8agIAIMEBAGTAAQAAAAAAuMEBAEkIAABKCAAASwgAADMIAAA0CAAATAgAAE0IAABOCAAATwgAAFAIAABRCAAAUggAAFMIAABON2N2Zmxhbm4xMUtEVHJlZUluZGV4SU5TXzJMMUlmRUVFRQA8agIAlMEBAGTAAQAAAAAAoMIBAFQIAABVCAAAVggAAFcIAABYCAAAWQgAAFoIAABbCAAAXAgAAO8GAABdCAAATjdjdmZsYW5uN2FueWltcGwxNnNtYWxsX2FueV9wb2xpY3lJUFBOU18xMUtEVHJlZUluZGV4SU5TXzJMMUlmRUVFNE5vZGVFRUUATjdjdmZsYW5uN2FueWltcGwyMXR5cGVkX2Jhc2VfYW55X3BvbGljeUlQUE5TXzExS0RUcmVlSW5kZXhJTlNfMkwxSWZFRUU0Tm9kZUVFRQAAPGoCAEPCAQCklQEAPGoCAPjBAQCUwgEAUFBON2N2Zmxhbm4xMUtEVHJlZUluZGV4SU5TXzJMMUlmRUVFNE5vZGVFAFBON2N2Zmxhbm4xMUtEVHJlZUluZGV4SU5TXzJMMUlmRUVFNE5vZGVFAE43Y3ZmbGFubjExS0RUcmVlSW5kZXhJTlNfMkwxSWZFRUU0Tm9kZUUAAAAUagIAAcMBAPRqAgDXwgEAAAAAACzDAQD0agIArMIBAAAAAAA0wwEAcMMBAAymAQDQAAAAAQAAADymAQBrpgEAkqYBAHN0YXRpYyBjdjo6UHRyPEhlYXA8VD4+IGN2Zmxhbm46OkhlYXA8Y3ZmbGFubjo6QnJhbmNoU3RydWN0PGN2Zmxhbm46OktEVHJlZUluZGV4PGN2Zmxhbm46OkwxPGZsb2F0Pj46Ok5vZGUgKiwgZmxvYXQ+Pjo6Z2V0UG9vbGVkSW5zdGFuY2UoY29uc3QgSGFzaGFibGVUICYsIGNvbnN0IGludCwgaW50KSBbVCA9IGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpLRFRyZWVJbmRleDxjdmZsYW5uOjpMMTxmbG9hdD4+OjpOb2RlICosIGZsb2F0PiwgSGFzaGFibGVUID0gaW50XQAAAHDDAQAMpgEA1QAAAAEAAACwpgEA8qYBAJKmAQAAAAAAPMUBAF4IAABfCAAAYAgAAIwDAABhCAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjdjdmZsYW5uNEhlYXBJTlMxXzEyQnJhbmNoU3RydWN0SVBOUzFfMTFLRFRyZWVJbmRleElOUzFfMkwxSWZFRUU0Tm9kZUVmRUVFRU5TXzlhbGxvY2F0b3JJU0JfRUVFRQA8agIAvMQBAMRlAgAAAAAAqMUBAGIIAABjCAAAZAgAADMIAAA0CAAAZQgAAGYIAABnCAAAaAgAAGkIAABqCAAAawgAAGwIAABON2N2Zmxhbm4xMUtNZWFuc0luZGV4SU5TXzJMMUlmRUVFRQA8agIAhMUBAGTAAQAAAAAAFMYBAF8DAABtCAAAbggAAE43Y3ZmbGFubjExS01lYW5zSW5kZXhJTlNfMkwxSWZFRUUyMktNZWFuc0Rpc3RhbmNlQ29tcHV0ZXJJTlNfNk1hdHJpeElkRUVFRQA8agIAyMUBAKiuAAA8xgEADKYBANAAAAABAAAAPKYBAGumAQCSpgEAc3RhdGljIGN2OjpQdHI8SGVhcDxUPj4gY3ZmbGFubjo6SGVhcDxjdmZsYW5uOjpCcmFuY2hTdHJ1Y3Q8Y3ZmbGFubjo6S01lYW5zSW5kZXg8Y3ZmbGFubjo6TDE8ZmxvYXQ+Pjo6S01lYW5zTm9kZSAqLCBmbG9hdD4+OjpnZXRQb29sZWRJbnN0YW5jZShjb25zdCBIYXNoYWJsZVQgJiwgY29uc3QgaW50LCBpbnQpIFtUID0gY3ZmbGFubjo6QnJhbmNoU3RydWN0PGN2Zmxhbm46OktNZWFuc0luZGV4PGN2Zmxhbm46OkwxPGZsb2F0Pj46OktNZWFuc05vZGUgKiwgZmxvYXQ+LCBIYXNoYWJsZVQgPSBpbnRdAAAAPMYBAAymAQDVAAAAAQAAALCmAQDypgEAkqYBAAAAAAAcyAEAbwgAAHAIAABxCAAAjAMAAHIIAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlON2N2Zmxhbm40SGVhcElOUzFfMTJCcmFuY2hTdHJ1Y3RJUE5TMV8xMUtNZWFuc0luZGV4SU5TMV8yTDFJZkVFRTEwS01lYW5zTm9kZUVmRUVFRU5TXzlhbGxvY2F0b3JJU0JfRUVFRQAAPGoCAJTHAQDEZQIAAAAAAIzIAQBzCAAAdAgAAHUIAAAzCAAANAgAAHYIAAB3CAAAeAgAAHkIAAB6CAAAewgAAHwIAAB9CAAATjdjdmZsYW5uMTRDb21wb3NpdGVJbmRleElOU18yTDFJZkVFRUUAADxqAgBkyAEAZMABAAAAAAD8yAEAfggAAH8IAACACAAAMwgAADQIAACBCAAAgggAAIMIAACECAAAhQgAAIYIAACHCAAAiAgAAE43Y3ZmbGFubjE0QXV0b3R1bmVkSW5kZXhJTlNfMkwxSWZFRUVFAAA8agIA1MgBAGTAAQBBkJIHCyIBAAAABQAAAAoAAAAPAAAAEAAAACAAAABAAAAAgAAAAAABAEHAkgcLyQgBAAAABAAAAAgAAAAQAAAAIAAAAAAAAADEyQEAiQgAAIoIAACLCAAAMwgAADQIAACMCAAAjQgAAI4IAACPCAAAkAgAAJEIAACSCAAAkwgAAE43Y3ZmbGFubjI3SGllcmFyY2hpY2FsQ2x1c3RlcmluZ0luZGV4SU5TXzJMMUlmRUVFRQA8agIAkMkBAGTAAQDsyQEADKYBANAAAAABAAAAPKYBAGumAQCSpgEAc3RhdGljIGN2OjpQdHI8SGVhcDxUPj4gY3ZmbGFubjo6SGVhcDxjdmZsYW5uOjpCcmFuY2hTdHJ1Y3Q8Y3ZmbGFubjo6SGllcmFyY2hpY2FsQ2x1c3RlcmluZ0luZGV4PGN2Zmxhbm46OkwxPGZsb2F0Pj46Ok5vZGUgKiwgZmxvYXQ+Pjo6Z2V0UG9vbGVkSW5zdGFuY2UoY29uc3QgSGFzaGFibGVUICYsIGNvbnN0IGludCwgaW50KSBbVCA9IGN2Zmxhbm46OkJyYW5jaFN0cnVjdDxjdmZsYW5uOjpIaWVyYXJjaGljYWxDbHVzdGVyaW5nSW5kZXg8Y3ZmbGFubjo6TDE8ZmxvYXQ+Pjo6Tm9kZSAqLCBmbG9hdD4sIEhhc2hhYmxlVCA9IGludF0AAADsyQEADKYBANUAAAABAAAAsKYBAPKmAQCSpgEAAAAAAOjLAQCUCAAAlQgAAJYIAACMAwAAlwgAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU43Y3ZmbGFubjRIZWFwSU5TMV8xMkJyYW5jaFN0cnVjdElQTlMxXzI3SGllcmFyY2hpY2FsQ2x1c3RlcmluZ0luZGV4SU5TMV8yTDFJZkVFRTROb2RlRWZFRUVFTlNfOWFsbG9jYXRvcklTQl9FRUVFADxqAgBYywEAxGUCAAAAAABQzAEAmAgAAJkIAACaCAAAmwgAADQIAACcCAAAnQgAAJ4IAACfCAAAoAgAAKEIAACiCAAAowgAAE43Y3ZmbGFubjhMc2hJbmRleElOU18yTDFJZkVFRUUAPGoCADDMAQBkwAEAKHNpemVfdClrbm4gPD0gaW5kZXhfLT5zaXplKCkAcnVuS25uU2VhcmNoXwBxdWVyeS50eXBlKCkgPT0gdHlwZSAmJiBpbmRpY2VzLnR5cGUoKSA9PSBDVl8zMlMgJiYgZGlzdHMudHlwZSgpID09IGR0eXBlAHF1ZXJ5LmlzQ29udGludW91cygpICYmIGluZGljZXMuaXNDb250aW51b3VzKCkgJiYgZGlzdHMuaXNDb250aW51b3VzKCkAcnVuUmFkaXVzU2VhcmNoXwAxLjYuMTAARGF0YVR5cGU8RWxlbWVudFR5cGU+Ojp0eXBlID09IGRhdGEudHlwZSgpICYmIGRhdGEuaXNDb250aW51b3VzKCkAbG9hZEluZGV4XwAAAAEAAAADAAAABABBlJsHCwECAEGgmwcL82QFAAAAAAAAAIjSAQCkCAAApQgAAKYIAABpbWFnZUNvdW50ID4gMABzZXQAL3NyYy9tb2R1bGVzL2ZlYXR1cmVzMmQvc3JjL21hdGNoZXJzLmNwcABkaW0gPiAwAGRlc2NyaXB0b3JzW2ldLmNvbHMgPT0gZGltICYmIGRlc2NyaXB0b3JzW2ldLnR5cGUoKSA9PSB0eXBlAChnbG9iYWxEZXNjSWR4Pj0wKSAmJiAoZ2xvYmFsRGVzY0lkeCA8IHNpemUoKSkAZ2V0TG9jYWxJZHgAAAAAAABM0gEApwgAAKgIAACpCAAAqggAAKsIAACsCAAAXwQAAGAEAACtCAAA6gMAAK4IAADqAwAA6gMAAOoDAABfZGVzY3JpcHRvcnMuaXNVTWF0KCkgfHwgX2Rlc2NyaXB0b3JzLmlzVU1hdFZlY3RvcigpIHx8IF9kZXNjcmlwdG9ycy5pc01hdCgpIHx8IF9kZXNjcmlwdG9ycy5pc01hdFZlY3RvcigpAGFkZABtYXNrcy5zaXplKCkgPT0gaW1hZ2VDb3VudABjaGVja01hc2tzAG1hc2tzW2ldLnR5cGUoKSA9PSBDVl84VUMxICYmIG1hc2tzW2ldLnJvd3MgPT0gcXVlcnlEZXNjcmlwdG9yc0NvdW50ICYmIG1hc2tzW2ldLmNvbHMgPT0gcm93cwBtYXhEaXN0YW5jZSA+IHN0ZDo6bnVtZXJpY19saW1pdHM8ZmxvYXQ+OjplcHNpbG9uKCkAcmFkaXVzTWF0Y2gAAAAAAACs0gEArwgAALAIAACxCAAAsggAALMIAACsCAAAXwQAAGAEAAC0CAAAtQgAALYIAAC3CAAAuAgAALkIAABfaW5kZXhQYXJhbXMARmxhbm5CYXNlZE1hdGNoZXIAX3NlYXJjaFBhcmFtcwB0cmFpbkRlc2NDb2xsZWN0aW9uLnNpemUoKSA9PSAwAHRyYWluAGluZGV4UGFyYW1zAGlwLnR5cGUoKSA9PSBGaWxlTm9kZTo6U0VRAHJlYWQAaXBbaV0udHlwZSgpID09IEZpbGVOb2RlOjpNQVAAbmFtZQB0eXBlAADs0AEAy80BAKkEAAADAAAAK9EBACzRAQA20QEAdmlydHVhbCB2b2lkIGN2OjpGbGFubkJhc2VkTWF0Y2hlcjo6cmVhZChjb25zdCBjdjo6RmlsZU5vZGUgJikAAChpbnQpdHlwZQAoaW50KUxBU1RfVkFMVUVfRkxBTk5fSU5ERVhfVFlQRQB2YWx1ZQBzZWFyY2hQYXJhbXMAc3AudHlwZSgpID09IEZpbGVOb2RlOjpTRVEAc3BbaV0udHlwZSgpID09IEZpbGVOb2RlOjpNQVAAAOzQAQDLzQEA0gQAAAMAAAAr0QEALNEBADbRAQBkZWVwIGNsb25lIGZ1bmN0aW9uYWxpdHkgaXMgbm90IGltcGxlbWVudGVkLCBiZWNhdXNlIEZsYW5uOjpJbmRleCBoYXMgbm90IGNvcHkgY29uc3RydWN0b3Igb3IgY2xvbmUgbWV0aG9kIABjbG9uZQBOMmN2MTdEZXNjcmlwdG9yTWF0Y2hlckUAADxqAgAy0gEAUCIBAE4yY3YxN0Rlc2NyaXB0b3JNYXRjaGVyMjBEZXNjcmlwdG9yQ29sbGVjdGlvbkUAABRqAgBY0gEATjJjdjE3Rmxhbm5CYXNlZE1hdGNoZXJFAAAAADxqAgCQ0gEATNIBAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUAAAAAAGTTAQC6CAAAuwgAALwIAACMAwAAvQgAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3YxN0ZsYW5uQmFzZWRNYXRjaGVyRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQA8agIAGNMBAMRlAgAAAAAA1NMBAL4IAAC/CAAAwAgAAIwDAADBCAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjVmbGFubjVJbmRleEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAAPGoCAIzTAQDEZQIAAAAAAEjUAQDCCAAAwwgAAMQIAACMAwAAxQgAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y1Zmxhbm4xMUluZGV4UGFyYW1zRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQA8agIA/NMBAMRlAgBObyBlbGVtZW50IG5hbWUgaGFzIGJlZW4gZ2l2ZW4Ab3BlcmF0b3I8PAAvc3JjL21vZHVsZXMvY29yZS9pbmNsdWRlL29wZW5jdjIvY29yZS9wZXJzaXN0ZW5jZS5ocHAAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQAAAAAAAAAAdNUBAMYIAADHCAAAyAgAAIwDAADJCAAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzI2VW5pZm9ybVJhbmRvbUdlbmVyYXRvckltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAA8agIAGdUBAMRlAgAAAAAAUNYBAMoIAADLCAAAWwQAAFwEAABdBAAAXgQAAF8EAABgBAAAzAgAAM0IAADOCAAAzwgAANAIAADRCAAA0ggAANMIAADUCAAA1QgAAE4yY3Y0dXNhYzI2VW5pZm9ybVJhbmRvbUdlbmVyYXRvckltcGxFAE4yY3Y0dXNhYzIyVW5pZm9ybVJhbmRvbUdlbmVyYXRvckUATjJjdjR1c2FjMTVSYW5kb21HZW5lcmF0b3JFAAAAPGoCABrWAQBQIgEAPGoCAPfVAQA41gEAPGoCANDVAQBE1gEAeNYBAL/WAQDfAAAABQAAAOfWAQAI1wEACtcBAHZpcnR1YWwgdm9pZCBjdjo6dXNhYzo6VW5pZm9ybVJhbmRvbUdlbmVyYXRvckltcGw6OnJlc2V0R2VuZXJhdG9yKGludCkAL3NyYy9tb2R1bGVzL2NhbGliM2Qvc3JjL3VzYWMvdXRpbHMuY3BwAG1heCByYW5nZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwADAAbWF4X3JhbmdlXwAAAAA01wEAv9YBAOQAAAADAAAAk9cBAMfXAQDT1wEAdmlydHVhbCB2b2lkIGN2Ojp1c2FjOjpVbmlmb3JtUmFuZG9tR2VuZXJhdG9ySW1wbDo6Z2VuZXJhdGVVbmlxdWVSYW5kb21TZXQoc3RkOjp2ZWN0b3I8aW50PiAmKQBSYW5kb21HZW5lcmF0b3IuIFN1YnNldCBzaXplIG11c3QgYmUgTEUgdGhhbiByYW5nZSEAc3Vic2V0X3NpemUAbWF4X3JhbmdlAAAAAPzXAQC/1gEACAEAAAMAAACT1wEAZdgBAArXAQB2aXJ0dWFsIHZvaWQgY3Y6OnVzYWM6OlVuaWZvcm1SYW5kb21HZW5lcmF0b3JJbXBsOjpnZW5lcmF0ZVVuaXF1ZVJhbmRvbVNldChzdGQ6OnZlY3RvcjxpbnQ+ICYsIGludCwgaW50KQBzdWJzZXRfc2l6ZV8AAACQ2AEAv9YBAPoAAAADAAAAk9cBAMfXAQAK1wEAdmlydHVhbCB2b2lkIGN2Ojp1c2FjOjpVbmlmb3JtUmFuZG9tR2VuZXJhdG9ySW1wbDo6Z2VuZXJhdGVVbmlxdWVSYW5kb21TZXQoc3RkOjp2ZWN0b3I8aW50PiAmLCBpbnQpABDZAQC/1gEAFAEAAAMAAACT1wEAx9cBAIrZAQB2aXJ0dWFsIGNvbnN0IHN0ZDo6dmVjdG9yPGludD4gJmN2Ojp1c2FjOjpVbmlmb3JtUmFuZG9tR2VuZXJhdG9ySW1wbDo6Z2VuZXJhdGVVbmlxdWVSYW5kb21TdWJzZXQoc3RkOjp2ZWN0b3I8aW50PiAmLCBpbnQpAHNpemUxAAAAAAAQ2gEA1ggAANcIAADYCAAAjAMAANkIAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMzM1JhZGl1c1NlYXJjaE5laWdoYm9yaG9vZEdyYXBoSW1wbEVOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAAPGoCAKzZAQDEZQIAAAAAABTbAQDaCAAA2wgAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAANwIAABjb250YWluZXJfLnR5cGUoKSA9PSBDVl8zMkYAUmFkaXVzU2VhcmNoTmVpZ2hib3Job29kR3JhcGhJbXBsAE4yY3Y0dXNhYzMzUmFkaXVzU2VhcmNoTmVpZ2hib3Job29kR3JhcGhJbXBsRQBOMmN2NHVzYWMyOVJhZGl1c1NlYXJjaE5laWdoYm9yaG9vZEdyYXBoRQBOMmN2NHVzYWMxN05laWdoYm9yaG9vZEdyYXBoRQA8agIA3toBAFAiAQA8agIAtNoBAPzaAQA8agIAhtoBAAjbAQAAAAAAkNsBAN0IAADeCAAA3wgAAIwDAADgCAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjJjdjVmbGFubjE3S0RUcmVlSW5kZXhQYXJhbXNFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCADzbAQDEZQIAAAAAAAjcAQDhCAAA4ggAAOMIAACMAwAA5AgAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y1Zmxhbm4xMlNlYXJjaFBhcmFtc0VOU185YWxsb2NhdG9ySVMzX0VFRUUAAAAAPGoCALjbAQDEZQIAAAAAAIzcAQDlCAAA5ggAAOcIAACMAwAA6AgAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4yY3Y0dXNhYzI2Rmxhbm5OZWlnaGJvcmhvb2RHcmFwaEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAPGoCADDcAQDEZQIAAAAAAFzdAQDpCAAA6ggAAFsEAABcBAAAXQQAAF4EAABfBAAAYAQAAOsIAADsCAAAa19uZWFyZXN0X25laWdoYm9ycyA8PSBwb2ludHNfc2l6ZQBGbGFubk5laWdoYm9yaG9vZEdyYXBoSW1wbABOMmN2NHVzYWMyNkZsYW5uTmVpZ2hib3Job29kR3JhcGhJbXBsRQBOMmN2NHVzYWMyMkZsYW5uTmVpZ2hib3Job29kR3JhcGhFADxqAgAt3QEA/NoBADxqAgAG3QEAUN0BAAAAAADg3QEA7QgAAO4IAADvCAAAjAMAAPAIAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMmN2NHVzYWMyNUdyaWROZWlnaGJvcmhvb2RHcmFwaEltcGxFTlNfOWFsbG9jYXRvcklTM19FRUVFAAAAADxqAgCE3QEAxGUCAAAAAABs3gEA8QgAAPIIAABbBAAAXAQAAF0EAABeBAAAXwQAAGAEAADzCAAATjJjdjR1c2FjMjVHcmlkTmVpZ2hib3Job29kR3JhcGhJbXBsRQBOMmN2NHVzYWMyMUdyaWROZWlnaGJvcmhvb2RHcmFwaEUAPGoCAD7eAQD82gEAPGoCABjeAQBg3gEAY24gPT0gMQBtZWFuU2hpZnQA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BwsAAAhjAAAIIwAACaYAAAgDAAAIgwAACEMAAAnmABAHBwAACFsAAAgbAAAJlgAUB0MAAAh7AAAIOwAACdYAEgcTAAAIawAACCsAAAm2AAAICwAACIsAAAhLAAAJ9gAQBwUAAAhXAAAIFwBACAAAEwczAAAIdwAACDcAAAnOABEHDwAACGcAAAgnAAAJrgAACAcAAAiHAAAIRwAACe4AEAcJAAAIXwAACB8AAAmeABQHYwAACH8AAAg/AAAJ3gASBxsAAAhvAAAILwAACb4AAAgPAAAIjwAACE8AAAn+AGAHAAAACFAAAAgQABQIcwASBx8AAAhwAAAIMAAACcEAEAcKAAAIYAAACCAAAAmhAAAIAAAACIAAAAhAAAAJ4QAQBwYAAAhYAAAIGAAACZEAEwc7AAAIeAAACDgAAAnRABEHEQAACGgAAAgoAAAJsQAACAgAAAiIAAAISAAACfEAEAcEAAAIVAAACBQAFQjjABMHKwAACHQAAAg0AAAJyQARBw0AAAhkAAAIJAAACakAAAgEAAAIhAAACEQAAAnpABAHCAAACFwAAAgcAAAJmQAUB1MAAAh8AAAIPAAACdkAEgcXAAAIbAAACCwAAAm5AAAIDAAACIwAAAhMAAAJ+QAQBwMAAAhSAAAIEgAVCKMAEwcjAAAIcgAACDIAAAnFABEHCwAACGIAAAgiAAAJpQAACAIAAAiCAAAIQgAACeUAEAcHAAAIWgAACBoAAAmVABQHQwAACHoAAAg6AAAJ1QASBxMAAAhqAAAIKgAACbUAAAgKAAAIigAACEoAAAn1ABAHBQAACFYAAAgWAEAIAAATBzMAAAh2AAAINgAACc0AEQcPAAAIZgAACCYAAAmtAAAIBgAACIYAAAhGAAAJ7QAQBwkAAAheAAAIHgAACZ0AFAdjAAAIfgAACD4AAAndABIHGwAACG4AAAguAAAJvQAACA4AAAiOAAAITgAACf0AYAcAAAAIUQAACBEAFQiDABIHHwAACHEAAAgxAAAJwwAQBwoAAAhhAAAIIQAACaMAAAgBAAAIgQAACEEAAAnjABAHBgAACFkAAAgZAAAJkwATBzsAAAh5AAAIOQAACdMAEQcRAAAIaQAACCkAAAmzAAAICQAACIkAAAhJAAAJ8wAQBwQAAAhVAAAIFQAQCAIBEwcrAAAIdQAACDUAAAnLABEHDQAA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AAgAGgAIAJoACABaAAgA2gAIADoACAC6AAgAegAIAPoACAAGAAgAhgAIAEYACADGAAgAJgAIAKYACABmAAgA5gAIABYACACWAAgAVgAIANYACAA2AAgAtgAIAHYACAD2AAgADgAIAI4ACABOAAgAzgAIAC4ACACuAAgAbgAIAO4ACAAeAAgAngAIAF4ACADeAAgAPgAIAL4ACAB+AAgA/gAIAAEACACBAAgAQQAIAMEACAAhAAgAoQAIAGEACADhAAgAEQAIAJEACABRAAgA0QAIADEACACxAAgAcQAIAPEACAAJAAgAiQAIAEkACADJAAgAKQAIAKkACABpAAgA6QAIABkACACZAAgAWQAIANkACAA5AAgAuQAIAHkACAD5AAgABQAIAIUACABFAAgAxQAIACUACAClAAgAZQAIAOUACAAVAAgAlQAIAFUACADVAAgANQAIALUACAB1AAgA9QAIAA0ACACNAAgATQAIAM0ACAAtAAgArQAIAG0ACADtAAgAHQAIAJ0ACABdAAgA3QAIAD0ACAC9AAgAfQAIAP0ACAATAAkAEwEJAJMACQCTAQkAUwAJAFMBCQDTAAkA0wEJADMACQAzAQkAswAJALMBCQBzAAkAcwEJAPMACQDzAQkACwAJAAsBCQCLAAkAiwEJAEsACQBLAQkAywAJAMsBCQArAAkAKwEJAKsACQCrAQkAawAJAGsBCQDrAAkA6wEJABsACQAbAQkAmwAJAJsBCQBbAAkAWwEJANsACQDbAQkAOwAJADsBCQC7AAkAuwEJAHsACQB7AQkA+wAJAPsBCQAHAAkABwEJAIcACQCHAQkARwAJAEcBCQDHAAkAxwEJACcACQAnAQkApwAJAKcBCQBnAAkAZwEJAOcACQDnAQkAFwAJABcBCQCXAAkAlwEJAFcACQBXAQkA1wAJANcBCQA3AAkANwEJALcACQC3AQkAdwAJAHcBCQD3AAkA9wEJAA8ACQAPAQkAjwAJAI8BCQBPAAkATwEJAM8ACQDPAQkALwAJAC8BCQCvAAkArwEJAG8ACQBvAQkA7wAJAO8BCQAfAAkAHwEJAJ8ACQCfAQkAXwAJAF8BCQDfAAkA3wEJAD8ACQA/AQkAvwAJAL8BCQB/AAkAfwEJAP8ACQD/AQkAAAAHAEAABwAgAAcAYAAHABAABwBQAAcAMAAHAHAABwAIAAcASAAHACgABwBoAAcAGAAHAFgABwA4AAcAeAAHAAQABwBEAAcAJAAHAGQABwAUAAcAVAAHADQABwB0AAcAAwAIAIMACABDAAgAwwAIACMACACjAAgAYwAIAOMACAAAAAUAEAAFAAgABQAYAAUABAAFABQABQAMAAUAHAAFAAIABQASAAUACgAFABoABQAGAAUAFgAFAA4ABQAeAAUAAQAFABEABQAJAAUAGQAFAAUABQAVAAUADQAFAB0ABQADAAUAEwAFAAsABQAbAAUABwAFABcABQBB0KgIC00BAAAAAQAAAAEAAAABAAAAAgAAAAIAAAACAAAAAgAAAAMAAAADAAAAAwAAAAMAAAAEAAAABAAAAAQAAAAEAAAABQAAAAUAAAAFAAAABQBBwKkIC2UBAAAAAQAAAAIAAAACAAAAAwAAAAMAAAAEAAAABAAAAAUAAAAFAAAABgAAAAYAAAAHAAAABwAAAAgAAAAIAAAACQAAAAkAAAAKAAAACgAAAAsAAAALAAAADAAAAAwAAAANAAAADQBB8KoICyMCAAAAAwAAAAcAAAAAAAAAEBESAAgHCQYKBQsEDAMNAg4BDwBBpKsIC2kBAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAoAAAAMAAAADgAAABAAAAAUAAAAGAAAABwAAAAgAAAAKAAAADAAAAA4AAAAQAAAAFAAAABgAAAAcAAAAIAAAACgAAAAwAAAAOAAQaSsCAuzDAEAAAACAAAAAwAAAAQAAAAGAAAACAAAAAwAAAAQAAAAGAAAACAAAAAwAAAAQAAAAGAAAACAAAAAwAAAAAABAACAAQAAAAIAAAADAAAABAAAAAYAAAAIAAAADAAAABAAAAAYAAAAIAAAADAAAABAAAAAYAAAbmVlZCBkaWN0aW9uYXJ5AHN0cmVhbSBlbmQAAGZpbGUgZXJyb3IAc3RyZWFtIGVycm9yAGRhdGEgZXJyb3IAaW5zdWZmaWNpZW50IG1lbW9yeQBidWZmZXIgZXJyb3IAaW5jb21wYXRpYmxlIHZlcnNpb24AAAAAmBYCAKgWAgCzFgIAtBYCAL8WAgDMFgIA1xYCAOsWAgD4FgIAsxYCAHZvaWQAYm9vbABjaGFyAHNpZ25lZCBjaGFyAHVuc2lnbmVkIGNoYXIAc2hvcnQAdW5zaWduZWQgc2hvcnQAaW50AHVuc2lnbmVkIGludABsb25nAHVuc2lnbmVkIGxvbmcAZmxvYXQAZG91YmxlAHN0ZDo6c3RyaW5nAHN0ZDo6YmFzaWNfc3RyaW5nPHVuc2lnbmVkIGNoYXI+AHN0ZDo6d3N0cmluZwBzdGQ6OnUxNnN0cmluZwBzdGQ6OnUzMnN0cmluZwBlbXNjcmlwdGVuOjp2YWwAZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8Y2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBzaG9ydD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxmbG9hdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZG91YmxlPgBOU3QzX18yMTJiYXNpY19zdHJpbmdJaE5TXzExY2hhcl90cmFpdHNJaEVFTlNfOWFsbG9jYXRvckloRUVFRQAAAACYagIAThoCAAAAAAABAAAATF4AAAAAAABOU3QzX18yMTJiYXNpY19zdHJpbmdJd05TXzExY2hhcl90cmFpdHNJd0VFTlNfOWFsbG9jYXRvckl3RUVFRQAAmGoCAKgaAgAAAAAAAQAAAExeAAAAAAAATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUAAACYagIAABsCAAAAAAABAAAATF4AAAAAAABOU3QzX18yMTJiYXNpY19zdHJpbmdJRGlOU18xMWNoYXJfdHJhaXRzSURpRUVOU185YWxsb2NhdG9ySURpRUVFRQAAAJhqAgBcGwIAAAAAAAEAAABMXgAAAAAAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWFFRQAAFGoCALgbAgBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lqRUUAABRqAgDgGwIATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbEVFAAAUagIACBwCAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SW1FRQAAFGoCADAcAgBB4LgIC1cZEkQ7Aj8sRxQ9MzAKGwZGS0U3D0kOjhcDQB08aSs2H0otHAEgJSkhCAwVFiIuEDg+CzQxGGR0dXYvQQl/OREjQzJCiYqLBQQmKCcNKh41jAcaSJMTlJUAQcC5CAuKDklsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5v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BhEAAAAREREAQbHhCAshCwAAAAAAAAAAEQAKChEREQAKAAACAAkLAAAACQALAAALAEHr4QgLAQwAQffhCAsVDAAAAAAMAAAAAAkMAAAAAAAMAAAMAEGl4ggLAQ4AQbHiCAsVDQAAAAQNAAAAAAkOAAAAAAAOAAAOAEHf4ggLARAAQeviCAseDwAAAAAPAAAAAAkQAAAAAAAQAAAQAAASAAAAEhISAEGi4wgLDhIAAAASEhIAAAAAAAAJAEHT4wgLAQsAQd/jCAsVCgAAAAAKAAAAAAkLAAAAAAALAAALAEGN5AgLAQwAQZnkCAvtAgwAAAAADAAAAAAJDAAAAAAADAAADAAAMDEyMzQ1Njc4OUFCQ0RFRi0wWCswWCAwWC0weCsweCAweABpbmYASU5GAG5hbgBOQU4ALgAAAADQqAIAaKkCAP////////////////////////////////////////////////////////////////8AAQIDBAUGBwgJ/////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AAECBAcDBgUAaW5maW5pdHkAbmFuAEGQ5wgLwwHRdJ4AV529KoBwUg///z4nCgAAAGQAAADoAwAAECcAAKCGAQBAQg8AgJaYAADh9QUYAAAANQAAAHEAAABr////zvv//5K///9jbG9ja19nZXR0aW1lKENMT0NLX01PTk9UT05JQykgZmFpbGVkAHN0ZDo6YmFkX2Z1bmN0aW9uX2NhbGwAAAAAAAAAAEg0AgAPBgAAAwkAAAQJAABOU3QzX18yMTdiYWRfZnVuY3Rpb25fY2FsbEUAPGoCACw0AgAUZwIAQeToCAvzDwIAAAADAAAABQAAAAcAAAALAAAADQAAABEAAAATAAAAFwAAAB0AAAAfAAAAJQAAACkAAAArAAAALwAAADUAAAA7AAAAPQAAAEMAAABHAAAASQAAAE8AAABTAAAAWQAAAGEAAABlAAAAZwAAAGsAAABtAAAAcQAAAH8AAACDAAAAiQAAAIsAAACVAAAAlwAAAJ0AAACjAAAApwAAAK0AAACzAAAAtQAAAL8AAADBAAAAxQAAAMcAAADTAAAAAQAAAAsAAAANAAAAEQAAABMAAAAXAAAAHQAAAB8AAAAlAAAAKQAAACsAAAAvAAAANQAAADsAAAA9AAAAQwAAAEcAAABJAAAATwAAAFMAAABZAAAAYQAAAGUAAABnAAAAawAAAG0AAABxAAAAeQAAAH8AAACDAAAAiQAAAIsAAACPAAAAlQAAAJcAAACdAAAAowAAAKcAAACpAAAArQAAALMAAAC1AAAAuwAAAL8AAADBAAAAxQAAAMcAAADRAAAAX19uZXh0X3ByaW1lIG92ZXJmbG93AAAAAAAAAJA4AgAFCQAABgkAADACAAAxAgAABwkAAAgJAAA0AgAANQIAADYCAAAJCQAAOAIAAAoJAAA6AgAACwkAAAAAAADMOAIADAkAAA0JAAAOCQAADwkAABAJAAARCQAAEgkAABMJAAAUCQAAFQkAABYJAAAXCQAAGAkAABkJAAAIAAAAAAAAAAQ5AgAmAgAAJwIAAPj////4////BDkCACgCAAApAgAAhDYCAJg2AgAIAAAAAAAAAEw5AgAaCQAAGwkAAPj////4////TDkCABwJAAAdCQAAtDYCAMg2AgAEAAAAAAAAAJQ5AgAqAgAAKwIAAPz////8////lDkCACwCAAAtAgAA5DYCAPg2AgAEAAAAAAAAANw5AgAeCQAAHwkAAPz////8////3DkCACAJAAAhCQAAFDcCACg3AgAMAAAAAAAAAHQ6AgAgAgAAIQIAAAQAAAD4////dDoCACICAAAjAgAA9P////T///90OgIAJAIAACUCAABENwIAADoCABQ6AgAoOgIAPDoCAGw3AgBYNwIAAAAAAMQ3AgAiCQAAIwkAAGlvc19iYXNlOjpjbGVhcgBOU3QzX18yOGlvc19iYXNlRQAAABRqAgCwNwIAAAAAAAg4AgAkCQAAJQkAAE5TdDNfXzI5YmFzaWNfaW9zSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAAAAPGoCANw3AgDENwIAAAAAAFA4AgAmCQAAJwkAAE5TdDNfXzI5YmFzaWNfaW9zSXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFAAAAPGoCACQ4AgDENwIATlN0M19fMjE1YmFzaWNfc3RyZWFtYnVmSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAAAAABRqAgBcOAIATlN0M19fMjE1YmFzaWNfc3RyZWFtYnVmSXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFAAAAABRqAgCYOAIATlN0M19fMjEzYmFzaWNfaXN0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAmGoCANQ4AgAAAAAAAQAAAAg4AgAD9P//TlN0M19fMjEzYmFzaWNfaXN0cmVhbUl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRQAAmGoCABw5AgAAAAAAAQAAAFA4AgAD9P//TlN0M19fMjEzYmFzaWNfb3N0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAmGoCAGQ5AgAAAAAAAQAAAAg4AgAD9P//TlN0M19fMjEzYmFzaWNfb3N0cmVhbUl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRQAAmGoCAKw5AgAAAAAAAQAAAFA4AgAD9P//DAAAAAAAAAAEOQIAJgIAACcCAAD0////9P///wQ5AgAoAgAAKQIAAAQAAAAAAAAAlDkCACoCAAArAgAA/P////z///+UOQIALAIAAC0CAABOU3QzX18yMTRiYXNpY19pb3N0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQCYagIARDoCAAMAAAACAAAABDkCAAIAAACUOQIAAggAAPipAgAAAAAA8DoCAAUJAAApCQAAKgkAADECAAAHCQAACAkAADQCAAA1AgAANgIAACsJAAAsCQAALQkAADoCAAALCQAATlN0M19fMjEwX19zdGRpbmJ1ZkljRUUAPGoCANg6AgCQOAIAdW5zdXBwb3J0ZWQgbG9jYWxlIGZvciBzdGFuZGFyZCBpbnB1dAAAAAAAAAB8OwIADAkAAC4JAAAvCQAADwkAABAJAAARCQAAEgkAABMJAAAUCQAAMAkAADEJAAAyCQAAGAkAABkJAABOU3QzX18yMTBfX3N0ZGluYnVmSXdFRQA8agIAZDsCAMw4AgAAAAAA5DsCAAUJAAAzCQAANAkAADECAAAHCQAACAkAADUJAAA1AgAANgIAAAkJAAA4AgAACgkAADYJAAA3CQAATlN0M19fMjExX19zdGRvdXRidWZJY0VFAAAAADxqAgDIOwIAkDgCAAAAAABMPAIADAkAADgJAAA5CQAADwkAABAJAAARCQAAOgkAABMJAAAUCQAAFQkAABYJAAAXCQAAOwkAADwJAABOU3QzX18yMTFfX3N0ZG91dGJ1Zkl3RUUAAAAAPGoCADA8AgDMOAIAQeD4CAvzAQIAAMADAADABAAAwAUAAMAGAADABwAAwAgAAMAJAADACgAAwAsAAMAMAADADQAAwA4AAMAPAADAEAAAwBEAAMASAADAEwAAwBQAAMAVAADAFgAAwBcAAMAYAADAGQAAwBoAAMAbAADAHAAAwB0AAMAeAADAHwAAwAAAALMBAADDAgAAwwMAAMMEAADDBQAAwwYAAMMHAADDCAAAwwkAAMMKAADDCwAAwwwAAMMNAADTDgAAww8AAMMAAAy7AQAMwwIADMMDAAzDBAAM0wAAAADeEgSVAAAAAP///////////////zA9AgAUAAAAQy5VVEYtOABB+PoICwNEPQIAQZD7CAsGTENfQUxMAEGg+wgLX0xDX0NUWVBFAAAAAExDX05VTUVSSUMAAExDX1RJTUUAAAAAAExDX0NPTExBVEUAAExDX01PTkVUQVJZAExDX01FU1NBR0VTAExBTkcAQy5VVEYtOABQT1NJWAAAAD8CAEGA/ggL/wECAAIAAgACAAIAAgACAAIAAgADIAIgAiACIAIgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAWAEwATABMAEwATABMAEwATABMAEwATABMAEwATABMAI2AjYCNgI2AjYCNgI2AjYCNgI2ATABMAEwATABMAEwATACNUI1QjVCNUI1QjVCMUIxQjFCMUIxQjFCMUIxQjFCMUIxQjFCMUIxQjFCMUIxQjFCMUIxQTABMAEwATABMAEwAjWCNYI1gjWCNYI1gjGCMYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGCMYIxgjGCMYEwATABMAEwAIAQYCCCQsDEEMCAEGUhgkL+QMBAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMgAAADMAAAA0AAAANQAAADYAAAA3AAAAOAAAADkAAAA6AAAAOwAAADwAAAA9AAAAPgAAAD8AAABAAAAAQQAAAEIAAABDAAAARAAAAEUAAABGAAAARwAAAEgAAABJAAAASgAAAEsAAABMAAAATQAAAE4AAABPAAAAUAAAAFEAAABSAAAAUwAAAFQAAABVAAAAVgAAAFcAAABYAAAAWQAAAFoAAABbAAAAXAAAAF0AAABeAAAAXwAAAGAAAABBAAAAQgAAAEMAAABEAAAARQAAAEYAAABHAAAASAAAAEkAAABKAAAASwAAAEwAAABNAAAATgAAAE8AAABQAAAAUQAAAFIAAABTAAAAVAAAAFUAAABWAAAAVwAAAFgAAABZAAAAWgAAAHsAAAB8AAAAfQAAAH4AAAB/AEGQjgkLAyBJAgBBpJIJC/kDAQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAAAVAAAAFgAAABcAAAAYAAAAGQAAABoAAAAbAAAAHAAAAB0AAAAeAAAAHwAAACAAAAAhAAAAIgAAACMAAAAkAAAAJQAAACYAAAAnAAAAKAAAACkAAAAqAAAAKwAAACwAAAAtAAAALgAAAC8AAAAwAAAAMQAAADIAAAAzAAAANAAAADUAAAA2AAAANwAAADgAAAA5AAAAOgAAADsAAAA8AAAAPQAAAD4AAAA/AAAAQAAAAGEAAABiAAAAYwAAAGQAAABlAAAAZgAAAGcAAABoAAAAaQAAAGoAAABrAAAAbAAAAG0AAABuAAAAbwAAAHAAAABxAAAAcgAAAHMAAAB0AAAAdQAAAHYAAAB3AAAAeAAAAHkAAAB6AAAAWwAAAFwAAABdAAAAXgAAAF8AAABgAAAAYQAAAGIAAABjAAAAZAAAAGUAAABmAAAAZwAAAGgAAABpAAAAagAAAGsAAABsAAAAbQAAAG4AAABvAAAAcAAAAHEAAAByAAAAcwAAAHQAAAB1AAAAdgAAAHcAAAB4AAAAeQAAAHoAAAB7AAAAfAAAAH0AAAB+AAAAfwBBoJoJC9EBMDEyMzQ1Njc4OWFiY2RlZkFCQ0RFRnhYKy1wUGlJbk4AJXAAbABsbAAATAAlAAAAAAAlcAAAAAAlSTolTTolUyAlcCVIOiVNAAAAAAAAAAAlAAAAbQAAAC8AAAAlAAAAZAAAAC8AAAAlAAAAeQAAACUAAABZAAAALQAAACUAAABtAAAALQAAACUAAABkAAAAJQAAAEkAAAA6AAAAJQAAAE0AAAA6AAAAJQAAAFMAAAAgAAAAJQAAAHAAAAAAAAAAJQAAAEgAAAA6AAAAJQAAAE0AQYCcCQu9BCUAAABIAAAAOgAAACUAAABNAAAAOgAAACUAAABTAAAAJUxmADAxMjM0NTY3ODkAJS4wTGYAQwAAAAAAAKhTAgBQCQAAUQkAAFIJAAAAAAAACFQCAFMJAABUCQAAUgkAAFUJAABWCQAAVwkAAFgJAABZCQAAWgkAAFsJAABcCQAAAAAAAHBTAgBdCQAAXgkAAFIJAABfCQAAYAkAAGEJAABiCQAAYwkAAGQJAABlCQAAAAAAAEBUAgBmCQAAZwkAAFIJAABoCQAAaQkAAGoJAABrCQAAbAkAAAAAAABkVAIAbQkAAG4JAABSCQAAbwkAAHAJAABxCQAAcgkAAHMJAAB0cnVlAAAAAHQAAAByAAAAdQAAAGUAAAAAAAAAZmFsc2UAAABmAAAAYQAAAGwAAABzAAAAZQAAAAAAAAAlbS8lZC8leQAAAAAlAAAAbQAAAC8AAAAlAAAAZAAAAC8AAAAlAAAAeQAAAAAAAAAlSDolTTolUwAAAAAlAAAASAAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAAAAAAAAlYSAlYiAlZCAlSDolTTolUyAlWQAAAAAlAAAAYQAAACAAAAAlAAAAYgAAACAAAAAlAAAAZAAAACAAAAAlAAAASAAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAACAAAAAlAAAAWQAAAAAAAAAlSTolTTolUyAlcAAlAAAASQAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAACAAAAAlAAAAcABByKAJC9cKcFACAHQJAAB1CQAAUgkAAE5TdDNfXzI2bG9jYWxlNWZhY2V0RQAAADxqAgBYUAIAnGUCAAAAAADwUAIAdAkAAHYJAABSCQAAdwkAAHgJAAB5CQAAegkAAHsJAAB8CQAAfQkAAH4JAAB/CQAAgAkAAIEJAACCCQAATlN0M19fMjVjdHlwZUl3RUUATlN0M19fMjEwY3R5cGVfYmFzZUUAABRqAgDSUAIAmGoCAMBQAgAAAAAAAgAAAHBQAgACAAAA6FACAAIAAAAAAAAAhFECAHQJAACDCQAAUgkAAIQJAACFCQAAhgkAAIcJAACICQAAiQkAAIoJAABOU3QzX18yN2NvZGVjdnRJY2MxMV9fbWJzdGF0ZV90RUUATlN0M19fMjEyY29kZWN2dF9iYXNlRQAAAAAUagIAYlECAJhqAgBAUQIAAAAAAAIAAABwUAIAAgAAAHxRAgACAAAAAAAAAPhRAgB0CQAAiwkAAFIJAACMCQAAjQkAAI4JAACPCQAAkAkAAJEJAACSCQAATlN0M19fMjdjb2RlY3Z0SURzYzExX19tYnN0YXRlX3RFRQAAmGoCANRRAgAAAAAAAgAAAHBQAgACAAAAfFECAAIAAAAAAAAAbFICAHQJAACTCQAAUgkAAJQJAACVCQAAlgkAAJcJAACYCQAAmQkAAJoJAABOU3QzX18yN2NvZGVjdnRJRGljMTFfX21ic3RhdGVfdEVFAACYagIASFICAAAAAAACAAAAcFACAAIAAAB8UQIAAgAAAAAAAADgUgIAdAkAAJsJAABSCQAAlAkAAJUJAACWCQAAlwkAAJgJAACZCQAAmgkAAE5TdDNfXzIxNl9fbmFycm93X3RvX3V0ZjhJTG0zMkVFRQAAADxqAgC8UgIAbFICAAAAAABAUwIAdAkAAJwJAABSCQAAlAkAAJUJAACWCQAAlwkAAJgJAACZCQAAmgkAAE5TdDNfXzIxN19fd2lkZW5fZnJvbV91dGY4SUxtMzJFRUUAADxqAgAcUwIAbFICAE5TdDNfXzI3Y29kZWN2dEl3YzExX19tYnN0YXRlX3RFRQAAAJhqAgBMUwIAAAAAAAIAAABwUAIAAgAAAHxRAgACAAAATlN0M19fMjZsb2NhbGU1X19pbXBFAAAAPGoCAJBTAgBwUAIATlN0M19fMjdjb2xsYXRlSWNFRQA8agIAtFMCAHBQAgBOU3QzX18yN2NvbGxhdGVJd0VFADxqAgDUUwIAcFACAE5TdDNfXzI1Y3R5cGVJY0VFAAAAmGoCAPRTAgAAAAAAAgAAAHBQAgACAAAA6FACAAIAAABOU3QzX18yOG51bXB1bmN0SWNFRQAAAAA8agIAKFQCAHBQAgBOU3QzX18yOG51bXB1bmN0SXdFRQAAAAA8agIATFQCAHBQAgAAAAAAyFMCAJ0JAACeCQAAUgkAAJ8JAACgCQAAoQkAAAAAAADoUwIAogkAAKMJAABSCQAApAkAAKUJAACmCQAAAAAAAIRVAgB0CQAApwkAAFIJAACoCQAAqQkAAKoJAACrCQAArAkAAK0JAACuCQAArwkAALAJAACxCQAAsgkAAE5TdDNfXzI3bnVtX2dldEljTlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFRUUATlN0M19fMjlfX251bV9nZXRJY0VFAE5TdDNfXzIxNF9fbnVtX2dldF9iYXNlRQAAFGoCAEpVAgCYagIANFUCAAAAAAABAAAAZFUCAAAAAACYagIA8FQCAAAAAAACAAAAcFACAAIAAABsVQIAQairCQvLAVhWAgB0CQAAswkAAFIJAAC0CQAAtQkAALYJAAC3CQAAuAkAALkJAAC6CQAAuwkAALwJAAC9CQAAvgkAAE5TdDNfXzI3bnVtX2dldEl3TlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjlfX251bV9nZXRJd0VFAAAAmGoCAChWAgAAAAAAAQAAAGRVAgAAAAAAmGoCAORVAgAAAAAAAgAAAHBQAgACAAAAQFYCAEH8rAkL3wFAVwIAdAkAAL8JAABSCQAAwAkAAMEJAADCCQAAwwkAAMQJAADFCQAAxgkAAMcJAABOU3QzX18yN251bV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzI5X19udW1fcHV0SWNFRQBOU3QzX18yMTRfX251bV9wdXRfYmFzZUUAABRqAgAGVwIAmGoCAPBWAgAAAAAAAQAAACBXAgAAAAAAmGoCAKxWAgAAAAAAAgAAAHBQAgACAAAAKFcCAEHkrgkLvwEIWAIAdAkAAMgJAABSCQAAyQkAAMoJAADLCQAAzAkAAM0JAADOCQAAzwkAANAJAABOU3QzX18yN251bV9wdXRJd05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRUVFAE5TdDNfXzI5X19udW1fcHV0SXdFRQAAAJhqAgDYVwIAAAAAAAEAAAAgVwIAAAAAAJhqAgCUVwIAAAAAAAIAAABwUAIAAgAAAPBXAgBBrLAJC5sLCFkCANEJAADSCQAAUgkAANMJAADUCQAA1QkAANYJAADXCQAA2AkAANkJAAD4////CFkCANoJAADbCQAA3AkAAN0JAADeCQAA3wkAAOAJAABOU3QzX18yOHRpbWVfZ2V0SWNOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yOXRpbWVfYmFzZUUAFGoCAMFYAgBOU3QzX18yMjBfX3RpbWVfZ2V0X2Nfc3RvcmFnZUljRUUAAAAUagIA3FgCAJhqAgB8WAIAAAAAAAMAAABwUAIAAgAAANRYAgACAAAAAFkCAAAIAAAAAAAA9FkCAOEJAADiCQAAUgkAAOMJAADkCQAA5QkAAOYJAADnCQAA6AkAAOkJAAD4////9FkCAOoJAADrCQAA7AkAAO0JAADuCQAA7wkAAPAJAABOU3QzX18yOHRpbWVfZ2V0SXdOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yMjBfX3RpbWVfZ2V0X2Nfc3RvcmFnZUl3RUUAABRqAgDJWQIAmGoCAIRZAgAAAAAAAwAAAHBQAgACAAAA1FgCAAIAAADsWQIAAAgAAAAAAACYWgIA8QkAAPIJAABSCQAA8wkAAE5TdDNfXzI4dGltZV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzIxMF9fdGltZV9wdXRFAAAAFGoCAHlaAgCYagIANFoCAAAAAAACAAAAcFACAAIAAACQWgIAAAgAAAAAAAAYWwIA9AkAAPUJAABSCQAA9gkAAE5TdDNfXzI4dGltZV9wdXRJd05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRUVF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TlN0M19fMjE5X19zaGFyZWRfd2Vha19jb3VudEUAAACYagIApGUCAAAAAAABAAAAnGUCAAAAAAByZWN1cnNpdmVfbXV0ZXggY29uc3RydWN0b3IgZmFpbGVkAHJlY3Vyc2l2ZV9tdXRleCBsb2NrIGZhaWxlZABiYXNpY19zdHJpbmcAc3RvdWxsADogbm8gY29udmVyc2lvbgAlcwoAOiBvdXQgb2YgcmFuZ2UAdmVjdG9yAF9fY3hhX2d1YXJkX2FjcXVpcmUgZGV0ZWN0ZWQgcmVjdXJzaXZlIGluaXRpYWxpemF0aW9uAHRlcm1pbmF0aW5nAHRlcm1pbmF0ZV9oYW5kbGVyIHVuZXhwZWN0ZWRseSByZXR1cm5lZABQdXJlIHZpcnR1YWwgZnVuY3Rpb24gY2FsbGVkIQBzdGQ6OmV4Y2VwdGlvbgAAAAAAFGcCADUKAAA2CgAANwoAAFN0OWV4Y2VwdGlvbgAAAAAUagIABGcCAAAAAABAZwIAnAEAADgKAAA5CgAAU3QxMWxvZ2ljX2Vycm9yADxqAgAwZwIAFGcCAAAAAAB0ZwIAnAEAADoKAAA5CgAAU3QxMmxlbmd0aF9lcnJvcgAAAAA8agIAYGcCAEBnAgBTdDl0eXBlX2luZm8AAAAAFGoCAIBnAgBOMTBfX2N4eGFiaXYxMTZfX3NoaW1fdHlwZV9pbmZvRQAAAAA8agIAmGcCAJBnAgBOMTBfX2N4eGFiaXYxMTdfX2NsYXNzX3R5cGVfaW5mb0UAAAA8agIAyGcCALxnAgBOMTBfX2N4eGFiaXYxMTdfX3BiYXNlX3R5cGVfaW5mb0UAAAA8agIA+GcCALxnAgBOMTBfX2N4eGFiaXYxMTlfX3BvaW50ZXJfdHlwZV9pbmZvRQA8agIAKGgCABxoAgBOMTBfX2N4eGFiaXYxMjBfX2Z1bmN0aW9uX3R5cGVfaW5mb0UAAAAAPGoCAFhoAgC8ZwIATjEwX19jeHhhYml2MTI5X19wb2ludGVyX3RvX21lbWJlcl90eXBlX2luZm9FAAAAPGoCAIxoAgAcaAIAAAAAAAxpAgA7CgAAPAoAAD0KAAA+CgAAPwoAAE4xMF9fY3h4YWJpdjEyM19fZnVuZGFtZW50YWxfdHlwZV9pbmZvRQA8agIA5GgCALxnAgB2AAAA0GgCABhpAgBEbgAA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AABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxME5lc3RlZE5hbWVFAAA8agIARH4CANh8AgA6OgBhdXRvAAAAAAD0fgIAYwoAAGQKAABlCgAAZgoAAGcKAABoCgAAVwoAAFgKAABpCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMjRGb3J3YXJkVGVtcGxhdGVSZWZlcmVuY2VFAAAAADxqAgC0fgIA2HwCAGRlY2x0eXBlKAApAGdzACYmACYAJj0APQBhbGlnbm9mICgAY29uc3RfY2FzdAAsAH4AZHluYW1pY19jYXN0ACoALioALgAvAC89AF4AXj0APT0APj0APgA8PQA8PAA8PD0APAAtAC09ACo9AC0tACE9ACEAbm9leGNlcHQgKAB8fAB8AHw9AC0+KgArACs9ACsrAC0+AHJlaW50ZXJwcmV0X2Nhc3QAJQAlPQA+PgA+Pj0Ac3RhdGljX2Nhc3QAc2l6ZW9mICgAc2l6ZW9mLi4uICgAdHlwZWlkICgAdGhyb3cAdThfX3V1aWRvZnQAdThfX3V1aWRvZnoAd2NoYXJfdABiMEUAYjFFAGNoYXIAc2lnbmVkIGNoYXIAdW5zaWduZWQgY2hhcgBzaG9ydAB1bnNpZ25lZCBzaG9ydAAAdQBsAHVsAGxsAHVsbABfX2ludDEyOAB1bnNpZ25lZCBfX2ludDEyOABEbkUAbnVsbHB0cgAAAAAAAAAA2IACAFEKAABSCgAAUwoAAFQKAABqCgAAVgoAAFcKAABYCgAAawoAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTE0SW50ZWdlckxpdGVyYWxFAAA8agIApIACANh8AgAoAAAAAAAAAECBAgBRCgAAUgoAAFMKAABUCgAAbAoAAFYKAABXCgAAWAoAAG0KAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGU4Qm9vbEV4cHJFADxqAgAUgQIA2HwCAHRydWUAZmFsc2UAAAAAAAC8gQIAUQoAAFIKAABTCgAAVAoAAG4KAABWCgAAVwoAAFgKAABvCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMTZGbG9hdExpdGVyYWxJbXBsSWZFRQA8agIAhIECANh8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T0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMTNRdWFsaWZpZWROYW1lRQAAADxqAgBMjAIA2HwCAGRuAG9uAAAAAAAAAOyMAgBRCgAAUgoAAFMKAABUCgAAoQoAAFYKAABXCgAAWAoAAKIKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGU4RHRvck5hbWVFADxqAgDAjAIA2HwCAG9wZXJhdG9yJiYAb3BlcmF0b3ImAG9wZXJhdG9yJj0Ab3BlcmF0b3I9AG9wZXJhdG9yKCkAb3BlcmF0b3IsAG9wZXJhdG9yfgBvcGVyYXRvciBkZWxldGVbXQBvcGVyYXRvcioAb3BlcmF0b3IgZGVsZXRlAG9wZXJhdG9yLwBvcGVyYXRvci89AG9wZXJhdG9yXgBvcGVyYXRvcl49AG9wZXJhdG9yPT0Ab3BlcmF0b3I+PQBvcGVyYXRvcj4Ab3BlcmF0b3JbXQBvcGVyYXRvcjw9AG9wZXJhdG9yPDwAb3BlcmF0b3I8PD0Ab3BlcmF0b3I8AG9wZXJhdG9yLQBvcGVyYXRvci09AG9wZXJhdG9yKj0Ab3BlcmF0b3ItLQBvcGVyYXRvciBuZXdbXQBvcGVyYXRvciE9AG9wZXJhdG9yIQBvcGVyYXRvciBuZXcAb3BlcmF0b3J8fABvcGVyYXRvcnwAb3BlcmF0b3J8PQBvcGVyYXRvci0+KgBvcGVyYXRvcisAb3BlcmF0b3IrPQBvcGVyYXRvcisrAG9wZXJhdG9yLT4Ab3BlcmF0b3I/AG9wZXJhdG9yJQBvcGVyYXRvciU9AG9wZXJhdG9yPj4Ab3BlcmF0b3I+Pj0Ab3BlcmF0b3I8PT4AAAAAAABMjwIAUQoAAFIKAABTCgAAVAoAAKMKAABWCgAAVwoAAFgKAACkCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMjJDb252ZXJzaW9uT3BlcmF0b3JUeXBlRQAAPGoCABCPAgDYfAIAb3BlcmF0b3IgAAAAAAAAAMSPAgBRCgAAUgoAAFMKAABUCgAApQoAAFYKAABXCgAAWAoAAKYKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxNUxpdGVyYWxPcGVyYXRvckUAPGoCAJCPAgDYfAIAb3BlcmF0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YWxsb2NhdG9yPGNoYXI+ID4Ac3RkOjpiYXNpY19pc3RyZWFtPGNoYXIsIHN0ZDo6Y2hhcl90cmFpdHM8Y2hhcj4gPgBzdGQ6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpjaGFyX3RyYWl0czxjaGFyPiA+AHN0ZDo6YmFzaWNfaW9zdHJlYW08Y2hhciwgc3RkOjpjaGFyX3RyYWl0czxjaGFyPiA+AGFsbG9jYXRvcgBiYXNpY19zdHJpbmcAYmFzaWNfaXN0cmVhbQBiYXNpY19vc3RyZWFtAGJhc2ljX2lvc3RyZWFtAAAAAAAAAAAsmAIAUQoAAFIKAABTCgAAVAoAAMcKAABWCgAAVwoAAFgKAADICgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMTJDdG9yRHRvck5hbWVFAAAAADxqAgD4lwIA2HwCAAAAAACUmAIAUQoAAFIKAABTCgAAVAoAAMkKAABWCgAAVwoAAFgKAADKCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMTBBYmlUYWdBdHRyRQAAPGoCAGSYAgDYfAIAW2FiaToAREMAAAAAAAAAABSZAgBRCgAAUgoAAFMKAABUCgAAywoAAFYKAABXCgAAWAoAAMwKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUyMVN0cnVjdHVyZWRCaW5kaW5nTmFtZUUAAAA8agIA2JgCANh8AgBzdHJpbmcgbGl0ZXJhbAAAAAAAAIyZAgBRCgAAUgoAAFMKAABUCgAAzQoAAFYKAABXCgAAWAoAAM4KAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGU5TG9jYWxOYW1lRQAAAAA8agIAXJkCANh8AgAAAAAA/JkCAFEKAABSCgAAUwoAAFQKAADPCgAAVgoAANAKAABYCgAA0QoAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTE5U3BlY2lhbFN1YnN0aXR1dGlvbkUAPGoCAMSZAgDYfAIAc3RkOjpzdHJpbmcAc3RkOjppc3RyZWFtAHN0ZDo6b3N0cmVhbQBzdGQ6Omlvc3RyZWFtAHN0cmluZwBpc3RyZWFtAG9zdHJlYW0AaW9zdHJlYW0AAAAAALyaAgDSCgAA0woAANQKAADVCgAA1goAANcKAABXCgAAWAoAANgKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxM1BhcmFtZXRlclBhY2tFAAAAPGoCAIiaAgDYfAIAAAAAACibAgBRCgAAUgoAAFMKAABUCgAA2QoAAFYKAABXCgAAWAoAANoKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxMlRlbXBsYXRlQXJnc0UAAAAAPGoCAPSaAgDYfAIAAAAAAJybAgBRCgAAUgoAAFMKAABUCgAA2woAAFYKAADcCgAAWAoAAN0KAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUyME5hbWVXaXRoVGVtcGxhdGVBcmdzRQAAAAA8agIAYJsCANh8AgBTdEwAAAAAABCcAgBRCgAAUgoAAFMKAABUCgAA3goAAFYKAADfCgAAWAoAAOAKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxNlN0ZFF1YWxpZmllZE5hbWVFAAAAADxqAgDYmwIA2HwCAHN0ZDo6AAAAAAAAAIycAgBRCgAAUgoAAFMKAABUCgAA4QoAAFYKAABXCgAAWAoAAOIKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUyMFRlbXBsYXRlQXJndW1lbnRQYWNrRQAAAAA8agIAUJwCANh8AgAAAAAA+JwCAFEKAABSCgAAUwoAAFQKAADjCgAAVgoAAFcKAABYCgAA5AoAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTEyRW5hYmxlSWZBdHRyRQAAAAA8agIAxJwCANh8AgAgW2VuYWJsZV9pZjoAAAAAAAAAAHidAgDlCgAAUgoAAOYKAABUCgAA5woAAOgKAABXCgAAWAoAAOkKAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxNkZ1bmN0aW9uRW5jb2RpbmdFAAAAADxqAgBAnQIA2HwCACBjb25zdAAgdm9sYXRpbGUAIHJlc3RyaWN0ACAmACAmJgAAAAAAAAAEngIAUQoAAFIKAABTCgAAVAoAAOoKAABWCgAAVwoAAFgKAADrCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlOURvdFN1ZmZpeEUAAAAAPGoCANSdAgDYfAIAdm9pZABib29sAGludAB1bnNpZ25lZCBpbnQAbG9uZwB1bnNpZ25lZCBsb25nAGxvbmcgbG9uZwB1bnNpZ25lZCBsb25nIGxvbmcAZmxvYXQAZG91YmxlAGxvbmcgZG91YmxlAF9fZmxvYXQxMjgAZGVjaW1hbDY0AGRlY2ltYWwxMjgAZGVjaW1hbDMyAGRlY2ltYWwxNgBjaGFyMzJfdABjaGFyMTZfdABjaGFyOF90AGRlY2x0eXBlKGF1dG8pAHN0ZDo6bnVsbHB0cl90ACBjb21wbGV4ACBpbWFnaW5hcnkARG8Abm9leGNlcHQARE8ARHcARHgAUkUAT0UAAAAAAABwnwIAUQoAAFIKAABTCgAAVAoAAOwKAABWCgAAVwoAAFgKAADtCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMTJOb2V4Y2VwdFNwZWNFAAAAADxqAgA8nwIA2HwCAG5vZXhjZXB0KAAAAAAAAADwnwIAUQoAAFIKAABTCgAAVAoAAO4KAABWCgAAVwoAAFgKAADvCgAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMjBEeW5hbWljRXhjZXB0aW9uU3BlY0UAAAAAPGoCALSfAgDYfAIAdGhyb3coAAAAAAAAZKACAPAKAABSCgAA8QoAAFQKAADyCgAA8woAAFcKAABYCgAA9AoAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTEyRnVuY3Rpb25UeXBlRQAAAAA8agIAMKACANh8AgBvYmpjcHJvdG8AAAAAAAAA3KACAFEKAABSCgAAUwoAAFQKAAD1CgAAVgoAAFcKAABYCgAA9goAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTEzT2JqQ1Byb3RvTmFtZUUAAAA8agIAqKACANh8AgAAAAAATKECAFEKAABSCgAAUwoAAFQKAAD3CgAAVgoAAFcKAABYCgAA+AoAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTE3VmVuZG9yRXh0UXVhbFR5cGVFAAAAPGoCABShAgDYfAIAAAAAALChAgD5CgAA+goAAPsK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";
    nB(FI) || (FI = AA(FI));
    function HE() {
      try {
        if (vI)
          return new Uint8Array(vI);
        var C2 = Bg2(FI);
        if (C2)
          return C2;
        if (CA)
          return CA(FI);
        throw "both async and sync fetching of the wasm failed";
      } catch (B2) {
        dA(B2);
      }
    }
    function HG() {
      return !vI && (y2 || U2) && typeof fetch == "function" && !tE(FI) ? fetch(FI, { credentials: "same-origin" }).then(function(C2) {
        if (!C2.ok)
          throw "failed to load wasm binary file at '" + FI + "'";
        return C2.arrayBuffer();
      }).catch(function() {
        return HE();
      }) : Promise.resolve().then(HE);
    }
    function rG() {
      var C2 = { env: PE, wasi_snapshot_preview1: PE };
      function B2(a, R2) {
        var h2 = a.exports;
        g.asm = h2, Fg2 = g.asm.memory, ME(Fg2.buffer), fg2 = g.asm.__indirect_function_table, Vg2();
      }
      KC();
      function Q2(a) {
        B2(a.instance);
      }
      function i(a) {
        return HG().then(function(R2) {
          return WebAssembly.instantiate(R2, C2);
        }).then(a, function(R2) {
          z2("failed to asynchronously prepare wasm: " + R2), dA(R2);
        });
      }
      function G2() {
        return !vI && typeof WebAssembly.instantiateStreaming == "function" && !nB(FI) && !tE(FI) && typeof fetch == "function" ? fetch(FI, { credentials: "same-origin" }).then(function(a) {
          var R2 = WebAssembly.instantiateStreaming(a, C2);
          return R2.then(Q2, function(h2) {
            return z2("wasm streaming compile failed: " + h2), z2("falling back to ArrayBuffer instantiation"), i(Q2);
          });
        }) : i(Q2);
      }
      if (g.instantiateWasm)
        try {
          var F2 = g.instantiateWasm(C2, B2);
          return F2;
        } catch (a) {
          return z2("Module.instantiateWasm callback failed with error: " + a), false;
        }
      return G2().catch(D2), {};
    }
    var tA, rI;
    function dB(C2, B2) {
      if (k2.mainLoop.timingMode = C2, k2.mainLoop.timingValue = B2, !k2.mainLoop.func)
        return 1;
      if (C2 == 0)
        k2.mainLoop.scheduler = function() {
          var a = Math.max(0, k2.mainLoop.tickStartTime + B2 - Rg2()) | 0;
          setTimeout(k2.mainLoop.runner, a);
        }, k2.mainLoop.method = "timeout";
      else if (C2 == 1)
        k2.mainLoop.scheduler = function() {
          k2.requestAnimationFrame(k2.mainLoop.runner);
        }, k2.mainLoop.method = "rAF";
      else if (C2 == 2) {
        if (typeof setImmediate > "u") {
          var Q2 = [], i = "setimmediate", G2 = function(F2) {
            (F2.data === i || F2.data.target === i) && (F2.stopPropagation(), Q2.shift()());
          };
          addEventListener("message", G2, true), setImmediate = function(a) {
            Q2.push(a), U2 ? (g.setImmediates === void 0 && (g.setImmediates = []), g.setImmediates.push(a), postMessage({ target: i })) : postMessage(i, "*");
          };
        }
        k2.mainLoop.scheduler = function() {
          setImmediate(k2.mainLoop.runner);
        }, k2.mainLoop.method = "immediate";
      }
      return 0;
    }
    var Rg2;
    L2 ? Rg2 = function() {
      var C2 = process.hrtime();
      return C2[0] * 1e3 + C2[1] / 1e6;
    } : typeof dateNow < "u" ? Rg2 = dateNow : Rg2 = function() {
      return performance.now();
    };
    function qG(C2, B2, Q2, i, G2) {
      LA(!k2.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters."), k2.mainLoop.func = C2, k2.mainLoop.arg = i;
      var F2 = k2.mainLoop.currentlyRunningMainloop;
      if (k2.mainLoop.runner = function() {
        if (!RA) {
          if (k2.mainLoop.queue.length > 0) {
            var R2 = Date.now(), h2 = k2.mainLoop.queue.shift();
            if (h2.func(h2.arg), k2.mainLoop.remainingBlockers) {
              var K2 = k2.mainLoop.remainingBlockers, M2 = K2 % 1 == 0 ? K2 - 1 : Math.floor(K2);
              h2.counted ? k2.mainLoop.remainingBlockers = M2 : (M2 = M2 + 0.5, k2.mainLoop.remainingBlockers = (8 * K2 + M2) / 9);
            }
            if (console.log('main loop blocker "' + h2.name + '" took ' + (Date.now() - R2) + " ms"), k2.mainLoop.updateStatus(), F2 < k2.mainLoop.currentlyRunningMainloop)
              return;
            setTimeout(k2.mainLoop.runner, 0);
            return;
          }
          if (!(F2 < k2.mainLoop.currentlyRunningMainloop)) {
            if (k2.mainLoop.currentFrameNumber = k2.mainLoop.currentFrameNumber + 1 | 0, k2.mainLoop.timingMode == 1 && k2.mainLoop.timingValue > 1 && k2.mainLoop.currentFrameNumber % k2.mainLoop.timingValue != 0) {
              k2.mainLoop.scheduler();
              return;
            } else
              k2.mainLoop.timingMode == 0 && (k2.mainLoop.tickStartTime = Rg2());
            k2.mainLoop.runIter(C2), !(F2 < k2.mainLoop.currentlyRunningMainloop) && (typeof SDL == "object" && SDL.audio && SDL.audio.queueNewAudioData && SDL.audio.queueNewAudioData(), k2.mainLoop.scheduler());
          }
        }
      }, Q2)
        ;
    }
    var k2 = { mainLoop: { scheduler: null, method: "", currentlyRunningMainloop: 0, func: null, arg: 0, timingMode: 0, timingValue: 0, currentFrameNumber: 0, queue: [], pause: function() {
      k2.mainLoop.scheduler = null, k2.mainLoop.currentlyRunningMainloop++;
    }, resume: function() {
      k2.mainLoop.currentlyRunningMainloop++;
      var C2 = k2.mainLoop.timingMode, B2 = k2.mainLoop.timingValue, Q2 = k2.mainLoop.func;
      k2.mainLoop.func = null, qG(Q2, 0, false, k2.mainLoop.arg), dB(C2, B2), k2.mainLoop.scheduler();
    }, updateStatus: function() {
      if (g.setStatus) {
        var C2 = g.statusMessage || "Please wait...", B2 = k2.mainLoop.remainingBlockers, Q2 = k2.mainLoop.expectedBlockers;
        B2 ? B2 < Q2 ? g.setStatus(C2 + " (" + (Q2 - B2) + "/" + Q2 + ")") : g.setStatus(C2) : g.setStatus("");
      }
    }, runIter: function(C2) {
      if (!RA) {
        if (g.preMainLoop) {
          var B2 = g.preMainLoop();
          if (B2 === false)
            return;
        }
        try {
          C2();
        } catch (Q2) {
          if (Q2 instanceof $E)
            return;
          if (Q2 == "unwind")
            return;
          throw Q2 && typeof Q2 == "object" && Q2.stack && z2("exception thrown: " + [Q2, Q2.stack]), Q2;
        }
        g.postMainLoop && g.postMainLoop();
      }
    } }, isFullscreen: false, pointerLock: false, moduleContextCreatedCallbacks: [], workers: [], init: function() {
      if (g.preloadPlugins || (g.preloadPlugins = []), k2.initted)
        return;
      k2.initted = true;
      try {
        new Blob(), k2.hasBlobConstructor = true;
      } catch {
        k2.hasBlobConstructor = false, console.log("warning: no blob constructor, cannot create blobs with mimetypes");
      }
      k2.BlobBuilder = typeof MozBlobBuilder < "u" ? MozBlobBuilder : typeof WebKitBlobBuilder < "u" ? WebKitBlobBuilder : k2.hasBlobConstructor ? null : console.log("warning: no BlobBuilder"), k2.URLObject = typeof window < "u" ? window.URL ? window.URL : window.webkitURL : void 0, !g.noImageDecoding && typeof k2.URLObject > "u" && (console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available."), g.noImageDecoding = true);
      var C2 = {};
      C2.canHandle = function(F2) {
        return !g.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(F2);
      }, C2.handle = function(F2, a, R2, h2) {
        var K2 = null;
        if (k2.hasBlobConstructor)
          try {
            K2 = new Blob([F2], { type: k2.getMimetype(a) }), K2.size !== F2.length && (K2 = new Blob([new Uint8Array(F2).buffer], { type: k2.getMimetype(a) }));
          } catch (Y2) {
            bA("Blob constructor present but fails: " + Y2 + "; falling back to blob builder");
          }
        if (!K2) {
          var M2 = new k2.BlobBuilder();
          M2.append(new Uint8Array(F2).buffer), K2 = M2.getBlob();
        }
        var J2 = k2.URLObject.createObjectURL(K2), S2 = new Image();
        S2.onload = function() {
          LA(S2.complete, "Image " + a + " could not be decoded");
          var H2 = document.createElement("canvas");
          H2.width = S2.width, H2.height = S2.height;
          var W2 = H2.getContext("2d");
          W2.drawImage(S2, 0, 0), g.preloadedImages[a] = H2, k2.URLObject.revokeObjectURL(J2), R2 && R2(F2);
        }, S2.onerror = function(H2) {
          console.log("Image " + J2 + " could not be decoded"), h2 && h2();
        }, S2.src = J2;
      }, g.preloadPlugins.push(C2);
      var B2 = {};
      B2.canHandle = function(F2) {
        return !g.noAudioDecoding && F2.substr(-4) in { ".ogg": 1, ".wav": 1, ".mp3": 1 };
      }, B2.handle = function(F2, a, R2, h2) {
        var K2 = false;
        function M2(W2) {
          K2 || (K2 = true, g.preloadedAudios[a] = W2, R2 && R2(F2));
        }
        function J2() {
          K2 || (K2 = true, g.preloadedAudios[a] = new Audio(), h2 && h2());
        }
        if (k2.hasBlobConstructor) {
          try {
            var S2 = new Blob([F2], { type: k2.getMimetype(a) });
          } catch {
            return J2();
          }
          var Y2 = k2.URLObject.createObjectURL(S2), H2 = new Audio();
          H2.addEventListener("canplaythrough", function() {
            M2(H2);
          }, false), H2.onerror = function($) {
            if (K2)
              return;
            console.log("warning: browser could not fully decode audio " + a + ", trying slower base64 approach");
            function X2(c2) {
              for (var r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", O2 = "=", Z2 = "", p2 = 0, rA = 0, aI = 0; aI < c2.length; aI++)
                for (p2 = p2 << 8 | c2[aI], rA += 8; rA >= 6; ) {
                  var S0 = p2 >> rA - 6 & 63;
                  rA -= 6, Z2 += r2[S0];
                }
              return rA == 2 ? (Z2 += r2[(p2 & 3) << 4], Z2 += O2 + O2) : rA == 4 && (Z2 += r2[(p2 & 15) << 2], Z2 += O2), Z2;
            }
            H2.src = "data:audio/x-" + a.substr(-3) + ";base64," + X2(F2), M2(H2);
          }, H2.src = Y2, k2.safeSetTimeout(function() {
            M2(H2);
          }, 1e4);
        } else
          return J2();
      }, g.preloadPlugins.push(B2);
      function Q2() {
        k2.pointerLock = document.pointerLockElement === g.canvas || document.mozPointerLockElement === g.canvas || document.webkitPointerLockElement === g.canvas || document.msPointerLockElement === g.canvas;
      }
      var i = g.canvas;
      i && (i.requestPointerLock = i.requestPointerLock || i.mozRequestPointerLock || i.webkitRequestPointerLock || i.msRequestPointerLock || function() {
      }, i.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock || document.webkitExitPointerLock || document.msExitPointerLock || function() {
      }, i.exitPointerLock = i.exitPointerLock.bind(document), document.addEventListener("pointerlockchange", Q2, false), document.addEventListener("mozpointerlockchange", Q2, false), document.addEventListener("webkitpointerlockchange", Q2, false), document.addEventListener("mspointerlockchange", Q2, false), g.elementPointerLock && i.addEventListener("click", function(G2) {
        !k2.pointerLock && g.canvas.requestPointerLock && (g.canvas.requestPointerLock(), G2.preventDefault());
      }, false));
    }, createContext: function(C2, B2, Q2, i) {
      if (B2 && g.ctx && C2 == g.canvas)
        return g.ctx;
      var G2, F2;
      if (B2) {
        var a = { antialias: false, alpha: false, majorVersion: 1 };
        if (i)
          for (var R2 in i)
            a[R2] = i[R2];
        typeof GL < "u" && (F2 = GL.createContext(C2, a), F2 && (G2 = GL.getContext(F2).GLctx));
      } else
        G2 = C2.getContext("2d");
      return G2 ? (Q2 && (B2 || LA(typeof GLctx > "u", "cannot set in module if GLctx is used, but we are a non-GL context that would replace it"), g.ctx = G2, B2 && GL.makeContextCurrent(F2), g.useWebGL = B2, k2.moduleContextCreatedCallbacks.forEach(function(h2) {
        h2();
      }), k2.init()), G2) : null;
    }, destroyContext: function(C2, B2, Q2) {
    }, fullscreenHandlersInstalled: false, lockPointer: void 0, resizeCanvas: void 0, requestFullscreen: function(C2, B2) {
      k2.lockPointer = C2, k2.resizeCanvas = B2, typeof k2.lockPointer > "u" && (k2.lockPointer = true), typeof k2.resizeCanvas > "u" && (k2.resizeCanvas = false);
      var Q2 = g.canvas;
      function i() {
        k2.isFullscreen = false;
        var F2 = Q2.parentNode;
        (document.fullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.webkitCurrentFullScreenElement) === F2 ? (Q2.exitFullscreen = k2.exitFullscreen, k2.lockPointer && Q2.requestPointerLock(), k2.isFullscreen = true, k2.resizeCanvas ? k2.setFullscreenCanvasSize() : k2.updateCanvasDimensions(Q2)) : (F2.parentNode.insertBefore(Q2, F2), F2.parentNode.removeChild(F2), k2.resizeCanvas ? k2.setWindowedCanvasSize() : k2.updateCanvasDimensions(Q2)), g.onFullScreen && g.onFullScreen(k2.isFullscreen), g.onFullscreen && g.onFullscreen(k2.isFullscreen);
      }
      k2.fullscreenHandlersInstalled || (k2.fullscreenHandlersInstalled = true, document.addEventListener("fullscreenchange", i, false), document.addEventListener("mozfullscreenchange", i, false), document.addEventListener("webkitfullscreenchange", i, false), document.addEventListener("MSFullscreenChange", i, false));
      var G2 = document.createElement("div");
      Q2.parentNode.insertBefore(G2, Q2), G2.appendChild(Q2), G2.requestFullscreen = G2.requestFullscreen || G2.mozRequestFullScreen || G2.msRequestFullscreen || (G2.webkitRequestFullscreen ? function() {
        G2.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
      } : null) || (G2.webkitRequestFullScreen ? function() {
        G2.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
      } : null), G2.requestFullscreen();
    }, exitFullscreen: function() {
      if (!k2.isFullscreen)
        return false;
      var C2 = document.exitFullscreen || document.cancelFullScreen || document.mozCancelFullScreen || document.msExitFullscreen || document.webkitCancelFullScreen || function() {
      };
      return C2.apply(document, []), true;
    }, nextRAF: 0, fakeRequestAnimationFrame: function(C2) {
      var B2 = Date.now();
      if (k2.nextRAF === 0)
        k2.nextRAF = B2 + 1e3 / 60;
      else
        for (; B2 + 2 >= k2.nextRAF; )
          k2.nextRAF += 1e3 / 60;
      var Q2 = Math.max(k2.nextRAF - B2, 0);
      setTimeout(C2, Q2);
    }, requestAnimationFrame: function(C2) {
      if (typeof requestAnimationFrame == "function") {
        requestAnimationFrame(C2);
        return;
      }
      var B2 = k2.fakeRequestAnimationFrame;
      B2(C2);
    }, safeCallback: function(C2) {
      return function() {
        if (!RA)
          return C2.apply(null, arguments);
      };
    }, allowAsyncCallbacks: true, queuedAsyncCallbacks: [], pauseAsyncCallbacks: function() {
      k2.allowAsyncCallbacks = false;
    }, resumeAsyncCallbacks: function() {
      if (k2.allowAsyncCallbacks = true, k2.queuedAsyncCallbacks.length > 0) {
        var C2 = k2.queuedAsyncCallbacks;
        k2.queuedAsyncCallbacks = [], C2.forEach(function(B2) {
          B2();
        });
      }
    }, safeRequestAnimationFrame: function(C2) {
      return k2.requestAnimationFrame(function() {
        RA || (k2.allowAsyncCallbacks ? C2() : k2.queuedAsyncCallbacks.push(C2));
      });
    }, safeSetTimeout: function(C2, B2) {
      return setTimeout(function() {
        RA || (k2.allowAsyncCallbacks ? C2() : k2.queuedAsyncCallbacks.push(C2));
      }, B2);
    }, safeSetInterval: function(C2, B2) {
      return setInterval(function() {
        RA || k2.allowAsyncCallbacks && C2();
      }, B2);
    }, getMimetype: function(C2) {
      return { jpg: "image/jpeg", jpeg: "image/jpeg", png: "image/png", bmp: "image/bmp", ogg: "audio/ogg", wav: "audio/wav", mp3: "audio/mpeg" }[C2.substr(C2.lastIndexOf(".") + 1)];
    }, getUserMedia: function(C2) {
      window.getUserMedia || (window.getUserMedia = navigator.getUserMedia || navigator.mozGetUserMedia), window.getUserMedia(C2);
    }, getMovementX: function(C2) {
      return C2.movementX || C2.mozMovementX || C2.webkitMovementX || 0;
    }, getMovementY: function(C2) {
      return C2.movementY || C2.mozMovementY || C2.webkitMovementY || 0;
    }, getMouseWheelDelta: function(C2) {
      var B2 = 0;
      switch (C2.type) {
        case "DOMMouseScroll":
          B2 = C2.detail / 3;
          break;
        case "mousewheel":
          B2 = C2.wheelDelta / 120;
          break;
        case "wheel":
          switch (B2 = C2.deltaY, C2.deltaMode) {
            case 0:
              B2 /= 100;
              break;
            case 1:
              B2 /= 3;
              break;
            case 2:
              B2 *= 80;
              break;
            default:
              throw "unrecognized mouse wheel delta mode: " + C2.deltaMode;
          }
          break;
        default:
          throw "unrecognized mouse wheel event: " + C2.type;
      }
      return B2;
    }, mouseX: 0, mouseY: 0, mouseMovementX: 0, mouseMovementY: 0, touches: {}, lastTouches: {}, calculateMouseEvent: function(C2) {
      if (k2.pointerLock)
        C2.type != "mousemove" && "mozMovementX" in C2 ? k2.mouseMovementX = k2.mouseMovementY = 0 : (k2.mouseMovementX = k2.getMovementX(C2), k2.mouseMovementY = k2.getMovementY(C2)), typeof SDL < "u" ? (k2.mouseX = SDL.mouseX + k2.mouseMovementX, k2.mouseY = SDL.mouseY + k2.mouseMovementY) : (k2.mouseX += k2.mouseMovementX, k2.mouseY += k2.mouseMovementY);
      else {
        var B2 = g.canvas.getBoundingClientRect(), Q2 = g.canvas.width, i = g.canvas.height, G2 = typeof window.scrollX < "u" ? window.scrollX : window.pageXOffset, F2 = typeof window.scrollY < "u" ? window.scrollY : window.pageYOffset;
        if (C2.type === "touchstart" || C2.type === "touchend" || C2.type === "touchmove") {
          var a = C2.touch;
          if (a === void 0)
            return;
          var R2 = a.pageX - (G2 + B2.left), h2 = a.pageY - (F2 + B2.top);
          R2 = R2 * (Q2 / B2.width), h2 = h2 * (i / B2.height);
          var K2 = { x: R2, y: h2 };
          if (C2.type === "touchstart")
            k2.lastTouches[a.identifier] = K2, k2.touches[a.identifier] = K2;
          else if (C2.type === "touchend" || C2.type === "touchmove") {
            var M2 = k2.touches[a.identifier];
            M2 || (M2 = K2), k2.lastTouches[a.identifier] = M2, k2.touches[a.identifier] = K2;
          }
          return;
        }
        var J2 = C2.pageX - (G2 + B2.left), S2 = C2.pageY - (F2 + B2.top);
        J2 = J2 * (Q2 / B2.width), S2 = S2 * (i / B2.height), k2.mouseMovementX = J2 - k2.mouseX, k2.mouseMovementY = S2 - k2.mouseY, k2.mouseX = J2, k2.mouseY = S2;
      }
    }, asyncLoad: function(C2, B2, Q2, i) {
      var G2 = i ? "" : "al " + C2;
      aA(C2, function(F2) {
        LA(F2, 'Loading data file "' + C2 + '" failed (no arrayBuffer).'), B2(new Uint8Array(F2)), G2 && Vg2();
      }, function(F2) {
        if (Q2)
          Q2();
        else
          throw 'Loading data file "' + C2 + '" failed.';
      }), G2 && KC();
    }, resizeListeners: [], updateResizeListeners: function() {
      var C2 = g.canvas;
      k2.resizeListeners.forEach(function(B2) {
        B2(C2.width, C2.height);
      });
    }, setCanvasSize: function(C2, B2, Q2) {
      var i = g.canvas;
      k2.updateCanvasDimensions(i, C2, B2), Q2 || k2.updateResizeListeners();
    }, windowedWidth: 0, windowedHeight: 0, setFullscreenCanvasSize: function() {
      if (typeof SDL < "u") {
        var C2 = sI[SDL.screen >> 2];
        C2 = C2 | 8388608, q2[SDL.screen >> 2] = C2;
      }
      k2.updateCanvasDimensions(g.canvas), k2.updateResizeListeners();
    }, setWindowedCanvasSize: function() {
      if (typeof SDL < "u") {
        var C2 = sI[SDL.screen >> 2];
        C2 = C2 & -8388609, q2[SDL.screen >> 2] = C2;
      }
      k2.updateCanvasDimensions(g.canvas), k2.updateResizeListeners();
    }, updateCanvasDimensions: function(C2, B2, Q2) {
      B2 && Q2 ? (C2.widthNative = B2, C2.heightNative = Q2) : (B2 = C2.widthNative, Q2 = C2.heightNative);
      var i = B2, G2 = Q2;
      if (g.forcedAspectRatio && g.forcedAspectRatio > 0 && (i / G2 < g.forcedAspectRatio ? i = Math.round(G2 * g.forcedAspectRatio) : G2 = Math.round(i / g.forcedAspectRatio)), (document.fullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.webkitCurrentFullScreenElement) === C2.parentNode && typeof screen < "u") {
        var F2 = Math.min(screen.width / i, screen.height / G2);
        i = Math.round(i * F2), G2 = Math.round(G2 * F2);
      }
      k2.resizeCanvas ? (C2.width != i && (C2.width = i), C2.height != G2 && (C2.height = G2), typeof C2.style < "u" && (C2.style.removeProperty("width"), C2.style.removeProperty("height"))) : (C2.width != B2 && (C2.width = B2), C2.height != Q2 && (C2.height = Q2), typeof C2.style < "u" && (i != B2 || G2 != Q2 ? (C2.style.setProperty("width", i + "px", "important"), C2.style.setProperty("height", G2 + "px", "important")) : (C2.style.removeProperty("width"), C2.style.removeProperty("height"))));
    }, wgetRequests: {}, nextWgetRequestHandle: 0, getNextWgetRequestHandle: function() {
      var C2 = k2.nextWgetRequestHandle;
      return k2.nextWgetRequestHandle++, C2;
    } };
    function UC(C2) {
      for (; C2.length > 0; ) {
        var B2 = C2.shift();
        if (typeof B2 == "function") {
          B2(g);
          continue;
        }
        var Q2 = B2.func;
        typeof Q2 == "number" ? B2.arg === void 0 ? fg2.get(Q2)() : fg2.get(Q2)(B2.arg) : Q2(B2.arg === void 0 ? null : B2.arg);
      }
    }
    var VA = { DESTRUCTOR_OFFSET: 0, REFCOUNT_OFFSET: 4, TYPE_OFFSET: 8, CAUGHT_OFFSET: 12, RETHROWN_OFFSET: 13, SIZE: 16 };
    function eG(C2) {
      return Xg2(C2 + VA.SIZE) + VA.SIZE;
    }
    function nG(C2, B2) {
      return void 0;
    }
    function dG(C2) {
      this.excPtr = C2, this.ptr = C2 - VA.SIZE, this.set_type = function(B2) {
        q2[this.ptr + VA.TYPE_OFFSET >> 2] = B2;
      }, this.get_type = function() {
        return q2[this.ptr + VA.TYPE_OFFSET >> 2];
      }, this.set_destructor = function(B2) {
        q2[this.ptr + VA.DESTRUCTOR_OFFSET >> 2] = B2;
      }, this.get_destructor = function() {
        return q2[this.ptr + VA.DESTRUCTOR_OFFSET >> 2];
      }, this.set_refcount = function(B2) {
        q2[this.ptr + VA.REFCOUNT_OFFSET >> 2] = B2;
      }, this.set_caught = function(B2) {
        B2 = B2 ? 1 : 0, nA[this.ptr + VA.CAUGHT_OFFSET >> 0] = B2;
      }, this.get_caught = function() {
        return nA[this.ptr + VA.CAUGHT_OFFSET >> 0] != 0;
      }, this.set_rethrown = function(B2) {
        B2 = B2 ? 1 : 0, nA[this.ptr + VA.RETHROWN_OFFSET >> 0] = B2;
      }, this.get_rethrown = function() {
        return nA[this.ptr + VA.RETHROWN_OFFSET >> 0] != 0;
      }, this.init = function(B2, Q2) {
        this.set_type(B2), this.set_destructor(Q2), this.set_refcount(0), this.set_caught(false), this.set_rethrown(false);
      }, this.add_ref = function() {
        var B2 = q2[this.ptr + VA.REFCOUNT_OFFSET >> 2];
        q2[this.ptr + VA.REFCOUNT_OFFSET >> 2] = B2 + 1;
      }, this.release_ref = function() {
        var B2 = q2[this.ptr + VA.REFCOUNT_OFFSET >> 2];
        return q2[this.ptr + VA.REFCOUNT_OFFSET >> 2] = B2 - 1, B2 === 1;
      };
    }
    function lG(C2, B2, Q2) {
      var i = new dG(C2);
      throw i.init(B2, Q2), C2;
    }
    function rE(C2) {
      return q2[vE() >> 2] = C2, C2;
    }
    var v2 = { splitPath: function(C2) {
      var B2 = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
      return B2.exec(C2).slice(1);
    }, normalizeArray: function(C2, B2) {
      for (var Q2 = 0, i = C2.length - 1; i >= 0; i--) {
        var G2 = C2[i];
        G2 === "." ? C2.splice(i, 1) : G2 === ".." ? (C2.splice(i, 1), Q2++) : Q2 && (C2.splice(i, 1), Q2--);
      }
      if (B2)
        for (; Q2; Q2--)
          C2.unshift("..");
      return C2;
    }, normalize: function(C2) {
      var B2 = C2.charAt(0) === "/", Q2 = C2.substr(-1) === "/";
      return C2 = v2.normalizeArray(C2.split("/").filter(function(i) {
        return !!i;
      }), !B2).join("/"), !C2 && !B2 && (C2 = "."), C2 && Q2 && (C2 += "/"), (B2 ? "/" : "") + C2;
    }, dirname: function(C2) {
      var B2 = v2.splitPath(C2), Q2 = B2[0], i = B2[1];
      return !Q2 && !i ? "." : (i && (i = i.substr(0, i.length - 1)), Q2 + i);
    }, basename: function(C2) {
      if (C2 === "/")
        return "/";
      C2 = v2.normalize(C2), C2 = C2.replace(/\/$/, "");
      var B2 = C2.lastIndexOf("/");
      return B2 === -1 ? C2 : C2.substr(B2 + 1);
    }, extname: function(C2) {
      return v2.splitPath(C2)[3];
    }, join: function() {
      var C2 = Array.prototype.slice.call(arguments, 0);
      return v2.normalize(C2.join("/"));
    }, join2: function(C2, B2) {
      return v2.normalize(C2 + "/" + B2);
    } };
    function fG() {
      if (typeof crypto == "object" && typeof crypto.getRandomValues == "function") {
        var C2 = new Uint8Array(1);
        return function() {
          return crypto.getRandomValues(C2), C2[0];
        };
      } else if (L2)
        try {
          var B2 = require("crypto");
          return function() {
            return B2.randomBytes(1)[0];
          };
        } catch {
        }
      return function() {
        dA("randomDevice");
      };
    }
    var qI = { resolve: function() {
      for (var C2 = "", B2 = false, Q2 = arguments.length - 1; Q2 >= -1 && !B2; Q2--) {
        var i = Q2 >= 0 ? arguments[Q2] : w2.cwd();
        if (typeof i != "string")
          throw new TypeError("Arguments to path.resolve must be strings");
        if (!i)
          return "";
        C2 = i + "/" + C2, B2 = i.charAt(0) === "/";
      }
      return C2 = v2.normalizeArray(C2.split("/").filter(function(G2) {
        return !!G2;
      }), !B2).join("/"), (B2 ? "/" : "") + C2 || ".";
    }, relative: function(C2, B2) {
      C2 = qI.resolve(C2).substr(1), B2 = qI.resolve(B2).substr(1);
      function Q2(K2) {
        for (var M2 = 0; M2 < K2.length && K2[M2] === ""; M2++)
          ;
        for (var J2 = K2.length - 1; J2 >= 0 && K2[J2] === ""; J2--)
          ;
        return M2 > J2 ? [] : K2.slice(M2, J2 - M2 + 1);
      }
      for (var i = Q2(C2.split("/")), G2 = Q2(B2.split("/")), F2 = Math.min(i.length, G2.length), a = F2, R2 = 0; R2 < F2; R2++)
        if (i[R2] !== G2[R2]) {
          a = R2;
          break;
        }
      for (var h2 = [], R2 = a; R2 < i.length; R2++)
        h2.push("..");
      return h2 = h2.concat(G2.slice(a)), h2.join("/");
    } }, Ig2 = { ttys: [], init: function() {
    }, shutdown: function() {
    }, register: function(C2, B2) {
      Ig2.ttys[C2] = { input: [], output: [], ops: B2 }, w2.registerDevice(C2, Ig2.stream_ops);
    }, stream_ops: { open: function(C2) {
      var B2 = Ig2.ttys[C2.node.rdev];
      if (!B2)
        throw new w2.ErrnoError(43);
      C2.tty = B2, C2.seekable = false;
    }, close: function(C2) {
      C2.tty.ops.flush(C2.tty);
    }, flush: function(C2) {
      C2.tty.ops.flush(C2.tty);
    }, read: function(C2, B2, Q2, i, G2) {
      if (!C2.tty || !C2.tty.ops.get_char)
        throw new w2.ErrnoError(60);
      for (var F2 = 0, a = 0; a < i; a++) {
        var R2;
        try {
          R2 = C2.tty.ops.get_char(C2.tty);
        } catch {
          throw new w2.ErrnoError(29);
        }
        if (R2 === void 0 && F2 === 0)
          throw new w2.ErrnoError(6);
        if (R2 == null)
          break;
        F2++, B2[Q2 + a] = R2;
      }
      return F2 && (C2.node.timestamp = Date.now()), F2;
    }, write: function(C2, B2, Q2, i, G2) {
      if (!C2.tty || !C2.tty.ops.put_char)
        throw new w2.ErrnoError(60);
      try {
        for (var F2 = 0; F2 < i; F2++)
          C2.tty.ops.put_char(C2.tty, B2[Q2 + F2]);
      } catch {
        throw new w2.ErrnoError(29);
      }
      return i && (C2.node.timestamp = Date.now()), F2;
    } }, default_tty_ops: { get_char: function(C2) {
      if (!C2.input.length) {
        var B2 = null;
        if (L2) {
          var Q2 = 256, i = Buffer.alloc ? Buffer.alloc(Q2) : new Buffer(Q2), G2 = 0;
          try {
            G2 = wI.readSync(process.stdin.fd, i, 0, Q2, null);
          } catch (F2) {
            if (F2.toString().indexOf("EOF") != -1)
              G2 = 0;
            else
              throw F2;
          }
          G2 > 0 ? B2 = i.slice(0, G2).toString("utf-8") : B2 = null;
        } else
          typeof window < "u" && typeof window.prompt == "function" ? (B2 = window.prompt("Input: "), B2 !== null && (B2 += `
`)) : typeof readline == "function" && (B2 = readline(), B2 !== null && (B2 += `
`));
        if (!B2)
          return null;
        C2.input = fC(B2, true);
      }
      return C2.input.shift();
    }, put_char: function(C2, B2) {
      B2 === null || B2 === 10 ? (f2(ag2(C2.output, 0)), C2.output = []) : B2 != 0 && C2.output.push(B2);
    }, flush: function(C2) {
      C2.output && C2.output.length > 0 && (f2(ag2(C2.output, 0)), C2.output = []);
    } }, default_tty1_ops: { put_char: function(C2, B2) {
      B2 === null || B2 === 10 ? (z2(ag2(C2.output, 0)), C2.output = []) : B2 != 0 && C2.output.push(B2);
    }, flush: function(C2) {
      C2.output && C2.output.length > 0 && (z2(ag2(C2.output, 0)), C2.output = []);
    } } };
    function bG(C2) {
      for (var B2 = sg2(C2, 16384), Q2 = Xg2(B2); C2 < B2; )
        nA[Q2 + C2++] = 0;
      return Q2;
    }
    var m2 = { ops_table: null, mount: function(C2) {
      return m2.createNode(null, "/", 16895, 0);
    }, createNode: function(C2, B2, Q2, i) {
      if (w2.isBlkdev(Q2) || w2.isFIFO(Q2))
        throw new w2.ErrnoError(63);
      m2.ops_table || (m2.ops_table = { dir: { node: { getattr: m2.node_ops.getattr, setattr: m2.node_ops.setattr, lookup: m2.node_ops.lookup, mknod: m2.node_ops.mknod, rename: m2.node_ops.rename, unlink: m2.node_ops.unlink, rmdir: m2.node_ops.rmdir, readdir: m2.node_ops.readdir, symlink: m2.node_ops.symlink }, stream: { llseek: m2.stream_ops.llseek } }, file: { node: { getattr: m2.node_ops.getattr, setattr: m2.node_ops.setattr }, stream: { llseek: m2.stream_ops.llseek, read: m2.stream_ops.read, write: m2.stream_ops.write, allocate: m2.stream_ops.allocate, mmap: m2.stream_ops.mmap, msync: m2.stream_ops.msync } }, link: { node: { getattr: m2.node_ops.getattr, setattr: m2.node_ops.setattr, readlink: m2.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: m2.node_ops.getattr, setattr: m2.node_ops.setattr }, stream: w2.chrdev_stream_ops } });
      var G2 = w2.createNode(C2, B2, Q2, i);
      return w2.isDir(G2.mode) ? (G2.node_ops = m2.ops_table.dir.node, G2.stream_ops = m2.ops_table.dir.stream, G2.contents = {}) : w2.isFile(G2.mode) ? (G2.node_ops = m2.ops_table.file.node, G2.stream_ops = m2.ops_table.file.stream, G2.usedBytes = 0, G2.contents = null) : w2.isLink(G2.mode) ? (G2.node_ops = m2.ops_table.link.node, G2.stream_ops = m2.ops_table.link.stream) : w2.isChrdev(G2.mode) && (G2.node_ops = m2.ops_table.chrdev.node, G2.stream_ops = m2.ops_table.chrdev.stream), G2.timestamp = Date.now(), C2 && (C2.contents[B2] = G2), G2;
    }, getFileDataAsRegularArray: function(C2) {
      if (C2.contents && C2.contents.subarray) {
        for (var B2 = [], Q2 = 0; Q2 < C2.usedBytes; ++Q2)
          B2.push(C2.contents[Q2]);
        return B2;
      }
      return C2.contents;
    }, getFileDataAsTypedArray: function(C2) {
      return C2.contents ? C2.contents.subarray ? C2.contents.subarray(0, C2.usedBytes) : new Uint8Array(C2.contents) : new Uint8Array(0);
    }, expandFileStorage: function(C2, B2) {
      var Q2 = C2.contents ? C2.contents.length : 0;
      if (!(Q2 >= B2)) {
        var i = 1024 * 1024;
        B2 = Math.max(B2, Q2 * (Q2 < i ? 2 : 1.125) >>> 0), Q2 != 0 && (B2 = Math.max(B2, 256));
        var G2 = C2.contents;
        C2.contents = new Uint8Array(B2), C2.usedBytes > 0 && C2.contents.set(G2.subarray(0, C2.usedBytes), 0);
      }
    }, resizeFileStorage: function(C2, B2) {
      if (C2.usedBytes != B2) {
        if (B2 == 0) {
          C2.contents = null, C2.usedBytes = 0;
          return;
        }
        if (!C2.contents || C2.contents.subarray) {
          var Q2 = C2.contents;
          C2.contents = new Uint8Array(B2), Q2 && C2.contents.set(Q2.subarray(0, Math.min(B2, C2.usedBytes))), C2.usedBytes = B2;
          return;
        }
        if (C2.contents || (C2.contents = []), C2.contents.length > B2)
          C2.contents.length = B2;
        else
          for (; C2.contents.length < B2; )
            C2.contents.push(0);
        C2.usedBytes = B2;
      }
    }, node_ops: { getattr: function(C2) {
      var B2 = {};
      return B2.dev = w2.isChrdev(C2.mode) ? C2.id : 1, B2.ino = C2.id, B2.mode = C2.mode, B2.nlink = 1, B2.uid = 0, B2.gid = 0, B2.rdev = C2.rdev, w2.isDir(C2.mode) ? B2.size = 4096 : w2.isFile(C2.mode) ? B2.size = C2.usedBytes : w2.isLink(C2.mode) ? B2.size = C2.link.length : B2.size = 0, B2.atime = new Date(C2.timestamp), B2.mtime = new Date(C2.timestamp), B2.ctime = new Date(C2.timestamp), B2.blksize = 4096, B2.blocks = Math.ceil(B2.size / B2.blksize), B2;
    }, setattr: function(C2, B2) {
      B2.mode !== void 0 && (C2.mode = B2.mode), B2.timestamp !== void 0 && (C2.timestamp = B2.timestamp), B2.size !== void 0 && m2.resizeFileStorage(C2, B2.size);
    }, lookup: function(C2, B2) {
      throw w2.genericErrors[44];
    }, mknod: function(C2, B2, Q2, i) {
      return m2.createNode(C2, B2, Q2, i);
    }, rename: function(C2, B2, Q2) {
      if (w2.isDir(C2.mode)) {
        var i;
        try {
          i = w2.lookupNode(B2, Q2);
        } catch {
        }
        if (i)
          for (var G2 in i.contents)
            throw new w2.ErrnoError(55);
      }
      delete C2.parent.contents[C2.name], C2.name = Q2, B2.contents[Q2] = C2, C2.parent = B2;
    }, unlink: function(C2, B2) {
      delete C2.contents[B2];
    }, rmdir: function(C2, B2) {
      var Q2 = w2.lookupNode(C2, B2);
      for (var i in Q2.contents)
        throw new w2.ErrnoError(55);
      delete C2.contents[B2];
    }, readdir: function(C2) {
      var B2 = [".", ".."];
      for (var Q2 in C2.contents)
        C2.contents.hasOwnProperty(Q2) && B2.push(Q2);
      return B2;
    }, symlink: function(C2, B2, Q2) {
      var i = m2.createNode(C2, B2, 41471, 0);
      return i.link = Q2, i;
    }, readlink: function(C2) {
      if (!w2.isLink(C2.mode))
        throw new w2.ErrnoError(28);
      return C2.link;
    } }, stream_ops: { read: function(C2, B2, Q2, i, G2) {
      var F2 = C2.node.contents;
      if (G2 >= C2.node.usedBytes)
        return 0;
      var a = Math.min(C2.node.usedBytes - G2, i);
      if (a > 8 && F2.subarray)
        B2.set(F2.subarray(G2, G2 + a), Q2);
      else
        for (var R2 = 0; R2 < a; R2++)
          B2[Q2 + R2] = F2[G2 + R2];
      return a;
    }, write: function(C2, B2, Q2, i, G2, F2) {
      if (B2.buffer === nA.buffer && (F2 = false), !i)
        return 0;
      var a = C2.node;
      if (a.timestamp = Date.now(), B2.subarray && (!a.contents || a.contents.subarray)) {
        if (F2)
          return a.contents = B2.subarray(Q2, Q2 + i), a.usedBytes = i, i;
        if (a.usedBytes === 0 && G2 === 0)
          return a.contents = B2.slice(Q2, Q2 + i), a.usedBytes = i, i;
        if (G2 + i <= a.usedBytes)
          return a.contents.set(B2.subarray(Q2, Q2 + i), G2), i;
      }
      if (m2.expandFileStorage(a, G2 + i), a.contents.subarray && B2.subarray)
        a.contents.set(B2.subarray(Q2, Q2 + i), G2);
      else
        for (var R2 = 0; R2 < i; R2++)
          a.contents[G2 + R2] = B2[Q2 + R2];
      return a.usedBytes = Math.max(a.usedBytes, G2 + i), i;
    }, llseek: function(C2, B2, Q2) {
      var i = B2;
      if (Q2 === 1 ? i += C2.position : Q2 === 2 && w2.isFile(C2.node.mode) && (i += C2.node.usedBytes), i < 0)
        throw new w2.ErrnoError(28);
      return i;
    }, allocate: function(C2, B2, Q2) {
      m2.expandFileStorage(C2.node, B2 + Q2), C2.node.usedBytes = Math.max(C2.node.usedBytes, B2 + Q2);
    }, mmap: function(C2, B2, Q2, i, G2, F2) {
      if (LA(B2 === 0), !w2.isFile(C2.node.mode))
        throw new w2.ErrnoError(43);
      var a, R2, h2 = C2.node.contents;
      if (!(F2 & 2) && h2.buffer === NC)
        R2 = false, a = h2.byteOffset;
      else {
        if ((i > 0 || i + Q2 < h2.length) && (h2.subarray ? h2 = h2.subarray(i, i + Q2) : h2 = Array.prototype.slice.call(h2, i, i + Q2)), R2 = true, a = bG(Q2), !a)
          throw new w2.ErrnoError(48);
        nA.set(h2, a);
      }
      return { ptr: a, allocated: R2 };
    }, msync: function(C2, B2, Q2, i, G2) {
      if (!w2.isFile(C2.node.mode))
        throw new w2.ErrnoError(43);
      return G2 & 2 || m2.stream_ops.write(C2, B2, 0, i, Q2, false), 0;
    } } }, w2 = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(C2, B2) {
      if (C2 = qI.resolve(w2.cwd(), C2), B2 = B2 || {}, !C2)
        return { path: "", node: null };
      var Q2 = { follow_mount: true, recurse_count: 0 };
      for (var i in Q2)
        B2[i] === void 0 && (B2[i] = Q2[i]);
      if (B2.recurse_count > 8)
        throw new w2.ErrnoError(32);
      for (var G2 = v2.normalizeArray(C2.split("/").filter(function(S2) {
        return !!S2;
      }), false), F2 = w2.root, a = "/", R2 = 0; R2 < G2.length; R2++) {
        var h2 = R2 === G2.length - 1;
        if (h2 && B2.parent)
          break;
        if (F2 = w2.lookupNode(F2, G2[R2]), a = v2.join2(a, G2[R2]), w2.isMountpoint(F2) && (!h2 || h2 && B2.follow_mount) && (F2 = F2.mounted.root), !h2 || B2.follow)
          for (var K2 = 0; w2.isLink(F2.mode); ) {
            var M2 = w2.readlink(a);
            a = qI.resolve(v2.dirname(a), M2);
            var J2 = w2.lookupPath(a, { recurse_count: B2.recurse_count });
            if (F2 = J2.node, K2++ > 40)
              throw new w2.ErrnoError(32);
          }
      }
      return { path: a, node: F2 };
    }, getPath: function(C2) {
      for (var B2; ; ) {
        if (w2.isRoot(C2)) {
          var Q2 = C2.mount.mountpoint;
          return B2 ? Q2[Q2.length - 1] !== "/" ? Q2 + "/" + B2 : Q2 + B2 : Q2;
        }
        B2 = B2 ? C2.name + "/" + B2 : C2.name, C2 = C2.parent;
      }
    }, hashName: function(C2, B2) {
      for (var Q2 = 0, i = 0; i < B2.length; i++)
        Q2 = (Q2 << 5) - Q2 + B2.charCodeAt(i) | 0;
      return (C2 + Q2 >>> 0) % w2.nameTable.length;
    }, hashAddNode: function(C2) {
      var B2 = w2.hashName(C2.parent.id, C2.name);
      C2.name_next = w2.nameTable[B2], w2.nameTable[B2] = C2;
    }, hashRemoveNode: function(C2) {
      var B2 = w2.hashName(C2.parent.id, C2.name);
      if (w2.nameTable[B2] === C2)
        w2.nameTable[B2] = C2.name_next;
      else
        for (var Q2 = w2.nameTable[B2]; Q2; ) {
          if (Q2.name_next === C2) {
            Q2.name_next = C2.name_next;
            break;
          }
          Q2 = Q2.name_next;
        }
    }, lookupNode: function(C2, B2) {
      var Q2 = w2.mayLookup(C2);
      if (Q2)
        throw new w2.ErrnoError(Q2, C2);
      for (var i = w2.hashName(C2.id, B2), G2 = w2.nameTable[i]; G2; G2 = G2.name_next) {
        var F2 = G2.name;
        if (G2.parent.id === C2.id && F2 === B2)
          return G2;
      }
      return w2.lookup(C2, B2);
    }, createNode: function(C2, B2, Q2, i) {
      var G2 = new w2.FSNode(C2, B2, Q2, i);
      return w2.hashAddNode(G2), G2;
    }, destroyNode: function(C2) {
      w2.hashRemoveNode(C2);
    }, isRoot: function(C2) {
      return C2 === C2.parent;
    }, isMountpoint: function(C2) {
      return !!C2.mounted;
    }, isFile: function(C2) {
      return (C2 & 61440) === 32768;
    }, isDir: function(C2) {
      return (C2 & 61440) === 16384;
    }, isLink: function(C2) {
      return (C2 & 61440) === 40960;
    }, isChrdev: function(C2) {
      return (C2 & 61440) === 8192;
    }, isBlkdev: function(C2) {
      return (C2 & 61440) === 24576;
    }, isFIFO: function(C2) {
      return (C2 & 61440) === 4096;
    }, isSocket: function(C2) {
      return (C2 & 49152) === 49152;
    }, flagModes: { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }, modeStringToFlags: function(C2) {
      var B2 = w2.flagModes[C2];
      if (typeof B2 > "u")
        throw new Error("Unknown file open mode: " + C2);
      return B2;
    }, flagsToPermissionString: function(C2) {
      var B2 = ["r", "w", "rw"][C2 & 3];
      return C2 & 512 && (B2 += "w"), B2;
    }, nodePermissions: function(C2, B2) {
      return w2.ignorePermissions ? 0 : B2.indexOf("r") !== -1 && !(C2.mode & 292) || B2.indexOf("w") !== -1 && !(C2.mode & 146) || B2.indexOf("x") !== -1 && !(C2.mode & 73) ? 2 : 0;
    }, mayLookup: function(C2) {
      var B2 = w2.nodePermissions(C2, "x");
      return B2 || (C2.node_ops.lookup ? 0 : 2);
    }, mayCreate: function(C2, B2) {
      try {
        var Q2 = w2.lookupNode(C2, B2);
        return 20;
      } catch {
      }
      return w2.nodePermissions(C2, "wx");
    }, mayDelete: function(C2, B2, Q2) {
      var i;
      try {
        i = w2.lookupNode(C2, B2);
      } catch (F2) {
        return F2.errno;
      }
      var G2 = w2.nodePermissions(C2, "wx");
      if (G2)
        return G2;
      if (Q2) {
        if (!w2.isDir(i.mode))
          return 54;
        if (w2.isRoot(i) || w2.getPath(i) === w2.cwd())
          return 10;
      } else if (w2.isDir(i.mode))
        return 31;
      return 0;
    }, mayOpen: function(C2, B2) {
      return C2 ? w2.isLink(C2.mode) ? 32 : w2.isDir(C2.mode) && (w2.flagsToPermissionString(B2) !== "r" || B2 & 512) ? 31 : w2.nodePermissions(C2, w2.flagsToPermissionString(B2)) : 44;
    }, MAX_OPEN_FDS: 4096, nextfd: function(C2, B2) {
      C2 = C2 || 0, B2 = B2 || w2.MAX_OPEN_FDS;
      for (var Q2 = C2; Q2 <= B2; Q2++)
        if (!w2.streams[Q2])
          return Q2;
      throw new w2.ErrnoError(33);
    }, getStream: function(C2) {
      return w2.streams[C2];
    }, createStream: function(C2, B2, Q2) {
      w2.FSStream || (w2.FSStream = function() {
      }, w2.FSStream.prototype = { object: { get: function() {
        return this.node;
      }, set: function(a) {
        this.node = a;
      } }, isRead: { get: function() {
        return (this.flags & 2097155) !== 1;
      } }, isWrite: { get: function() {
        return (this.flags & 2097155) !== 0;
      } }, isAppend: { get: function() {
        return this.flags & 1024;
      } } });
      var i = new w2.FSStream();
      for (var G2 in C2)
        i[G2] = C2[G2];
      C2 = i;
      var F2 = w2.nextfd(B2, Q2);
      return C2.fd = F2, w2.streams[F2] = C2, C2;
    }, closeStream: function(C2) {
      w2.streams[C2] = null;
    }, chrdev_stream_ops: { open: function(C2) {
      var B2 = w2.getDevice(C2.node.rdev);
      C2.stream_ops = B2.stream_ops, C2.stream_ops.open && C2.stream_ops.open(C2);
    }, llseek: function() {
      throw new w2.ErrnoError(70);
    } }, major: function(C2) {
      return C2 >> 8;
    }, minor: function(C2) {
      return C2 & 255;
    }, makedev: function(C2, B2) {
      return C2 << 8 | B2;
    }, registerDevice: function(C2, B2) {
      w2.devices[C2] = { stream_ops: B2 };
    }, getDevice: function(C2) {
      return w2.devices[C2];
    }, getMounts: function(C2) {
      for (var B2 = [], Q2 = [C2]; Q2.length; ) {
        var i = Q2.pop();
        B2.push(i), Q2.push.apply(Q2, i.mounts);
      }
      return B2;
    }, syncfs: function(C2, B2) {
      typeof C2 == "function" && (B2 = C2, C2 = false), w2.syncFSRequests++, w2.syncFSRequests > 1 && z2("warning: " + w2.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
      var Q2 = w2.getMounts(w2.root.mount), i = 0;
      function G2(a) {
        return w2.syncFSRequests--, B2(a);
      }
      function F2(a) {
        if (a)
          return F2.errored ? void 0 : (F2.errored = true, G2(a));
        ++i >= Q2.length && G2(null);
      }
      Q2.forEach(function(a) {
        if (!a.type.syncfs)
          return F2(null);
        a.type.syncfs(a, C2, F2);
      });
    }, mount: function(C2, B2, Q2) {
      var i = Q2 === "/", G2 = !Q2, F2;
      if (i && w2.root)
        throw new w2.ErrnoError(10);
      if (!i && !G2) {
        var a = w2.lookupPath(Q2, { follow_mount: false });
        if (Q2 = a.path, F2 = a.node, w2.isMountpoint(F2))
          throw new w2.ErrnoError(10);
        if (!w2.isDir(F2.mode))
          throw new w2.ErrnoError(54);
      }
      var R2 = { type: C2, opts: B2, mountpoint: Q2, mounts: [] }, h2 = C2.mount(R2);
      return h2.mount = R2, R2.root = h2, i ? w2.root = h2 : F2 && (F2.mounted = R2, F2.mount && F2.mount.mounts.push(R2)), h2;
    }, unmount: function(C2) {
      var B2 = w2.lookupPath(C2, { follow_mount: false });
      if (!w2.isMountpoint(B2.node))
        throw new w2.ErrnoError(28);
      var Q2 = B2.node, i = Q2.mounted, G2 = w2.getMounts(i);
      Object.keys(w2.nameTable).forEach(function(a) {
        for (var R2 = w2.nameTable[a]; R2; ) {
          var h2 = R2.name_next;
          G2.indexOf(R2.mount) !== -1 && w2.destroyNode(R2), R2 = h2;
        }
      }), Q2.mounted = null;
      var F2 = Q2.mount.mounts.indexOf(i);
      Q2.mount.mounts.splice(F2, 1);
    }, lookup: function(C2, B2) {
      return C2.node_ops.lookup(C2, B2);
    }, mknod: function(C2, B2, Q2) {
      var i = w2.lookupPath(C2, { parent: true }), G2 = i.node, F2 = v2.basename(C2);
      if (!F2 || F2 === "." || F2 === "..")
        throw new w2.ErrnoError(28);
      var a = w2.mayCreate(G2, F2);
      if (a)
        throw new w2.ErrnoError(a);
      if (!G2.node_ops.mknod)
        throw new w2.ErrnoError(63);
      return G2.node_ops.mknod(G2, F2, B2, Q2);
    }, create: function(C2, B2) {
      return B2 = B2 !== void 0 ? B2 : 438, B2 &= 4095, B2 |= 32768, w2.mknod(C2, B2, 0);
    }, mkdir: function(C2, B2) {
      return B2 = B2 !== void 0 ? B2 : 511, B2 &= 1023, B2 |= 16384, w2.mknod(C2, B2, 0);
    }, mkdirTree: function(C2, B2) {
      for (var Q2 = C2.split("/"), i = "", G2 = 0; G2 < Q2.length; ++G2)
        if (Q2[G2]) {
          i += "/" + Q2[G2];
          try {
            w2.mkdir(i, B2);
          } catch (F2) {
            if (F2.errno != 20)
              throw F2;
          }
        }
    }, mkdev: function(C2, B2, Q2) {
      return typeof Q2 > "u" && (Q2 = B2, B2 = 438), B2 |= 8192, w2.mknod(C2, B2, Q2);
    }, symlink: function(C2, B2) {
      if (!qI.resolve(C2))
        throw new w2.ErrnoError(44);
      var Q2 = w2.lookupPath(B2, { parent: true }), i = Q2.node;
      if (!i)
        throw new w2.ErrnoError(44);
      var G2 = v2.basename(B2), F2 = w2.mayCreate(i, G2);
      if (F2)
        throw new w2.ErrnoError(F2);
      if (!i.node_ops.symlink)
        throw new w2.ErrnoError(63);
      return i.node_ops.symlink(i, G2, C2);
    }, rename: function(C2, B2) {
      var Q2 = v2.dirname(C2), i = v2.dirname(B2), G2 = v2.basename(C2), F2 = v2.basename(B2), a, R2, h2;
      if (a = w2.lookupPath(C2, { parent: true }), R2 = a.node, a = w2.lookupPath(B2, { parent: true }), h2 = a.node, !R2 || !h2)
        throw new w2.ErrnoError(44);
      if (R2.mount !== h2.mount)
        throw new w2.ErrnoError(75);
      var K2 = w2.lookupNode(R2, G2), M2 = qI.relative(C2, i);
      if (M2.charAt(0) !== ".")
        throw new w2.ErrnoError(28);
      if (M2 = qI.relative(B2, Q2), M2.charAt(0) !== ".")
        throw new w2.ErrnoError(55);
      var J2;
      try {
        J2 = w2.lookupNode(h2, F2);
      } catch {
      }
      if (K2 !== J2) {
        var S2 = w2.isDir(K2.mode), Y2 = w2.mayDelete(R2, G2, S2);
        if (Y2)
          throw new w2.ErrnoError(Y2);
        if (Y2 = J2 ? w2.mayDelete(h2, F2, S2) : w2.mayCreate(h2, F2), Y2)
          throw new w2.ErrnoError(Y2);
        if (!R2.node_ops.rename)
          throw new w2.ErrnoError(63);
        if (w2.isMountpoint(K2) || J2 && w2.isMountpoint(J2))
          throw new w2.ErrnoError(10);
        if (h2 !== R2 && (Y2 = w2.nodePermissions(R2, "w"), Y2))
          throw new w2.ErrnoError(Y2);
        try {
          w2.trackingDelegate.willMovePath && w2.trackingDelegate.willMovePath(C2, B2);
        } catch (H2) {
          z2("FS.trackingDelegate['willMovePath']('" + C2 + "', '" + B2 + "') threw an exception: " + H2.message);
        }
        w2.hashRemoveNode(K2);
        try {
          R2.node_ops.rename(K2, h2, F2);
        } catch (H2) {
          throw H2;
        } finally {
          w2.hashAddNode(K2);
        }
        try {
          w2.trackingDelegate.onMovePath && w2.trackingDelegate.onMovePath(C2, B2);
        } catch (H2) {
          z2("FS.trackingDelegate['onMovePath']('" + C2 + "', '" + B2 + "') threw an exception: " + H2.message);
        }
      }
    }, rmdir: function(C2) {
      var B2 = w2.lookupPath(C2, { parent: true }), Q2 = B2.node, i = v2.basename(C2), G2 = w2.lookupNode(Q2, i), F2 = w2.mayDelete(Q2, i, true);
      if (F2)
        throw new w2.ErrnoError(F2);
      if (!Q2.node_ops.rmdir)
        throw new w2.ErrnoError(63);
      if (w2.isMountpoint(G2))
        throw new w2.ErrnoError(10);
      try {
        w2.trackingDelegate.willDeletePath && w2.trackingDelegate.willDeletePath(C2);
      } catch (a) {
        z2("FS.trackingDelegate['willDeletePath']('" + C2 + "') threw an exception: " + a.message);
      }
      Q2.node_ops.rmdir(Q2, i), w2.destroyNode(G2);
      try {
        w2.trackingDelegate.onDeletePath && w2.trackingDelegate.onDeletePath(C2);
      } catch (a) {
        z2("FS.trackingDelegate['onDeletePath']('" + C2 + "') threw an exception: " + a.message);
      }
    }, readdir: function(C2) {
      var B2 = w2.lookupPath(C2, { follow: true }), Q2 = B2.node;
      if (!Q2.node_ops.readdir)
        throw new w2.ErrnoError(54);
      return Q2.node_ops.readdir(Q2);
    }, unlink: function(C2) {
      var B2 = w2.lookupPath(C2, { parent: true }), Q2 = B2.node, i = v2.basename(C2), G2 = w2.lookupNode(Q2, i), F2 = w2.mayDelete(Q2, i, false);
      if (F2)
        throw new w2.ErrnoError(F2);
      if (!Q2.node_ops.unlink)
        throw new w2.ErrnoError(63);
      if (w2.isMountpoint(G2))
        throw new w2.ErrnoError(10);
      try {
        w2.trackingDelegate.willDeletePath && w2.trackingDelegate.willDeletePath(C2);
      } catch (a) {
        z2("FS.trackingDelegate['willDeletePath']('" + C2 + "') threw an exception: " + a.message);
      }
      Q2.node_ops.unlink(Q2, i), w2.destroyNode(G2);
      try {
        w2.trackingDelegate.onDeletePath && w2.trackingDelegate.onDeletePath(C2);
      } catch (a) {
        z2("FS.trackingDelegate['onDeletePath']('" + C2 + "') threw an exception: " + a.message);
      }
    }, readlink: function(C2) {
      var B2 = w2.lookupPath(C2), Q2 = B2.node;
      if (!Q2)
        throw new w2.ErrnoError(44);
      if (!Q2.node_ops.readlink)
        throw new w2.ErrnoError(28);
      return qI.resolve(w2.getPath(Q2.parent), Q2.node_ops.readlink(Q2));
    }, stat: function(C2, B2) {
      var Q2 = w2.lookupPath(C2, { follow: !B2 }), i = Q2.node;
      if (!i)
        throw new w2.ErrnoError(44);
      if (!i.node_ops.getattr)
        throw new w2.ErrnoError(63);
      return i.node_ops.getattr(i);
    }, lstat: function(C2) {
      return w2.stat(C2, true);
    }, chmod: function(C2, B2, Q2) {
      var i;
      if (typeof C2 == "string") {
        var G2 = w2.lookupPath(C2, { follow: !Q2 });
        i = G2.node;
      } else
        i = C2;
      if (!i.node_ops.setattr)
        throw new w2.ErrnoError(63);
      i.node_ops.setattr(i, { mode: B2 & 4095 | i.mode & -4096, timestamp: Date.now() });
    }, lchmod: function(C2, B2) {
      w2.chmod(C2, B2, true);
    }, fchmod: function(C2, B2) {
      var Q2 = w2.getStream(C2);
      if (!Q2)
        throw new w2.ErrnoError(8);
      w2.chmod(Q2.node, B2);
    }, chown: function(C2, B2, Q2, i) {
      var G2;
      if (typeof C2 == "string") {
        var F2 = w2.lookupPath(C2, { follow: !i });
        G2 = F2.node;
      } else
        G2 = C2;
      if (!G2.node_ops.setattr)
        throw new w2.ErrnoError(63);
      G2.node_ops.setattr(G2, { timestamp: Date.now() });
    }, lchown: function(C2, B2, Q2) {
      w2.chown(C2, B2, Q2, true);
    }, fchown: function(C2, B2, Q2) {
      var i = w2.getStream(C2);
      if (!i)
        throw new w2.ErrnoError(8);
      w2.chown(i.node, B2, Q2);
    }, truncate: function(C2, B2) {
      if (B2 < 0)
        throw new w2.ErrnoError(28);
      var Q2;
      if (typeof C2 == "string") {
        var i = w2.lookupPath(C2, { follow: true });
        Q2 = i.node;
      } else
        Q2 = C2;
      if (!Q2.node_ops.setattr)
        throw new w2.ErrnoError(63);
      if (w2.isDir(Q2.mode))
        throw new w2.ErrnoError(31);
      if (!w2.isFile(Q2.mode))
        throw new w2.ErrnoError(28);
      var G2 = w2.nodePermissions(Q2, "w");
      if (G2)
        throw new w2.ErrnoError(G2);
      Q2.node_ops.setattr(Q2, { size: B2, timestamp: Date.now() });
    }, ftruncate: function(C2, B2) {
      var Q2 = w2.getStream(C2);
      if (!Q2)
        throw new w2.ErrnoError(8);
      if (!(Q2.flags & 2097155))
        throw new w2.ErrnoError(28);
      w2.truncate(Q2.node, B2);
    }, utime: function(C2, B2, Q2) {
      var i = w2.lookupPath(C2, { follow: true }), G2 = i.node;
      G2.node_ops.setattr(G2, { timestamp: Math.max(B2, Q2) });
    }, open: function(C2, B2, Q2, i, G2) {
      if (C2 === "")
        throw new w2.ErrnoError(44);
      B2 = typeof B2 == "string" ? w2.modeStringToFlags(B2) : B2, Q2 = typeof Q2 > "u" ? 438 : Q2, B2 & 64 ? Q2 = Q2 & 4095 | 32768 : Q2 = 0;
      var F2;
      if (typeof C2 == "object")
        F2 = C2;
      else {
        C2 = v2.normalize(C2);
        try {
          var a = w2.lookupPath(C2, { follow: !(B2 & 131072) });
          F2 = a.node;
        } catch {
        }
      }
      var R2 = false;
      if (B2 & 64)
        if (F2) {
          if (B2 & 128)
            throw new w2.ErrnoError(20);
        } else
          F2 = w2.mknod(C2, Q2, 0), R2 = true;
      if (!F2)
        throw new w2.ErrnoError(44);
      if (w2.isChrdev(F2.mode) && (B2 &= -513), B2 & 65536 && !w2.isDir(F2.mode))
        throw new w2.ErrnoError(54);
      if (!R2) {
        var h2 = w2.mayOpen(F2, B2);
        if (h2)
          throw new w2.ErrnoError(h2);
      }
      B2 & 512 && w2.truncate(F2, 0), B2 &= -131713;
      var K2 = w2.createStream({ node: F2, path: w2.getPath(F2), flags: B2, seekable: true, position: 0, stream_ops: F2.stream_ops, ungotten: [], error: false }, i, G2);
      K2.stream_ops.open && K2.stream_ops.open(K2), g.logReadFiles && !(B2 & 1) && (w2.readFiles || (w2.readFiles = {}), C2 in w2.readFiles || (w2.readFiles[C2] = 1, z2("FS.trackingDelegate error on read file: " + C2)));
      try {
        if (w2.trackingDelegate.onOpenFile) {
          var M2 = 0;
          (B2 & 2097155) !== 1 && (M2 |= w2.tracking.openFlags.READ), B2 & 2097155 && (M2 |= w2.tracking.openFlags.WRITE), w2.trackingDelegate.onOpenFile(C2, M2);
        }
      } catch (J2) {
        z2("FS.trackingDelegate['onOpenFile']('" + C2 + "', flags) threw an exception: " + J2.message);
      }
      return K2;
    }, close: function(C2) {
      if (w2.isClosed(C2))
        throw new w2.ErrnoError(8);
      C2.getdents && (C2.getdents = null);
      try {
        C2.stream_ops.close && C2.stream_ops.close(C2);
      } catch (B2) {
        throw B2;
      } finally {
        w2.closeStream(C2.fd);
      }
      C2.fd = null;
    }, isClosed: function(C2) {
      return C2.fd === null;
    }, llseek: function(C2, B2, Q2) {
      if (w2.isClosed(C2))
        throw new w2.ErrnoError(8);
      if (!C2.seekable || !C2.stream_ops.llseek)
        throw new w2.ErrnoError(70);
      if (Q2 != 0 && Q2 != 1 && Q2 != 2)
        throw new w2.ErrnoError(28);
      return C2.position = C2.stream_ops.llseek(C2, B2, Q2), C2.ungotten = [], C2.position;
    }, read: function(C2, B2, Q2, i, G2) {
      if (i < 0 || G2 < 0)
        throw new w2.ErrnoError(28);
      if (w2.isClosed(C2))
        throw new w2.ErrnoError(8);
      if ((C2.flags & 2097155) === 1)
        throw new w2.ErrnoError(8);
      if (w2.isDir(C2.node.mode))
        throw new w2.ErrnoError(31);
      if (!C2.stream_ops.read)
        throw new w2.ErrnoError(28);
      var F2 = typeof G2 < "u";
      if (!F2)
        G2 = C2.position;
      else if (!C2.seekable)
        throw new w2.ErrnoError(70);
      var a = C2.stream_ops.read(C2, B2, Q2, i, G2);
      return F2 || (C2.position += a), a;
    }, write: function(C2, B2, Q2, i, G2, F2) {
      if (i < 0 || G2 < 0)
        throw new w2.ErrnoError(28);
      if (w2.isClosed(C2))
        throw new w2.ErrnoError(8);
      if (!(C2.flags & 2097155))
        throw new w2.ErrnoError(8);
      if (w2.isDir(C2.node.mode))
        throw new w2.ErrnoError(31);
      if (!C2.stream_ops.write)
        throw new w2.ErrnoError(28);
      C2.seekable && C2.flags & 1024 && w2.llseek(C2, 0, 2);
      var a = typeof G2 < "u";
      if (!a)
        G2 = C2.position;
      else if (!C2.seekable)
        throw new w2.ErrnoError(70);
      var R2 = C2.stream_ops.write(C2, B2, Q2, i, G2, F2);
      a || (C2.position += R2);
      try {
        C2.path && w2.trackingDelegate.onWriteToFile && w2.trackingDelegate.onWriteToFile(C2.path);
      } catch (h2) {
        z2("FS.trackingDelegate['onWriteToFile']('" + C2.path + "') threw an exception: " + h2.message);
      }
      return R2;
    }, allocate: function(C2, B2, Q2) {
      if (w2.isClosed(C2))
        throw new w2.ErrnoError(8);
      if (B2 < 0 || Q2 <= 0)
        throw new w2.ErrnoError(28);
      if (!(C2.flags & 2097155))
        throw new w2.ErrnoError(8);
      if (!w2.isFile(C2.node.mode) && !w2.isDir(C2.node.mode))
        throw new w2.ErrnoError(43);
      if (!C2.stream_ops.allocate)
        throw new w2.ErrnoError(138);
      C2.stream_ops.allocate(C2, B2, Q2);
    }, mmap: function(C2, B2, Q2, i, G2, F2) {
      if (G2 & 2 && !(F2 & 2) && (C2.flags & 2097155) !== 2)
        throw new w2.ErrnoError(2);
      if ((C2.flags & 2097155) === 1)
        throw new w2.ErrnoError(2);
      if (!C2.stream_ops.mmap)
        throw new w2.ErrnoError(43);
      return C2.stream_ops.mmap(C2, B2, Q2, i, G2, F2);
    }, msync: function(C2, B2, Q2, i, G2) {
      return !C2 || !C2.stream_ops.msync ? 0 : C2.stream_ops.msync(C2, B2, Q2, i, G2);
    }, munmap: function(C2) {
      return 0;
    }, ioctl: function(C2, B2, Q2) {
      if (!C2.stream_ops.ioctl)
        throw new w2.ErrnoError(59);
      return C2.stream_ops.ioctl(C2, B2, Q2);
    }, readFile: function(C2, B2) {
      if (B2 = B2 || {}, B2.flags = B2.flags || 0, B2.encoding = B2.encoding || "binary", B2.encoding !== "utf8" && B2.encoding !== "binary")
        throw new Error('Invalid encoding type "' + B2.encoding + '"');
      var Q2, i = w2.open(C2, B2.flags), G2 = w2.stat(C2), F2 = G2.size, a = new Uint8Array(F2);
      return w2.read(i, a, 0, F2, 0), B2.encoding === "utf8" ? Q2 = ag2(a, 0) : B2.encoding === "binary" && (Q2 = a), w2.close(i), Q2;
    }, writeFile: function(C2, B2, Q2) {
      Q2 = Q2 || {}, Q2.flags = Q2.flags || 577;
      var i = w2.open(C2, Q2.flags, Q2.mode);
      if (typeof B2 == "string") {
        var G2 = new Uint8Array(hC(B2) + 1), F2 = eB(B2, G2, 0, G2.length);
        w2.write(i, G2, 0, F2, void 0, Q2.canOwn);
      } else if (ArrayBuffer.isView(B2))
        w2.write(i, B2, 0, B2.byteLength, void 0, Q2.canOwn);
      else
        throw new Error("Unsupported data type");
      w2.close(i);
    }, cwd: function() {
      return w2.currentPath;
    }, chdir: function(C2) {
      var B2 = w2.lookupPath(C2, { follow: true });
      if (B2.node === null)
        throw new w2.ErrnoError(44);
      if (!w2.isDir(B2.node.mode))
        throw new w2.ErrnoError(54);
      var Q2 = w2.nodePermissions(B2.node, "x");
      if (Q2)
        throw new w2.ErrnoError(Q2);
      w2.currentPath = B2.path;
    }, createDefaultDirectories: function() {
      w2.mkdir("/tmp"), w2.mkdir("/home"), w2.mkdir("/home/web_user");
    }, createDefaultDevices: function() {
      w2.mkdir("/dev"), w2.registerDevice(w2.makedev(1, 3), { read: function() {
        return 0;
      }, write: function(B2, Q2, i, G2, F2) {
        return G2;
      } }), w2.mkdev("/dev/null", w2.makedev(1, 3)), Ig2.register(w2.makedev(5, 0), Ig2.default_tty_ops), Ig2.register(w2.makedev(6, 0), Ig2.default_tty1_ops), w2.mkdev("/dev/tty", w2.makedev(5, 0)), w2.mkdev("/dev/tty1", w2.makedev(6, 0));
      var C2 = fG();
      w2.createDevice("/dev", "random", C2), w2.createDevice("/dev", "urandom", C2), w2.mkdir("/dev/shm"), w2.mkdir("/dev/shm/tmp");
    }, createSpecialDirectories: function() {
      w2.mkdir("/proc"), w2.mkdir("/proc/self"), w2.mkdir("/proc/self/fd"), w2.mount({ mount: function() {
        var C2 = w2.createNode("/proc/self", "fd", 16895, 73);
        return C2.node_ops = { lookup: function(B2, Q2) {
          var i = +Q2, G2 = w2.getStream(i);
          if (!G2)
            throw new w2.ErrnoError(8);
          var F2 = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: function() {
            return G2.path;
          } } };
          return F2.parent = F2, F2;
        } }, C2;
      } }, {}, "/proc/self/fd");
    }, createStandardStreams: function() {
      g.stdin ? w2.createDevice("/dev", "stdin", g.stdin) : w2.symlink("/dev/tty", "/dev/stdin"), g.stdout ? w2.createDevice("/dev", "stdout", null, g.stdout) : w2.symlink("/dev/tty", "/dev/stdout"), g.stderr ? w2.createDevice("/dev", "stderr", null, g.stderr) : w2.symlink("/dev/tty1", "/dev/stderr"), w2.open("/dev/stdin", 0), w2.open("/dev/stdout", 1), w2.open("/dev/stderr", 1);
    }, ensureErrnoError: function() {
      w2.ErrnoError || (w2.ErrnoError = function(B2, Q2) {
        this.node = Q2, this.setErrno = function(i) {
          this.errno = i;
        }, this.setErrno(B2), this.message = "FS error";
      }, w2.ErrnoError.prototype = new Error(), w2.ErrnoError.prototype.constructor = w2.ErrnoError, [44].forEach(function(C2) {
        w2.genericErrors[C2] = new w2.ErrnoError(C2), w2.genericErrors[C2].stack = "<generic error, no stack>";
      }));
    }, staticInit: function() {
      w2.ensureErrnoError(), w2.nameTable = new Array(4096), w2.mount(m2, {}, "/"), w2.createDefaultDirectories(), w2.createDefaultDevices(), w2.createSpecialDirectories(), w2.filesystems = { MEMFS: m2 };
    }, init: function(C2, B2, Q2) {
      w2.init.initialized = true, w2.ensureErrnoError(), g.stdin = C2 || g.stdin, g.stdout = B2 || g.stdout, g.stderr = Q2 || g.stderr, w2.createStandardStreams();
    }, quit: function() {
      w2.init.initialized = false;
      var C2 = g._fflush;
      C2 && C2(0);
      for (var B2 = 0; B2 < w2.streams.length; B2++) {
        var Q2 = w2.streams[B2];
        Q2 && w2.close(Q2);
      }
    }, getMode: function(C2, B2) {
      var Q2 = 0;
      return C2 && (Q2 |= 365), B2 && (Q2 |= 146), Q2;
    }, findObject: function(C2, B2) {
      var Q2 = w2.analyzePath(C2, B2);
      return Q2.exists ? Q2.object : null;
    }, analyzePath: function(C2, B2) {
      try {
        var Q2 = w2.lookupPath(C2, { follow: !B2 });
        C2 = Q2.path;
      } catch {
      }
      var i = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };
      try {
        var Q2 = w2.lookupPath(C2, { parent: true });
        i.parentExists = true, i.parentPath = Q2.path, i.parentObject = Q2.node, i.name = v2.basename(C2), Q2 = w2.lookupPath(C2, { follow: !B2 }), i.exists = true, i.path = Q2.path, i.object = Q2.node, i.name = Q2.node.name, i.isRoot = Q2.path === "/";
      } catch (G2) {
        i.error = G2.errno;
      }
      return i;
    }, createPath: function(C2, B2, Q2, i) {
      C2 = typeof C2 == "string" ? C2 : w2.getPath(C2);
      for (var G2 = B2.split("/").reverse(); G2.length; ) {
        var F2 = G2.pop();
        if (F2) {
          var a = v2.join2(C2, F2);
          try {
            w2.mkdir(a);
          } catch {
          }
          C2 = a;
        }
      }
      return a;
    }, createFile: function(C2, B2, Q2, i, G2) {
      var F2 = v2.join2(typeof C2 == "string" ? C2 : w2.getPath(C2), B2), a = w2.getMode(i, G2);
      return w2.create(F2, a);
    }, createDataFile: function(C2, B2, Q2, i, G2, F2) {
      var a = B2 ? v2.join2(typeof C2 == "string" ? C2 : w2.getPath(C2), B2) : C2, R2 = w2.getMode(i, G2), h2 = w2.create(a, R2);
      if (Q2) {
        if (typeof Q2 == "string") {
          for (var K2 = new Array(Q2.length), M2 = 0, J2 = Q2.length; M2 < J2; ++M2)
            K2[M2] = Q2.charCodeAt(M2);
          Q2 = K2;
        }
        w2.chmod(h2, R2 | 146);
        var S2 = w2.open(h2, 577);
        w2.write(S2, Q2, 0, Q2.length, 0, F2), w2.close(S2), w2.chmod(h2, R2);
      }
      return h2;
    }, createDevice: function(C2, B2, Q2, i) {
      var G2 = v2.join2(typeof C2 == "string" ? C2 : w2.getPath(C2), B2), F2 = w2.getMode(!!Q2, !!i);
      w2.createDevice.major || (w2.createDevice.major = 64);
      var a = w2.makedev(w2.createDevice.major++, 0);
      return w2.registerDevice(a, { open: function(R2) {
        R2.seekable = false;
      }, close: function(R2) {
        i && i.buffer && i.buffer.length && i(10);
      }, read: function(R2, h2, K2, M2, J2) {
        for (var S2 = 0, Y2 = 0; Y2 < M2; Y2++) {
          var H2;
          try {
            H2 = Q2();
          } catch {
            throw new w2.ErrnoError(29);
          }
          if (H2 === void 0 && S2 === 0)
            throw new w2.ErrnoError(6);
          if (H2 == null)
            break;
          S2++, h2[K2 + Y2] = H2;
        }
        return S2 && (R2.node.timestamp = Date.now()), S2;
      }, write: function(R2, h2, K2, M2, J2) {
        for (var S2 = 0; S2 < M2; S2++)
          try {
            i(h2[K2 + S2]);
          } catch {
            throw new w2.ErrnoError(29);
          }
        return M2 && (R2.node.timestamp = Date.now()), S2;
      } }), w2.mkdev(G2, F2, a);
    }, forceLoadFile: function(C2) {
      if (C2.isDevice || C2.isFolder || C2.link || C2.contents)
        return true;
      if (typeof XMLHttpRequest < "u")
        throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
      if (T2)
        try {
          C2.contents = fC(T2(C2.url), true), C2.usedBytes = C2.contents.length;
        } catch {
          throw new w2.ErrnoError(29);
        }
      else
        throw new Error("Cannot load without read() or XMLHttpRequest.");
    }, createLazyFile: function(C2, B2, Q2, i, G2) {
      function F2() {
        this.lengthKnown = false, this.chunks = [];
      }
      if (F2.prototype.get = function(S2) {
        if (!(S2 > this.length - 1 || S2 < 0)) {
          var Y2 = S2 % this.chunkSize, H2 = S2 / this.chunkSize | 0;
          return this.getter(H2)[Y2];
        }
      }, F2.prototype.setDataGetter = function(S2) {
        this.getter = S2;
      }, F2.prototype.cacheLength = function() {
        var S2 = new XMLHttpRequest();
        if (S2.open("HEAD", Q2, false), S2.send(null), !(S2.status >= 200 && S2.status < 300 || S2.status === 304))
          throw new Error("Couldn't load " + Q2 + ". Status: " + S2.status);
        var Y2 = Number(S2.getResponseHeader("Content-length")), H2, W2 = (H2 = S2.getResponseHeader("Accept-Ranges")) && H2 === "bytes", $ = (H2 = S2.getResponseHeader("Content-Encoding")) && H2 === "gzip", X2 = 1024 * 1024;
        W2 || (X2 = Y2);
        var c2 = function(O2, Z2) {
          if (O2 > Z2)
            throw new Error("invalid range (" + O2 + ", " + Z2 + ") or no bytes requested!");
          if (Z2 > Y2 - 1)
            throw new Error("only " + Y2 + " bytes available! programmer error!");
          var p2 = new XMLHttpRequest();
          if (p2.open("GET", Q2, false), Y2 !== X2 && p2.setRequestHeader("Range", "bytes=" + O2 + "-" + Z2), typeof Uint8Array < "u" && (p2.responseType = "arraybuffer"), p2.overrideMimeType && p2.overrideMimeType("text/plain; charset=x-user-defined"), p2.send(null), !(p2.status >= 200 && p2.status < 300 || p2.status === 304))
            throw new Error("Couldn't load " + Q2 + ". Status: " + p2.status);
          return p2.response !== void 0 ? new Uint8Array(p2.response || []) : fC(p2.responseText || "", true);
        }, r2 = this;
        r2.setDataGetter(function(O2) {
          var Z2 = O2 * X2, p2 = (O2 + 1) * X2 - 1;
          if (p2 = Math.min(p2, Y2 - 1), typeof r2.chunks[O2] > "u" && (r2.chunks[O2] = c2(Z2, p2)), typeof r2.chunks[O2] > "u")
            throw new Error("doXHR failed!");
          return r2.chunks[O2];
        }), ($ || !Y2) && (X2 = Y2 = 1, Y2 = this.getter(0).length, X2 = Y2, f2("LazyFiles on gzip forces download of the whole file when length is accessed")), this._length = Y2, this._chunkSize = X2, this.lengthKnown = true;
      }, typeof XMLHttpRequest < "u") {
        if (!U2)
          throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
        var a = new F2();
        Object.defineProperties(a, { length: { get: function() {
          return this.lengthKnown || this.cacheLength(), this._length;
        } }, chunkSize: { get: function() {
          return this.lengthKnown || this.cacheLength(), this._chunkSize;
        } } });
        var R2 = { isDevice: false, contents: a };
      } else
        var R2 = { isDevice: false, url: Q2 };
      var h2 = w2.createFile(C2, B2, R2, i, G2);
      R2.contents ? h2.contents = R2.contents : R2.url && (h2.contents = null, h2.url = R2.url), Object.defineProperties(h2, { usedBytes: { get: function() {
        return this.contents.length;
      } } });
      var K2 = {}, M2 = Object.keys(h2.stream_ops);
      return M2.forEach(function(J2) {
        var S2 = h2.stream_ops[J2];
        K2[J2] = function() {
          return w2.forceLoadFile(h2), S2.apply(null, arguments);
        };
      }), K2.read = function(S2, Y2, H2, W2, $) {
        w2.forceLoadFile(h2);
        var X2 = S2.node.contents;
        if ($ >= X2.length)
          return 0;
        var c2 = Math.min(X2.length - $, W2);
        if (X2.slice)
          for (var r2 = 0; r2 < c2; r2++)
            Y2[H2 + r2] = X2[$ + r2];
        else
          for (var r2 = 0; r2 < c2; r2++)
            Y2[H2 + r2] = X2.get($ + r2);
        return c2;
      }, h2.stream_ops = K2, h2;
    }, createPreloadedFile: function(C2, B2, Q2, i, G2, F2, a, R2, h2, K2) {
      k2.init();
      var M2 = B2 ? qI.resolve(v2.join2(C2, B2)) : C2;
      function J2(S2) {
        function Y2(W2) {
          K2 && K2(), R2 || w2.createDataFile(C2, B2, W2, i, G2, h2), F2 && F2(), Vg2();
        }
        var H2 = false;
        g.preloadPlugins.forEach(function(W2) {
          H2 || W2.canHandle(M2) && (W2.handle(S2, M2, Y2, function() {
            a && a(), Vg2();
          }), H2 = true);
        }), H2 || Y2(S2);
      }
      KC(), typeof Q2 == "string" ? k2.asyncLoad(Q2, function(S2) {
        J2(S2);
      }, a) : J2(Q2);
    }, indexedDB: function() {
      return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
    }, DB_NAME: function() {
      return "EM_FS_" + window.location.pathname;
    }, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB: function(C2, B2, Q2) {
      B2 = B2 || function() {
      }, Q2 = Q2 || function() {
      };
      var i = w2.indexedDB();
      try {
        var G2 = i.open(w2.DB_NAME(), w2.DB_VERSION);
      } catch (F2) {
        return Q2(F2);
      }
      G2.onupgradeneeded = function() {
        f2("creating db");
        var a = G2.result;
        a.createObjectStore(w2.DB_STORE_NAME);
      }, G2.onsuccess = function() {
        var a = G2.result, R2 = a.transaction([w2.DB_STORE_NAME], "readwrite"), h2 = R2.objectStore(w2.DB_STORE_NAME), K2 = 0, M2 = 0, J2 = C2.length;
        function S2() {
          M2 == 0 ? B2() : Q2();
        }
        C2.forEach(function(Y2) {
          var H2 = h2.put(w2.analyzePath(Y2).object.contents, Y2);
          H2.onsuccess = function() {
            K2++, K2 + M2 == J2 && S2();
          }, H2.onerror = function() {
            M2++, K2 + M2 == J2 && S2();
          };
        }), R2.onerror = Q2;
      }, G2.onerror = Q2;
    }, loadFilesFromDB: function(C2, B2, Q2) {
      B2 = B2 || function() {
      }, Q2 = Q2 || function() {
      };
      var i = w2.indexedDB();
      try {
        var G2 = i.open(w2.DB_NAME(), w2.DB_VERSION);
      } catch (F2) {
        return Q2(F2);
      }
      G2.onupgradeneeded = Q2, G2.onsuccess = function() {
        var a = G2.result;
        try {
          var R2 = a.transaction([w2.DB_STORE_NAME], "readonly");
        } catch (Y2) {
          Q2(Y2);
          return;
        }
        var h2 = R2.objectStore(w2.DB_STORE_NAME), K2 = 0, M2 = 0, J2 = C2.length;
        function S2() {
          M2 == 0 ? B2() : Q2();
        }
        C2.forEach(function(Y2) {
          var H2 = h2.get(Y2);
          H2.onsuccess = function() {
            w2.analyzePath(Y2).exists && w2.unlink(Y2), w2.createDataFile(v2.dirname(Y2), v2.basename(Y2), H2.result, true, true, true), K2++, K2 + M2 == J2 && S2();
          }, H2.onerror = function() {
            M2++, K2 + M2 == J2 && S2();
          };
        }), R2.onerror = Q2;
      }, G2.onerror = Q2;
    } }, UA = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(C2, B2) {
      if (B2[0] !== "/") {
        var Q2;
        if (C2 === -100)
          Q2 = w2.cwd();
        else {
          var i = w2.getStream(C2);
          if (!i)
            throw new w2.ErrnoError(8);
          Q2 = i.path;
        }
        B2 = v2.join2(Q2, B2);
      }
      return B2;
    }, doStat: function(C2, B2, Q2) {
      try {
        var i = C2(B2);
      } catch (G2) {
        if (G2 && G2.node && v2.normalize(B2) !== v2.normalize(w2.getPath(G2.node)))
          return -54;
        throw G2;
      }
      return q2[Q2 >> 2] = i.dev, q2[Q2 + 4 >> 2] = 0, q2[Q2 + 8 >> 2] = i.ino, q2[Q2 + 12 >> 2] = i.mode, q2[Q2 + 16 >> 2] = i.nlink, q2[Q2 + 20 >> 2] = i.uid, q2[Q2 + 24 >> 2] = i.gid, q2[Q2 + 28 >> 2] = i.rdev, q2[Q2 + 32 >> 2] = 0, rI = [i.size >>> 0, (tA = i.size, +Math.abs(tA) >= 1 ? tA > 0 ? (Math.min(+Math.floor(tA / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tA - +(~~tA >>> 0)) / 4294967296) >>> 0 : 0)], q2[Q2 + 40 >> 2] = rI[0], q2[Q2 + 44 >> 2] = rI[1], q2[Q2 + 48 >> 2] = 4096, q2[Q2 + 52 >> 2] = i.blocks, q2[Q2 + 56 >> 2] = i.atime.getTime() / 1e3 | 0, q2[Q2 + 60 >> 2] = 0, q2[Q2 + 64 >> 2] = i.mtime.getTime() / 1e3 | 0, q2[Q2 + 68 >> 2] = 0, q2[Q2 + 72 >> 2] = i.ctime.getTime() / 1e3 | 0, q2[Q2 + 76 >> 2] = 0, rI = [i.ino >>> 0, (tA = i.ino, +Math.abs(tA) >= 1 ? tA > 0 ? (Math.min(+Math.floor(tA / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tA - +(~~tA >>> 0)) / 4294967296) >>> 0 : 0)], q2[Q2 + 80 >> 2] = rI[0], q2[Q2 + 84 >> 2] = rI[1], 0;
    }, doMsync: function(C2, B2, Q2, i, G2) {
      var F2 = mA.slice(C2, C2 + Q2);
      w2.msync(B2, F2, G2, Q2, i);
    }, doMkdir: function(C2, B2) {
      return C2 = v2.normalize(C2), C2[C2.length - 1] === "/" && (C2 = C2.substr(0, C2.length - 1)), w2.mkdir(C2, B2, 0), 0;
    }, doMknod: function(C2, B2, Q2) {
      switch (B2 & 61440) {
        case 32768:
        case 8192:
        case 24576:
        case 4096:
        case 49152:
          break;
        default:
          return -28;
      }
      return w2.mknod(C2, B2, Q2), 0;
    }, doReadlink: function(C2, B2, Q2) {
      if (Q2 <= 0)
        return -28;
      var i = w2.readlink(C2), G2 = Math.min(Q2, hC(i)), F2 = nA[B2 + G2];
      return yE(i, B2, Q2 + 1), nA[B2 + G2] = F2, G2;
    }, doAccess: function(C2, B2) {
      if (B2 & -8)
        return -28;
      var Q2, i = w2.lookupPath(C2, { follow: true });
      if (Q2 = i.node, !Q2)
        return -44;
      var G2 = "";
      return B2 & 4 && (G2 += "r"), B2 & 2 && (G2 += "w"), B2 & 1 && (G2 += "x"), G2 && w2.nodePermissions(Q2, G2) ? -2 : 0;
    }, doDup: function(C2, B2, Q2) {
      var i = w2.getStream(Q2);
      return i && w2.close(i), w2.open(C2, B2, 0, Q2, Q2).fd;
    }, doReadv: function(C2, B2, Q2, i) {
      for (var G2 = 0, F2 = 0; F2 < Q2; F2++) {
        var a = q2[B2 + F2 * 8 >> 2], R2 = q2[B2 + (F2 * 8 + 4) >> 2], h2 = w2.read(C2, nA, a, R2, i);
        if (h2 < 0)
          return -1;
        if (G2 += h2, h2 < R2)
          break;
      }
      return G2;
    }, doWritev: function(C2, B2, Q2, i) {
      for (var G2 = 0, F2 = 0; F2 < Q2; F2++) {
        var a = q2[B2 + F2 * 8 >> 2], R2 = q2[B2 + (F2 * 8 + 4) >> 2], h2 = w2.write(C2, nA, a, R2, i);
        if (h2 < 0)
          return -1;
        G2 += h2;
      }
      return G2;
    }, varargs: void 0, get: function() {
      UA.varargs += 4;
      var C2 = q2[UA.varargs - 4 >> 2];
      return C2;
    }, getStr: function(C2) {
      var B2 = RC(C2);
      return B2;
    }, getStreamFromFD: function(C2) {
      var B2 = w2.getStream(C2);
      if (!B2)
        throw new w2.ErrnoError(8);
      return B2;
    }, get64: function(C2, B2) {
      return C2;
    } };
    function VG(C2, B2, Q2) {
      UA.varargs = Q2;
      try {
        var i = UA.getStreamFromFD(C2);
        switch (B2) {
          case 0: {
            var G2 = UA.get();
            if (G2 < 0)
              return -28;
            var F2;
            return F2 = w2.open(i.path, i.flags, 0, G2), F2.fd;
          }
          case 1:
          case 2:
            return 0;
          case 3:
            return i.flags;
          case 4: {
            var G2 = UA.get();
            return i.flags |= G2, 0;
          }
          case 12: {
            var G2 = UA.get(), a = 0;
            return $I[G2 + a >> 1] = 2, 0;
          }
          case 13:
          case 14:
            return 0;
          case 16:
          case 8:
            return -28;
          case 9:
            return rE(28), -1;
          default:
            return -28;
        }
      } catch (R2) {
        return (typeof w2 > "u" || !(R2 instanceof w2.ErrnoError)) && dA(R2), -R2.errno;
      }
    }
    function xG(C2, B2, Q2) {
      UA.varargs = Q2;
      try {
        var i = UA.getStreamFromFD(C2);
        switch (B2) {
          case 21509:
          case 21505:
            return i.tty ? 0 : -59;
          case 21510:
          case 21511:
          case 21512:
          case 21506:
          case 21507:
          case 21508:
            return i.tty ? 0 : -59;
          case 21519: {
            if (!i.tty)
              return -59;
            var G2 = UA.get();
            return q2[G2 >> 2] = 0, 0;
          }
          case 21520:
            return i.tty ? -28 : -59;
          case 21531: {
            var G2 = UA.get();
            return w2.ioctl(i, B2, G2);
          }
          case 21523:
            return i.tty ? 0 : -59;
          case 21524:
            return i.tty ? 0 : -59;
          default:
            dA("bad ioctl syscall " + B2);
        }
      } catch (F2) {
        return (typeof w2 > "u" || !(F2 instanceof w2.ErrnoError)) && dA(F2), -F2.errno;
      }
    }
    function WG(C2, B2, Q2) {
      UA.varargs = Q2;
      try {
        var i = UA.getStr(C2), G2 = UA.get(), F2 = w2.open(i, B2, G2);
        return F2.fd;
      } catch (a) {
        return (typeof w2 > "u" || !(a instanceof w2.ErrnoError)) && dA(a), -a.errno;
      }
    }
    var kC = {};
    function xg2(C2) {
      for (; C2.length; ) {
        var B2 = C2.pop(), Q2 = C2.pop();
        Q2(B2);
      }
    }
    function hg2(C2) {
      return this.fromWireType(sI[C2 >> 2]);
    }
    var Ng2 = {}, gg2 = {}, MC = {}, ZG = 48, mG = 57;
    function SC(C2) {
      if (C2 === void 0)
        return "_unknown";
      C2 = C2.replace(/[^a-zA-Z0-9_]/g, "$");
      var B2 = C2.charCodeAt(0);
      return B2 >= ZG && B2 <= mG ? "_" + C2 : C2;
    }
    function lB(C2, B2) {
      return C2 = SC(C2), new Function("body", "return function " + C2 + `() {
    "use strict" ;    return body.apply(this, arguments);
};
`)(B2);
    }
    function fB(C2, B2) {
      var Q2 = lB(B2, function(i) {
        this.name = B2, this.message = i;
        var G2 = new Error(i).stack;
        G2 !== void 0 && (this.stack = this.toString() + `
` + G2.replace(/^Error(:[^\n]*)?\n/, ""));
      });
      return Q2.prototype = Object.create(C2.prototype), Q2.prototype.constructor = Q2, Q2.prototype.toString = function() {
        return this.message === void 0 ? this.name : this.name + ": " + this.message;
      }, Q2;
    }
    var qE = void 0;
    function JC(C2) {
      throw new qE(C2);
    }
    function OA(C2, B2, Q2) {
      C2.forEach(function(R2) {
        MC[R2] = B2;
      });
      function i(R2) {
        var h2 = Q2(R2);
        h2.length !== C2.length && JC("Mismatched type converter count");
        for (var K2 = 0; K2 < C2.length; ++K2)
          eI(C2[K2], h2[K2]);
      }
      var G2 = new Array(B2.length), F2 = [], a = 0;
      B2.forEach(function(R2, h2) {
        gg2.hasOwnProperty(R2) ? G2[h2] = gg2[R2] : (F2.push(R2), Ng2.hasOwnProperty(R2) || (Ng2[R2] = []), Ng2[R2].push(function() {
          G2[h2] = gg2[R2], ++a, a === F2.length && i(G2);
        }));
      }), F2.length === 0 && i(G2);
    }
    function TG(C2) {
      var B2 = kC[C2];
      delete kC[C2];
      var Q2 = B2.elements, i = Q2.length, G2 = Q2.map(function(R2) {
        return R2.getterReturnType;
      }).concat(Q2.map(function(R2) {
        return R2.setterArgumentType;
      })), F2 = B2.rawConstructor, a = B2.rawDestructor;
      OA([C2], G2, function(R2) {
        return Q2.forEach(function(h2, K2) {
          var M2 = R2[K2], J2 = h2.getter, S2 = h2.getterContext, Y2 = R2[K2 + i], H2 = h2.setter, W2 = h2.setterContext;
          h2.read = function($) {
            return M2.fromWireType(J2(S2, $));
          }, h2.write = function($, X2) {
            var c2 = [];
            H2(W2, $, Y2.toWireType(c2, X2)), xg2(c2);
          };
        }), [{ name: B2.name, fromWireType: function(h2) {
          for (var K2 = new Array(i), M2 = 0; M2 < i; ++M2)
            K2[M2] = Q2[M2].read(h2);
          return a(h2), K2;
        }, toWireType: function(h2, K2) {
          if (i !== K2.length)
            throw new TypeError("Incorrect number of tuple elements for " + B2.name + ": expected=" + i + ", actual=" + K2.length);
          for (var M2 = F2(), J2 = 0; J2 < i; ++J2)
            Q2[J2].write(M2, K2[J2]);
          return h2 !== null && h2.push(a, M2), M2;
        }, argPackAdvance: 8, readValueFromPointer: hg2, destructorFunction: a }];
      });
    }
    var cC = {};
    function uG(C2) {
      var B2 = cC[C2];
      delete cC[C2];
      var Q2 = B2.rawConstructor, i = B2.rawDestructor, G2 = B2.fields, F2 = G2.map(function(a) {
        return a.getterReturnType;
      }).concat(G2.map(function(a) {
        return a.setterArgumentType;
      }));
      OA([C2], F2, function(a) {
        var R2 = {};
        return G2.forEach(function(h2, K2) {
          var M2 = h2.fieldName, J2 = a[K2], S2 = h2.getter, Y2 = h2.getterContext, H2 = a[K2 + G2.length], W2 = h2.setter, $ = h2.setterContext;
          R2[M2] = { read: function(X2) {
            return J2.fromWireType(S2(Y2, X2));
          }, write: function(X2, c2) {
            var r2 = [];
            W2($, X2, H2.toWireType(r2, c2)), xg2(r2);
          } };
        }), [{ name: B2.name, fromWireType: function(h2) {
          var K2 = {};
          for (var M2 in R2)
            K2[M2] = R2[M2].read(h2);
          return i(h2), K2;
        }, toWireType: function(h2, K2) {
          for (var M2 in R2)
            if (!(M2 in K2))
              throw new TypeError('Missing field:  "' + M2 + '"');
          var J2 = Q2();
          for (M2 in R2)
            R2[M2].write(J2, K2[M2]);
          return h2 !== null && h2.push(i, J2), J2;
        }, argPackAdvance: 8, readValueFromPointer: hg2, destructorFunction: i }];
      });
    }
    function bB(C2) {
      switch (C2) {
        case 1:
          return 0;
        case 2:
          return 1;
        case 4:
          return 2;
        case 8:
          return 3;
        default:
          throw new TypeError("Unknown type size: " + C2);
      }
    }
    function pG() {
      for (var C2 = new Array(256), B2 = 0; B2 < 256; ++B2)
        C2[B2] = String.fromCharCode(B2);
      eE = C2;
    }
    var eE = void 0;
    function kA(C2) {
      for (var B2 = "", Q2 = C2; mA[Q2]; )
        B2 += eE[mA[Q2++]];
      return B2;
    }
    var yg2 = void 0;
    function u2(C2) {
      throw new yg2(C2);
    }
    function eI(C2, B2, Q2) {
      if (Q2 = Q2 || {}, !("argPackAdvance" in B2))
        throw new TypeError("registerType registeredInstance requires argPackAdvance");
      var i = B2.name;
      if (C2 || u2('type "' + i + '" must have a positive integer typeid pointer'), gg2.hasOwnProperty(C2)) {
        if (Q2.ignoreDuplicateRegistrations)
          return;
        u2("Cannot register type '" + i + "' twice");
      }
      if (gg2[C2] = B2, delete MC[C2], Ng2.hasOwnProperty(C2)) {
        var G2 = Ng2[C2];
        delete Ng2[C2], G2.forEach(function(F2) {
          F2();
        });
      }
    }
    function XG(C2, B2, Q2, i, G2) {
      var F2 = bB(Q2);
      B2 = kA(B2), eI(C2, { name: B2, fromWireType: function(a) {
        return !!a;
      }, toWireType: function(a, R2) {
        return R2 ? i : G2;
      }, argPackAdvance: 8, readValueFromPointer: function(a) {
        var R2;
        if (Q2 === 1)
          R2 = nA;
        else if (Q2 === 2)
          R2 = $I;
        else if (Q2 === 4)
          R2 = q2;
        else
          throw new TypeError("Unknown boolean type size: " + B2);
        return this.fromWireType(R2[a >> F2]);
      }, destructorFunction: null });
    }
    function OG(C2) {
      if (!(this instanceof ZI) || !(C2 instanceof ZI))
        return false;
      for (var B2 = this.$$.ptrType.registeredClass, Q2 = this.$$.ptr, i = C2.$$.ptrType.registeredClass, G2 = C2.$$.ptr; B2.baseClass; )
        Q2 = B2.upcast(Q2), B2 = B2.baseClass;
      for (; i.baseClass; )
        G2 = i.upcast(G2), i = i.baseClass;
      return B2 === i && Q2 === G2;
    }
    function jG(C2) {
      return { count: C2.count, deleteScheduled: C2.deleteScheduled, preservePointerOnDelete: C2.preservePointerOnDelete, ptr: C2.ptr, ptrType: C2.ptrType, smartPtr: C2.smartPtr, smartPtrType: C2.smartPtrType };
    }
    function VB(C2) {
      function B2(Q2) {
        return Q2.$$.ptrType.registeredClass.name;
      }
      u2(B2(C2) + " instance already deleted");
    }
    var xB = false;
    function nE(C2) {
    }
    function PG(C2) {
      C2.smartPtr ? C2.smartPtrType.rawDestructor(C2.smartPtr) : C2.ptrType.registeredClass.rawDestructor(C2.ptr);
    }
    function dE(C2) {
      C2.count.value -= 1;
      var B2 = C2.count.value === 0;
      B2 && PG(C2);
    }
    function Wg2(C2) {
      return typeof FinalizationGroup > "u" ? (Wg2 = function(B2) {
        return B2;
      }, C2) : (xB = new FinalizationGroup(function(B2) {
        for (var Q2 = B2.next(); !Q2.done; Q2 = B2.next()) {
          var i = Q2.value;
          i.ptr ? dE(i) : console.warn("object already deleted: " + i.ptr);
        }
      }), Wg2 = function(B2) {
        return xB.register(B2, B2.$$, B2.$$), B2;
      }, nE = function(B2) {
        xB.unregister(B2.$$);
      }, Wg2(C2));
    }
    function zG() {
      if (this.$$.ptr || VB(this), this.$$.preservePointerOnDelete)
        return this.$$.count.value += 1, this;
      var C2 = Wg2(Object.create(Object.getPrototypeOf(this), { $$: { value: jG(this.$$) } }));
      return C2.$$.count.value += 1, C2.$$.deleteScheduled = false, C2;
    }
    function vG() {
      this.$$.ptr || VB(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && u2("Object already scheduled for deletion"), nE(this), dE(this.$$), this.$$.preservePointerOnDelete || (this.$$.smartPtr = void 0, this.$$.ptr = void 0);
    }
    function _G() {
      return !this.$$.ptr;
    }
    var Zg2 = void 0, mg2 = [];
    function WB() {
      for (; mg2.length; ) {
        var C2 = mg2.pop();
        C2.$$.deleteScheduled = false, C2.delete();
      }
    }
    function $G() {
      return this.$$.ptr || VB(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && u2("Object already scheduled for deletion"), mg2.push(this), mg2.length === 1 && Zg2 && Zg2(WB), this.$$.deleteScheduled = true, this;
    }
    function Aw() {
      ZI.prototype.isAliasOf = OG, ZI.prototype.clone = zG, ZI.prototype.delete = vG, ZI.prototype.isDeleted = _G, ZI.prototype.deleteLater = $G;
    }
    function ZI() {
    }
    var lE = {};
    function ZB(C2, B2, Q2) {
      if (C2[B2].overloadTable === void 0) {
        var i = C2[B2];
        C2[B2] = function() {
          return C2[B2].overloadTable.hasOwnProperty(arguments.length) || u2("Function '" + Q2 + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + C2[B2].overloadTable + ")!"), C2[B2].overloadTable[arguments.length].apply(this, arguments);
        }, C2[B2].overloadTable = [], C2[B2].overloadTable[i.argCount] = i;
      }
    }
    function fE(C2, B2, Q2) {
      g.hasOwnProperty(C2) ? ((Q2 === void 0 || g[C2].overloadTable !== void 0 && g[C2].overloadTable[Q2] !== void 0) && u2("Cannot register public name '" + C2 + "' twice"), ZB(g, C2, C2), g.hasOwnProperty(Q2) && u2("Cannot register multiple overloads of a function with the same number of arguments (" + Q2 + ")!"), g[C2].overloadTable[Q2] = B2) : (g[C2] = B2, Q2 !== void 0 && (g[C2].numArguments = Q2));
    }
    function Iw(C2, B2, Q2, i, G2, F2, a, R2) {
      this.name = C2, this.constructor = B2, this.instancePrototype = Q2, this.rawDestructor = i, this.baseClass = G2, this.getActualType = F2, this.upcast = a, this.downcast = R2, this.pureVirtualFunctions = [];
    }
    function YC(C2, B2, Q2) {
      for (; B2 !== Q2; )
        B2.upcast || u2("Expected null or instance of " + Q2.name + ", got an instance of " + B2.name), C2 = B2.upcast(C2), B2 = B2.baseClass;
      return C2;
    }
    function gw(C2, B2) {
      if (B2 === null)
        return this.isReference && u2("null is not a valid " + this.name), 0;
      B2.$$ || u2('Cannot pass "' + Kg2(B2) + '" as a ' + this.name), B2.$$.ptr || u2("Cannot pass deleted object as a pointer of type " + this.name);
      var Q2 = B2.$$.ptrType.registeredClass, i = YC(B2.$$.ptr, Q2, this.registeredClass);
      return i;
    }
    function Cw(C2, B2) {
      var Q2;
      if (B2 === null)
        return this.isReference && u2("null is not a valid " + this.name), this.isSmartPointer ? (Q2 = this.rawConstructor(), C2 !== null && C2.push(this.rawDestructor, Q2), Q2) : 0;
      B2.$$ || u2('Cannot pass "' + Kg2(B2) + '" as a ' + this.name), B2.$$.ptr || u2("Cannot pass deleted object as a pointer of type " + this.name), !this.isConst && B2.$$.ptrType.isConst && u2("Cannot convert argument of type " + (B2.$$.smartPtrType ? B2.$$.smartPtrType.name : B2.$$.ptrType.name) + " to parameter type " + this.name);
      var i = B2.$$.ptrType.registeredClass;
      if (Q2 = YC(B2.$$.ptr, i, this.registeredClass), this.isSmartPointer)
        switch (B2.$$.smartPtr === void 0 && u2("Passing raw pointer to smart pointer is illegal"), this.sharingPolicy) {
          case 0:
            B2.$$.smartPtrType === this ? Q2 = B2.$$.smartPtr : u2("Cannot convert argument of type " + (B2.$$.smartPtrType ? B2.$$.smartPtrType.name : B2.$$.ptrType.name) + " to parameter type " + this.name);
            break;
          case 1:
            Q2 = B2.$$.smartPtr;
            break;
          case 2:
            if (B2.$$.smartPtrType === this)
              Q2 = B2.$$.smartPtr;
            else {
              var G2 = B2.clone();
              Q2 = this.rawShare(Q2, ug2(function() {
                G2.delete();
              })), C2 !== null && C2.push(this.rawDestructor, Q2);
            }
            break;
          default:
            u2("Unsupporting sharing policy");
        }
      return Q2;
    }
    function Bw(C2, B2) {
      if (B2 === null)
        return this.isReference && u2("null is not a valid " + this.name), 0;
      B2.$$ || u2('Cannot pass "' + Kg2(B2) + '" as a ' + this.name), B2.$$.ptr || u2("Cannot pass deleted object as a pointer of type " + this.name), B2.$$.ptrType.isConst && u2("Cannot convert argument of type " + B2.$$.ptrType.name + " to parameter type " + this.name);
      var Q2 = B2.$$.ptrType.registeredClass, i = YC(B2.$$.ptr, Q2, this.registeredClass);
      return i;
    }
    function Qw(C2) {
      return this.rawGetPointee && (C2 = this.rawGetPointee(C2)), C2;
    }
    function Ew(C2) {
      this.rawDestructor && this.rawDestructor(C2);
    }
    function iw(C2) {
      C2 !== null && C2.delete();
    }
    function bE(C2, B2, Q2) {
      if (B2 === Q2)
        return C2;
      if (Q2.baseClass === void 0)
        return null;
      var i = bE(C2, B2, Q2.baseClass);
      return i === null ? null : Q2.downcast(i);
    }
    function Dw() {
      return Object.keys(Tg2).length;
    }
    function ow() {
      var C2 = [];
      for (var B2 in Tg2)
        Tg2.hasOwnProperty(B2) && C2.push(Tg2[B2]);
      return C2;
    }
    function Gw(C2) {
      Zg2 = C2, mg2.length && Zg2 && Zg2(WB);
    }
    function ww() {
      g.getInheritedInstanceCount = Dw, g.getLiveInheritedInstances = ow, g.flushPendingDeletes = WB, g.setDelayFunction = Gw;
    }
    var Tg2 = {};
    function sw(C2, B2) {
      for (B2 === void 0 && u2("ptr should not be undefined"); C2.baseClass; )
        B2 = C2.upcast(B2), C2 = C2.baseClass;
      return B2;
    }
    function Fw(C2, B2) {
      return B2 = sw(C2, B2), Tg2[B2];
    }
    function LC(C2, B2) {
      (!B2.ptrType || !B2.ptr) && JC("makeClassHandle requires ptr and ptrType");
      var Q2 = !!B2.smartPtrType, i = !!B2.smartPtr;
      return Q2 !== i && JC("Both smartPtrType and smartPtr must be specified"), B2.count = { value: 1 }, Wg2(Object.create(C2, { $$: { value: B2 } }));
    }
    function aw(C2) {
      var B2 = this.getPointee(C2);
      if (!B2)
        return this.destructor(C2), null;
      var Q2 = Fw(this.registeredClass, B2);
      if (Q2 !== void 0) {
        if (Q2.$$.count.value === 0)
          return Q2.$$.ptr = B2, Q2.$$.smartPtr = C2, Q2.clone();
        var i = Q2.clone();
        return this.destructor(C2), i;
      }
      function G2() {
        return this.isSmartPointer ? LC(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: B2, smartPtrType: this, smartPtr: C2 }) : LC(this.registeredClass.instancePrototype, { ptrType: this, ptr: C2 });
      }
      var F2 = this.registeredClass.getActualType(B2), a = lE[F2];
      if (!a)
        return G2.call(this);
      var R2;
      this.isConst ? R2 = a.constPointerType : R2 = a.pointerType;
      var h2 = bE(B2, this.registeredClass, R2.registeredClass);
      return h2 === null ? G2.call(this) : this.isSmartPointer ? LC(R2.registeredClass.instancePrototype, { ptrType: R2, ptr: h2, smartPtrType: this, smartPtr: C2 }) : LC(R2.registeredClass.instancePrototype, { ptrType: R2, ptr: h2 });
    }
    function Rw() {
      nI.prototype.getPointee = Qw, nI.prototype.destructor = Ew, nI.prototype.argPackAdvance = 8, nI.prototype.readValueFromPointer = hg2, nI.prototype.deleteObject = iw, nI.prototype.fromWireType = aw;
    }
    function nI(C2, B2, Q2, i, G2, F2, a, R2, h2, K2, M2) {
      this.name = C2, this.registeredClass = B2, this.isReference = Q2, this.isConst = i, this.isSmartPointer = G2, this.pointeeType = F2, this.sharingPolicy = a, this.rawGetPointee = R2, this.rawConstructor = h2, this.rawShare = K2, this.rawDestructor = M2, !G2 && B2.baseClass === void 0 ? i ? (this.toWireType = gw, this.destructorFunction = null) : (this.toWireType = Bw, this.destructorFunction = null) : this.toWireType = Cw;
    }
    function VE(C2, B2, Q2) {
      g.hasOwnProperty(C2) || JC("Replacing nonexistant public symbol"), g[C2].overloadTable !== void 0 && Q2 !== void 0 ? g[C2].overloadTable[Q2] = B2 : (g[C2] = B2, g[C2].argCount = Q2);
    }
    function hw(C2, B2, Q2) {
      return Q2 && Q2.length ? g["dynCall_" + C2].apply(null, [B2].concat(Q2)) : g["dynCall_" + C2].call(null, B2);
    }
    function Nw(C2, B2, Q2) {
      return C2.indexOf("j") != -1 ? hw(C2, B2, Q2) : fg2.get(B2).apply(null, Q2);
    }
    function yw(C2, B2) {
      LA(C2.indexOf("j") >= 0, "getDynCaller should only be called with i64 sigs");
      var Q2 = [];
      return function() {
        Q2.length = arguments.length;
        for (var i = 0; i < arguments.length; i++)
          Q2[i] = arguments[i];
        return Nw(C2, B2, Q2);
      };
    }
    function HA(C2, B2) {
      C2 = kA(C2);
      function Q2() {
        return C2.indexOf("j") != -1 ? yw(C2, B2) : fg2.get(B2);
      }
      var i = Q2();
      return typeof i != "function" && u2("unknown function pointer with signature " + C2 + ": " + B2), i;
    }
    var xE = void 0;
    function WE(C2) {
      var B2 = _E(C2), Q2 = kA(B2);
      return dI(B2), Q2;
    }
    function Cg2(C2, B2) {
      var Q2 = [], i = {};
      function G2(F2) {
        if (!i[F2] && !gg2[F2]) {
          if (MC[F2]) {
            MC[F2].forEach(G2);
            return;
          }
          Q2.push(F2), i[F2] = true;
        }
      }
      throw B2.forEach(G2), new xE(C2 + ": " + Q2.map(WE).join([", "]));
    }
    function Kw(C2, B2, Q2, i, G2, F2, a, R2, h2, K2, M2, J2, S2) {
      M2 = kA(M2), F2 = HA(G2, F2), R2 && (R2 = HA(a, R2)), K2 && (K2 = HA(h2, K2)), S2 = HA(J2, S2);
      var Y2 = SC(M2);
      fE(Y2, function() {
        Cg2("Cannot construct " + M2 + " due to unbound types", [i]);
      }), OA([C2, B2, Q2], i ? [i] : [], function(H2) {
        H2 = H2[0];
        var W2, $;
        i ? (W2 = H2.registeredClass, $ = W2.instancePrototype) : $ = ZI.prototype;
        var X2 = lB(Y2, function() {
          if (Object.getPrototypeOf(this) !== c2)
            throw new yg2("Use 'new' to construct " + M2);
          if (r2.constructor_body === void 0)
            throw new yg2(M2 + " has no accessible constructor");
          var rA = r2.constructor_body[arguments.length];
          if (rA === void 0)
            throw new yg2("Tried to invoke ctor of " + M2 + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(r2.constructor_body).toString() + ") parameters instead!");
          return rA.apply(this, arguments);
        }), c2 = Object.create($, { constructor: { value: X2 } });
        X2.prototype = c2;
        var r2 = new Iw(M2, X2, c2, S2, W2, F2, R2, K2), O2 = new nI(M2, r2, true, false, false), Z2 = new nI(M2 + "*", r2, false, false, false), p2 = new nI(M2 + " const*", r2, false, true, false);
        return lE[C2] = { pointerType: Z2, constPointerType: p2 }, VE(Y2, X2), [O2, Z2, p2];
      });
    }
    function ZE(C2, B2) {
      if (!(C2 instanceof Function))
        throw new TypeError("new_ called with constructor type " + typeof C2 + " which is not a function");
      var Q2 = lB(C2.name || "unknownFunctionName", function() {
      });
      Q2.prototype = C2.prototype;
      var i = new Q2(), G2 = C2.apply(i, B2);
      return G2 instanceof Object ? G2 : i;
    }
    function mB(C2, B2, Q2, i, G2) {
      var F2 = B2.length;
      F2 < 2 && u2("argTypes array size mismatch! Must at least get return value and 'this' types!");
      for (var a = B2[1] !== null && Q2 !== null, R2 = false, h2 = 1; h2 < B2.length; ++h2)
        if (B2[h2] !== null && B2[h2].destructorFunction === void 0) {
          R2 = true;
          break;
        }
      for (var K2 = B2[0].name !== "void", M2 = "", J2 = "", h2 = 0; h2 < F2 - 2; ++h2)
        M2 += (h2 !== 0 ? ", " : "") + "arg" + h2, J2 += (h2 !== 0 ? ", " : "") + "arg" + h2 + "Wired";
      var S2 = "return function " + SC(C2) + "(" + M2 + `) {
if (arguments.length !== ` + (F2 - 2) + `) {
throwBindingError('function ` + C2 + " called with ' + arguments.length + ' arguments, expected " + (F2 - 2) + ` args!');
}
`;
      R2 && (S2 += `var destructors = [];
`);
      var Y2 = R2 ? "destructors" : "null", H2 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"], W2 = [u2, i, G2, xg2, B2[0], B2[1]];
      a && (S2 += "var thisWired = classParam.toWireType(" + Y2 + `, this);
`);
      for (var h2 = 0; h2 < F2 - 2; ++h2)
        S2 += "var arg" + h2 + "Wired = argType" + h2 + ".toWireType(" + Y2 + ", arg" + h2 + "); // " + B2[h2 + 2].name + `
`, H2.push("argType" + h2), W2.push(B2[h2 + 2]);
      if (a && (J2 = "thisWired" + (J2.length > 0 ? ", " : "") + J2), S2 += (K2 ? "var rv = " : "") + "invoker(fn" + (J2.length > 0 ? ", " : "") + J2 + `);
`, R2)
        S2 += `runDestructors(destructors);
`;
      else
        for (var h2 = a ? 1 : 2; h2 < B2.length; ++h2) {
          var $ = h2 === 1 ? "thisWired" : "arg" + (h2 - 2) + "Wired";
          B2[h2].destructorFunction !== null && (S2 += $ + "_dtor(" + $ + "); // " + B2[h2].name + `
`, H2.push($ + "_dtor"), W2.push(B2[h2].destructorFunction));
        }
      K2 && (S2 += `var ret = retType.fromWireType(rv);
return ret;
`), S2 += `}
`, H2.push(S2);
      var X2 = ZE(Function, H2).apply(null, W2);
      return X2;
    }
    function tC(C2, B2) {
      for (var Q2 = [], i = 0; i < C2; i++)
        Q2.push(q2[(B2 >> 2) + i]);
      return Q2;
    }
    function Uw(C2, B2, Q2, i, G2, F2, a) {
      var R2 = tC(Q2, i);
      B2 = kA(B2), F2 = HA(G2, F2), OA([], [C2], function(h2) {
        h2 = h2[0];
        var K2 = h2.name + "." + B2;
        function M2() {
          Cg2("Cannot call " + K2 + " due to unbound types", R2);
        }
        var J2 = h2.registeredClass.constructor;
        return J2[B2] === void 0 ? (M2.argCount = Q2 - 1, J2[B2] = M2) : (ZB(J2, B2, K2), J2[B2].overloadTable[Q2 - 1] = M2), OA([], R2, function(S2) {
          var Y2 = [S2[0], null].concat(S2.slice(1)), H2 = mB(K2, Y2, null, F2, a);
          return J2[B2].overloadTable === void 0 ? (H2.argCount = Q2 - 1, J2[B2] = H2) : J2[B2].overloadTable[Q2 - 1] = H2, [];
        }), [];
      });
    }
    function kw(C2, B2, Q2, i, G2, F2) {
      LA(B2 > 0);
      var a = tC(B2, Q2);
      G2 = HA(i, G2);
      var R2 = [F2], h2 = [];
      OA([], [C2], function(K2) {
        K2 = K2[0];
        var M2 = "constructor " + K2.name;
        if (K2.registeredClass.constructor_body === void 0 && (K2.registeredClass.constructor_body = []), K2.registeredClass.constructor_body[B2 - 1] !== void 0)
          throw new yg2("Cannot register multiple constructors with identical number of parameters (" + (B2 - 1) + ") for class '" + K2.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
        return K2.registeredClass.constructor_body[B2 - 1] = function() {
          Cg2("Cannot construct " + K2.name + " due to unbound types", a);
        }, OA([], a, function(J2) {
          return K2.registeredClass.constructor_body[B2 - 1] = function() {
            arguments.length !== B2 - 1 && u2(M2 + " called with " + arguments.length + " arguments, expected " + (B2 - 1)), h2.length = 0, R2.length = B2;
            for (var Y2 = 1; Y2 < B2; ++Y2)
              R2[Y2] = J2[Y2].toWireType(h2, arguments[Y2 - 1]);
            var H2 = G2.apply(null, R2);
            return xg2(h2), J2[0].fromWireType(H2);
          }, [];
        }), [];
      });
    }
    function Mw(C2, B2, Q2, i, G2, F2, a, R2) {
      var h2 = tC(Q2, i);
      B2 = kA(B2), F2 = HA(G2, F2), OA([], [C2], function(K2) {
        K2 = K2[0];
        var M2 = K2.name + "." + B2;
        R2 && K2.registeredClass.pureVirtualFunctions.push(B2);
        function J2() {
          Cg2("Cannot call " + M2 + " due to unbound types", h2);
        }
        var S2 = K2.registeredClass.instancePrototype, Y2 = S2[B2];
        return Y2 === void 0 || Y2.overloadTable === void 0 && Y2.className !== K2.name && Y2.argCount === Q2 - 2 ? (J2.argCount = Q2 - 2, J2.className = K2.name, S2[B2] = J2) : (ZB(S2, B2, M2), S2[B2].overloadTable[Q2 - 2] = J2), OA([], h2, function(H2) {
          var W2 = mB(M2, H2, K2, F2, a);
          return S2[B2].overloadTable === void 0 ? (W2.argCount = Q2 - 2, S2[B2] = W2) : S2[B2].overloadTable[Q2 - 2] = W2, [];
        }), [];
      });
    }
    function mE(C2, B2, Q2) {
      return C2 instanceof Object || u2(Q2 + ' with invalid "this": ' + C2), C2 instanceof B2.registeredClass.constructor || u2(Q2 + ' incompatible with "this" of type ' + C2.constructor.name), C2.$$.ptr || u2("cannot call emscripten binding method " + Q2 + " on deleted object"), YC(C2.$$.ptr, C2.$$.ptrType.registeredClass, B2.registeredClass);
    }
    function Sw(C2, B2, Q2, i, G2, F2, a, R2, h2, K2) {
      B2 = kA(B2), G2 = HA(i, G2), OA([], [C2], function(M2) {
        M2 = M2[0];
        var J2 = M2.name + "." + B2, S2 = { get: function() {
          Cg2("Cannot access " + J2 + " due to unbound types", [Q2, a]);
        }, enumerable: true, configurable: true };
        return h2 ? S2.set = function() {
          Cg2("Cannot access " + J2 + " due to unbound types", [Q2, a]);
        } : S2.set = function(Y2) {
          u2(J2 + " is a read-only property");
        }, Object.defineProperty(M2.registeredClass.instancePrototype, B2, S2), OA([], h2 ? [Q2, a] : [Q2], function(Y2) {
          var H2 = Y2[0], W2 = { get: function() {
            var X2 = mE(this, M2, J2 + " getter");
            return H2.fromWireType(G2(F2, X2));
          }, enumerable: true };
          if (h2) {
            h2 = HA(R2, h2);
            var $ = Y2[1];
            W2.set = function(X2) {
              var c2 = mE(this, M2, J2 + " setter"), r2 = [];
              h2(K2, c2, $.toWireType(r2, X2)), xg2(r2);
            };
          }
          return Object.defineProperty(M2.registeredClass.instancePrototype, B2, W2), [];
        }), [];
      });
    }
    function Jw(C2, B2, Q2) {
      C2 = kA(C2), OA([], [B2], function(i) {
        return i = i[0], g[C2] = i.fromWireType(Q2), [];
      });
    }
    var TB = [], $A = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];
    function TE(C2) {
      C2 > 4 && --$A[C2].refcount === 0 && ($A[C2] = void 0, TB.push(C2));
    }
    function cw() {
      for (var C2 = 0, B2 = 5; B2 < $A.length; ++B2)
        $A[B2] !== void 0 && ++C2;
      return C2;
    }
    function Yw() {
      for (var C2 = 5; C2 < $A.length; ++C2)
        if ($A[C2] !== void 0)
          return $A[C2];
      return null;
    }
    function Lw() {
      g.count_emval_handles = cw, g.get_first_emval = Yw;
    }
    function ug2(C2) {
      switch (C2) {
        case void 0:
          return 1;
        case null:
          return 2;
        case true:
          return 3;
        case false:
          return 4;
        default: {
          var B2 = TB.length ? TB.pop() : $A.length;
          return $A[B2] = { refcount: 1, value: C2 }, B2;
        }
      }
    }
    function tw(C2, B2) {
      B2 = kA(B2), eI(C2, { name: B2, fromWireType: function(Q2) {
        var i = $A[Q2].value;
        return TE(Q2), i;
      }, toWireType: function(Q2, i) {
        return ug2(i);
      }, argPackAdvance: 8, readValueFromPointer: hg2, destructorFunction: null });
    }
    function Kg2(C2) {
      if (C2 === null)
        return "null";
      var B2 = typeof C2;
      return B2 === "object" || B2 === "array" || B2 === "function" ? C2.toString() : "" + C2;
    }
    function Hw(C2, B2) {
      switch (B2) {
        case 2:
          return function(Q2) {
            return this.fromWireType(UE[Q2 >> 2]);
          };
        case 3:
          return function(Q2) {
            return this.fromWireType(kE[Q2 >> 3]);
          };
        default:
          throw new TypeError("Unknown float type: " + C2);
      }
    }
    function rw(C2, B2, Q2) {
      var i = bB(Q2);
      B2 = kA(B2), eI(C2, { name: B2, fromWireType: function(G2) {
        return G2;
      }, toWireType: function(G2, F2) {
        if (typeof F2 != "number" && typeof F2 != "boolean")
          throw new TypeError('Cannot convert "' + Kg2(F2) + '" to ' + this.name);
        return F2;
      }, argPackAdvance: 8, readValueFromPointer: Hw(B2, i), destructorFunction: null });
    }
    function qw(C2, B2, Q2, i, G2, F2) {
      var a = tC(B2, Q2);
      C2 = kA(C2), G2 = HA(i, G2), fE(C2, function() {
        Cg2("Cannot call " + C2 + " due to unbound types", a);
      }, B2 - 1), OA([], a, function(R2) {
        var h2 = [R2[0], null].concat(R2.slice(1));
        return VE(C2, mB(C2, h2, null, G2, F2), B2 - 1), [];
      });
    }
    function ew(C2, B2, Q2) {
      switch (B2) {
        case 0:
          return Q2 ? function(G2) {
            return nA[G2];
          } : function(G2) {
            return mA[G2];
          };
        case 1:
          return Q2 ? function(G2) {
            return $I[G2 >> 1];
          } : function(G2) {
            return yC[G2 >> 1];
          };
        case 2:
          return Q2 ? function(G2) {
            return q2[G2 >> 2];
          } : function(G2) {
            return sI[G2 >> 2];
          };
        default:
          throw new TypeError("Unknown integer type: " + C2);
      }
    }
    function nw(C2, B2, Q2, i, G2) {
      B2 = kA(B2), G2 === -1 && (G2 = 4294967295);
      var F2 = bB(Q2), a = function(K2) {
        return K2;
      };
      if (i === 0) {
        var R2 = 32 - 8 * Q2;
        a = function(K2) {
          return K2 << R2 >>> R2;
        };
      }
      var h2 = B2.indexOf("unsigned") != -1;
      eI(C2, { name: B2, fromWireType: a, toWireType: function(K2, M2) {
        if (typeof M2 != "number" && typeof M2 != "boolean")
          throw new TypeError('Cannot convert "' + Kg2(M2) + '" to ' + this.name);
        if (M2 < i || M2 > G2)
          throw new TypeError('Passing a number "' + Kg2(M2) + '" from JS side to C/C++ side to an argument of type "' + B2 + '", which is outside the valid range [' + i + ", " + G2 + "]!");
        return h2 ? M2 >>> 0 : M2 | 0;
      }, argPackAdvance: 8, readValueFromPointer: ew(B2, F2, i !== 0), destructorFunction: null });
    }
    function dw(C2, B2, Q2) {
      var i = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array], G2 = i[B2];
      function F2(a) {
        a = a >> 2;
        var R2 = sI, h2 = R2[a], K2 = R2[a + 1];
        return new G2(NC, K2, h2);
      }
      Q2 = kA(Q2), eI(C2, { name: Q2, fromWireType: F2, argPackAdvance: 8, readValueFromPointer: F2 }, { ignoreDuplicateRegistrations: true });
    }
    function lw(C2, B2) {
      B2 = kA(B2);
      var Q2 = B2 === "std::string";
      eI(C2, { name: B2, fromWireType: function(i) {
        var G2 = sI[i >> 2], F2;
        if (Q2)
          for (var a = i + 4, R2 = 0; R2 <= G2; ++R2) {
            var h2 = i + 4 + R2;
            if (R2 == G2 || mA[h2] == 0) {
              var K2 = h2 - a, M2 = RC(a, K2);
              F2 === void 0 ? F2 = M2 : (F2 += "\0", F2 += M2), a = h2 + 1;
            }
          }
        else {
          for (var J2 = new Array(G2), R2 = 0; R2 < G2; ++R2)
            J2[R2] = String.fromCharCode(mA[i + 4 + R2]);
          F2 = J2.join("");
        }
        return dI(i), F2;
      }, toWireType: function(i, G2) {
        G2 instanceof ArrayBuffer && (G2 = new Uint8Array(G2));
        var F2, a = typeof G2 == "string";
        a || G2 instanceof Uint8Array || G2 instanceof Uint8ClampedArray || G2 instanceof Int8Array || u2("Cannot pass non-string to std::string"), Q2 && a ? F2 = function() {
          return hC(G2);
        } : F2 = function() {
          return G2.length;
        };
        var R2 = F2(), h2 = Xg2(4 + R2 + 1);
        if (sI[h2 >> 2] = R2, Q2 && a)
          yE(G2, h2 + 4, R2 + 1);
        else if (a)
          for (var K2 = 0; K2 < R2; ++K2) {
            var M2 = G2.charCodeAt(K2);
            M2 > 255 && (dI(h2), u2("String has UTF-16 code units that do not fit in 8 bits")), mA[h2 + 4 + K2] = M2;
          }
        else
          for (var K2 = 0; K2 < R2; ++K2)
            mA[h2 + 4 + K2] = G2[K2];
        return i !== null && i.push(dI, h2), h2;
      }, argPackAdvance: 8, readValueFromPointer: hg2, destructorFunction: function(i) {
        dI(i);
      } });
    }
    function fw(C2, B2, Q2) {
      Q2 = kA(Q2);
      var i, G2, F2, a, R2;
      B2 === 2 ? (i = sG, G2 = FG, a = aG, F2 = function() {
        return yC;
      }, R2 = 1) : B2 === 4 && (i = RG, G2 = hG, a = NG, F2 = function() {
        return sI;
      }, R2 = 2), eI(C2, { name: Q2, fromWireType: function(h2) {
        for (var K2 = sI[h2 >> 2], M2 = F2(), J2, S2 = h2 + 4, Y2 = 0; Y2 <= K2; ++Y2) {
          var H2 = h2 + 4 + Y2 * B2;
          if (Y2 == K2 || M2[H2 >> R2] == 0) {
            var W2 = H2 - S2, $ = i(S2, W2);
            J2 === void 0 ? J2 = $ : (J2 += "\0", J2 += $), S2 = H2 + B2;
          }
        }
        return dI(h2), J2;
      }, toWireType: function(h2, K2) {
        typeof K2 != "string" && u2("Cannot pass non-string to C++ string type " + Q2);
        var M2 = a(K2), J2 = Xg2(4 + M2 + B2);
        return sI[J2 >> 2] = M2 >> R2, G2(K2, J2 + 4, M2 + B2), h2 !== null && h2.push(dI, J2), J2;
      }, argPackAdvance: 8, readValueFromPointer: hg2, destructorFunction: function(h2) {
        dI(h2);
      } });
    }
    function bw(C2, B2, Q2, i, G2, F2) {
      kC[C2] = { name: kA(B2), rawConstructor: HA(Q2, i), rawDestructor: HA(G2, F2), elements: [] };
    }
    function Vw(C2, B2, Q2, i, G2, F2, a, R2, h2) {
      kC[C2].elements.push({ getterReturnType: B2, getter: HA(Q2, i), getterContext: G2, setterArgumentType: F2, setter: HA(a, R2), setterContext: h2 });
    }
    function xw(C2, B2, Q2, i, G2, F2) {
      cC[C2] = { name: kA(B2), rawConstructor: HA(Q2, i), rawDestructor: HA(G2, F2), fields: [] };
    }
    function Ww(C2, B2, Q2, i, G2, F2, a, R2, h2, K2) {
      cC[C2].fields.push({ fieldName: kA(B2), getterReturnType: Q2, getter: HA(i, G2), getterContext: F2, setterArgumentType: a, setter: HA(R2, h2), setterContext: K2 });
    }
    function Zw(C2, B2) {
      B2 = kA(B2), eI(C2, { isVoid: true, name: B2, argPackAdvance: 0, fromWireType: function() {
      }, toWireType: function(Q2, i) {
      } });
    }
    var mw = {};
    function uE(C2) {
      var B2 = mw[C2];
      return B2 === void 0 ? kA(C2) : B2;
    }
    var uB = [];
    function HC(C2) {
      return C2 || u2("Cannot use deleted val. handle = " + C2), $A[C2].value;
    }
    function Tw(C2, B2, Q2, i) {
      C2 = uB[C2], B2 = HC(B2), Q2 = uE(Q2), C2(B2, Q2, null, i);
    }
    function uw(C2) {
      var B2 = uB.length;
      return uB.push(C2), B2;
    }
    function pE(C2, B2) {
      var Q2 = gg2[C2];
      return Q2 === void 0 && u2(B2 + " has unknown type " + WE(C2)), Q2;
    }
    function pw(C2, B2) {
      for (var Q2 = new Array(C2), i = 0; i < C2; ++i)
        Q2[i] = pE(q2[(B2 >> 2) + i], "parameter " + i);
      return Q2;
    }
    function Xw(C2, B2) {
      for (var Q2 = pw(C2, B2), i = Q2[0], G2 = i.name + "_$" + Q2.slice(1).map(function(Y2) {
        return Y2.name;
      }).join("_") + "$", F2 = ["retType"], a = [i], R2 = "", h2 = 0; h2 < C2 - 1; ++h2)
        R2 += (h2 !== 0 ? ", " : "") + "arg" + h2, F2.push("argType" + h2), a.push(Q2[1 + h2]);
      for (var K2 = SC("methodCaller_" + G2), M2 = "return function " + K2 + `(handle, name, destructors, args) {
`, J2 = 0, h2 = 0; h2 < C2 - 1; ++h2)
        M2 += "    var arg" + h2 + " = argType" + h2 + ".readValueFromPointer(args" + (J2 ? "+" + J2 : "") + `);
`, J2 += Q2[h2 + 1].argPackAdvance;
      M2 += "    var rv = handle[name](" + R2 + `);
`;
      for (var h2 = 0; h2 < C2 - 1; ++h2)
        Q2[h2 + 1].deleteObject && (M2 += "    argType" + h2 + ".deleteObject(arg" + h2 + `);
`);
      i.isVoid || (M2 += `    return retType.toWireType(destructors, rv);
`), M2 += `};
`, F2.push(M2);
      var S2 = ZE(Function, F2).apply(null, a);
      return uw(S2);
    }
    function Ow(C2) {
      C2 > 4 && ($A[C2].refcount += 1);
    }
    function jw() {
      return ug2([]);
    }
    function Pw(C2) {
      return ug2(uE(C2));
    }
    function zw(C2, B2, Q2) {
      C2 = HC(C2), B2 = HC(B2), Q2 = HC(Q2), C2[B2] = Q2;
    }
    function vw(C2, B2) {
      C2 = pE(C2, "_emval_take_value");
      var Q2 = C2.readValueFromPointer(B2);
      return ug2(Q2);
    }
    function _w() {
      dA();
    }
    var $w = true;
    function A0(C2, B2) {
      var Q2;
      if (C2 === 0)
        Q2 = Date.now();
      else if ((C2 === 1 || C2 === 4) && $w)
        Q2 = Rg2();
      else
        return rE(28), -1;
      return q2[B2 >> 2] = Q2 / 1e3 | 0, q2[B2 + 4 >> 2] = Q2 % 1e3 * 1e3 * 1e3 | 0, 0;
    }
    function I0(C2, B2, Q2) {
      mA.copyWithin(C2, B2, B2 + Q2);
    }
    function g0() {
      return mA.length;
    }
    function C0(C2) {
      try {
        return Fg2.grow(C2 - NC.byteLength + 65535 >>> 16), ME(Fg2.buffer), 1;
      } catch {
      }
    }
    function B0(C2) {
      C2 = C2 >>> 0;
      var B2 = g0(), Q2 = 1073741824;
      if (C2 > Q2)
        return false;
      for (var i = 16777216, G2 = 1; G2 <= 4; G2 *= 2) {
        var F2 = B2 * (1 + 0.2 / G2);
        F2 = Math.min(F2, C2 + 100663296);
        var a = Math.min(Q2, UG(Math.max(i, C2, F2), 65536)), R2 = C0(a);
        if (R2)
          return true;
      }
      return false;
    }
    var XE = {};
    function Q0() {
      return N2 || "./this.program";
    }
    function pg2() {
      if (!pg2.strings) {
        var C2 = (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", B2 = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: C2, _: Q0() };
        for (var Q2 in XE)
          B2[Q2] = XE[Q2];
        var i = [];
        for (var Q2 in B2)
          i.push(Q2 + "=" + B2[Q2]);
        pg2.strings = i;
      }
      return pg2.strings;
    }
    function E0(C2, B2) {
      try {
        var Q2 = 0;
        return pg2().forEach(function(i, G2) {
          var F2 = B2 + Q2;
          q2[C2 + G2 * 4 >> 2] = F2, KG(i, F2), Q2 += i.length + 1;
        }), 0;
      } catch (i) {
        return (typeof w2 > "u" || !(i instanceof w2.ErrnoError)) && dA(i), i.errno;
      }
    }
    function i0(C2, B2) {
      try {
        var Q2 = pg2();
        q2[C2 >> 2] = Q2.length;
        var i = 0;
        return Q2.forEach(function(G2) {
          i += G2.length + 1;
        }), q2[B2 >> 2] = i, 0;
      } catch (G2) {
        return (typeof w2 > "u" || !(G2 instanceof w2.ErrnoError)) && dA(G2), G2.errno;
      }
    }
    function D0(C2) {
      try {
        var B2 = UA.getStreamFromFD(C2);
        return w2.close(B2), 0;
      } catch (Q2) {
        return (typeof w2 > "u" || !(Q2 instanceof w2.ErrnoError)) && dA(Q2), Q2.errno;
      }
    }
    function o0(C2, B2, Q2, i) {
      try {
        var G2 = UA.getStreamFromFD(C2), F2 = UA.doReadv(G2, B2, Q2);
        return q2[i >> 2] = F2, 0;
      } catch (a) {
        return (typeof w2 > "u" || !(a instanceof w2.ErrnoError)) && dA(a), a.errno;
      }
    }
    function G0(C2, B2, Q2, i, G2) {
      try {
        var F2 = UA.getStreamFromFD(C2), a = 4294967296, R2 = Q2 * a + (B2 >>> 0), h2 = 9007199254740992;
        return R2 <= -h2 || R2 >= h2 ? -61 : (w2.llseek(F2, R2, i), rI = [F2.position >>> 0, (tA = F2.position, +Math.abs(tA) >= 1 ? tA > 0 ? (Math.min(+Math.floor(tA / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tA - +(~~tA >>> 0)) / 4294967296) >>> 0 : 0)], q2[G2 >> 2] = rI[0], q2[G2 + 4 >> 2] = rI[1], F2.getdents && R2 === 0 && i === 0 && (F2.getdents = null), 0);
      } catch (K2) {
        return (typeof w2 > "u" || !(K2 instanceof w2.ErrnoError)) && dA(K2), K2.errno;
      }
    }
    function w0(C2, B2, Q2, i) {
      try {
        var G2 = UA.getStreamFromFD(C2), F2 = UA.doWritev(G2, B2, Q2);
        return q2[i >> 2] = F2, 0;
      } catch (a) {
        return (typeof w2 > "u" || !(a instanceof w2.ErrnoError)) && dA(a), a.errno;
      }
    }
    function s0(C2) {
    }
    function rC(C2) {
      return C2 % 4 === 0 && (C2 % 100 !== 0 || C2 % 400 === 0);
    }
    function pB(C2, B2) {
      for (var Q2 = 0, i = 0; i <= B2; Q2 += C2[i++])
        ;
      return Q2;
    }
    var qC = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], eC = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    function nC(C2, B2) {
      for (var Q2 = new Date(C2.getTime()); B2 > 0; ) {
        var i = rC(Q2.getFullYear()), G2 = Q2.getMonth(), F2 = (i ? qC : eC)[G2];
        if (B2 > F2 - Q2.getDate())
          B2 -= F2 - Q2.getDate() + 1, Q2.setDate(1), G2 < 11 ? Q2.setMonth(G2 + 1) : (Q2.setMonth(0), Q2.setFullYear(Q2.getFullYear() + 1));
        else
          return Q2.setDate(Q2.getDate() + B2), Q2;
      }
      return Q2;
    }
    function F0(C2, B2, Q2, i) {
      var G2 = q2[i + 40 >> 2], F2 = { tm_sec: q2[i >> 2], tm_min: q2[i + 4 >> 2], tm_hour: q2[i + 8 >> 2], tm_mday: q2[i + 12 >> 2], tm_mon: q2[i + 16 >> 2], tm_year: q2[i + 20 >> 2], tm_wday: q2[i + 24 >> 2], tm_yday: q2[i + 28 >> 2], tm_isdst: q2[i + 32 >> 2], tm_gmtoff: q2[i + 36 >> 2], tm_zone: G2 ? RC(G2) : "" }, a = RC(Q2), R2 = { "%c": "%a %b %d %H:%M:%S %Y", "%D": "%m/%d/%y", "%F": "%Y-%m-%d", "%h": "%b", "%r": "%I:%M:%S %p", "%R": "%H:%M", "%T": "%H:%M:%S", "%x": "%m/%d/%y", "%X": "%H:%M:%S", "%Ec": "%c", "%EC": "%C", "%Ex": "%m/%d/%y", "%EX": "%H:%M:%S", "%Ey": "%y", "%EY": "%Y", "%Od": "%d", "%Oe": "%e", "%OH": "%H", "%OI": "%I", "%Om": "%m", "%OM": "%M", "%OS": "%S", "%Ou": "%u", "%OU": "%U", "%OV": "%V", "%Ow": "%w", "%OW": "%W", "%Oy": "%y" };
      for (var h2 in R2)
        a = a.replace(new RegExp(h2, "g"), R2[h2]);
      var K2 = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], M2 = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
      function J2(c2, r2, O2) {
        for (var Z2 = typeof c2 == "number" ? c2.toString() : c2 || ""; Z2.length < r2; )
          Z2 = O2[0] + Z2;
        return Z2;
      }
      function S2(c2, r2) {
        return J2(c2, r2, "0");
      }
      function Y2(c2, r2) {
        function O2(p2) {
          return p2 < 0 ? -1 : p2 > 0 ? 1 : 0;
        }
        var Z2;
        return (Z2 = O2(c2.getFullYear() - r2.getFullYear())) === 0 && (Z2 = O2(c2.getMonth() - r2.getMonth())) === 0 && (Z2 = O2(c2.getDate() - r2.getDate())), Z2;
      }
      function H2(c2) {
        switch (c2.getDay()) {
          case 0:
            return new Date(c2.getFullYear() - 1, 11, 29);
          case 1:
            return c2;
          case 2:
            return new Date(c2.getFullYear(), 0, 3);
          case 3:
            return new Date(c2.getFullYear(), 0, 2);
          case 4:
            return new Date(c2.getFullYear(), 0, 1);
          case 5:
            return new Date(c2.getFullYear() - 1, 11, 31);
          case 6:
            return new Date(c2.getFullYear() - 1, 11, 30);
        }
      }
      function W2(c2) {
        var r2 = nC(new Date(c2.tm_year + 1900, 0, 1), c2.tm_yday), O2 = new Date(r2.getFullYear(), 0, 4), Z2 = new Date(r2.getFullYear() + 1, 0, 4), p2 = H2(O2), rA = H2(Z2);
        return Y2(p2, r2) <= 0 ? Y2(rA, r2) <= 0 ? r2.getFullYear() + 1 : r2.getFullYear() : r2.getFullYear() - 1;
      }
      var $ = { "%a": function(c2) {
        return K2[c2.tm_wday].substring(0, 3);
      }, "%A": function(c2) {
        return K2[c2.tm_wday];
      }, "%b": function(c2) {
        return M2[c2.tm_mon].substring(0, 3);
      }, "%B": function(c2) {
        return M2[c2.tm_mon];
      }, "%C": function(c2) {
        var r2 = c2.tm_year + 1900;
        return S2(r2 / 100 | 0, 2);
      }, "%d": function(c2) {
        return S2(c2.tm_mday, 2);
      }, "%e": function(c2) {
        return J2(c2.tm_mday, 2, " ");
      }, "%g": function(c2) {
        return W2(c2).toString().substring(2);
      }, "%G": function(c2) {
        return W2(c2);
      }, "%H": function(c2) {
        return S2(c2.tm_hour, 2);
      }, "%I": function(c2) {
        var r2 = c2.tm_hour;
        return r2 == 0 ? r2 = 12 : r2 > 12 && (r2 -= 12), S2(r2, 2);
      }, "%j": function(c2) {
        return S2(c2.tm_mday + pB(rC(c2.tm_year + 1900) ? qC : eC, c2.tm_mon - 1), 3);
      }, "%m": function(c2) {
        return S2(c2.tm_mon + 1, 2);
      }, "%M": function(c2) {
        return S2(c2.tm_min, 2);
      }, "%n": function() {
        return `
`;
      }, "%p": function(c2) {
        return c2.tm_hour >= 0 && c2.tm_hour < 12 ? "AM" : "PM";
      }, "%S": function(c2) {
        return S2(c2.tm_sec, 2);
      }, "%t": function() {
        return "	";
      }, "%u": function(c2) {
        return c2.tm_wday || 7;
      }, "%U": function(c2) {
        var r2 = new Date(c2.tm_year + 1900, 0, 1), O2 = r2.getDay() === 0 ? r2 : nC(r2, 7 - r2.getDay()), Z2 = new Date(c2.tm_year + 1900, c2.tm_mon, c2.tm_mday);
        if (Y2(O2, Z2) < 0) {
          var p2 = pB(rC(Z2.getFullYear()) ? qC : eC, Z2.getMonth() - 1) - 31, rA = 31 - O2.getDate(), aI = rA + p2 + Z2.getDate();
          return S2(Math.ceil(aI / 7), 2);
        }
        return Y2(O2, r2) === 0 ? "01" : "00";
      }, "%V": function(c2) {
        var r2 = new Date(c2.tm_year + 1900, 0, 4), O2 = new Date(c2.tm_year + 1901, 0, 4), Z2 = H2(r2), p2 = H2(O2), rA = nC(new Date(c2.tm_year + 1900, 0, 1), c2.tm_yday);
        if (Y2(rA, Z2) < 0)
          return "53";
        if (Y2(p2, rA) <= 0)
          return "01";
        var aI;
        return Z2.getFullYear() < c2.tm_year + 1900 ? aI = c2.tm_yday + 32 - Z2.getDate() : aI = c2.tm_yday + 1 - Z2.getDate(), S2(Math.ceil(aI / 7), 2);
      }, "%w": function(c2) {
        return c2.tm_wday;
      }, "%W": function(c2) {
        var r2 = new Date(c2.tm_year, 0, 1), O2 = r2.getDay() === 1 ? r2 : nC(r2, r2.getDay() === 0 ? 1 : 7 - r2.getDay() + 1), Z2 = new Date(c2.tm_year + 1900, c2.tm_mon, c2.tm_mday);
        if (Y2(O2, Z2) < 0) {
          var p2 = pB(rC(Z2.getFullYear()) ? qC : eC, Z2.getMonth() - 1) - 31, rA = 31 - O2.getDate(), aI = rA + p2 + Z2.getDate();
          return S2(Math.ceil(aI / 7), 2);
        }
        return Y2(O2, r2) === 0 ? "01" : "00";
      }, "%y": function(c2) {
        return (c2.tm_year + 1900).toString().substring(2);
      }, "%Y": function(c2) {
        return c2.tm_year + 1900;
      }, "%z": function(c2) {
        var r2 = c2.tm_gmtoff, O2 = r2 >= 0;
        return r2 = Math.abs(r2) / 60, r2 = r2 / 60 * 100 + r2 % 60, (O2 ? "+" : "-") + ("0000" + r2).slice(-4);
      }, "%Z": function(c2) {
        return c2.tm_zone;
      }, "%%": function() {
        return "%";
      } };
      for (var h2 in $)
        a.indexOf(h2) >= 0 && (a = a.replace(new RegExp(h2, "g"), $[h2](F2)));
      var X2 = fC(a, false);
      return X2.length > B2 ? 0 : (yG(X2, C2), X2.length - 1);
    }
    function a0(C2, B2, Q2, i) {
      return F0(C2, B2, Q2, i);
    }
    g.requestFullscreen = function(B2, Q2) {
      k2.requestFullscreen(B2, Q2);
    }, g.requestAnimationFrame = function(B2) {
      k2.requestAnimationFrame(B2);
    }, g.setCanvasSize = function(B2, Q2, i) {
      k2.setCanvasSize(B2, Q2, i);
    }, g.pauseMainLoop = function() {
      k2.mainLoop.pause();
    }, g.resumeMainLoop = function() {
      k2.mainLoop.resume();
    }, g.getUserMedia = function() {
      k2.getUserMedia();
    }, g.createContext = function(B2, Q2, i, G2) {
      return k2.createContext(B2, Q2, i, G2);
    };
    var OE = function(C2, B2, Q2, i) {
      C2 || (C2 = this), this.parent = C2, this.mount = C2.mount, this.mounted = null, this.id = w2.nextInode++, this.name = B2, this.mode = Q2, this.node_ops = {}, this.stream_ops = {}, this.rdev = i;
    }, dC = 365, lC = 146;
    Object.defineProperties(OE.prototype, { read: { get: function() {
      return (this.mode & dC) === dC;
    }, set: function(C2) {
      C2 ? this.mode |= dC : this.mode &= ~dC;
    } }, write: { get: function() {
      return (this.mode & lC) === lC;
    }, set: function(C2) {
      C2 ? this.mode |= lC : this.mode &= ~lC;
    } }, isFolder: { get: function() {
      return w2.isDir(this.mode);
    } }, isDevice: { get: function() {
      return w2.isChrdev(this.mode);
    } } }), w2.FSNode = OE, w2.staticInit(), g.FS_createPath = w2.createPath, g.FS_createDataFile = w2.createDataFile, g.FS_createPreloadedFile = w2.createPreloadedFile, g.FS_createLazyFile = w2.createLazyFile, g.FS_createDevice = w2.createDevice, g.FS_unlink = w2.unlink, qE = g.InternalError = fB(Error, "InternalError"), pG(), yg2 = g.BindingError = fB(Error, "BindingError"), Aw(), Rw(), ww(), xE = g.UnboundTypeError = fB(Error, "UnboundTypeError"), Lw();
    function fC(C2, B2, Q2) {
      var i = hC(C2) + 1, G2 = new Array(i), F2 = eB(C2, G2, 0, G2.length);
      return B2 && (G2.length = F2), G2;
    }
    function jE(C2) {
      for (var B2 = [], Q2 = 0; Q2 < C2.length; Q2++) {
        var i = C2[Q2];
        i > 255 && (i &= 255), B2.push(String.fromCharCode(i));
      }
      return B2.join("");
    }
    var R0 = typeof atob == "function" ? atob : function(C2) {
      var B2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", Q2 = "", i, G2, F2, a, R2, h2, K2, M2 = 0;
      C2 = C2.replace(/[^A-Za-z0-9\+\/\=]/g, "");
      do
        a = B2.indexOf(C2.charAt(M2++)), R2 = B2.indexOf(C2.charAt(M2++)), h2 = B2.indexOf(C2.charAt(M2++)), K2 = B2.indexOf(C2.charAt(M2++)), i = a << 2 | R2 >> 4, G2 = (R2 & 15) << 4 | h2 >> 2, F2 = (h2 & 3) << 6 | K2, Q2 = Q2 + String.fromCharCode(i), h2 !== 64 && (Q2 = Q2 + String.fromCharCode(G2)), K2 !== 64 && (Q2 = Q2 + String.fromCharCode(F2));
      while (M2 < C2.length);
      return Q2;
    };
    function h0(C2) {
      if (typeof L2 == "boolean" && L2) {
        var B2;
        try {
          B2 = Buffer.from(C2, "base64");
        } catch {
          B2 = new Buffer(C2, "base64");
        }
        return new Uint8Array(B2.buffer, B2.byteOffset, B2.byteLength);
      }
      try {
        for (var Q2 = R0(C2), i = new Uint8Array(Q2.length), G2 = 0; G2 < Q2.length; ++G2)
          i[G2] = Q2.charCodeAt(G2);
        return i;
      } catch {
        throw new Error("Converting base64 string to bytes failed.");
      }
    }
    function Bg2(C2) {
      if (nB(C2))
        return h0(C2.slice(LE.length));
    }
    JE.push({ func: function() {
      zE();
    } });
    var PE = { __cxa_allocate_exception: eG, __cxa_atexit: nG, __cxa_throw: lG, __sys_fcntl64: VG, __sys_ioctl: xG, __sys_open: WG, _embind_finalize_value_array: TG, _embind_finalize_value_object: uG, _embind_register_bool: XG, _embind_register_class: Kw, _embind_register_class_class_function: Uw, _embind_register_class_constructor: kw, _embind_register_class_function: Mw, _embind_register_class_property: Sw, _embind_register_constant: Jw, _embind_register_emval: tw, _embind_register_float: rw, _embind_register_function: qw, _embind_register_integer: nw, _embind_register_memory_view: dw, _embind_register_std_string: lw, _embind_register_std_wstring: fw, _embind_register_value_array: bw, _embind_register_value_array_element: Vw, _embind_register_value_object: xw, _embind_register_value_object_field: Ww, _embind_register_void: Zw, _emval_call_void_method: Tw, _emval_decref: TE, _emval_get_method_caller: Xw, _emval_incref: Ow, _emval_new_array: jw, _emval_new_cstring: Pw, _emval_set_property: zw, _emval_take_value: vw, abort: _w, clock_gettime: A0, emscripten_memcpy_big: I0, emscripten_resize_heap: B0, environ_get: E0, environ_sizes_get: i0, fd_close: D0, fd_read: o0, fd_seek: G0, fd_write: w0, setTempRet0: s0, strftime_l: a0 };
    rG();
    var zE = g.___wasm_call_ctors = function() {
      return (zE = g.___wasm_call_ctors = g.asm.__wasm_call_ctors).apply(null, arguments);
    }, Xg2 = g._malloc = function() {
      return (Xg2 = g._malloc = g.asm.malloc).apply(null, arguments);
    }, dI = g._free = function() {
      return (dI = g._free = g.asm.free).apply(null, arguments);
    }, vE = g.___errno_location = function() {
      return (vE = g.___errno_location = g.asm.__errno_location).apply(null, arguments);
    }, _E = g.___getTypeName = function() {
      return (_E = g.___getTypeName = g.asm.__getTypeName).apply(null, arguments);
    };
    g.___embind_register_native_and_builtin_types = function() {
      return (g.___embind_register_native_and_builtin_types = g.asm.__embind_register_native_and_builtin_types).apply(null, arguments);
    }, g._emscripten_main_thread_process_queued_calls = function() {
      return (g._emscripten_main_thread_process_queued_calls = g.asm.emscripten_main_thread_process_queued_calls).apply(null, arguments);
    }, g.stackSave = function() {
      return (g.stackSave = g.asm.stackSave).apply(null, arguments);
    }, g.stackRestore = function() {
      return (g.stackRestore = g.asm.stackRestore).apply(null, arguments);
    }, g.stackAlloc = function() {
      return (g.stackAlloc = g.asm.stackAlloc).apply(null, arguments);
    }, g._setThrew = function() {
      return (g._setThrew = g.asm.setThrew).apply(null, arguments);
    }, g.___cxa_demangle = function() {
      return (g.___cxa_demangle = g.asm.__cxa_demangle).apply(null, arguments);
    }, g.dynCall_viijii = function() {
      return (g.dynCall_viijii = g.asm.dynCall_viijii).apply(null, arguments);
    }, g.dynCall_ji = function() {
      return (g.dynCall_ji = g.asm.dynCall_ji).apply(null, arguments);
    }, g.dynCall_vij = function() {
      return (g.dynCall_vij = g.asm.dynCall_vij).apply(null, arguments);
    }, g.dynCall_jiji = function() {
      return (g.dynCall_jiji = g.asm.dynCall_jiji).apply(null, arguments);
    }, g.dynCall_iiiiij = function() {
      return (g.dynCall_iiiiij = g.asm.dynCall_iiiiij).apply(null, arguments);
    }, g.dynCall_iiiiijj = function() {
      return (g.dynCall_iiiiijj = g.asm.dynCall_iiiiijj).apply(null, arguments);
    }, g.dynCall_iiiiiijj = function() {
      return (g.dynCall_iiiiiijj = g.asm.dynCall_iiiiiijj).apply(null, arguments);
    }, g.addRunDependency = KC, g.removeRunDependency = Vg2, g.FS_createPath = w2.createPath, g.FS_createDataFile = w2.createDataFile, g.FS_createPreloadedFile = w2.createPreloadedFile, g.FS_createLazyFile = w2.createLazyFile, g.FS_createDevice = w2.createDevice, g.FS_unlink = w2.unlink;
    var bC;
    function $E(C2) {
      this.name = "ExitStatus", this.message = "Program terminated with exit(" + C2 + ")", this.status = C2;
    }
    bg2 = function C2() {
      bC || XB(), bC || (bg2 = C2);
    };
    function XB(C2) {
      if (Ag2 > 0 || (MG(), Ag2 > 0))
        return;
      function B2() {
        bC || (bC = true, g.calledRun = true, !RA && (SG(), JG(), E2(g), g.onRuntimeInitialized && g.onRuntimeInitialized(), cG()));
      }
      g.setStatus ? (g.setStatus("Running..."), setTimeout(function() {
        setTimeout(function() {
          g.setStatus("");
        }, 1), B2();
      }, 1)) : B2();
    }
    if (g.run = XB, g.preInit)
      for (typeof g.preInit == "function" && (g.preInit = [g.preInit]); g.preInit.length > 0; )
        g.preInit.pop()();
    XB(), typeof g.FS > "u" && typeof w2 < "u" && (g.FS = w2), g.imread = function(C2) {
      var B2 = null;
      typeof C2 == "string" ? B2 = document.getElementById(C2) : B2 = C2;
      var Q2 = null, i = null;
      if (B2 instanceof HTMLImageElement)
        Q2 = document.createElement("canvas"), Q2.width = B2.width, Q2.height = B2.height, i = Q2.getContext("2d"), i.drawImage(B2, 0, 0, B2.width, B2.height);
      else if (B2 instanceof HTMLCanvasElement)
        Q2 = B2, i = Q2.getContext("2d");
      else
        throw new Error("Please input the valid canvas or img id.");
      var G2 = i.getImageData(0, 0, Q2.width, Q2.height);
      return I2.matFromImageData(G2);
    }, g.imshow = function(C2, B2) {
      var Q2 = null;
      if (typeof C2 == "string" ? Q2 = document.getElementById(C2) : Q2 = C2, !(Q2 instanceof HTMLCanvasElement))
        throw new Error("Please input the valid canvas element or id.");
      if (!(B2 instanceof I2.Mat))
        throw new Error("Please input the valid cv.Mat instance.");
      var i = new I2.Mat(), G2 = B2.type() % 8, F2 = G2 <= I2.CV_8S ? 1 : G2 <= I2.CV_32S ? 1 / 256 : 255, a = G2 === I2.CV_8S || G2 === I2.CV_16S ? 128 : 0;
      switch (B2.convertTo(i, I2.CV_8U, F2, a), i.type()) {
        case I2.CV_8UC1:
          I2.cvtColor(i, i, I2.COLOR_GRAY2RGBA);
          break;
        case I2.CV_8UC3:
          I2.cvtColor(i, i, I2.COLOR_RGB2RGBA);
          break;
        case I2.CV_8UC4:
          break;
        default:
          throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)");
      }
      var R2 = new ImageData(new Uint8ClampedArray(i.data), i.cols, i.rows), h2 = Q2.getContext("2d");
      h2.clearRect(0, 0, Q2.width, Q2.height), Q2.width = R2.width, Q2.height = R2.height, h2.putImageData(R2, 0, 0), i.delete();
    }, g.VideoCapture = function(C2) {
      var B2 = null;
      if (typeof C2 == "string" ? B2 = document.getElementById(C2) : B2 = C2, !(B2 instanceof HTMLVideoElement))
        throw new Error("Please input the valid video element or id.");
      var Q2 = document.createElement("canvas");
      Q2.width = B2.width, Q2.height = B2.height;
      var i = Q2.getContext("2d");
      this.video = B2, this.read = function(G2) {
        if (!(G2 instanceof I2.Mat))
          throw new Error("Please input the valid cv.Mat instance.");
        if (G2.type() !== I2.CV_8UC4)
          throw new Error("Bad type of input mat: the type should be cv.CV_8UC4.");
        if (G2.cols !== B2.width || G2.rows !== B2.height)
          throw new Error("Bad size of input mat: the size should be same as the video.");
        i.drawImage(B2, 0, 0, B2.width, B2.height), G2.data.set(i.getImageData(0, 0, B2.width, B2.height).data);
      };
    };
    function N0(C2, B2) {
      this.start = typeof C2 > "u" ? 0 : C2, this.end = typeof B2 > "u" ? 0 : B2;
    }
    g.Range = N0;
    function VC(C2, B2) {
      this.x = typeof C2 > "u" ? 0 : C2, this.y = typeof B2 > "u" ? 0 : B2;
    }
    g.Point = VC;
    function y0(C2, B2) {
      this.width = typeof C2 > "u" ? 0 : C2, this.height = typeof B2 > "u" ? 0 : B2;
    }
    g.Size = y0;
    function K0() {
      switch (arguments.length) {
        case 0: {
          this.x = 0, this.y = 0, this.width = 0, this.height = 0;
          break;
        }
        case 1: {
          var C2 = arguments[0];
          this.x = C2.x, this.y = C2.y, this.width = C2.width, this.height = C2.height;
          break;
        }
        case 2: {
          var B2 = arguments[0], Q2 = arguments[1];
          this.x = B2.x, this.y = B2.y, this.width = Q2.width, this.height = Q2.height;
          break;
        }
        case 4: {
          this.x = arguments[0], this.y = arguments[1], this.width = arguments[2], this.height = arguments[3];
          break;
        }
        default:
          throw new Error("Invalid arguments");
      }
    }
    g.Rect = K0;
    function xC() {
      switch (arguments.length) {
        case 0: {
          this.center = { x: 0, y: 0 }, this.size = { width: 0, height: 0 }, this.angle = 0;
          break;
        }
        case 3: {
          this.center = arguments[0], this.size = arguments[1], this.angle = arguments[2];
          break;
        }
        default:
          throw new Error("Invalid arguments");
      }
    }
    xC.points = function(C2) {
      return g.rotatedRectPoints(C2);
    }, xC.boundingRect = function(C2) {
      return g.rotatedRectBoundingRect(C2);
    }, xC.boundingRect2f = function(C2) {
      return g.rotatedRectBoundingRect2f(C2);
    }, g.RotatedRect = xC;
    function WC(C2, B2, Q2, i) {
      this.push(typeof C2 > "u" ? 0 : C2), this.push(typeof B2 > "u" ? 0 : B2), this.push(typeof Q2 > "u" ? 0 : Q2), this.push(typeof i > "u" ? 0 : i);
    }
    WC.prototype = new Array(), WC.all = function(C2) {
      return new WC(C2, C2, C2, C2);
    }, g.Scalar = WC;
    function U0() {
      switch (arguments.length) {
        case 0: {
          this.minVal = 0, this.maxVal = 0, this.minLoc = new VC(), this.maxLoc = new VC();
          break;
        }
        case 4: {
          this.minVal = arguments[0], this.maxVal = arguments[1], this.minLoc = arguments[2], this.maxLoc = arguments[3];
          break;
        }
        default:
          throw new Error("Invalid arguments");
      }
    }
    g.MinMaxLoc = U0;
    function k0() {
      switch (arguments.length) {
        case 0: {
          this.center = new VC(), this.radius = 0;
          break;
        }
        case 2: {
          this.center = arguments[0], this.radius = arguments[1];
          break;
        }
        default:
          throw new Error("Invalid arguments");
      }
    }
    g.Circle = k0;
    function M0() {
      switch (arguments.length) {
        case 0: {
          this.type = 0, this.maxCount = 0, this.epsilon = 0;
          break;
        }
        case 3: {
          this.type = arguments[0], this.maxCount = arguments[1], this.epsilon = arguments[2];
          break;
        }
        default:
          throw new Error("Invalid arguments");
      }
    }
    return g.TermCriteria = M0, g.matFromArray = function(C2, B2, Q2, i) {
      var G2 = new I2.Mat(C2, B2, Q2);
      switch (Q2) {
        case I2.CV_8U:
        case I2.CV_8UC1:
        case I2.CV_8UC2:
        case I2.CV_8UC3:
        case I2.CV_8UC4: {
          G2.data.set(i);
          break;
        }
        case I2.CV_8S:
        case I2.CV_8SC1:
        case I2.CV_8SC2:
        case I2.CV_8SC3:
        case I2.CV_8SC4: {
          G2.data8S.set(i);
          break;
        }
        case I2.CV_16U:
        case I2.CV_16UC1:
        case I2.CV_16UC2:
        case I2.CV_16UC3:
        case I2.CV_16UC4: {
          G2.data16U.set(i);
          break;
        }
        case I2.CV_16S:
        case I2.CV_16SC1:
        case I2.CV_16SC2:
        case I2.CV_16SC3:
        case I2.CV_16SC4: {
          G2.data16S.set(i);
          break;
        }
        case I2.CV_32S:
        case I2.CV_32SC1:
        case I2.CV_32SC2:
        case I2.CV_32SC3:
        case I2.CV_32SC4: {
          G2.data32S.set(i);
          break;
        }
        case I2.CV_32F:
        case I2.CV_32FC1:
        case I2.CV_32FC2:
        case I2.CV_32FC3:
        case I2.CV_32FC4: {
          G2.data32F.set(i);
          break;
        }
        case I2.CV_64F:
        case I2.CV_64FC1:
        case I2.CV_64FC2:
        case I2.CV_64FC3:
        case I2.CV_64FC4: {
          G2.data64F.set(i);
          break;
        }
        default:
          throw new Error("Type is unsupported");
      }
      return G2;
    }, g.matFromImageData = function(C2) {
      var B2 = new I2.Mat(C2.height, C2.width, I2.CV_8UC4);
      return B2.data.set(C2.data), B2;
    }, I2.ready;
  };
}();
iG(JF);
let DG = false;
const oG = {}, GG = [], cF = async () => DG ? true : new Promise((A2, I2) => {
  GG.push(A2);
});
iG().then((A2) => {
  DG = true, Object.assign(oG, A2), GG.forEach((I2) => {
    I2();
  });
});
const IA = oG, SI = [[0, -3.406404, 5.979507], [0, -1.126865, 7.475604], [0, -2.089024, 6.058267], [-0.463928, 0.955357, 6.633583], [0, -0.46317, 7.58658], [0, 0.365669, 7.24287], [0, 2.473255, 5.788627], [-4.253081, 2.577646, 3.279702], [0, 4.019042, 5.284764], [0, 4.885979, 5.385258], [0, 8.261778, 4.481535], [0, -3.706811, 5.864924], [0, -3.918301, 5.56943], [0, -3.994436, 5.219482], [0, -4.5424, 5.404754], [0, -4.745577, 5.529457], [0, -5.019567, 5.601448], [0, -5.365123, 5.535441], [0, -6.149624, 5.071372], [0, -1.501095, 7.112196], [-0.416106, -1.466449, 6.447657], [-7.08796, 5.434801, 0.09962], [-2.628639, 2.035898, 3.848121], [-3.198363, 1.985815, 3.796952], [-3.775151, 2.039402, 3.646194], [-4.465819, 2.42295, 3.155168], [-2.164289, 2.189867, 3.851822], [-3.208229, 3.223926, 4.115822], [-2.673803, 3.205337, 4.092203], [-3.745193, 3.165286, 3.972409], [-4.161018, 3.059069, 3.719554], [-5.062006, 1.934418, 2.776093], [-2.266659, -7.425768, 4.389812], [-4.445859, 2.663991, 3.173422], [-7.21453, 2.263009, 0.07315], [-5.799793, 2.349546, 2.204059], [-2.844939, -0.720868, 4.43313], [-0.711452, -3.329355, 5.877044], [-0.606033, -3.924562, 5.444923], [-1.431615, -3.500953, 5.496189], [-1.91491, -3.803146, 5.02893], [-1.131043, -3.973937, 5.189648], [-1.563548, -4.082763, 4.842263], [-2.650112, -5.003649, 4.188483], [-0.427049, -1.094134, 7.360529], [-0.496396, -0.475659, 7.440358], [-5.253307, 3.881582, 3.363159], [-1.718698, 0.974609, 4.558359], [-1.608635, -0.942516, 5.814193], [-1.651267, -0.610868, 5.581319], [-4.765501, -0.701554, 3.534632], [-0.478306, 0.295766, 7.101013], [-3.734964, 4.50823, 4.550454], [-4.588603, 4.302037, 4.048484], [-6.279331, 6.615427, 1.42585], [-1.220941, 4.142165, 5.106035], [-2.193489, 3.100317, 4.000575], [-3.102642, -4.352984, 4.095905], [-6.719682, -4.788645, -1.745401], [-1.193824, -1.306795, 5.737747], [-0.729766, -1.593712, 5.833208], [-2.456206, -4.342621, 4.283884], [-2.204823, -4.304508, 4.162499], [-4.985894, 4.802461, 3.751977], [-1.592294, -1.257709, 5.456949], [-2.644548, 4.524654, 4.921559], [-2.760292, 5.100971, 5.01599], [-3.523964, 8.005976, 3.729163], [-5.599763, 5.71547, 2.724259], [-3.063932, 6.566144, 4.529981], [-5.720968, 4.254584, 2.830852], [-6.374393, 4.78559, 1.591691], [-0.672728, -3.688016, 5.737804], [-1.26256, -3.787691, 5.417779], [-1.732553, -3.952767, 5.000579], [-1.043625, -1.464973, 5.662455], [-2.321234, -4.329069, 4.258156], [-2.056846, -4.477671, 4.520883], [-2.153084, -4.276322, 4.038093], [-0.946874, -1.035249, 6.512274], [-1.469132, -4.036351, 4.604908], [-1.02434, -3.989851, 4.926693], [-0.533422, -3.993222, 5.138202], [-0.76972, -6.095394, 4.985883], [-0.699606, -5.29185, 5.448304], [-0.669687, -4.94977, 5.509612], [-0.630947, -4.695101, 5.449371], [-0.583218, -4.517982, 5.339869], [-1.53717, -4.423206, 4.74547], [-1.6156, -4.475942, 4.813632], [-1.729053, -4.61868, 4.854463], [-1.838624, -4.828746, 4.823737], [-2.36825, -3.106237, 4.868096], [-7.542244, -1.049282, -2.431321], [0, -1.724003, 6.60139], [-1.826614, -4.399531, 4.399021], [-1.929558, -4.411831, 4.497052], [-0.597442, -2.013686, 5.866456], [-1.405627, -1.714196, 5.241087], [-0.662449, -1.819321, 5.863759], [-2.34234, 0.572222, 4.294303], [-3.327324, 0.104863, 4.11386], [-1.726175, -0.919165, 5.273355], [-5.133204, 7.485602, 2.660442], [-4.538641, 6.319907, 3.683424], [-3.986562, 5.109487, 4.466315], [-2.169681, -5.440433, 4.455874], [-1.395634, 5.011963, 5.316032], [-1.6195, 6.599217, 4.921106], [-1.891399, 8.236377, 4.274997], [-4.195832, 2.235205, 3.375099], [-5.733342, 1.411738, 2.431726], [-1.859887, 2.355757, 3.843181], [-4.988612, 3.074654, 3.083858], [-1.303263, 1.416453, 4.831091], [-1.305757, -0.672779, 6.415959], [-6.46517, 0.937119, 1.689873], [-5.258659, 0.945811, 2.974312], [-4.432338, 0.722096, 3.522615], [-3.300681, 0.861641, 3.872784], [-2.430178, 1.131492, 4.039035], [-1.820731, 1.467954, 4.224124], [-0.563221, 2.307693, 5.566789], [-6.338145, -0.529279, 1.881175], [-5.587698, 3.208071, 2.687839], [-0.242624, -1.462857, 7.071491], [-1.611251, 0.339326, 4.895421], [-7.743095, 2.364999, -2.005167], [-1.391142, 1.851048, 4.448999], [-1.785794, -0.978284, 4.85047], [-4.670959, 2.664461, 3.084075], [-1.33397, -0.283761, 6.097047], [-7.270895, -2.890917, -2.252455], [-1.856432, 2.585245, 3.757904], [-0.923388, 0.073076, 6.671944], [-5.000589, -6.135128, 1.892523], [-5.085276, -7.17859, 0.714711], [-7.159291, -0.81182, -0.072044], [-5.843051, -5.248023, 0.924091], [-6.847258, 3.662916, 0.724695], [-2.412942, -8.258853, 4.119213], [-0.179909, -1.689864, 6.573301], [-2.103655, -0.163946, 4.566119], [-6.407571, 2.236021, 1.560843], [-3.670075, 2.360153, 3.63523], [-3.177186, 2.294265, 3.775704], [-2.196121, -4.598322, 4.479786], [-6.234883, -1.94443, 1.663542], [-1.292924, -9.29592, 4.094063], [-3.210651, -8.533278, 2.802001], [-4.068926, -7.993109, 1.925119], [0, 6.54539, 5.027311], [0, -9.403378, 4.264492], [-2.724032, 2.315802, 3.777151], [-2.28846, 2.398891, 3.697603], [-1.998311, 2.496547, 3.689148], [-6.13004, 3.399261, 2.038516], [-2.28846, 2.886504, 3.775031], [-2.724032, 2.96181, 3.871767], [-3.177186, 2.964136, 3.876973], [-3.670075, 2.927714, 3.724325], [-4.018389, 2.857357, 3.482983], [-7.555811, 4.106811, -0.991917], [-4.018389, 2.483695, 3.440898], [0, -2.521945, 5.932265], [-1.776217, -2.683946, 5.213116], [-1.222237, -1.182444, 5.952465], [-0.731493, -2.536683, 5.815343], [0, 3.271027, 5.236015], [-4.135272, -6.996638, 2.67197], [-3.311811, -7.660815, 3.382963], [-1.313701, -8.639995, 4.702456], [-5.940524, -6.223629, -0.631468], [-1.998311, 2.743838, 3.74403], [-0.901447, 1.236992, 5.754256], [0, -8.765243, 4.891441], [-2.308977, -8.974196, 3.60907], [-6.954154, -2.439843, -0.131163], [-1.098819, -4.458788, 5.120727], [-1.181124, -4.579996, 5.189564], [-1.255818, -4.787901, 5.237051], [-1.325085, -5.106507, 5.20501], [-1.546388, -5.819392, 4.757893], [-1.953754, -4.183892, 4.431713], [-2.117802, -4.137093, 4.555096], [-2.285339, -4.051196, 4.582438], [-2.85016, -3.66572, 4.484994], [-5.278538, -2.238942, 2.861224], [-0.946709, 1.907628, 5.196779], [-1.314173, 3.104912, 4.231404], [-1.78, 2.86, 3.881555], [-1.84511, -4.09888, 4.247264], [-5.436187, -4.030482, 2.109852], [-0.766444, 3.182131, 4.861453], [-1.938616, -6.61441, 4.521085], [0, 1.059413, 6.774605], [-0.516573, 1.583572, 6.148363], [0, 1.728369, 6.31675], [-1.246815, 0.230297, 5.681036], [0, -7.942194, 5.181173], [0, -6.991499, 5.153478], [-0.997827, -6.930921, 4.979576], [-3.288807, -5.382514, 3.795752], [-2.311631, -1.566237, 4.590085], [-2.68025, -6.111567, 4.096152], [-3.832928, -1.537326, 4.137731], [-2.96186, -2.274215, 4.440943], [-4.386901, -2.683286, 3.643886], [-1.217295, -7.834465, 4.969286], [-1.542374, -0.136843, 5.201008], [-3.878377, -6.041764, 3.311079], [-3.084037, -6.809842, 3.814195], [-3.747321, -4.503545, 3.726453], [-6.094129, -3.205991, 1.473482], [-4.588995, -4.728726, 2.983221], [-6.583231, -3.941269, 0.070268], [-3.49258, -3.19582, 4.130198], [-1.255543, 0.802341, 5.307551], [-1.126122, -0.933602, 6.538785], [-1.443109, -1.142774, 5.905127], [-0.923043, -0.529042, 7.003423], [-1.755386, 3.529117, 4.327696], [-2.632589, 3.713828, 4.364629], [-3.388062, 3.721976, 4.309028], [-4.075766, 3.675413, 4.076063], [-4.62291, 3.474691, 3.646321], [-5.171755, 2.535753, 2.670867], [-7.297331, 0.763172, -0.048769], [-4.706828, 1.651, 3.109532], [-4.071712, 1.476821, 3.476944], [-3.269817, 1.470659, 3.731945], [-2.527572, 1.617311, 3.865444], [-1.970894, 1.858505, 3.961782], [-1.579543, 2.097941, 4.084996], [-7.664182, 0.673132, -2.435867], [-1.397041, -1.340139, 5.630378], [-0.884838, 0.65874, 6.233232], [-0.767097, -0.968035, 7.077932], [-0.460213, -1.334106, 6.787447], [-0.748618, -1.067994, 6.798303], [-1.236408, -1.585568, 5.48049], [-0.387306, -1.40999, 6.957705], [-0.319925, -1.607931, 6.508676], [-1.639633, 2.556298, 3.863736], [-1.255645, 2.467144, 4.2038], [-1.031362, 2.382663, 4.615849], [-4.253081, 2.772296, 3.315305], [-4.53, 2.91, 3.339685], [0.463928, 0.955357, 6.633583], [4.253081, 2.577646, 3.279702], [0.416106, -1.466449, 6.447657], [7.08796, 5.434801, 0.09962], [2.628639, 2.035898, 3.848121], [3.198363, 1.985815, 3.796952], [3.775151, 2.039402, 3.646194], [4.465819, 2.42295, 3.155168], [2.164289, 2.189867, 3.851822], [3.208229, 3.223926, 4.115822], [2.673803, 3.205337, 4.092203], [3.745193, 3.165286, 3.972409], [4.161018, 3.059069, 3.719554], [5.062006, 1.934418, 2.776093], [2.266659, -7.425768, 4.389812], [4.445859, 2.663991, 3.173422], [7.21453, 2.263009, 0.07315], [5.799793, 2.349546, 2.204059], [2.844939, -0.720868, 4.43313], [0.711452, -3.329355, 5.877044], [0.606033, -3.924562, 5.444923], [1.431615, -3.500953, 5.496189], [1.91491, -3.803146, 5.02893], [1.131043, -3.973937, 5.189648], [1.563548, -4.082763, 4.842263], [2.650112, -5.003649, 4.188483], [0.427049, -1.094134, 7.360529], [0.496396, -0.475659, 7.440358], [5.253307, 3.881582, 3.363159], [1.718698, 0.974609, 4.558359], [1.608635, -0.942516, 5.814193], [1.651267, -0.610868, 5.581319], [4.765501, -0.701554, 3.534632], [0.478306, 0.295766, 7.101013], [3.734964, 4.50823, 4.550454], [4.588603, 4.302037, 4.048484], [6.279331, 6.615427, 1.42585], [1.220941, 4.142165, 5.106035], [2.193489, 3.100317, 4.000575], [3.102642, -4.352984, 4.095905], [6.719682, -4.788645, -1.745401], [1.193824, -1.306795, 5.737747], [0.729766, -1.593712, 5.833208], [2.456206, -4.342621, 4.283884], [2.204823, -4.304508, 4.162499], [4.985894, 4.802461, 3.751977], [1.592294, -1.257709, 5.456949], [2.644548, 4.524654, 4.921559], [2.760292, 5.100971, 5.01599], [3.523964, 8.005976, 3.729163], [5.599763, 5.71547, 2.724259], [3.063932, 6.566144, 4.529981], [5.720968, 4.254584, 2.830852], [6.374393, 4.78559, 1.591691], [0.672728, -3.688016, 5.737804], [1.26256, -3.787691, 5.417779], [1.732553, -3.952767, 5.000579], [1.043625, -1.464973, 5.662455], [2.321234, -4.329069, 4.258156], [2.056846, -4.477671, 4.520883], [2.153084, -4.276322, 4.038093], [0.946874, -1.035249, 6.512274], [1.469132, -4.036351, 4.604908], [1.02434, -3.989851, 4.926693], [0.533422, -3.993222, 5.138202], [0.76972, -6.095394, 4.985883], [0.699606, -5.29185, 5.448304], [0.669687, -4.94977, 5.509612], [0.630947, -4.695101, 5.449371], [0.583218, -4.517982, 5.339869], [1.53717, -4.423206, 4.74547], [1.6156, -4.475942, 4.813632], [1.729053, -4.61868, 4.854463], [1.838624, -4.828746, 4.823737], [2.36825, -3.106237, 4.868096], [7.542244, -1.049282, -2.431321], [1.826614, -4.399531, 4.399021], [1.929558, -4.411831, 4.497052], [0.597442, -2.013686, 5.866456], [1.405627, -1.714196, 5.241087], [0.662449, -1.819321, 5.863759], [2.34234, 0.572222, 4.294303], [3.327324, 0.104863, 4.11386], [1.726175, -0.919165, 5.273355], [5.133204, 7.485602, 2.660442], [4.538641, 6.319907, 3.683424], [3.986562, 5.109487, 4.466315], [2.169681, -5.440433, 4.455874], [1.395634, 5.011963, 5.316032], [1.6195, 6.599217, 4.921106], [1.891399, 8.236377, 4.274997], [4.195832, 2.235205, 3.375099], [5.733342, 1.411738, 2.431726], [1.859887, 2.355757, 3.843181], [4.988612, 3.074654, 3.083858], [1.303263, 1.416453, 4.831091], [1.305757, -0.672779, 6.415959], [6.46517, 0.937119, 1.689873], [5.258659, 0.945811, 2.974312], [4.432338, 0.722096, 3.522615], [3.300681, 0.861641, 3.872784], [2.430178, 1.131492, 4.039035], [1.820731, 1.467954, 4.224124], [0.563221, 2.307693, 5.566789], [6.338145, -0.529279, 1.881175], [5.587698, 3.208071, 2.687839], [0.242624, -1.462857, 7.071491], [1.611251, 0.339326, 4.895421], [7.743095, 2.364999, -2.005167], [1.391142, 1.851048, 4.448999], [1.785794, -0.978284, 4.85047], [4.670959, 2.664461, 3.084075], [1.33397, -0.283761, 6.097047], [7.270895, -2.890917, -2.252455], [1.856432, 2.585245, 3.757904], [0.923388, 0.073076, 6.671944], [5.000589, -6.135128, 1.892523], [5.085276, -7.17859, 0.714711], [7.159291, -0.81182, -0.072044], [5.843051, -5.248023, 0.924091], [6.847258, 3.662916, 0.724695], [2.412942, -8.258853, 4.119213], [0.179909, -1.689864, 6.573301], [2.103655, -0.163946, 4.566119], [6.407571, 2.236021, 1.560843], [3.670075, 2.360153, 3.63523], [3.177186, 2.294265, 3.775704], [2.196121, -4.598322, 4.479786], [6.234883, -1.94443, 1.663542], [1.292924, -9.29592, 4.094063], [3.210651, -8.533278, 2.802001], [4.068926, -7.993109, 1.925119], [2.724032, 2.315802, 3.777151], [2.28846, 2.398891, 3.697603], [1.998311, 2.496547, 3.689148], [6.13004, 3.399261, 2.038516], [2.28846, 2.886504, 3.775031], [2.724032, 2.96181, 3.871767], [3.177186, 2.964136, 3.876973], [3.670075, 2.927714, 3.724325], [4.018389, 2.857357, 3.482983], [7.555811, 4.106811, -0.991917], [4.018389, 2.483695, 3.440898], [1.776217, -2.683946, 5.213116], [1.222237, -1.182444, 5.952465], [0.731493, -2.536683, 5.815343], [4.135272, -6.996638, 2.67197], [3.311811, -7.660815, 3.382963], [1.313701, -8.639995, 4.702456], [5.940524, -6.223629, -0.631468], [1.998311, 2.743838, 3.74403], [0.901447, 1.236992, 5.754256], [2.308977, -8.974196, 3.60907], [6.954154, -2.439843, -0.131163], [1.098819, -4.458788, 5.120727], [1.181124, -4.579996, 5.189564], [1.255818, -4.787901, 5.237051], [1.325085, -5.106507, 5.20501], [1.546388, -5.819392, 4.757893], [1.953754, -4.183892, 4.431713], [2.117802, -4.137093, 4.555096], [2.285339, -4.051196, 4.582438], [2.85016, -3.66572, 4.484994], [5.278538, -2.238942, 2.861224], [0.946709, 1.907628, 5.196779], [1.314173, 3.104912, 4.231404], [1.78, 2.86, 3.881555], [1.84511, -4.09888, 4.247264], [5.436187, -4.030482, 2.109852], [0.766444, 3.182131, 4.861453], [1.938616, -6.61441, 4.521085], [0.516573, 1.583572, 6.148363], [1.246815, 0.230297, 5.681036], [0.997827, -6.930921, 4.979576], [3.288807, -5.382514, 3.795752], [2.311631, -1.566237, 4.590085], [2.68025, -6.111567, 4.096152], [3.832928, -1.537326, 4.137731], [2.96186, -2.274215, 4.440943], [4.386901, -2.683286, 3.643886], [1.217295, -7.834465, 4.969286], [1.542374, -0.136843, 5.201008], [3.878377, -6.041764, 3.311079], [3.084037, -6.809842, 3.814195], [3.747321, -4.503545, 3.726453], [6.094129, -3.205991, 1.473482], [4.588995, -4.728726, 2.983221], [6.583231, -3.941269, 0.070268], [3.49258, -3.19582, 4.130198], [1.255543, 0.802341, 5.307551], [1.126122, -0.933602, 6.538785], [1.443109, -1.142774, 5.905127], [0.923043, -0.529042, 7.003423], [1.755386, 3.529117, 4.327696], [2.632589, 3.713828, 4.364629], [3.388062, 3.721976, 4.309028], [4.075766, 3.675413, 4.076063], [4.62291, 3.474691, 3.646321], [5.171755, 2.535753, 2.670867], [7.297331, 0.763172, -0.048769], [4.706828, 1.651, 3.109532], [4.071712, 1.476821, 3.476944], [3.269817, 1.470659, 3.731945], [2.527572, 1.617311, 3.865444], [1.970894, 1.858505, 3.961782], [1.579543, 2.097941, 4.084996], [7.664182, 0.673132, -2.435867], [1.397041, -1.340139, 5.630378], [0.884838, 0.65874, 6.233232], [0.767097, -0.968035, 7.077932], [0.460213, -1.334106, 6.787447], [0.748618, -1.067994, 6.798303], [1.236408, -1.585568, 5.48049], [0.387306, -1.40999, 6.957705], [0.319925, -1.607931, 6.508676], [1.639633, 2.556298, 3.863736], [1.255645, 2.467144, 4.2038], [1.031362, 2.382663, 4.615849], [4.253081, 2.772296, 3.315305], [4.53, 2.91, 3.339685]], JQ = [[0.499977, 0.347466], [0.500026, 0.452513], [0.499974, 0.397628], [0.482113, 0.528021], [0.500151, 0.472844], [0.49991, 0.501747], [0.499523, 0.598938], [0.289712, 0.619236], [0.499955, 0.687602], [0.499987, 0.730081], [0.500023, 0.89295], [0.500023, 0.333766], [0.500016, 0.320776], [0.500023, 0.307652], [0.499977, 0.304722], [0.499977, 0.294066], [0.499977, 0.280615], [0.499977, 0.262981], [0.499968, 0.218629], [0.499816, 0.437019], [0.473773, 0.42609], [0.104907, 0.745859], [0.36593, 0.590424], [0.338758, 0.586975], [0.31112, 0.59054], [0.274658, 0.610869], [0.393362, 0.596294], [0.345234, 0.655989], [0.370094, 0.653924], [0.319322, 0.652735], [0.297903, 0.646409], [0.247792, 0.58919], [0.396889, 0.157245], [0.280098, 0.6244], [0.10631, 0.600044], [0.209925, 0.608647], [0.355808, 0.465594], [0.471751, 0.349596], [0.474155, 0.319808], [0.439785, 0.342771], [0.414617, 0.333459], [0.450374, 0.319139], [0.428771, 0.317309], [0.374971, 0.272195], [0.486717, 0.452371], [0.485301, 0.472605], [0.257765, 0.68551], [0.401223, 0.544828], [0.429819, 0.451385], [0.421352, 0.466259], [0.276896, 0.467943], [0.48337, 0.500413], [0.337212, 0.717117], [0.296392, 0.706757], [0.169295, 0.806186], [0.44758, 0.69739], [0.39239, 0.646112], [0.35449, 0.303216], [0.067305, 0.269895], [0.442739, 0.427174], [0.457098, 0.415208], [0.381974, 0.305289], [0.392389, 0.305797], [0.277076, 0.728068], [0.422552, 0.436767], [0.385919, 0.718636], [0.383103, 0.74416], [0.331431, 0.880286], [0.229924, 0.767997], [0.364501, 0.810886], [0.229622, 0.700459], [0.173287, 0.721252], [0.472879, 0.333802], [0.446828, 0.331473], [0.422762, 0.32611], [0.445308, 0.419934], [0.388103, 0.306039], [0.403039, 0.29346], [0.403629, 0.306047], [0.460042, 0.442861], [0.431158, 0.307634], [0.452182, 0.307634], [0.475387, 0.307634], [0.465828, 0.22081], [0.472329, 0.263774], [0.473087, 0.282143], [0.473122, 0.295374], [0.473033, 0.304722], [0.427942, 0.304722], [0.426479, 0.29646], [0.423162, 0.288154], [0.418309, 0.279937], [0.390095, 0.360427], [0.013954, 0.439966], [0.499914, 0.419853], [0.4132, 0.3046], [0.409626, 0.298177], [0.46808, 0.398465], [0.422729, 0.414015], [0.46308, 0.406216], [0.37212, 0.526586], [0.334562, 0.503927], [0.411671, 0.453035], [0.242176, 0.852324], [0.290777, 0.798554], [0.327338, 0.743473], [0.39951, 0.251079], [0.441728, 0.738324], [0.429765, 0.812166], [0.412198, 0.891099], [0.288955, 0.601048], [0.218937, 0.564589], [0.412782, 0.60103], [0.257135, 0.64456], [0.427685, 0.562039], [0.44834, 0.463064], [0.17856, 0.542446], [0.247308, 0.542806], [0.286267, 0.532325], [0.332828, 0.539288], [0.368756, 0.552793], [0.398964, 0.567345], [0.47641, 0.594194], [0.189241, 0.476076], [0.228962, 0.651049], [0.490726, 0.437599], [0.40467, 0.514867], [0.019469, 0.598436], [0.426243, 0.579569], [0.396993, 0.451203], [0.26647, 0.623023], [0.439121, 0.481042], [0.032314, 0.355643], [0.419054, 0.612845], [0.462783, 0.494253], [0.238979, 0.220255], [0.198221, 0.168062], [0.10755, 0.459245], [0.18361, 0.259743], [0.13441, 0.666317], [0.385764, 0.116846], [0.490967, 0.420622], [0.382385, 0.491427], [0.174399, 0.602329], [0.318785, 0.603765], [0.343364, 0.599403], [0.3961, 0.289783], [0.187885, 0.411462], [0.430987, 0.055935], [0.318993, 0.101715], [0.266248, 0.130299], [0.500023, 0.809424], [0.499977, 0.045547], [0.36617, 0.601178], [0.393207, 0.604463], [0.410373, 0.60892], [0.194993, 0.657898], [0.388665, 0.637716], [0.365962, 0.644029], [0.343364, 0.644643], [0.318785, 0.64166], [0.301415, 0.636844], [0.058133, 0.680924], [0.301415, 0.612551], [0.499988, 0.381566], [0.415838, 0.375804], [0.445682, 0.433923], [0.465844, 0.379359], [0.499923, 0.648476], [0.288719, 0.180054], [0.335279, 0.14718], [0.440512, 0.097581], [0.128294, 0.208059], [0.408772, 0.626106], [0.455607, 0.548199], [0.499877, 0.09101], [0.375437, 0.075808], [0.11421, 0.384978], [0.448662, 0.304722], [0.44802, 0.295368], [0.447112, 0.284192], [0.444832, 0.269206], [0.430012, 0.233191], [0.406787, 0.314327], [0.400738, 0.318931], [0.3924, 0.322297], [0.367856, 0.336081], [0.247923, 0.398667], [0.45277, 0.57915], [0.436392, 0.640113], [0.416164, 0.631286], [0.413386, 0.307634], [0.228018, 0.316428], [0.468268, 0.647329], [0.411362, 0.195673], [0.499989, 0.530175], [0.479154, 0.557346], [0.499974, 0.560363], [0.432112, 0.506411], [0.499886, 0.133083], [0.499913, 0.178271], [0.456549, 0.180799], [0.344549, 0.254561], [0.378909, 0.42599], [0.374293, 0.219815], [0.319688, 0.429262], [0.357155, 0.39573], [0.295284, 0.378419], [0.44775, 0.137523], [0.410986, 0.491277], [0.313951, 0.224692], [0.354128, 0.187447], [0.324548, 0.296007], [0.189096, 0.3537], [0.279777, 0.285342], [0.133823, 0.317299], [0.336768, 0.355267], [0.429884, 0.533478], [0.455528, 0.451377], [0.437114, 0.441104], [0.467288, 0.470075], [0.414712, 0.66478], [0.377046, 0.677222], [0.344108, 0.679849], [0.312876, 0.677668], [0.283526, 0.66681], [0.241246, 0.617214], [0.102986, 0.531237], [0.267612, 0.57544], [0.297879, 0.566824], [0.333434, 0.566122], [0.366427, 0.573884], [0.396012, 0.583304], [0.420121, 0.589772], [7561e-6, 0.519223], [0.432949, 0.430482], [0.458639, 0.520911], [0.473466, 0.454256], [0.476088, 0.43617], [0.468472, 0.444943], [0.433991, 0.417638], [0.483518, 0.437016], [0.482483, 0.422151], [0.42645, 0.610201], [0.438999, 0.603505], [0.450067, 0.599566], [0.289712, 0.631747], [0.27667, 0.636627], [0.517862, 0.528052], [0.710288, 0.619236], [0.526227, 0.42609], [0.895093, 0.745859], [0.63407, 0.590424], [0.661242, 0.586975], [0.68888, 0.59054], [0.725342, 0.610869], [0.60663, 0.596295], [0.654766, 0.655989], [0.629906, 0.653924], [0.680678, 0.652735], [0.702097, 0.646409], [0.752212, 0.589195], [0.602918, 0.157137], [0.719902, 0.6244], [0.893693, 0.60004], [0.790082, 0.608646], [0.643998, 0.465512], [0.528249, 0.349596], [0.52585, 0.319809], [0.560215, 0.342771], [0.585384, 0.333459], [0.549626, 0.319139], [0.571228, 0.317308], [0.624852, 0.271901], [0.51305, 0.452718], [0.515097, 0.472748], [0.742247, 0.685493], [0.598631, 0.545021], [0.570338, 0.451425], [0.578632, 0.466377], [0.723087, 0.467946], [0.516446, 0.500361], [0.662801, 0.717082], [0.703624, 0.706729], [0.830705, 0.806186], [0.552386, 0.697432], [0.60761, 0.646112], [0.645429, 0.303293], [0.932695, 0.269895], [0.557261, 0.427174], [0.542902, 0.415208], [0.618026, 0.305289], [0.607591, 0.305797], [0.722943, 0.728037], [0.577414, 0.436833], [0.614083, 0.718613], [0.616907, 0.744114], [0.668509, 0.880086], [0.770092, 0.767979], [0.635536, 0.810751], [0.770391, 0.700444], [0.826722, 0.721245], [0.527121, 0.333802], [0.553172, 0.331473], [0.577238, 0.32611], [0.554692, 0.419934], [0.611897, 0.306039], [0.596961, 0.29346], [0.596371, 0.306047], [0.539958, 0.442861], [0.568842, 0.307634], [0.547818, 0.307634], [0.524613, 0.307634], [0.53409, 0.220859], [0.527671, 0.263774], [0.526913, 0.282143], [0.526878, 0.295374], [0.526967, 0.304722], [0.572058, 0.304722], [0.573521, 0.29646], [0.576838, 0.288154], [0.581691, 0.279937], [0.609945, 0.36009], [0.986046, 0.439966], [0.5868, 0.3046], [0.590372, 0.298177], [0.531915, 0.398463], [0.577268, 0.414065], [0.536915, 0.406214], [0.627543, 0.526648], [0.665586, 0.504049], [0.588354, 0.453138], [0.757824, 0.852324], [0.70925, 0.798492], [0.672684, 0.743419], [0.600409, 0.250995], [0.558266, 0.738328], [0.570304, 0.812129], [0.588166, 0.890956], [0.711045, 0.601048], [0.78107, 0.564595], [0.587247, 0.601068], [0.74287, 0.644554], [0.572156, 0.562348], [0.551868, 0.46343], [0.821442, 0.542444], [0.752702, 0.542818], [0.713757, 0.532373], [0.667113, 0.539327], [0.631101, 0.552846], [0.600862, 0.567527], [0.523481, 0.594373], [0.810748, 0.476074], [0.771046, 0.651041], [0.509127, 0.437282], [0.595293, 0.514976], [0.980531, 0.598436], [0.5735, 0.58], [0.602995, 0.451312], [0.73353, 0.623023], [0.560611, 0.480983], [0.967686, 0.355643], [0.580985, 0.61284], [0.537728, 0.494615], [0.760966, 0.220247], [0.801779, 0.168062], [0.892441, 0.459239], [0.816351, 0.25974], [0.865595, 0.666313], [0.614074, 0.116754], [0.508953, 0.420562], [0.617942, 0.491684], [0.825608, 0.602325], [0.681215, 0.603765], [0.656636, 0.599403], [0.6039, 0.289783], [0.812086, 0.411461], [0.568013, 0.055435], [0.681008, 0.101715], [0.733752, 0.130299], [0.63383, 0.601178], [0.606793, 0.604463], [0.58966, 0.608938], [0.805016, 0.657892], [0.611335, 0.637716], [0.634038, 0.644029], [0.656636, 0.644643], [0.681215, 0.64166], [0.698585, 0.636844], [0.941867, 0.680924], [0.698585, 0.612551], [0.584177, 0.375893], [0.554318, 0.433923], [0.534154, 0.37936], [0.711218, 0.180025], [0.66463, 0.147129], [0.5591, 0.097368], [0.871706, 0.208059], [0.591234, 0.626106], [0.544341, 0.548416], [0.624563, 0.075808], [0.88577, 0.384971], [0.551338, 0.304722], [0.55198, 0.295368], [0.552888, 0.284192], [0.555168, 0.269206], [0.569944, 0.232965], [0.593203, 0.314324], [0.599262, 0.318931], [0.6076, 0.322297], [0.631938, 0.3365], [0.752033, 0.398685], [0.547226, 0.579605], [0.563544, 0.640172], [0.583841, 0.631286], [0.586614, 0.307634], [0.771915, 0.316422], [0.531597, 0.647517], [0.588371, 0.195559], [0.520797, 0.557435], [0.567985, 0.506521], [0.543283, 0.180745], [0.655317, 0.254485], [0.621009, 0.425982], [0.62556, 0.219688], [0.680198, 0.429281], [0.642764, 0.395662], [0.704663, 0.37847], [0.552012, 0.137408], [0.589072, 0.491363], [0.685945, 0.224643], [0.645735, 0.18736], [0.675343, 0.296022], [0.810858, 0.353695], [0.720122, 0.285333], [0.866152, 0.317295], [0.663187, 0.355403], [0.570082, 0.533674], [0.544562, 0.451624], [0.562759, 0.441215], [0.531987, 0.46986], [0.585271, 0.664823], [0.622953, 0.677221], [0.655896, 0.679837], [0.687132, 0.677654], [0.716482, 0.666799], [0.758757, 0.617213], [0.897013, 0.531231], [0.732392, 0.575453], [0.702114, 0.566837], [0.666525, 0.566134], [0.633505, 0.573912], [0.603876, 0.583413], [0.579658, 0.590055], [0.99244, 0.519223], [0.567192, 0.43058], [0.541366, 0.521101], [0.526564, 0.453882], [0.523913, 0.43617], [0.531529, 0.444943], [0.566036, 0.417671], [0.516311, 0.436946], [0.517472, 0.422123], [0.573595, 0.610193], [0.560698, 0.604668], [0.549756, 0.600249], [0.710288, 0.631747], [0.72333, 0.636627]], YF = [173, 155, 133, 246, 33, 7, 382, 398, 362, 263, 466, 249, 308, 415, 324, 78, 95, 191, 356, 389, 264, 127, 34, 162, 368, 264, 389, 139, 162, 34, 267, 0, 302, 37, 72, 0, 11, 302, 0, 11, 0, 72, 349, 451, 350, 120, 121, 231, 452, 350, 451, 232, 231, 121, 267, 302, 269, 37, 39, 72, 303, 269, 302, 73, 72, 39, 357, 343, 350, 128, 121, 114, 277, 350, 343, 47, 114, 121, 350, 452, 357, 121, 128, 232, 453, 357, 452, 233, 232, 128, 299, 333, 297, 69, 67, 104, 332, 297, 333, 103, 104, 67, 175, 152, 396, 175, 171, 152, 377, 396, 152, 148, 152, 171, 381, 384, 382, 154, 155, 157, 398, 382, 384, 173, 157, 155, 280, 347, 330, 50, 101, 118, 348, 330, 347, 119, 118, 101, 269, 303, 270, 39, 40, 73, 304, 270, 303, 74, 73, 40, 9, 336, 151, 9, 151, 107, 337, 151, 336, 108, 107, 151, 344, 278, 360, 115, 131, 48, 279, 360, 278, 49, 48, 131, 262, 431, 418, 32, 194, 211, 424, 418, 431, 204, 211, 194, 304, 408, 270, 74, 40, 184, 409, 270, 408, 185, 184, 40, 272, 310, 407, 42, 183, 80, 415, 407, 310, 191, 80, 183, 322, 270, 410, 92, 186, 40, 409, 410, 270, 185, 40, 186, 347, 449, 348, 118, 119, 229, 450, 348, 449, 230, 229, 119, 434, 432, 430, 214, 210, 212, 422, 430, 432, 202, 212, 210, 313, 314, 18, 83, 18, 84, 17, 18, 314, 17, 84, 18, 307, 375, 306, 77, 76, 146, 291, 306, 375, 61, 146, 76, 259, 387, 260, 29, 30, 160, 388, 260, 387, 161, 160, 30, 286, 414, 384, 56, 157, 190, 398, 384, 414, 173, 190, 157, 418, 424, 406, 194, 182, 204, 335, 406, 424, 106, 204, 182, 367, 416, 364, 138, 135, 192, 434, 364, 416, 214, 192, 135, 391, 423, 327, 165, 98, 203, 358, 327, 423, 129, 203, 98, 298, 301, 284, 68, 54, 71, 251, 284, 301, 21, 71, 54, 4, 275, 5, 4, 5, 45, 281, 5, 275, 51, 45, 5, 254, 373, 253, 24, 23, 144, 374, 253, 373, 145, 144, 23, 320, 321, 307, 90, 77, 91, 375, 307, 321, 146, 91, 77, 280, 425, 411, 50, 187, 205, 427, 411, 425, 207, 205, 187, 421, 313, 200, 201, 200, 83, 18, 200, 313, 18, 83, 200, 335, 321, 406, 106, 182, 91, 405, 406, 321, 181, 91, 182, 405, 321, 404, 181, 180, 91, 320, 404, 321, 90, 91, 180, 17, 314, 16, 17, 16, 84, 315, 16, 314, 85, 84, 16, 425, 266, 426, 205, 206, 36, 423, 426, 266, 203, 36, 206, 369, 396, 400, 140, 176, 171, 377, 400, 396, 148, 171, 176, 391, 269, 322, 165, 92, 39, 270, 322, 269, 40, 39, 92, 417, 465, 413, 193, 189, 245, 464, 413, 465, 244, 245, 189, 257, 258, 386, 27, 159, 28, 385, 386, 258, 158, 28, 159, 260, 388, 467, 30, 247, 161, 466, 467, 388, 246, 161, 247, 248, 456, 419, 3, 196, 236, 399, 419, 456, 174, 236, 196, 333, 298, 332, 104, 103, 68, 284, 332, 298, 54, 68, 103, 285, 8, 417, 55, 193, 8, 168, 417, 8, 168, 8, 193, 340, 261, 346, 111, 117, 31, 448, 346, 261, 228, 31, 117, 285, 417, 441, 55, 221, 193, 413, 441, 417, 189, 193, 221, 327, 460, 326, 98, 97, 240, 328, 326, 460, 99, 240, 97, 277, 355, 329, 47, 100, 126, 371, 329, 355, 142, 126, 100, 309, 392, 438, 79, 218, 166, 439, 438, 392, 219, 166, 218, 381, 382, 256, 154, 26, 155, 341, 256, 382, 112, 155, 26, 360, 279, 420, 131, 198, 49, 429, 420, 279, 209, 49, 198, 365, 364, 379, 136, 150, 135, 394, 379, 364, 169, 135, 150, 355, 277, 437, 126, 217, 47, 343, 437, 277, 114, 47, 217, 443, 444, 282, 223, 52, 224, 283, 282, 444, 53, 224, 52, 281, 275, 363, 51, 134, 45, 440, 363, 275, 220, 45, 134, 431, 262, 395, 211, 170, 32, 369, 395, 262, 140, 32, 170, 337, 299, 338, 108, 109, 69, 297, 338, 299, 67, 69, 109, 335, 273, 321, 106, 91, 43, 375, 321, 273, 146, 43, 91, 348, 450, 349, 119, 120, 230, 451, 349, 450, 231, 230, 120, 467, 359, 342, 247, 113, 130, 446, 342, 359, 226, 130, 113, 282, 283, 334, 52, 105, 53, 293, 334, 283, 63, 53, 105, 250, 458, 462, 20, 242, 238, 461, 462, 458, 241, 238, 242, 276, 353, 300, 46, 70, 124, 383, 300, 353, 156, 124, 70, 325, 292, 324, 96, 95, 62, 308, 324, 292, 78, 62, 95, 283, 276, 293, 53, 63, 46, 300, 293, 276, 70, 46, 63, 447, 264, 345, 227, 116, 34, 372, 345, 264, 143, 34, 116, 352, 345, 346, 123, 117, 116, 340, 346, 345, 111, 116, 117, 1, 19, 274, 1, 44, 19, 354, 274, 19, 125, 19, 44, 248, 281, 456, 3, 236, 51, 363, 456, 281, 134, 51, 236, 425, 426, 427, 205, 207, 206, 436, 427, 426, 216, 206, 207, 380, 381, 252, 153, 22, 154, 256, 252, 381, 26, 154, 22, 391, 393, 269, 165, 39, 167, 267, 269, 393, 37, 167, 39, 199, 428, 200, 199, 200, 208, 421, 200, 428, 201, 208, 200, 330, 329, 266, 101, 36, 100, 371, 266, 329, 142, 100, 36, 422, 432, 273, 202, 43, 212, 287, 273, 432, 57, 212, 43, 290, 250, 328, 60, 99, 20, 462, 328, 250, 242, 20, 99, 258, 286, 385, 28, 158, 56, 384, 385, 286, 157, 56, 158, 342, 446, 353, 113, 124, 226, 265, 353, 446, 35, 226, 124, 257, 386, 259, 27, 29, 159, 387, 259, 386, 160, 159, 29, 430, 422, 431, 210, 211, 202, 424, 431, 422, 204, 202, 211, 445, 342, 276, 225, 46, 113, 353, 276, 342, 124, 113, 46, 424, 422, 335, 204, 106, 202, 273, 335, 422, 43, 202, 106, 306, 292, 307, 76, 77, 62, 325, 307, 292, 96, 62, 77, 366, 447, 352, 137, 123, 227, 345, 352, 447, 116, 227, 123, 302, 268, 303, 72, 73, 38, 271, 303, 268, 41, 38, 73, 371, 358, 266, 142, 36, 129, 423, 266, 358, 203, 129, 36, 327, 294, 460, 98, 240, 64, 455, 460, 294, 235, 64, 240, 294, 331, 278, 64, 48, 102, 279, 278, 331, 49, 102, 48, 303, 271, 304, 73, 74, 41, 272, 304, 271, 42, 41, 74, 427, 436, 434, 207, 214, 216, 432, 434, 436, 212, 216, 214, 304, 272, 408, 74, 184, 42, 407, 408, 272, 183, 42, 184, 394, 430, 395, 169, 170, 210, 431, 395, 430, 211, 210, 170, 395, 369, 378, 170, 149, 140, 400, 378, 369, 176, 140, 149, 296, 334, 299, 66, 69, 105, 333, 299, 334, 104, 105, 69, 417, 168, 351, 193, 122, 168, 6, 351, 168, 6, 168, 122, 280, 411, 352, 50, 123, 187, 376, 352, 411, 147, 187, 123, 319, 320, 325, 89, 96, 90, 307, 325, 320, 77, 90, 96, 285, 295, 336, 55, 107, 65, 296, 336, 295, 66, 65, 107, 404, 320, 403, 180, 179, 90, 319, 403, 320, 89, 90, 179, 330, 348, 329, 101, 100, 119, 349, 329, 348, 120, 119, 100, 334, 293, 333, 105, 104, 63, 298, 333, 293, 68, 63, 104, 323, 454, 366, 93, 137, 234, 447, 366, 454, 227, 234, 137, 16, 315, 15, 16, 15, 85, 316, 15, 315, 86, 85, 15, 429, 279, 358, 209, 129, 49, 331, 358, 279, 102, 49, 129, 15, 316, 14, 15, 14, 86, 317, 14, 316, 87, 86, 14, 8, 285, 9, 8, 9, 55, 336, 9, 285, 107, 55, 9, 329, 349, 277, 100, 47, 120, 350, 277, 349, 121, 120, 47, 252, 253, 380, 22, 153, 23, 374, 380, 253, 145, 23, 153, 402, 403, 318, 178, 88, 179, 319, 318, 403, 89, 179, 88, 351, 6, 419, 122, 196, 6, 197, 419, 6, 197, 6, 196, 324, 318, 325, 95, 96, 88, 319, 325, 318, 89, 88, 96, 397, 367, 365, 172, 136, 138, 364, 365, 367, 135, 138, 136, 288, 435, 397, 58, 172, 215, 367, 397, 435, 138, 215, 172, 438, 439, 344, 218, 115, 219, 278, 344, 439, 48, 219, 115, 271, 311, 272, 41, 42, 81, 310, 272, 311, 80, 81, 42, 5, 281, 195, 5, 195, 51, 248, 195, 281, 3, 51, 195, 273, 287, 375, 43, 146, 57, 291, 375, 287, 61, 57, 146, 396, 428, 175, 171, 175, 208, 199, 175, 428, 199, 208, 175, 268, 312, 271, 38, 41, 82, 311, 271, 312, 81, 82, 41, 444, 445, 283, 224, 53, 225, 276, 283, 445, 46, 225, 53, 254, 339, 373, 24, 144, 110, 390, 373, 339, 163, 110, 144, 295, 282, 296, 65, 66, 52, 334, 296, 282, 105, 52, 66, 346, 448, 347, 117, 118, 228, 449, 347, 448, 229, 228, 118, 454, 356, 447, 234, 227, 127, 264, 447, 356, 34, 127, 227, 336, 296, 337, 107, 108, 66, 299, 337, 296, 69, 66, 108, 151, 337, 10, 151, 10, 108, 338, 10, 337, 109, 108, 10, 278, 439, 294, 48, 64, 219, 455, 294, 439, 235, 219, 64, 407, 415, 292, 183, 62, 191, 308, 292, 415, 78, 191, 62, 358, 371, 429, 129, 209, 142, 355, 429, 371, 126, 142, 209, 345, 372, 340, 116, 111, 143, 265, 340, 372, 35, 143, 111, 388, 390, 466, 161, 246, 163, 249, 466, 390, 7, 163, 246, 352, 346, 280, 123, 50, 117, 347, 280, 346, 118, 117, 50, 295, 442, 282, 65, 52, 222, 443, 282, 442, 223, 222, 52, 19, 94, 354, 19, 125, 94, 370, 354, 94, 141, 94, 125, 295, 285, 442, 65, 222, 55, 441, 442, 285, 221, 55, 222, 419, 197, 248, 196, 3, 197, 195, 248, 197, 195, 197, 3, 359, 263, 255, 130, 25, 33, 249, 255, 263, 7, 33, 25, 275, 274, 440, 45, 220, 44, 457, 440, 274, 237, 44, 220, 300, 383, 301, 70, 71, 156, 368, 301, 383, 139, 156, 71, 417, 351, 465, 193, 245, 122, 412, 465, 351, 188, 122, 245, 466, 263, 467, 246, 247, 33, 359, 467, 263, 130, 33, 247, 389, 251, 368, 162, 139, 21, 301, 368, 251, 71, 21, 139, 374, 386, 380, 145, 153, 159, 385, 380, 386, 158, 159, 153, 379, 394, 378, 150, 149, 169, 395, 378, 394, 170, 169, 149, 351, 419, 412, 122, 188, 196, 399, 412, 419, 174, 196, 188, 426, 322, 436, 206, 216, 92, 410, 436, 322, 186, 92, 216, 387, 373, 388, 160, 161, 144, 390, 388, 373, 163, 144, 161, 393, 326, 164, 167, 164, 97, 2, 164, 326, 2, 97, 164, 354, 370, 461, 125, 241, 141, 462, 461, 370, 242, 141, 241, 0, 267, 164, 0, 164, 37, 393, 164, 267, 167, 37, 164, 11, 12, 302, 11, 72, 12, 268, 302, 12, 38, 12, 72, 386, 374, 387, 159, 160, 145, 373, 387, 374, 144, 145, 160, 12, 13, 268, 12, 38, 13, 312, 268, 13, 82, 13, 38, 293, 300, 298, 63, 68, 70, 301, 298, 300, 71, 70, 68, 340, 265, 261, 111, 31, 35, 446, 261, 265, 226, 35, 31, 380, 385, 381, 153, 154, 158, 384, 381, 385, 157, 158, 154, 280, 330, 425, 50, 205, 101, 266, 425, 330, 36, 101, 205, 423, 391, 426, 203, 206, 165, 322, 426, 391, 92, 165, 206, 429, 355, 420, 209, 198, 126, 437, 420, 355, 217, 126, 198, 391, 327, 393, 165, 167, 98, 326, 393, 327, 97, 98, 167, 457, 438, 440, 237, 220, 218, 344, 440, 438, 115, 218, 220, 382, 362, 341, 155, 112, 133, 463, 341, 362, 243, 133, 112, 457, 461, 459, 237, 239, 241, 458, 459, 461, 238, 241, 239, 434, 430, 364, 214, 135, 210, 394, 364, 430, 169, 210, 135, 414, 463, 398, 190, 173, 243, 362, 398, 463, 133, 243, 173, 262, 428, 369, 32, 140, 208, 396, 369, 428, 171, 208, 140, 457, 274, 461, 237, 241, 44, 354, 461, 274, 125, 44, 241, 316, 403, 317, 86, 87, 179, 402, 317, 403, 178, 179, 87, 315, 404, 316, 85, 86, 180, 403, 316, 404, 179, 180, 86, 314, 405, 315, 84, 85, 181, 404, 315, 405, 180, 181, 85, 313, 406, 314, 83, 84, 182, 405, 314, 406, 181, 182, 84, 418, 406, 421, 194, 201, 182, 313, 421, 406, 83, 182, 201, 366, 401, 323, 137, 93, 177, 361, 323, 401, 132, 177, 93, 408, 407, 306, 184, 76, 183, 292, 306, 407, 62, 183, 76, 408, 306, 409, 184, 185, 76, 291, 409, 306, 61, 76, 185, 410, 409, 287, 186, 57, 185, 291, 287, 409, 61, 185, 57, 436, 410, 432, 216, 212, 186, 287, 432, 410, 57, 186, 212, 434, 416, 427, 214, 207, 192, 411, 427, 416, 187, 192, 207, 264, 368, 372, 34, 143, 139, 383, 372, 368, 156, 139, 143, 457, 459, 438, 237, 218, 239, 309, 438, 459, 79, 239, 218, 352, 376, 366, 123, 137, 147, 401, 366, 376, 177, 147, 137, 4, 1, 275, 4, 45, 1, 274, 275, 1, 44, 1, 45, 428, 262, 421, 208, 201, 32, 418, 421, 262, 194, 32, 201, 327, 358, 294, 98, 64, 129, 331, 294, 358, 102, 129, 64, 367, 435, 416, 138, 192, 215, 433, 416, 435, 213, 215, 192, 455, 439, 289, 235, 59, 219, 392, 289, 439, 166, 219, 59, 328, 462, 326, 99, 97, 242, 370, 326, 462, 141, 242, 97, 326, 370, 2, 97, 2, 141, 94, 2, 370, 94, 141, 2, 460, 455, 305, 240, 75, 235, 289, 305, 455, 59, 235, 75, 448, 339, 449, 228, 229, 110, 254, 449, 339, 24, 110, 229, 261, 446, 255, 31, 25, 226, 359, 255, 446, 130, 226, 25, 449, 254, 450, 229, 230, 24, 253, 450, 254, 23, 24, 230, 450, 253, 451, 230, 231, 23, 252, 451, 253, 22, 23, 231, 451, 252, 452, 231, 232, 22, 256, 452, 252, 26, 22, 232, 256, 341, 452, 26, 232, 112, 453, 452, 341, 233, 112, 232, 413, 464, 414, 189, 190, 244, 463, 414, 464, 243, 244, 190, 441, 413, 286, 221, 56, 189, 414, 286, 413, 190, 189, 56, 441, 286, 442, 221, 222, 56, 258, 442, 286, 28, 56, 222, 442, 258, 443, 222, 223, 28, 257, 443, 258, 27, 28, 223, 444, 443, 259, 224, 29, 223, 257, 259, 443, 27, 223, 29, 259, 260, 444, 29, 224, 30, 445, 444, 260, 225, 30, 224, 260, 467, 445, 30, 225, 247, 342, 445, 467, 113, 247, 225, 250, 309, 458, 20, 238, 79, 459, 458, 309, 239, 79, 238, 290, 305, 392, 60, 166, 75, 289, 392, 305, 59, 75, 166, 460, 305, 328, 240, 99, 75, 290, 328, 305, 60, 75, 99, 376, 433, 401, 147, 177, 213, 435, 401, 433, 215, 213, 177, 250, 290, 309, 20, 79, 60, 392, 309, 290, 166, 60, 79, 411, 416, 376, 187, 147, 192, 433, 376, 416, 213, 192, 147, 341, 463, 453, 112, 233, 243, 464, 453, 463, 244, 243, 233, 453, 464, 357, 233, 128, 244, 465, 357, 464, 245, 244, 128, 412, 343, 465, 188, 245, 114, 357, 465, 343, 128, 114, 245, 437, 343, 399, 217, 174, 114, 412, 399, 343, 188, 114, 174, 363, 440, 360, 134, 131, 220, 344, 360, 440, 115, 220, 131, 456, 420, 399, 236, 174, 198, 437, 399, 420, 217, 198, 174, 456, 363, 420, 236, 198, 134, 360, 420, 363, 131, 134, 198, 361, 401, 288, 132, 58, 177, 435, 288, 401, 215, 177, 58, 353, 265, 383, 124, 156, 35, 372, 383, 265, 143, 35, 156, 255, 249, 339, 25, 110, 7, 390, 339, 249, 163, 7, 110, 261, 255, 448, 31, 228, 25, 339, 448, 255, 110, 25, 228, 14, 317, 13, 14, 13, 87, 312, 13, 317, 82, 87, 13, 317, 402, 312, 87, 82, 178, 311, 312, 402, 81, 178, 82, 402, 318, 311, 178, 81, 88, 310, 311, 318, 80, 88, 81, 318, 324, 310, 88, 80, 95, 415, 310, 324, 191, 95, 80], wG = [[4, 0.070909939706326], [6, 0.032100144773722], [10, 0.008446550928056], [33, 0.058724168688059], [54, 0.007667080033571], [67, 0.009078059345484], [117, 0.009791937656701], [119, 0.014565368182957], [121, 0.018591361120343], [127, 0.005197994410992], [129, 0.120625205338001], [132, 0.005560018587857], [133, 0.05328618362546], [136, 0.066890455782413], [143, 0.014816547743976], [147, 0.014262833632529], [198, 0.025462191551924], [205, 0.047252278774977], [263, 0.058724168688059], [284, 0.007667080033571], [297, 0.009078059345484], [346, 0.009791937656701], [348, 0.014565368182957], [350, 0.018591361120343], [356, 0.005197994410992], [358, 0.120625205338001], [361, 0.005560018587857], [362, 0.05328618362546], [365, 0.066890455782413], [372, 0.014816547743976], [376, 0.014262833632529], [420, 0.025462191551924], [425, 0.047252278774977]], sB = [];
for (let A2 = 0; A2 < SI.length; A2++)
  sB[A2] = 0;
wG.forEach(([A2, I2]) => {
  sB[A2] = I2;
});
const cQ = [];
for (let A2 = 0; A2 < sB.length; A2++)
  cQ[A2] = Math.sqrt(sB[A2]);
const FB = [33, 263, 61, 291, 199];
wG.forEach(([A2, I2]) => {
  FB.includes(A2) || FB.push(A2);
});
FB.sort((A2, I2) => A2 - I2);
let YQ = 0, LQ = 0;
for (let A2 = 0; A2 < SI.length; A2++)
  SI[A2][0] < SI[YQ][0] && (YQ = A2), SI[A2][0] > SI[LQ][0] && (LQ = A2);
class LF {
  constructor(I2) {
    const D2 = I2.height, o = I2.width, s = o, N2 = 2 * Math.atan(D2 / (2 * s)), y2 = 2 * 1 * Math.tan(0.5 * N2), U2 = o * y2 / D2;
    this.near = 1, this.far = 1e4, this.frameHeight = D2, this.frameWidth = o, this.focalLength = s, this.fov = N2, this.left = -0.5 * U2, this.right = 0.5 * U2, this.bottom = -0.5 * y2, this.top = 0.5 * y2, this.focalLength = s, this.center = [o / 2, D2 / 2];
  }
  estimate(I2) {
    I2 = I2.slice(0, SI.length);
    const g = this._projectToScreen(I2);
    let E2 = this._cloneLandmarks(g);
    this._changeHandedness(E2);
    const D2 = g.reduce((RA, LA) => RA + LA[2], 0) / g.length, o = this._estimateScale(E2);
    E2 = this._cloneLandmarks(g), this._moveAndRescaleZ(D2, o, E2), this._unprojectScreen(E2), this._changeHandedness(E2);
    const s = this._estimateScale(E2);
    let N2 = this._cloneLandmarks(g);
    const y2 = o * s;
    this._moveAndRescaleZ(D2, y2, N2), this._unprojectScreen(N2), this._changeHandedness(N2);
    const U2 = this._solveWeightedOrthogonal(SI, N2, cQ), e = IA.matFromArray(4, 4, IA.CV_64F, [
      U2[0][0],
      U2[0][1],
      U2[0][2],
      U2[0][3],
      U2[1][0],
      U2[1][1],
      U2[1][2],
      U2[1][3],
      U2[2][0],
      U2[2][1],
      U2[2][2],
      U2[2][3],
      U2[3][0],
      U2[3][1],
      U2[3][2],
      U2[3][3]
    ]).inv(0).data64F, AA = [
      [e[0], e[1], e[2], e[3]],
      [e[4], e[5], e[6], e[7]],
      [e[8], e[9], e[10], e[11]],
      [e[12], e[13], e[14], e[15]]
    ], T2 = [];
    for (let RA = 0; RA < N2.length; RA++) {
      T2[RA] = [];
      for (let LA = 0; LA < 3; LA++) {
        T2[RA][LA] = AA[LA][3];
        for (let _I = 0; _I < 3; _I++)
          T2[RA][LA] += AA[LA][_I] * N2[RA][_I];
      }
    }
    const aA = [], CA = [];
    FB.forEach((RA) => {
      aA.push(T2[RA][0], T2[RA][1], T2[RA][2]), CA.push(I2[RA][0] * this.frameWidth, I2[RA][1] * this.frameHeight);
    });
    const wI = IA.matFromArray(aA.length / 3, 3, IA.CV_64F, aA), t2 = IA.matFromArray(CA.length / 2, 2, IA.CV_64F, CA), f2 = IA.matFromArray(3, 3, IA.CV_64F, [
      this.focalLength,
      0,
      this.center[0],
      0,
      this.focalLength,
      this.center[1],
      0,
      0,
      1
    ]), z2 = IA.Mat.zeros(4, 1, IA.CV_64F), aC = new IA.Mat(3, 1, IA.CV_64F), sg2 = new IA.Mat(3, 1, IA.CV_64F), bA = new IA.Mat(3, 3, IA.CV_64F);
    IA.solvePnP(wI, t2, f2, z2, aC, sg2, false), IA.Rodrigues(aC, bA);
    const vI = [
      bA.data64F[0],
      bA.data64F[1],
      bA.data64F[2],
      sg2.data64F[0],
      -bA.data64F[3],
      -bA.data64F[4],
      -bA.data64F[5],
      -sg2.data64F[1],
      -bA.data64F[6],
      -bA.data64F[7],
      -bA.data64F[8],
      -sg2.data64F[2],
      0,
      0,
      0,
      1
    ], Fg2 = T2[LQ][0] - T2[YQ][0];
    return { metricLandmarks: T2, faceMatrix: vI, faceScale: Fg2 };
  }
  _estimateScale(I2) {
    const g = this._solveWeightedOrthogonal(SI, I2, cQ);
    return Math.sqrt(g[0][0] * g[0][0] + g[0][1] * g[0][1] + g[0][2] * g[0][2]);
  }
  // Orthogonal Procrustes solver
  _solveWeightedOrthogonal(I2, g, E2) {
    const D2 = [], o = [];
    for (let t2 = 0; t2 < I2.length; t2++)
      D2.push([I2[t2][0] * E2[t2], I2[t2][1] * E2[t2], I2[t2][2] * E2[t2]]), o.push([g[t2][0] * E2[t2], g[t2][1] * E2[t2], g[t2][2] * E2[t2]]);
    const s = E2.reduce((t2, f2) => t2 + f2 * f2, 0), N2 = [];
    for (let t2 = 0; t2 < D2.length; t2++)
      N2[t2] = [
        D2[t2][0] * E2[t2],
        D2[t2][1] * E2[t2],
        D2[t2][2] * E2[t2]
      ];
    const y2 = [0, 0, 0];
    for (let t2 = 0; t2 < 3; t2++) {
      for (let f2 = 0; f2 < N2.length; f2++)
        y2[t2] += N2[f2][t2];
      y2[t2] /= s;
    }
    const U2 = [];
    for (let t2 = 0; t2 < N2.length; t2++) {
      U2[t2] = [];
      for (let f2 = 0; f2 < 3; f2++)
        U2[t2][f2] = D2[t2][f2] - y2[f2] * E2[t2];
    }
    const L2 = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];
    for (let t2 = 0; t2 < 3; t2++)
      for (let f2 = 0; f2 < 3; f2++)
        for (let z2 = 0; z2 < o.length; z2++)
          L2[t2][f2] += o[z2][t2] * U2[z2][f2];
    const d = this._computeOptimalRotation(L2), e = this._computeOptimalScale(U2, D2, o, d), AA = [[], [], []];
    for (let t2 = 0; t2 < 3; t2++)
      for (let f2 = 0; f2 < 3; f2++)
        AA[t2][f2] = e * d[t2][f2];
    const T2 = [];
    for (let t2 = 0; t2 < D2.length; t2++) {
      T2[t2] = [];
      for (let f2 = 0; f2 < 3; f2++) {
        T2[t2][f2] = o[t2][f2];
        for (let z2 = 0; z2 < 3; z2++)
          T2[t2][f2] -= AA[f2][z2] * D2[t2][z2];
      }
    }
    const aA = [];
    for (let t2 = 0; t2 < T2.length; t2++) {
      aA[t2] = [];
      for (let f2 = 0; f2 < 3; f2++)
        aA[t2][f2] = T2[t2][f2] * E2[t2];
    }
    const CA = [0, 0, 0];
    for (let t2 = 0; t2 < 3; t2++) {
      for (let f2 = 0; f2 < aA.length; f2++)
        CA[t2] += aA[f2][t2];
      CA[t2] /= s;
    }
    return [
      [AA[0][0], AA[0][1], AA[0][2], CA[0]],
      [AA[1][0], AA[1][1], AA[1][2], CA[1]],
      [AA[2][0], AA[2][1], AA[2][2], CA[2]],
      [0, 0, 0, 1]
    ];
  }
  _computeOptimalRotation(I2) {
    const g = IA.matFromArray(3, 3, IA.CV_64F, [
      I2[0][0],
      I2[0][1],
      I2[0][2],
      I2[1][0],
      I2[1][1],
      I2[1][2],
      I2[2][0],
      I2[2][1],
      I2[2][2]
    ]), E2 = new IA.Mat(3, 1, IA.CV_64F), D2 = new IA.Mat(3, 3, IA.CV_64F), o = new IA.Mat(3, 3, IA.CV_64F);
    IA.SVDecomp(g, E2, D2, o);
    const s = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];
    for (let N2 = 0; N2 < 3; N2++)
      for (let y2 = 0; y2 < 3; y2++)
        for (let U2 = 0; U2 < 3; U2++)
          s[N2][y2] += D2.data64F[N2 * 3 + U2] * o.data64F[U2 * 3 + y2];
    return s;
  }
  _computeOptimalScale(I2, g, E2, D2) {
    const o = [];
    for (let U2 = 0; U2 < I2.length; U2++) {
      o[U2] = [];
      for (let L2 = 0; L2 < 3; L2++) {
        o[U2][L2] = 0;
        for (let d = 0; d < 3; d++)
          o[U2][L2] += D2[L2][d] * I2[U2][d];
      }
    }
    let s = 0;
    for (let U2 = 0; U2 < o.length; U2++)
      for (let L2 = 0; L2 < 3; L2++)
        s += o[U2][L2] * E2[U2][L2];
    let N2 = 0;
    for (let U2 = 0; U2 < I2.length; U2++)
      for (let L2 = 0; L2 < 3; L2++)
        N2 += I2[U2][L2] * g[U2][L2];
    return s / N2;
  }
  _projectToScreen(I2) {
    const g = [], E2 = this.right - this.left, D2 = this.top - this.bottom, o = this.left, s = this.bottom;
    for (let N2 = 0; N2 < I2.length; N2++)
      g.push([
        I2[N2][0] * E2 + o,
        (1 - I2[N2][1]) * D2 + s,
        I2[N2][2] * E2
      ]);
    return g;
  }
  _cloneLandmarks(I2) {
    const g = [];
    for (let E2 = 0; E2 < I2.length; E2++)
      g[E2] = [I2[E2][0], I2[E2][1], I2[E2][2]];
    return g;
  }
  _changeHandedness(I2) {
    for (let g = 0; g < I2.length; g++)
      I2[g][2] *= -1;
  }
  _moveAndRescaleZ(I2, g, E2) {
    for (let D2 = 0; D2 < E2.length; D2++)
      E2[D2][2] = (E2[D2][2] - I2 + this.near) / g;
  }
  _unprojectScreen(I2) {
    for (let g = 0; g < I2.length; g++)
      I2[g][0] = I2[g][0] * I2[g][2] / this.near, I2[g][1] = I2[g][1] * I2[g][2] / this.near;
  }
}
const XC = JQ.length, tF = (A2) => {
  class I2 extends A2.BufferGeometry {
    constructor(E2 = {}) {
      super(), this.positions = new Float32Array(XC * 3), this.uvs = new Float32Array(XC * 2), this.setAttribute("position", new A2.BufferAttribute(this.positions, 3)), this.setAttribute("uv", new A2.BufferAttribute(this.uvs, 2)), this.setUvs(), this.setIndex(YF);
    }
    setUvs() {
      for (let E2 = 0; E2 < XC; E2++)
        this.uvs[E2 * 2] = JQ[E2][0], this.uvs[E2 * 2 + 1] = JQ[E2][1];
      this.getAttribute("uv").needsUpdate = true;
    }
    updatePositions(E2) {
      for (let D2 = 0; D2 < XC; D2++)
        this.positions[D2 * 3 + 0] = E2[D2][0], this.positions[D2 * 3 + 1] = E2[D2][1], this.positions[D2 * 3 + 2] = E2[D2][2];
      this.attributes.position.needsUpdate = true, this.computeVertexNormals();
    }
  }
  return new I2();
}, HF = 1e-3, rF = 1;
class dF {
  constructor({ onUpdate: I2 = null, filterMinCF: g = null, filterBeta: E2 = null }) {
    this.customFaceGeometries = [], this.estimator = null, this.lastEstimateResult = null, this.filterMinCF = g === null ? HF : g, this.filterBeta = E2 === null ? rF : E2, this.onUpdate = I2, this.flipFace = false, this.landmarkFilters = [];
    for (let D2 = 0; D2 < SI.length; D2++)
      this.landmarkFilters[D2] = new y({ minCutOff: this.filterMinCF, beta: this.filterBeta });
    this.faceMatrixFilter = new y({ minCutOff: this.filterMinCF, beta: this.filterBeta }), this.faceScaleFilter = new y({ minCutOff: this.filterMinCF, beta: this.filterBeta });
  }
  async setup(I2) {
    this.flipFace = I2, await cF(), this.faceMeshHelper = new SF(), await this.faceMeshHelper.init();
  }
  onInputResized(I2) {
    this.estimator = new LF(I2);
  }
  getCameraParams() {
    return {
      fov: this.estimator.fov * 180 / Math.PI,
      aspect: this.estimator.frameWidth / this.estimator.frameHeight,
      near: this.estimator.near,
      far: this.estimator.far
    };
  }
  async dummyRun(I2) {
    await this.faceMeshHelper.detect(I2);
  }
  processVideo(I2) {
    if (this.processingVideo)
      return;
    const g = document.createElement("canvas");
    g.width = I2.width, g.height = I2.height;
    const E2 = g.getContext("2d");
    this.processingVideo = true;
    const D2 = async () => {
      let o;
      if (this.flipFace ? (E2.clearRect(0, 0, g.width, g.height), E2.save(), E2.translate(g.width, 0), E2.scale(-1, 1), E2.drawImage(I2, 0, 0, g.width, g.height), E2.restore(), o = await this.faceMeshHelper.detect(g)) : o = await this.faceMeshHelper.detect(I2), o.faceLandmarks.length === 0) {
        this.lastEstimateResult = null, this.onUpdate({ hasFace: false });
        for (let s = 0; s < this.landmarkFilters.length; s++)
          this.landmarkFilters[s].reset();
        this.faceMatrixFilter.reset(), this.faceScaleFilter.reset();
      } else {
        const s = o.faceLandmarks[0].map((y2) => [y2.x, y2.y, y2.z]), N2 = this.estimator.estimate(s);
        if (this.lastEstimateResult === null)
          this.lastEstimateResult = N2;
        else {
          const y2 = this.lastEstimateResult.metricLandmarks;
          this.lastEstimateResult.faceMatrix, this.lastEstimateResult.faceScale;
          const U2 = [];
          for (let e = 0; e < y2.length; e++)
            U2[e] = this.landmarkFilters[e].filter(Date.now(), N2.metricLandmarks[e]);
          const L2 = this.faceMatrixFilter.filter(Date.now(), N2.faceMatrix), d = this.faceScaleFilter.filter(Date.now(), [N2.faceScale]);
          this.lastEstimateResult = {
            metricLandmarks: U2,
            faceMatrix: L2,
            faceScale: d[0],
            blendshapes: o.faceBlendshapes[0]
          };
        }
        this.onUpdate && this.onUpdate({ hasFace: true, estimateResult: this.lastEstimateResult });
        for (let y2 = 0; y2 < this.customFaceGeometries.length; y2++)
          this.customFaceGeometries[y2].updatePositions(N2.metricLandmarks);
      }
      this.processingVideo && window.requestAnimationFrame(D2);
    };
    window.requestAnimationFrame(D2);
  }
  stopProcessVideo() {
    this.processingVideo = false;
  }
  createThreeFaceGeometry(I2) {
    const g = tF(I2);
    return this.customFaceGeometries.push(g), g;
  }
  getLandmarkMatrix(I2) {
    const { metricLandmarks: g, faceMatrix: E2, faceScale: D2 } = this.lastEstimateResult, o = E2, s = D2, N2 = [g[I2][0], g[I2][1], g[I2][2]];
    return [
      o[0] * s,
      o[1] * s,
      o[2] * s,
      o[0] * N2[0] + o[1] * N2[1] + o[2] * N2[2] + o[3],
      o[4] * s,
      o[5] * s,
      o[6] * s,
      o[4] * N2[0] + o[5] * N2[1] + o[6] * N2[2] + o[7],
      o[8] * s,
      o[9] * s,
      o[10] * s,
      o[8] * N2[0] + o[9] * N2[1] + o[10] * N2[2] + o[11],
      o[12] * s,
      o[13] * s,
      o[14] * s,
      o[12] * N2[0] + o[13] * N2[1] + o[14] * N2[2] + o[15]
    ];
  }
}
const I = { BufferGeometry, BufferAttribute };
class C {
  constructor({
    container: a,
    uiLoading: t2 = "yes",
    uiScanning: o = "yes",
    uiError: n2 = "yes",
    filterMinCF: e = null,
    filterBeta: h2 = null,
    userDeviceId: s = null,
    environmentDeviceId: c2 = null,
    disableFaceMirror: l2 = false
  }) {
    this.container = a, this.ui = new M({ uiLoading: t2, uiScanning: o, uiError: n2 }), this.controller = new dF({
      filterMinCF: e,
      filterBeta: h2
    }), this.disableFaceMirror = l2, this.scene = new Scene(), this.cssScene = new Scene(), this.renderer = new WebGLRenderer({ antialias: true, alpha: true }), this.cssRenderer = new CSS3DRenderer({ antialias: true }), this.renderer.outputEncoding = sRGBEncoding, this.renderer.setPixelRatio(window.devicePixelRatio), this.camera = new PerspectiveCamera(), this.userDeviceId = s, this.environmentDeviceId = c2, this.anchors = [], this.faceMeshes = [], this.latestEstimate = null, this.container.appendChild(this.renderer.domElement), this.container.appendChild(this.cssRenderer.domElement), this.shouldFaceUser = true, window.addEventListener("resize", this._resize.bind(this));
  }
  async start() {
    this.ui.showLoading(), await this._startVideo(), await this._startAR(), this.ui.hideLoading();
  }
  stop() {
    this.video.srcObject.getTracks().forEach(function(t2) {
      t2.stop();
    }), this.video.remove(), this.controller.stopProcessVideo();
  }
  switchCamera() {
    this.shouldFaceUser = !this.shouldFaceUser, this.stop(), this.start();
  }
  addFaceMesh() {
    const a = this.controller.createThreeFaceGeometry(I), t2 = new Mesh(a, new MeshStandardMaterial({ color: 16777215 }));
    return t2.visible = false, t2.matrixAutoUpdate = false, this.faceMeshes.push(t2), t2;
  }
  addAnchor(a) {
    const t2 = new Group();
    t2.matrixAutoUpdate = false;
    const o = { group: t2, landmarkIndex: a, css: false };
    return this.anchors.push(o), this.scene.add(t2), o;
  }
  addCSSAnchor(a) {
    const t2 = new Group();
    t2.matrixAutoUpdate = false;
    const o = { group: t2, landmarkIndex: a, css: true };
    return this.anchors.push(o), this.cssScene.add(t2), o;
  }
  getLatestEstimate() {
    return this.latestEstimate;
  }
  _startVideo() {
    return new Promise((a, t2) => {
      if (this.video = document.createElement("video"), this.video.setAttribute("autoplay", ""), this.video.setAttribute("muted", ""), this.video.setAttribute("playsinline", ""), this.video.style.position = "absolute", this.video.style.top = "0px", this.video.style.left = "0px", this.video.style.zIndex = "-2", this.container.appendChild(this.video), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
        this.ui.showCompatibility(), t2();
        return;
      }
      const o = {
        audio: false,
        video: {}
      };
      this.shouldFaceUser ? this.userDeviceId ? o.video.deviceId = { exact: this.userDeviceId } : o.video.facingMode = "user" : this.environmentDeviceId ? o.video.deviceId = { exact: this.environmentDeviceId } : o.video.facingMode = "environment", navigator.mediaDevices.getUserMedia(o).then((n2) => {
        this.video.addEventListener("loadedmetadata", () => {
          this.video.setAttribute("width", this.video.videoWidth), this.video.setAttribute("height", this.video.videoHeight), a();
        }), this.video.srcObject = n2;
      }).catch((n2) => {
        console.log("getUserMedia error", n2), t2();
      });
    });
  }
  _startAR() {
    return new Promise(async (a, t2) => {
      const o = this.video;
      this.container, this.controller.onUpdate = ({ hasFace: e, estimateResult: h2 }) => {
        for (let s = 0; s < this.anchors.length; s++)
          this.anchors[s].css ? this.anchors[s].group.children.forEach((c2) => {
            c2.element.style.visibility = e ? "visible" : "hidden";
          }) : this.anchors[s].group.visible = e;
        for (let s = 0; s < this.faceMeshes.length; s++)
          this.faceMeshes[s].visible = e;
        if (e) {
          const { metricLandmarks: s, faceMatrix: c2, faceScale: l2, blendshapes: d } = h2;
          this.latestEstimate = h2;
          for (let r2 = 0; r2 < this.anchors.length; r2++) {
            const v2 = this.anchors[r2].landmarkIndex, i = this.controller.getLandmarkMatrix(v2);
            if (this.anchors[r2].css) {
              const u2 = [
                1e-3 * i[0],
                1e-3 * i[1],
                i[2],
                i[3],
                1e-3 * i[4],
                1e-3 * i[5],
                i[6],
                i[7],
                1e-3 * i[8],
                1e-3 * i[9],
                i[10],
                i[11],
                1e-3 * i[12],
                1e-3 * i[13],
                i[14],
                i[15]
              ];
              this.anchors[r2].group.matrix.set(...u2);
            } else
              this.anchors[r2].group.matrix.set(...i);
          }
          for (let r2 = 0; r2 < this.faceMeshes.length; r2++)
            this.faceMeshes[r2].matrix.set(...c2);
        } else
          this.latestEstimate = null;
      }, this._resize();
      const n2 = this.shouldFaceUser && !this.disableFaceMirror;
      await this.controller.setup(n2), await this.controller.dummyRun(o), this._resize(), this.controller.processVideo(o), a();
    });
  }
  _resize() {
    const { renderer: a, cssRenderer: t2, camera: o, container: n2, video: e } = this;
    if (!e)
      return;
    {
      this.video.setAttribute("width", this.video.videoWidth), this.video.setAttribute("height", this.video.videoHeight), this.controller.onInputResized(e);
      const { fov: v2, aspect: i, near: f2, far: u2 } = this.controller.getCameraParams();
      this.camera.fov = v2, this.camera.aspect = i, this.camera.near = f2, this.camera.far = u2, this.camera.updateProjectionMatrix(), this.renderer.setSize(this.video.videoWidth, this.video.videoHeight), this.cssRenderer.setSize(this.video.videoWidth, this.video.videoHeight);
    }
    let h2, s;
    const c2 = e.videoWidth / e.videoHeight, l2 = n2.clientWidth / n2.clientHeight;
    c2 > l2 ? (s = n2.clientHeight, h2 = s * c2) : (h2 = n2.clientWidth, s = h2 / c2), e.style.top = -(s - n2.clientHeight) / 2 + "px", e.style.left = -(h2 - n2.clientWidth) / 2 + "px", e.style.width = h2 + "px", e.style.height = s + "px", this.shouldFaceUser && !this.disableFaceMirror ? e.style.transform = "scaleX(-1)" : e.style.transform = "scaleX(1)";
    const d = a.domElement, r2 = t2.domElement;
    d.style.position = "absolute", d.style.top = e.style.top, d.style.left = e.style.left, d.style.width = e.style.width, d.style.height = e.style.height, r2.style.position = "absolute", r2.style.top = e.style.top, r2.style.left = e.style.left, r2.style.transformOrigin = "top left", r2.style.transform = "scale(" + h2 / parseFloat(r2.style.width) + "," + s / parseFloat(r2.style.height) + ")";
  }
}
window.MINDAR || (window.MINDAR = {});
window.MINDAR.FACE || (window.MINDAR.FACE = {});
window.MINDAR.FACE.MindARThree = C;
const Beauty = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      className: " flex justify-center items-center w-screen min-h-screen ",
      children: /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: " text-2xl", children: "Beauty Page" })
    }
  );
};
const NoPage = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { children: "oops! page not found!" }) }) });
};
const Makeups = () => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("h1", { className: " text-2xl", children: " this is makeup page" }) });
};
function App() {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(BrowserRouter, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Navbar, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Routes, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/", element: /* @__PURE__ */ jsxRuntimeExports.jsx(Home, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/home", element: /* @__PURE__ */ jsxRuntimeExports.jsx(Home, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "beauty", element: /* @__PURE__ */ jsxRuntimeExports.jsx(Beauty, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "makeups", element: /* @__PURE__ */ jsxRuntimeExports.jsx(Makeups, {}) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "*", element: /* @__PURE__ */ jsxRuntimeExports.jsx(NoPage, {}) })
    ] })
  ] });
}
client.createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ jsxRuntimeExports.jsx(React$6.StrictMode, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(App, {}) })
);
export {
  __vitePreload as _,
  getDefaultExportFromCjs as g,
  patterns as p,
  reactExports as r,
  utils as u
};
